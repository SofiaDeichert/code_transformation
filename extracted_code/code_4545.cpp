int a [ 100 ] [ 100 ] ; int dp [ 100 ] [ 100 ] ; int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int main ( ) { int n , i , j , max_a , t ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; } dp [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( ( j - 1 ) >= 0 && j < i ) dp [ i ] [ j ] = max ( dp [ i - 1 ] [ j - 1 ] , dp [ i - 1 ] [ j ] ) + a [ i ] [ j ] ; else if ( j == i ) dp [ i ] [ j ] = dp [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; else if ( j == 0 ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + a [ i ] [ j ] ; } } max_a = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( max_a < dp [ n - 1 ] [ i ] ) max_a = dp [ n - 1 ] [ i ] ; } printf ( "%d\n" , max_a ) ; } return 0 ; }