long int max , count ; int A [ 100 ] [ 100 ] , N ; void count_max ( int , int ) ; int main ( ) { int i , j , k , T ; scanf ( "%d" , & T ) ; int buff [ T ] ; for ( k = 0 ; k < T ; k ++ ) { scanf ( "%d" , & N ) ; for ( i = 0 ; i < N ; i ++ ) for ( j = 0 ; j < i + 1 ; j ++ ) scanf ( "%d" , & A [ i ] [ j ] ) ; count = A [ 0 ] [ 0 ] ; max = 0 ; count_max ( 1 , 0 ) ; buff [ k ] = max ; } for ( i = 0 ; i < T ; i ++ ) printf ( "%d\n" , buff [ i ] ) ; return 0 ; } void count_max ( int i , int P ) { static int j ; if ( i == N ) { if ( count > max ) max = count ; count -= A [ i - 1 ] [ j ] ; return ; } for ( j = P ; j <= P + 1 ; j ++ ) { count += A [ i ] [ j ] ; count_max ( i + 1 , j ) ; } }