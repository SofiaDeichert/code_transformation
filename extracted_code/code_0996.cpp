void sort ( int * , int ) ; int main ( ) { int ip [ 10 ] , op [ 10 ] , t , s , i , j , p = 0 , v ; scanf ( "%d" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { int k = 0 ; scanf ( "%d" , & s ) ; while ( k != s ) { scanf ( "%d" , & ip [ k ] ) ; k ++ ; } sort ( & ip [ 0 ] , s ) ; op [ p ] = ip [ s - 2 ] ; p ++ ; } for ( i = 0 ; i < t ; i ++ ) printf ( "\n%d" , op [ i ] ) ; return 0 ; } void sort ( int * ar , int n ) { int i , j , temp ; for ( i = 1 ; i < n ; i ++ ) { j = i ; while ( j > 0 && ar [ j ] < ar [ j - 1 ] ) { temp = ar [ j ] ; ar [ j ] = ar [ j - 1 ] ; ar [ j - 1 ] = temp ; j -- ; } } }