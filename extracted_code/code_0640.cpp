int max ( int , int ) ; int main ( ) { int t = 0 , num , * A , * S , * sum , i , j , k , n ; scanf ( "%d" , & num ) ; sum = ( int * ) malloc ( sizeof ( int ) * num ) ; for ( k = 0 ; k < num ; k ++ ) { scanf ( "%d" , & n ) ; A = ( int * ) malloc ( sizeof ( int ) * n * n ) ; S = ( int * ) malloc ( sizeof ( int ) * n * n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , ( A + i * n + j ) ) ; for ( i = n - 1 ; i >= 0 ; i -- ) for ( j = 0 ; j <= i ; j ++ ) { if ( i == n - 1 ) * ( S + i * n + j ) = * ( A + i * n + j ) ; else * ( S + i * n + j ) = * ( A + i * n + j ) + max ( * ( S + ( i + 1 ) * n + j ) , * ( S + ( i + 1 ) * n + j + 1 ) ) ; } sum [ t ++ ] = * S ; } for ( k = 0 ; k < num ; k ++ ) printf ( "%d\n" , sum [ k ] ) ; return 0 ; } int max ( int a , int b ) { return ( a > b ? a : b ) ; }