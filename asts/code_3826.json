{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 444,
  "text": "void gcd ( long x , long y ) { int j ; long result = 1 ; for ( j = 2 ; j <= y ; j ++ ) { while ( x / j == 0 && y / j == 0 ) { result = result * j ; x %= j ; y %= j ; } } if ( x != y ) printf ( \"%ld\\t%ld\\n\" , result , result * x * y ) ; else printf ( \"%ld\\t%ld\\n\" , result , result ) ; } int main ( ) { int t , i ; long a , b ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%ld%ld\" , & a , & b ) ; gcd ( a , b ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 286,
      "text": "void gcd ( long x , long y ) { int j ; long result = 1 ; for ( j = 2 ; j <= y ; j ++ ) { while ( x / j == 0 && y / j == 0 ) { result = result * j ; x %= j ; y %= j ; } } if ( x != y ) printf ( \"%ld\\t%ld\\n\" , result , result * x * y ) ; else printf ( \"%ld\\t%ld\\n\" , result , result ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 28,
          "text": "gcd ( long x , long y )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 8,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 28,
              "text": "( long x , long y )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 17,
                  "text": "long x",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 11,
                          "end_byte": 15,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 16,
                      "end_byte": 17,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 18,
                  "end_byte": 19,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 20,
                  "end_byte": 26,
                  "text": "long y",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 20,
                      "end_byte": 24,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 20,
                          "end_byte": 24,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 25,
                      "end_byte": 26,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 29,
          "end_byte": 286,
          "text": "{ int j ; long result = 1 ; for ( j = 2 ; j <= y ; j ++ ) { while ( x / j == 0 && y / j == 0 ) { result = result * j ; x %= j ; y %= j ; } } if ( x != y ) printf ( \"%ld\\t%ld\\n\" , result , result * x * y ) ; else printf ( \"%ld\\t%ld\\n\" , result , result ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 29,
              "end_byte": 30,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 31,
              "end_byte": 38,
              "text": "int j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 31,
                  "end_byte": 34,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 39,
              "end_byte": 56,
              "text": "long result = 1 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 39,
                  "end_byte": 43,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 39,
                      "end_byte": 43,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 44,
                  "end_byte": 54,
                  "text": "result = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 44,
                      "end_byte": 50,
                      "text": "result",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 53,
                      "end_byte": 54,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 57,
              "end_byte": 169,
              "text": "for ( j = 2 ; j <= y ; j ++ ) { while ( x / j == 0 && y / j == 0 ) { result = result * j ; x %= j ; y %= j ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 57,
                  "end_byte": 60,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 63,
                  "end_byte": 68,
                  "text": "j = 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 63,
                      "end_byte": 64,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 71,
                  "end_byte": 77,
                  "text": "j <= y",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 73,
                      "end_byte": 75,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 77,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 80,
                  "end_byte": 84,
                  "text": "j ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 82,
                      "end_byte": 84,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 85,
                  "end_byte": 86,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 87,
                  "end_byte": 169,
                  "text": "{ while ( x / j == 0 && y / j == 0 ) { result = result * j ; x %= j ; y %= j ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 89,
                      "end_byte": 167,
                      "text": "while ( x / j == 0 && y / j == 0 ) { result = result * j ; x %= j ; y %= j ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 89,
                          "end_byte": 94,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 95,
                          "end_byte": 123,
                          "text": "( x / j == 0 && y / j == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 97,
                              "end_byte": 121,
                              "text": "x / j == 0 && y / j == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 97,
                                  "end_byte": 107,
                                  "text": "x / j == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 97,
                                      "end_byte": 102,
                                      "text": "x / j",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 97,
                                          "end_byte": 98,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 99,
                                          "end_byte": 100,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 101,
                                          "end_byte": 102,
                                          "text": "j",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 103,
                                      "end_byte": 105,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 106,
                                      "end_byte": 107,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 108,
                                  "end_byte": 110,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 111,
                                  "end_byte": 121,
                                  "text": "y / j == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 111,
                                      "end_byte": 116,
                                      "text": "y / j",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 111,
                                          "end_byte": 112,
                                          "text": "y",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 113,
                                          "end_byte": 114,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 115,
                                          "end_byte": 116,
                                          "text": "j",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 117,
                                      "end_byte": 119,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 120,
                                      "end_byte": 121,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 122,
                              "end_byte": 123,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 124,
                          "end_byte": 167,
                          "text": "{ result = result * j ; x %= j ; y %= j ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 124,
                              "end_byte": 125,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 126,
                              "end_byte": 147,
                              "text": "result = result * j ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 126,
                                  "end_byte": 145,
                                  "text": "result = result * j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 126,
                                      "end_byte": 132,
                                      "text": "result",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 133,
                                      "end_byte": 134,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 135,
                                      "end_byte": 145,
                                      "text": "result * j",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 135,
                                          "end_byte": 141,
                                          "text": "result",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 142,
                                          "end_byte": 143,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 144,
                                          "end_byte": 145,
                                          "text": "j",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 146,
                                  "end_byte": 147,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 148,
                              "end_byte": 156,
                              "text": "x %= j ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 148,
                                  "end_byte": 154,
                                  "text": "x %= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "%=",
                                      "start_byte": 150,
                                      "end_byte": 152,
                                      "text": "%=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 155,
                                  "end_byte": 156,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 157,
                              "end_byte": 165,
                              "text": "y %= j ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 157,
                                  "end_byte": 163,
                                  "text": "y %= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "y",
                                      "children": []
                                    },
                                    {
                                      "type": "%=",
                                      "start_byte": 159,
                                      "end_byte": 161,
                                      "text": "%=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 164,
                                  "end_byte": 165,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 166,
                              "end_byte": 167,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 168,
                      "end_byte": 169,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 170,
              "end_byte": 284,
              "text": "if ( x != y ) printf ( \"%ld\\t%ld\\n\" , result , result * x * y ) ; else printf ( \"%ld\\t%ld\\n\" , result , result ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 170,
                  "end_byte": 172,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 173,
                  "end_byte": 183,
                  "text": "( x != y )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 173,
                      "end_byte": 174,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 175,
                      "end_byte": 181,
                      "text": "x != y",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 175,
                          "end_byte": 176,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 177,
                          "end_byte": 179,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 180,
                          "end_byte": 181,
                          "text": "y",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 184,
                  "end_byte": 235,
                  "text": "printf ( \"%ld\\t%ld\\n\" , result , result * x * y ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 184,
                      "end_byte": 233,
                      "text": "printf ( \"%ld\\t%ld\\n\" , result , result * x * y )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 184,
                          "end_byte": 190,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 191,
                          "end_byte": 233,
                          "text": "( \"%ld\\t%ld\\n\" , result , result * x * y )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 193,
                              "end_byte": 205,
                              "text": "\"%ld\\t%ld\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 194,
                                  "end_byte": 197,
                                  "text": "%ld",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 197,
                                  "end_byte": 199,
                                  "text": "\\t",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 199,
                                  "end_byte": 202,
                                  "text": "%ld",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 202,
                                  "end_byte": 204,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 206,
                              "end_byte": 207,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 208,
                              "end_byte": 214,
                              "text": "result",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 217,
                              "end_byte": 231,
                              "text": "result * x * y",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 217,
                                  "end_byte": 227,
                                  "text": "result * x",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 217,
                                      "end_byte": 223,
                                      "text": "result",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 224,
                                      "end_byte": 225,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 226,
                                      "end_byte": 227,
                                      "text": "x",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "*",
                                  "start_byte": 228,
                                  "end_byte": 229,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 230,
                                  "end_byte": 231,
                                  "text": "y",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 232,
                              "end_byte": 233,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 234,
                      "end_byte": 235,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 236,
                  "end_byte": 284,
                  "text": "else printf ( \"%ld\\t%ld\\n\" , result , result ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 236,
                      "end_byte": 240,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 241,
                      "end_byte": 284,
                      "text": "printf ( \"%ld\\t%ld\\n\" , result , result ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 241,
                          "end_byte": 282,
                          "text": "printf ( \"%ld\\t%ld\\n\" , result , result )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 241,
                              "end_byte": 247,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 248,
                              "end_byte": 282,
                              "text": "( \"%ld\\t%ld\\n\" , result , result )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 248,
                                  "end_byte": 249,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 250,
                                  "end_byte": 262,
                                  "text": "\"%ld\\t%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 250,
                                      "end_byte": 251,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 251,
                                      "end_byte": 254,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 254,
                                      "end_byte": 256,
                                      "text": "\\t",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 256,
                                      "end_byte": 259,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 259,
                                      "end_byte": 261,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 263,
                                  "end_byte": 264,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 265,
                                  "end_byte": 271,
                                  "text": "result",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 272,
                                  "end_byte": 273,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 274,
                                  "end_byte": 280,
                                  "text": "result",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 281,
                                  "end_byte": 282,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 283,
                          "end_byte": 284,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 285,
              "end_byte": 286,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 287,
      "end_byte": 444,
      "text": "int main ( ) { int t , i ; long a , b ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%ld%ld\" , & a , & b ) ; gcd ( a , b ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 287,
          "end_byte": 290,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 291,
          "end_byte": 299,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 291,
              "end_byte": 295,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 296,
              "end_byte": 299,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 296,
                  "end_byte": 297,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 298,
                  "end_byte": 299,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 300,
          "end_byte": 444,
          "text": "{ int t , i ; long a , b ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%ld%ld\" , & a , & b ) ; gcd ( a , b ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 300,
              "end_byte": 301,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 302,
              "end_byte": 313,
              "text": "int t , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 302,
                  "end_byte": 305,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 306,
                  "end_byte": 307,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 308,
                  "end_byte": 309,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 310,
                  "end_byte": 311,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 312,
                  "end_byte": 313,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 314,
              "end_byte": 326,
              "text": "long a , b ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 314,
                  "end_byte": 318,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 314,
                      "end_byte": 318,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 321,
                  "end_byte": 322,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 323,
                  "end_byte": 324,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 325,
                  "end_byte": 326,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 327,
              "end_byte": 349,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 327,
                  "end_byte": 347,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 327,
                      "end_byte": 332,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 333,
                      "end_byte": 347,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 333,
                          "end_byte": 334,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 335,
                          "end_byte": 339,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 335,
                              "end_byte": 336,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 336,
                              "end_byte": 338,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 338,
                              "end_byte": 339,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 340,
                          "end_byte": 341,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 342,
                          "end_byte": 345,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 342,
                              "end_byte": 343,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 344,
                              "end_byte": 345,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 346,
                          "end_byte": 347,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 348,
                  "end_byte": 349,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 350,
              "end_byte": 431,
              "text": "for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%ld%ld\" , & a , & b ) ; gcd ( a , b ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 350,
                  "end_byte": 353,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 354,
                  "end_byte": 355,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 356,
                  "end_byte": 361,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 356,
                      "end_byte": 357,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 358,
                      "end_byte": 359,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 360,
                      "end_byte": 361,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 362,
                  "end_byte": 363,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 364,
                  "end_byte": 369,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 364,
                      "end_byte": 365,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 366,
                      "end_byte": 367,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 368,
                      "end_byte": 369,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 372,
                  "end_byte": 376,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 372,
                      "end_byte": 373,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 374,
                      "end_byte": 376,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 379,
                  "end_byte": 431,
                  "text": "{ scanf ( \"%ld%ld\" , & a , & b ) ; gcd ( a , b ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 379,
                      "end_byte": 380,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 381,
                      "end_byte": 413,
                      "text": "scanf ( \"%ld%ld\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 381,
                          "end_byte": 411,
                          "text": "scanf ( \"%ld%ld\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 381,
                              "end_byte": 386,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 387,
                              "end_byte": 411,
                              "text": "( \"%ld%ld\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 387,
                                  "end_byte": 388,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 389,
                                  "end_byte": 397,
                                  "text": "\"%ld%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 389,
                                      "end_byte": 390,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 390,
                                      "end_byte": 396,
                                      "text": "%ld%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 396,
                                      "end_byte": 397,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 398,
                                  "end_byte": 399,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 400,
                                  "end_byte": 403,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 400,
                                      "end_byte": 401,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 402,
                                      "end_byte": 403,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 404,
                                  "end_byte": 405,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 406,
                                  "end_byte": 409,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 406,
                                      "end_byte": 407,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 408,
                                      "end_byte": 409,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 410,
                                  "end_byte": 411,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 412,
                          "end_byte": 413,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 414,
                      "end_byte": 429,
                      "text": "gcd ( a , b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 414,
                          "end_byte": 427,
                          "text": "gcd ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 414,
                              "end_byte": 417,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 418,
                              "end_byte": 427,
                              "text": "( a , b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 418,
                                  "end_byte": 419,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 420,
                                  "end_byte": 421,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 422,
                                  "end_byte": 423,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 424,
                                  "end_byte": 425,
                                  "text": "b",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 426,
                                  "end_byte": 427,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 428,
                          "end_byte": 429,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 430,
                      "end_byte": 431,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 432,
              "end_byte": 442,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 432,
                  "end_byte": 438,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 439,
                  "end_byte": 440,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 441,
                  "end_byte": 442,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 443,
              "end_byte": 444,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}