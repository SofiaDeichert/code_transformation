long int GCD ( long int x , long int y ) { if ( y == 0 ) return x ; else return GCD ( y , x % y ) ; } int main ( ) { long int n1 , n2 , i , LCM , gcd ; int T , I ; scanf ( " %d" , & T ) ; if ( T < 1 || T > 1000 ) return 0 ; long int ans [ T ] [ 2 ] ; for ( I = 0 ; I < T ; I ++ ) { LCM = 1 ; scanf ( " %ld %ld" , & n1 , & n2 ) ; if ( n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000 ) return 0 ; gcd = GCD ( n1 , n2 ) ; while ( n1 > 1 || n2 > 1 ) { for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } } LCM *= i ; } ans [ I ] [ 0 ] = gcd ; ans [ I ] [ 1 ] = LCM ; } for ( i = 0 ; i < T ; i ++ ) printf ( "%ld %ld\n" , ans [ i ] [ 0 ] , ans [ i ] [ 1 ] ) ; return 0 ; }