int sum ( int , int , int ) ; int max ( int , int ) ; int scanInt ( ) ; void printInt ( int ) ; int M [ 100 ] [ 100 ] ; int A [ 100 ] [ 100 ] ; int main ( ) { int n , r , i , j ; n = scanInt ( n ) ; while ( n -- ) { r = scanInt ( ) ; for ( i = 0 ; i < r ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) { A [ i ] [ j ] = scanInt ( ) ; M [ i ] [ j ] = - 1 ; } printInt ( sum ( r , 0 , 0 ) ) ; putchar ( '\n' ) ; } } int sum ( int n , int i , int j ) { if ( M [ i ] [ j ] == - 1 ) { if ( n == 1 ) return A [ i ] [ j ] ; else { M [ i ] [ j ] = A [ i ] [ j ] + max ( sum ( n - 1 , i + 1 , j ) , sum ( n - 1 , i + 1 , j + 1 ) ) ; } } return M [ i ] [ j ] ; } int max ( int a , int b ) { return ( a > b ) ? a : b ; } int scanInt ( ) { int x = 0 ; char ch ; ch = getchar ( ) ; while ( ch > '9' || ch < '0' ) { ch = getchar ( ) ; } while ( ch <= '9' && ch >= '0' ) { x = ( x << 3 ) + ( x << 1 ) + ch - '0' ; ch = getchar ( ) ; } return x ; } void printInt ( int x ) { int i = 0 ; char ch [ 11 ] ; while ( x > 0 ) { ch [ i ++ ] = ( char ) ( '0' + x ) ; x /= 10 ; } while ( i -- ) { putchar ( ch [ i ] ) ; } }