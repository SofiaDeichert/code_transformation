{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 449,
  "text": "void main ( ) { long int t , i , a , b , numerator , denominator , remainder , lcm , gcd ; scanf ( \"%ld\" , & t ) ; while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { remainder = denominator ; denominator = numerator % denominator ; numerator = remainder ; } printf ( \"%ld %ld\\n\" , numerator , ( ( a * b ) / numerator ) ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 449,
      "text": "void main ( ) { long int t , i , a , b , numerator , denominator , remainder , lcm , gcd ; scanf ( \"%ld\" , & t ) ; while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { remainder = denominator ; denominator = numerator % denominator ; numerator = remainder ; } printf ( \"%ld %ld\\n\" , numerator , ( ( a * b ) / numerator ) ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 449,
          "text": "{ long int t , i , a , b , numerator , denominator , remainder , lcm , gcd ; scanf ( \"%ld\" , & t ) ; while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { remainder = denominator ; denominator = numerator % denominator ; numerator = remainder ; } printf ( \"%ld %ld\\n\" , numerator , ( ( a * b ) / numerator ) ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 90,
              "text": "long int t , i , a , b , numerator , denominator , remainder , lcm , gcd ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 16,
                  "end_byte": 24,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 16,
                      "end_byte": 20,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 21,
                      "end_byte": 24,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 41,
                  "end_byte": 50,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 64,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 67,
                  "end_byte": 76,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 79,
                  "end_byte": 82,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 85,
                  "end_byte": 88,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 89,
                  "end_byte": 90,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 91,
              "end_byte": 114,
              "text": "scanf ( \"%ld\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 91,
                  "end_byte": 112,
                  "text": "scanf ( \"%ld\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 91,
                      "end_byte": 96,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 97,
                      "end_byte": 112,
                      "text": "( \"%ld\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 99,
                          "end_byte": 104,
                          "text": "\"%ld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 99,
                              "end_byte": 100,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 100,
                              "end_byte": 103,
                              "text": "%ld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 103,
                              "end_byte": 104,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 105,
                          "end_byte": 106,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 107,
                          "end_byte": 110,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 107,
                              "end_byte": 108,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 115,
              "end_byte": 447,
              "text": "while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { remainder = denominator ; denominator = numerator % denominator ; numerator = remainder ; } printf ( \"%ld %ld\\n\" , numerator , ( ( a * b ) / numerator ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 115,
                  "end_byte": 120,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 121,
                  "end_byte": 129,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 123,
                      "end_byte": 127,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 125,
                          "end_byte": 127,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 130,
                  "end_byte": 447,
                  "text": "{ scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { remainder = denominator ; denominator = numerator % denominator ; numerator = remainder ; } printf ( \"%ld %ld\\n\" , numerator , ( ( a * b ) / numerator ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 132,
                      "end_byte": 165,
                      "text": "scanf ( \"%ld %ld\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 132,
                          "end_byte": 163,
                          "text": "scanf ( \"%ld %ld\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 132,
                              "end_byte": 137,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 138,
                              "end_byte": 163,
                              "text": "( \"%ld %ld\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 138,
                                  "end_byte": 139,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 140,
                                  "end_byte": 149,
                                  "text": "\"%ld %ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 140,
                                      "end_byte": 141,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 141,
                                      "end_byte": 148,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 152,
                                  "end_byte": 155,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 156,
                                  "end_byte": 157,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 158,
                                  "end_byte": 161,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 160,
                                      "end_byte": 161,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 162,
                                  "end_byte": 163,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 164,
                          "end_byte": 165,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 166,
                      "end_byte": 259,
                      "text": "if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 166,
                          "end_byte": 168,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 169,
                          "end_byte": 178,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 169,
                              "end_byte": 170,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 171,
                              "end_byte": 176,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 171,
                                  "end_byte": 172,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 175,
                                  "end_byte": 176,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 177,
                              "end_byte": 178,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 179,
                          "end_byte": 216,
                          "text": "{ numerator = a ; denominator = b ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 181,
                              "end_byte": 196,
                              "text": "numerator = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 181,
                                  "end_byte": 194,
                                  "text": "numerator = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 181,
                                      "end_byte": 190,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 191,
                                      "end_byte": 192,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 197,
                              "end_byte": 214,
                              "text": "denominator = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 197,
                                  "end_byte": 212,
                                  "text": "denominator = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 197,
                                      "end_byte": 208,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 213,
                                  "end_byte": 214,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 217,
                          "end_byte": 259,
                          "text": "else { numerator = b ; denominator = a ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 217,
                              "end_byte": 221,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 222,
                              "end_byte": 259,
                              "text": "{ numerator = b ; denominator = a ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 222,
                                  "end_byte": 223,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 224,
                                  "end_byte": 239,
                                  "text": "numerator = b ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 224,
                                      "end_byte": 237,
                                      "text": "numerator = b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 224,
                                          "end_byte": 233,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 234,
                                          "end_byte": 235,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 236,
                                          "end_byte": 237,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 238,
                                      "end_byte": 239,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 240,
                                  "end_byte": 257,
                                  "text": "denominator = a ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 240,
                                      "end_byte": 255,
                                      "text": "denominator = a",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 240,
                                          "end_byte": 251,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 252,
                                          "end_byte": 253,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 254,
                                          "end_byte": 255,
                                          "text": "a",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 256,
                                      "end_byte": 257,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 258,
                                  "end_byte": 259,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 260,
                      "end_byte": 380,
                      "text": "while ( denominator != 0 ) { remainder = denominator ; denominator = numerator % denominator ; numerator = remainder ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 260,
                          "end_byte": 265,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 266,
                          "end_byte": 286,
                          "text": "( denominator != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 266,
                              "end_byte": 267,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 268,
                              "end_byte": 284,
                              "text": "denominator != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 268,
                                  "end_byte": 279,
                                  "text": "denominator",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 280,
                                  "end_byte": 282,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 283,
                                  "end_byte": 284,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 285,
                              "end_byte": 286,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 287,
                          "end_byte": 380,
                          "text": "{ remainder = denominator ; denominator = numerator % denominator ; numerator = remainder ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 287,
                              "end_byte": 288,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 289,
                              "end_byte": 314,
                              "text": "remainder = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 289,
                                  "end_byte": 312,
                                  "text": "remainder = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 289,
                                      "end_byte": 298,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 299,
                                      "end_byte": 300,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 301,
                                      "end_byte": 312,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 313,
                                  "end_byte": 314,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 315,
                              "end_byte": 354,
                              "text": "denominator = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 315,
                                  "end_byte": 352,
                                  "text": "denominator = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 315,
                                      "end_byte": 326,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 327,
                                      "end_byte": 328,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 329,
                                      "end_byte": 352,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 329,
                                          "end_byte": 338,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 339,
                                          "end_byte": 340,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 341,
                                          "end_byte": 352,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 353,
                                  "end_byte": 354,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 355,
                              "end_byte": 378,
                              "text": "numerator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 355,
                                  "end_byte": 376,
                                  "text": "numerator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 355,
                                      "end_byte": 364,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 367,
                                      "end_byte": 376,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 377,
                                  "end_byte": 378,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 379,
                              "end_byte": 380,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 381,
                      "end_byte": 445,
                      "text": "printf ( \"%ld %ld\\n\" , numerator , ( ( a * b ) / numerator ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 381,
                          "end_byte": 443,
                          "text": "printf ( \"%ld %ld\\n\" , numerator , ( ( a * b ) / numerator ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 381,
                              "end_byte": 387,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 388,
                              "end_byte": 443,
                              "text": "( \"%ld %ld\\n\" , numerator , ( ( a * b ) / numerator ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 388,
                                  "end_byte": 389,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 390,
                                  "end_byte": 401,
                                  "text": "\"%ld %ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 390,
                                      "end_byte": 391,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 391,
                                      "end_byte": 398,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 398,
                                      "end_byte": 400,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 400,
                                      "end_byte": 401,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 402,
                                  "end_byte": 403,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 404,
                                  "end_byte": 413,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 414,
                                  "end_byte": 415,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 416,
                                  "end_byte": 441,
                                  "text": "( ( a * b ) / numerator )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 416,
                                      "end_byte": 417,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 418,
                                      "end_byte": 439,
                                      "text": "( a * b ) / numerator",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 418,
                                          "end_byte": 427,
                                          "text": "( a * b )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 418,
                                              "end_byte": 419,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 420,
                                              "end_byte": 425,
                                              "text": "a * b",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 420,
                                                  "end_byte": 421,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "*",
                                                  "start_byte": 422,
                                                  "end_byte": 423,
                                                  "text": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 424,
                                                  "end_byte": 425,
                                                  "text": "b",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 426,
                                              "end_byte": 427,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 428,
                                          "end_byte": 429,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 430,
                                          "end_byte": 439,
                                          "text": "numerator",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 440,
                                      "end_byte": 441,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 442,
                                  "end_byte": 443,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 444,
                          "end_byte": 445,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 446,
                      "end_byte": 447,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 448,
              "end_byte": 449,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}