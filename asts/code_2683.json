{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 473,
  "text": "void main ( ) { int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 473,
      "text": "void main ( ) { int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 473,
          "text": "{ int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 83,
              "text": "int num1 , num2 , gcd , lcm , remainder , numerator , denominator ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 24,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 55,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 67,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 70,
                  "end_byte": 81,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 84,
              "end_byte": 121,
              "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 84,
                  "end_byte": 119,
                  "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 84,
                      "end_byte": 89,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 90,
                      "end_byte": 119,
                      "text": "( \"%d %d\" , & num1 , & num2 )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 92,
                          "end_byte": 99,
                          "text": "\"%d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 93,
                              "end_byte": 98,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 102,
                          "end_byte": 108,
                          "text": "& num1",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 104,
                              "end_byte": 108,
                              "text": "num1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 109,
                          "end_byte": 110,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 111,
                          "end_byte": 117,
                          "text": "& num2",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 111,
                              "end_byte": 112,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 113,
                              "end_byte": 117,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 118,
                          "end_byte": 119,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 122,
              "end_byte": 233,
              "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 122,
                  "end_byte": 124,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 125,
                  "end_byte": 140,
                  "text": "( num1 > num2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 127,
                      "end_byte": 138,
                      "text": "num1 > num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 127,
                          "end_byte": 131,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 134,
                          "end_byte": 138,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 139,
                      "end_byte": 140,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 141,
                  "end_byte": 184,
                  "text": "{ numerator = num1 ; denominator = num2 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 141,
                      "end_byte": 142,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 143,
                      "end_byte": 161,
                      "text": "numerator = num1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 143,
                          "end_byte": 159,
                          "text": "numerator = num1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 143,
                              "end_byte": 152,
                              "text": "numerator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 153,
                              "end_byte": 154,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 155,
                              "end_byte": 159,
                              "text": "num1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 162,
                      "end_byte": 182,
                      "text": "denominator = num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 162,
                          "end_byte": 180,
                          "text": "denominator = num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 162,
                              "end_byte": 173,
                              "text": "denominator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 176,
                              "end_byte": 180,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 181,
                          "end_byte": 182,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 183,
                      "end_byte": 184,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 185,
                  "end_byte": 233,
                  "text": "else { numerator = num2 ; denominator = num1 ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 185,
                      "end_byte": 189,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 190,
                      "end_byte": 233,
                      "text": "{ numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 190,
                          "end_byte": 191,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 192,
                          "end_byte": 210,
                          "text": "numerator = num2 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 192,
                              "end_byte": 208,
                              "text": "numerator = num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 192,
                                  "end_byte": 201,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 204,
                                  "end_byte": 208,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 209,
                              "end_byte": 210,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 211,
                          "end_byte": 231,
                          "text": "denominator = num1 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 211,
                              "end_byte": 229,
                              "text": "denominator = num1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 211,
                                  "end_byte": 222,
                                  "text": "denominator",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 223,
                                  "end_byte": 224,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 225,
                                  "end_byte": 229,
                                  "text": "num1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 230,
                              "end_byte": 231,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 232,
                          "end_byte": 233,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 234,
              "end_byte": 271,
              "text": "remainder = numerator % denominator ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 234,
                  "end_byte": 269,
                  "text": "remainder = numerator % denominator",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 234,
                      "end_byte": 243,
                      "text": "remainder",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 244,
                      "end_byte": 245,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 246,
                      "end_byte": 269,
                      "text": "numerator % denominator",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 246,
                          "end_byte": 255,
                          "text": "numerator",
                          "children": []
                        },
                        {
                          "type": "%",
                          "start_byte": 256,
                          "end_byte": 257,
                          "text": "%",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 258,
                          "end_byte": 269,
                          "text": "denominator",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 270,
                  "end_byte": 271,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 272,
              "end_byte": 390,
              "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 272,
                  "end_byte": 277,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 278,
                  "end_byte": 296,
                  "text": "( remainder != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 278,
                      "end_byte": 279,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 280,
                      "end_byte": 294,
                      "text": "remainder != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 280,
                          "end_byte": 289,
                          "text": "remainder",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 290,
                          "end_byte": 292,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 293,
                          "end_byte": 294,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 295,
                      "end_byte": 296,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 297,
                  "end_byte": 390,
                  "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 297,
                      "end_byte": 298,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 299,
                      "end_byte": 324,
                      "text": "numerator = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 299,
                          "end_byte": 322,
                          "text": "numerator = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 299,
                              "end_byte": 308,
                              "text": "numerator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 311,
                              "end_byte": 322,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 325,
                      "end_byte": 350,
                      "text": "denominator = remainder ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 325,
                          "end_byte": 348,
                          "text": "denominator = remainder",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 336,
                              "text": "denominator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 337,
                              "end_byte": 338,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 339,
                              "end_byte": 348,
                              "text": "remainder",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 349,
                          "end_byte": 350,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 351,
                      "end_byte": 388,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 351,
                          "end_byte": 386,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 351,
                              "end_byte": 360,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 361,
                              "end_byte": 362,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 363,
                              "end_byte": 386,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 363,
                                  "end_byte": 372,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 373,
                                  "end_byte": 374,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 375,
                                  "end_byte": 386,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 387,
                          "end_byte": 388,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 389,
                      "end_byte": 390,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 391,
              "end_byte": 410,
              "text": "gcd = denominator ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 391,
                  "end_byte": 408,
                  "text": "gcd = denominator",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 391,
                      "end_byte": 394,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 395,
                      "end_byte": 396,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 397,
                      "end_byte": 408,
                      "text": "denominator",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 409,
                  "end_byte": 410,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 411,
              "end_byte": 436,
              "text": "lcm = num1 * num2 / gcd ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 411,
                  "end_byte": 434,
                  "text": "lcm = num1 * num2 / gcd",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 411,
                      "end_byte": 414,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 415,
                      "end_byte": 416,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 417,
                      "end_byte": 434,
                      "text": "num1 * num2 / gcd",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 417,
                          "end_byte": 428,
                          "text": "num1 * num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 417,
                              "end_byte": 421,
                              "text": "num1",
                              "children": []
                            },
                            {
                              "type": "*",
                              "start_byte": 422,
                              "end_byte": 423,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 424,
                              "end_byte": 428,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 429,
                          "end_byte": 430,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 431,
                          "end_byte": 434,
                          "text": "gcd",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 435,
                  "end_byte": 436,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 437,
              "end_byte": 471,
              "text": "printf ( \"%d %d\\n\" , gcd , lcm ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 437,
                  "end_byte": 469,
                  "text": "printf ( \"%d %d\\n\" , gcd , lcm )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 437,
                      "end_byte": 443,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 444,
                      "end_byte": 469,
                      "text": "( \"%d %d\\n\" , gcd , lcm )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 444,
                          "end_byte": 445,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 446,
                          "end_byte": 455,
                          "text": "\"%d %d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 446,
                              "end_byte": 447,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 447,
                              "end_byte": 452,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 452,
                              "end_byte": 454,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 454,
                              "end_byte": 455,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 456,
                          "end_byte": 457,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 458,
                          "end_byte": 461,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 462,
                          "end_byte": 463,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 464,
                          "end_byte": 467,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 468,
                          "end_byte": 469,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 470,
                  "end_byte": 471,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 472,
              "end_byte": 473,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}