{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 526,
  "text": "int main ( ) { int a , b , gcd , lcm , temp , numerator , denominator , t ; scanf ( \"%d\" , & t ) ; if ( t >= 1 && t <= 1000 ) { while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 ) { if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } } } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 526,
      "text": "int main ( ) { int a , b , gcd , lcm , temp , numerator , denominator , t ; scanf ( \"%d\" , & t ) ; if ( t >= 1 && t <= 1000 ) { while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 ) { if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } } } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 526,
          "text": "{ int a , b , gcd , lcm , temp , numerator , denominator , t ; scanf ( \"%d\" , & t ) ; if ( t >= 1 && t <= 1000 ) { while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 ) { if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } } } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 75,
              "text": "int a , b , gcd , lcm , temp , numerator , denominator , t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 30,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 36,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 43,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 55,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 69,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 72,
                  "end_byte": 73,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 76,
              "end_byte": 98,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 76,
                  "end_byte": 96,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 81,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 82,
                      "end_byte": 96,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 82,
                          "end_byte": 83,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 84,
                          "end_byte": 88,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 85,
                              "end_byte": 87,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 87,
                              "end_byte": 88,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 91,
                          "end_byte": 94,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 93,
                              "end_byte": 94,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 99,
              "end_byte": 524,
              "text": "if ( t >= 1 && t <= 1000 ) { while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 ) { if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 99,
                  "end_byte": 101,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 102,
                  "end_byte": 125,
                  "text": "( t >= 1 && t <= 1000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 104,
                      "end_byte": 123,
                      "text": "t >= 1 && t <= 1000",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 104,
                          "end_byte": 110,
                          "text": "t >= 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "t",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 106,
                              "end_byte": 108,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 111,
                          "end_byte": 113,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 114,
                          "end_byte": 123,
                          "text": "t <= 1000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 114,
                              "end_byte": 115,
                              "text": "t",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 116,
                              "end_byte": 118,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 119,
                              "end_byte": 123,
                              "text": "1000",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 126,
                  "end_byte": 524,
                  "text": "{ while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 ) { if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 128,
                      "end_byte": 522,
                      "text": "while ( t -- ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 ) { if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 128,
                          "end_byte": 133,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 134,
                          "end_byte": 142,
                          "text": "( t -- )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 134,
                              "end_byte": 135,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 136,
                              "end_byte": 140,
                              "text": "t --",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 136,
                                  "end_byte": 137,
                                  "text": "t",
                                  "children": []
                                },
                                {
                                  "type": "--",
                                  "start_byte": 138,
                                  "end_byte": 140,
                                  "text": "--",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 141,
                              "end_byte": 142,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 143,
                          "end_byte": 522,
                          "text": "{ scanf ( \"%ld %ld\" , & a , & b ) ; if ( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 ) { if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 143,
                              "end_byte": 144,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 145,
                              "end_byte": 178,
                              "text": "scanf ( \"%ld %ld\" , & a , & b ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 145,
                                  "end_byte": 176,
                                  "text": "scanf ( \"%ld %ld\" , & a , & b )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 145,
                                      "end_byte": 150,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 151,
                                      "end_byte": 176,
                                      "text": "( \"%ld %ld\" , & a , & b )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 151,
                                          "end_byte": 152,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 153,
                                          "end_byte": 162,
                                          "text": "\"%ld %ld\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 153,
                                              "end_byte": 154,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 154,
                                              "end_byte": 161,
                                              "text": "%ld %ld",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 161,
                                              "end_byte": 162,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 163,
                                          "end_byte": 164,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 165,
                                          "end_byte": 168,
                                          "text": "& a",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 165,
                                              "end_byte": 166,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 167,
                                              "end_byte": 168,
                                              "text": "a",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 169,
                                          "end_byte": 170,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 171,
                                          "end_byte": 174,
                                          "text": "& b",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 171,
                                              "end_byte": 172,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 173,
                                              "end_byte": 174,
                                              "text": "b",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 175,
                                          "end_byte": 176,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 177,
                                  "end_byte": 178,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 179,
                              "end_byte": 520,
                              "text": "if ( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 ) { if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 179,
                                  "end_byte": 181,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 182,
                                  "end_byte": 234,
                                  "text": "( a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 182,
                                      "end_byte": 183,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 184,
                                      "end_byte": 232,
                                      "text": "a >= 1 && a <= 1000000 && b >= 1 && b <= 1000000",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 184,
                                          "end_byte": 216,
                                          "text": "a >= 1 && a <= 1000000 && b >= 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 184,
                                              "end_byte": 206,
                                              "text": "a >= 1 && a <= 1000000",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 184,
                                                  "end_byte": 190,
                                                  "text": "a >= 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 184,
                                                      "end_byte": 185,
                                                      "text": "a",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": ">=",
                                                      "start_byte": 186,
                                                      "end_byte": 188,
                                                      "text": ">=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 189,
                                                      "end_byte": 190,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 191,
                                                  "end_byte": 193,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 194,
                                                  "end_byte": 206,
                                                  "text": "a <= 1000000",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 194,
                                                      "end_byte": 195,
                                                      "text": "a",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "<=",
                                                      "start_byte": 196,
                                                      "end_byte": 198,
                                                      "text": "<=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 199,
                                                      "end_byte": 206,
                                                      "text": "1000000",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "&&",
                                              "start_byte": 207,
                                              "end_byte": 209,
                                              "text": "&&",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 210,
                                              "end_byte": 216,
                                              "text": "b >= 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 210,
                                                  "end_byte": 211,
                                                  "text": "b",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">=",
                                                  "start_byte": 212,
                                                  "end_byte": 214,
                                                  "text": ">=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 215,
                                                  "end_byte": 216,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 217,
                                          "end_byte": 219,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 220,
                                          "end_byte": 232,
                                          "text": "b <= 1000000",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 220,
                                              "end_byte": 221,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": "<=",
                                              "start_byte": 222,
                                              "end_byte": 224,
                                              "text": "<=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 225,
                                              "end_byte": 232,
                                              "text": "1000000",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 233,
                                      "end_byte": 234,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 235,
                                  "end_byte": 520,
                                  "text": "{ if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; } gcd = numerator ; lcm = ( a * b ) / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 235,
                                      "end_byte": 236,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 237,
                                      "end_byte": 330,
                                      "text": "if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 237,
                                          "end_byte": 239,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 240,
                                          "end_byte": 249,
                                          "text": "( a > b )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 240,
                                              "end_byte": 241,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 242,
                                              "end_byte": 247,
                                              "text": "a > b",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 242,
                                                  "end_byte": 243,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 244,
                                                  "end_byte": 245,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 246,
                                                  "end_byte": 247,
                                                  "text": "b",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 248,
                                              "end_byte": 249,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 250,
                                          "end_byte": 287,
                                          "text": "{ numerator = a ; denominator = b ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 250,
                                              "end_byte": 251,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 252,
                                              "end_byte": 267,
                                              "text": "numerator = a ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 252,
                                                  "end_byte": 265,
                                                  "text": "numerator = a",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 252,
                                                      "end_byte": 261,
                                                      "text": "numerator",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 262,
                                                      "end_byte": 263,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 264,
                                                      "end_byte": 265,
                                                      "text": "a",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 266,
                                                  "end_byte": 267,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 268,
                                              "end_byte": 285,
                                              "text": "denominator = b ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 268,
                                                  "end_byte": 283,
                                                  "text": "denominator = b",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 268,
                                                      "end_byte": 279,
                                                      "text": "denominator",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 280,
                                                      "end_byte": 281,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 282,
                                                      "end_byte": 283,
                                                      "text": "b",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 284,
                                                  "end_byte": 285,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 286,
                                              "end_byte": 287,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 288,
                                          "end_byte": 330,
                                          "text": "else { numerator = b ; denominator = a ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 288,
                                              "end_byte": 292,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 293,
                                              "end_byte": 330,
                                              "text": "{ numerator = b ; denominator = a ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 293,
                                                  "end_byte": 294,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 295,
                                                  "end_byte": 310,
                                                  "text": "numerator = b ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 295,
                                                      "end_byte": 308,
                                                      "text": "numerator = b",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 295,
                                                          "end_byte": 304,
                                                          "text": "numerator",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 305,
                                                          "end_byte": 306,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 307,
                                                          "end_byte": 308,
                                                          "text": "b",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 309,
                                                      "end_byte": 310,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 311,
                                                  "end_byte": 328,
                                                  "text": "denominator = a ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 311,
                                                      "end_byte": 326,
                                                      "text": "denominator = a",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 311,
                                                          "end_byte": 322,
                                                          "text": "denominator",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 323,
                                                          "end_byte": 324,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 325,
                                                          "end_byte": 326,
                                                          "text": "a",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 327,
                                                      "end_byte": 328,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 329,
                                                  "end_byte": 330,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "while_statement",
                                      "start_byte": 331,
                                      "end_byte": 441,
                                      "text": "while ( denominator != 0 ) { temp = denominator ; denominator = numerator % denominator ; numerator = temp ; }",
                                      "children": [
                                        {
                                          "type": "while",
                                          "start_byte": 331,
                                          "end_byte": 336,
                                          "text": "while",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 337,
                                          "end_byte": 357,
                                          "text": "( denominator != 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 337,
                                              "end_byte": 338,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 339,
                                              "end_byte": 355,
                                              "text": "denominator != 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 339,
                                                  "end_byte": 350,
                                                  "text": "denominator",
                                                  "children": []
                                                },
                                                {
                                                  "type": "!=",
                                                  "start_byte": 351,
                                                  "end_byte": 353,
                                                  "text": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 354,
                                                  "end_byte": 355,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 356,
                                              "end_byte": 357,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 358,
                                          "end_byte": 441,
                                          "text": "{ temp = denominator ; denominator = numerator % denominator ; numerator = temp ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 358,
                                              "end_byte": 359,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 360,
                                              "end_byte": 380,
                                              "text": "temp = denominator ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 360,
                                                  "end_byte": 378,
                                                  "text": "temp = denominator",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 360,
                                                      "end_byte": 364,
                                                      "text": "temp",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 365,
                                                      "end_byte": 366,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 367,
                                                      "end_byte": 378,
                                                      "text": "denominator",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 379,
                                                  "end_byte": 380,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 381,
                                              "end_byte": 420,
                                              "text": "denominator = numerator % denominator ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 381,
                                                  "end_byte": 418,
                                                  "text": "denominator = numerator % denominator",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 381,
                                                      "end_byte": 392,
                                                      "text": "denominator",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 393,
                                                      "end_byte": 394,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 395,
                                                      "end_byte": 418,
                                                      "text": "numerator % denominator",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 395,
                                                          "end_byte": 404,
                                                          "text": "numerator",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "%",
                                                          "start_byte": 405,
                                                          "end_byte": 406,
                                                          "text": "%",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 407,
                                                          "end_byte": 418,
                                                          "text": "denominator",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 419,
                                                  "end_byte": 420,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 421,
                                              "end_byte": 439,
                                              "text": "numerator = temp ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 421,
                                                  "end_byte": 437,
                                                  "text": "numerator = temp",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 421,
                                                      "end_byte": 430,
                                                      "text": "numerator",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 431,
                                                      "end_byte": 432,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 433,
                                                      "end_byte": 437,
                                                      "text": "temp",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 438,
                                                  "end_byte": 439,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 440,
                                              "end_byte": 441,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 442,
                                      "end_byte": 459,
                                      "text": "gcd = numerator ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 442,
                                          "end_byte": 457,
                                          "text": "gcd = numerator",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 442,
                                              "end_byte": 445,
                                              "text": "gcd",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 446,
                                              "end_byte": 447,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 448,
                                              "end_byte": 457,
                                              "text": "numerator",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 458,
                                          "end_byte": 459,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 460,
                                      "end_byte": 483,
                                      "text": "lcm = ( a * b ) / gcd ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 460,
                                          "end_byte": 481,
                                          "text": "lcm = ( a * b ) / gcd",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 460,
                                              "end_byte": 463,
                                              "text": "lcm",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 464,
                                              "end_byte": 465,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 466,
                                              "end_byte": 481,
                                              "text": "( a * b ) / gcd",
                                              "children": [
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start_byte": 466,
                                                  "end_byte": 475,
                                                  "text": "( a * b )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 466,
                                                      "end_byte": 467,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 468,
                                                      "end_byte": 473,
                                                      "text": "a * b",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 468,
                                                          "end_byte": 469,
                                                          "text": "a",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "*",
                                                          "start_byte": 470,
                                                          "end_byte": 471,
                                                          "text": "*",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 472,
                                                          "end_byte": 473,
                                                          "text": "b",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 474,
                                                      "end_byte": 475,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "/",
                                                  "start_byte": 476,
                                                  "end_byte": 477,
                                                  "text": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 478,
                                                  "end_byte": 481,
                                                  "text": "gcd",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 482,
                                          "end_byte": 483,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 484,
                                      "end_byte": 518,
                                      "text": "printf ( \"%d %d\\n\" , gcd , lcm ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 484,
                                          "end_byte": 516,
                                          "text": "printf ( \"%d %d\\n\" , gcd , lcm )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 484,
                                              "end_byte": 490,
                                              "text": "printf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 491,
                                              "end_byte": 516,
                                              "text": "( \"%d %d\\n\" , gcd , lcm )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 491,
                                                  "end_byte": 492,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 493,
                                                  "end_byte": 502,
                                                  "text": "\"%d %d\\n\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 493,
                                                      "end_byte": 494,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 494,
                                                      "end_byte": 499,
                                                      "text": "%d %d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "escape_sequence",
                                                      "start_byte": 499,
                                                      "end_byte": 501,
                                                      "text": "\\n",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 501,
                                                      "end_byte": 502,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 503,
                                                  "end_byte": 504,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 505,
                                                  "end_byte": 508,
                                                  "text": "gcd",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 509,
                                                  "end_byte": 510,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 511,
                                                  "end_byte": 514,
                                                  "text": "lcm",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 515,
                                                  "end_byte": 516,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 517,
                                          "end_byte": 518,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 519,
                                      "end_byte": 520,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 521,
                              "end_byte": 522,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 523,
                      "end_byte": 524,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 525,
              "end_byte": 526,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}