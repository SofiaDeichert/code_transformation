int func ( int ( * arr ) [ 100 ] , int n , int i , int max ) { int j , m , a , b , c ; if ( i == 0 ) return max ; else { for ( j = 0 ; j <= i ; j ++ ) { a = * ( * ( arr + i ) + j ) ; b = * ( * ( arr + ( i - 1 ) ) + j ) ; if ( j > 0 ) { c = * ( * ( arr + ( i - 1 ) ) + ( j - 1 ) ) ; if ( ( ( a + b ) >= ( a + c ) ) && ( ( a + b ) > max ) ) { max = ( a + b ) ; m = j ; } if ( ( ( a + c ) >= ( a + b ) ) && ( ( a + c ) > max ) && ( j > 0 ) ) { max = ( a + c ) ; m = j - 1 ; } } else { if ( ( a + b ) > max ) { max = ( a + b ) ; m = j ; } } } * ( * ( arr + ( i - 1 ) ) + m ) = max ; func ( arr , n , i - 1 , max ) ; } } int main ( ) { int n , array [ 100 ] [ 100 ] , i , j , t , z ; scanf ( "%d" , & t ) ; for ( z = 0 ; z < t ; z ++ ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & array [ i ] [ j ] ) ; } if ( n == 1 ) printf ( "%d\n" , array [ 0 ] [ 0 ] ) ; else printf ( "%d\n" , func ( array , n , n - 1 , 0 ) ) ; } return 0 ; }