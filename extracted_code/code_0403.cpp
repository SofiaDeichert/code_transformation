int longestPath ( int numbers [ ROWS ] [ COLS ] , int m ) { int i ; int j ; for ( i = m - 2 ; i >= 0 ; i -- ) { for ( j = 0 ; j <= i ; j ++ ) { if ( numbers [ i + 1 ] [ j ] < numbers [ i + 1 ] [ j + 1 ] ) { numbers [ i ] [ j ] = numbers [ i ] [ j ] + numbers [ i + 1 ] [ j + 1 ] ; } else { numbers [ i ] [ j ] = numbers [ i ] [ j ] + numbers [ i + 1 ] [ j ] ; } } } return numbers [ 0 ] [ 0 ] ; } void extraction ( int numbers [ ROWS ] [ COLS ] , int m ) { int i ; int j ; for ( i = 0 ; i < m ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%i" , & numbers [ i ] [ j ] ) ; } } } int main ( ) { int n ; int m ; int i ; int answer ; scanf ( "%i" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%i" , & m ) ; int numbers [ m ] [ m ] ; extraction ( numbers , m ) ; answer = longestPath ( numbers , m ) ; printf ( "%i\n" , answer ) ; } return 0 ; }