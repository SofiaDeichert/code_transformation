{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 543,
  "text": "unsigned long long int find_gcm ( unsigned long long int , unsigned long long int ) ; int main ( ) { unsigned int T , i ; T = i = 0 ; scanf ( \"%u\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { unsigned long long int A , B , O ; A = B = O = 0 ; scanf ( \"%llu %llu\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%llu \" , O ) ; printf ( \"%llu\\n\" , ( A * B / O ) ) ; } return 0 ; } unsigned long long int find_gcm ( unsigned long long int A , unsigned long long int B ) { while ( A != B ) { if ( A > B ) A = A - B ; else B = B - A ; } return A ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 85,
      "text": "unsigned long long int find_gcm ( unsigned long long int , unsigned long long int ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 22,
          "text": "unsigned long long int",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 0,
              "end_byte": 8,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 9,
              "end_byte": 13,
              "text": "long",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 14,
              "end_byte": 18,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 19,
              "end_byte": 22,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 23,
          "end_byte": 83,
          "text": "find_gcm ( unsigned long long int , unsigned long long int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 23,
              "end_byte": 31,
              "text": "find_gcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 32,
              "end_byte": 83,
              "text": "( unsigned long long int , unsigned long long int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 34,
                  "end_byte": 56,
                  "text": "unsigned long long int",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 34,
                      "end_byte": 56,
                      "text": "unsigned long long int",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 34,
                          "end_byte": 42,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 43,
                          "end_byte": 47,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 48,
                          "end_byte": 52,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 53,
                          "end_byte": 56,
                          "text": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 59,
                  "end_byte": 81,
                  "text": "unsigned long long int",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 59,
                      "end_byte": 81,
                      "text": "unsigned long long int",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 59,
                          "end_byte": 67,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 68,
                          "end_byte": 72,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 73,
                          "end_byte": 77,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 78,
                          "end_byte": 81,
                          "text": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 84,
          "end_byte": 85,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 86,
      "end_byte": 377,
      "text": "int main ( ) { unsigned int T , i ; T = i = 0 ; scanf ( \"%u\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { unsigned long long int A , B , O ; A = B = O = 0 ; scanf ( \"%llu %llu\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%llu \" , O ) ; printf ( \"%llu\\n\" , ( A * B / O ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 86,
          "end_byte": 89,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 90,
          "end_byte": 98,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 90,
              "end_byte": 94,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 95,
              "end_byte": 98,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 95,
                  "end_byte": 96,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 99,
          "end_byte": 377,
          "text": "{ unsigned int T , i ; T = i = 0 ; scanf ( \"%u\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { unsigned long long int A , B , O ; A = B = O = 0 ; scanf ( \"%llu %llu\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%llu \" , O ) ; printf ( \"%llu\\n\" , ( A * B / O ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 99,
              "end_byte": 100,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 101,
              "end_byte": 121,
              "text": "unsigned int T , i ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 101,
                  "end_byte": 113,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 101,
                      "end_byte": 109,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 110,
                      "end_byte": 113,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 114,
                  "end_byte": 115,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 118,
                  "end_byte": 119,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 122,
              "end_byte": 133,
              "text": "T = i = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 122,
                  "end_byte": 131,
                  "text": "T = i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "T",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 126,
                      "end_byte": 131,
                      "text": "i = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 126,
                          "end_byte": 127,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 128,
                          "end_byte": 129,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 130,
                          "end_byte": 131,
                          "text": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 134,
              "end_byte": 156,
              "text": "scanf ( \"%u\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 134,
                  "end_byte": 154,
                  "text": "scanf ( \"%u\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 134,
                      "end_byte": 139,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 140,
                      "end_byte": 154,
                      "text": "( \"%u\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 140,
                          "end_byte": 141,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 142,
                          "end_byte": 146,
                          "text": "\"%u\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 143,
                              "end_byte": 145,
                              "text": "%u",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 147,
                          "end_byte": 148,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 149,
                          "end_byte": 152,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 152,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 155,
                  "end_byte": 156,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 157,
              "end_byte": 364,
              "text": "for ( i = 0 ; i < T ; i ++ ) { unsigned long long int A , B , O ; A = B = O = 0 ; scanf ( \"%llu %llu\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%llu \" , O ) ; printf ( \"%llu\\n\" , ( A * B / O ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 157,
                  "end_byte": 160,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 161,
                  "end_byte": 162,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 163,
                  "end_byte": 168,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 163,
                      "end_byte": 164,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 165,
                      "end_byte": 166,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 167,
                      "end_byte": 168,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 169,
                  "end_byte": 170,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 171,
                  "end_byte": 176,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 171,
                      "end_byte": 172,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 173,
                      "end_byte": 174,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 175,
                      "end_byte": 176,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 177,
                  "end_byte": 178,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 179,
                  "end_byte": 183,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 179,
                      "end_byte": 180,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 181,
                      "end_byte": 183,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 184,
                  "end_byte": 185,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 186,
                  "end_byte": 364,
                  "text": "{ unsigned long long int A , B , O ; A = B = O = 0 ; scanf ( \"%llu %llu\" , & A , & B ) ; O = find_gcm ( A , B ) ; printf ( \"%llu \" , O ) ; printf ( \"%llu\\n\" , ( A * B / O ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 186,
                      "end_byte": 187,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 188,
                      "end_byte": 222,
                      "text": "unsigned long long int A , B , O ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 188,
                          "end_byte": 210,
                          "text": "unsigned long long int",
                          "children": [
                            {
                              "type": "unsigned",
                              "start_byte": 188,
                              "end_byte": 196,
                              "text": "unsigned",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 197,
                              "end_byte": 201,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 202,
                              "end_byte": 206,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 207,
                              "end_byte": 210,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 211,
                          "end_byte": 212,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 215,
                          "end_byte": 216,
                          "text": "B",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 217,
                          "end_byte": 218,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 219,
                          "end_byte": 220,
                          "text": "O",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 221,
                          "end_byte": 222,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 223,
                      "end_byte": 238,
                      "text": "A = B = O = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 223,
                          "end_byte": 236,
                          "text": "A = B = O = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 223,
                              "end_byte": 224,
                              "text": "A",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 225,
                              "end_byte": 226,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 227,
                              "end_byte": 236,
                              "text": "B = O = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 227,
                                  "end_byte": 228,
                                  "text": "B",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 231,
                                  "end_byte": 236,
                                  "text": "O = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 231,
                                      "end_byte": 232,
                                      "text": "O",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 233,
                                      "end_byte": 234,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 235,
                                      "end_byte": 236,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 237,
                          "end_byte": 238,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 239,
                      "end_byte": 274,
                      "text": "scanf ( \"%llu %llu\" , & A , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 239,
                          "end_byte": 272,
                          "text": "scanf ( \"%llu %llu\" , & A , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 239,
                              "end_byte": 244,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 245,
                              "end_byte": 272,
                              "text": "( \"%llu %llu\" , & A , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 245,
                                  "end_byte": 246,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 247,
                                  "end_byte": 258,
                                  "text": "\"%llu %llu\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 247,
                                      "end_byte": 248,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 248,
                                      "end_byte": 257,
                                      "text": "%llu %llu",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 257,
                                      "end_byte": 258,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 259,
                                  "end_byte": 260,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 261,
                                  "end_byte": 264,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 265,
                                  "end_byte": 266,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 267,
                                  "end_byte": 270,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 267,
                                      "end_byte": 268,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 271,
                                  "end_byte": 272,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 273,
                          "end_byte": 274,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 275,
                      "end_byte": 299,
                      "text": "O = find_gcm ( A , B ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 275,
                          "end_byte": 297,
                          "text": "O = find_gcm ( A , B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 275,
                              "end_byte": 276,
                              "text": "O",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 277,
                              "end_byte": 278,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 279,
                              "end_byte": 297,
                              "text": "find_gcm ( A , B )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 279,
                                  "end_byte": 287,
                                  "text": "find_gcm",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 288,
                                  "end_byte": 297,
                                  "text": "( A , B )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 288,
                                      "end_byte": 289,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 290,
                                      "end_byte": 291,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 292,
                                      "end_byte": 293,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 294,
                                      "end_byte": 295,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 296,
                                      "end_byte": 297,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 298,
                          "end_byte": 299,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 300,
                      "end_byte": 324,
                      "text": "printf ( \"%llu \" , O ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 300,
                          "end_byte": 322,
                          "text": "printf ( \"%llu \" , O )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 300,
                              "end_byte": 306,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 307,
                              "end_byte": 322,
                              "text": "( \"%llu \" , O )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 309,
                                  "end_byte": 316,
                                  "text": "\"%llu \"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 309,
                                      "end_byte": 310,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 310,
                                      "end_byte": 315,
                                      "text": "%llu ",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 315,
                                      "end_byte": 316,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 317,
                                  "end_byte": 318,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 319,
                                  "end_byte": 320,
                                  "text": "O",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 321,
                                  "end_byte": 322,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 325,
                      "end_byte": 362,
                      "text": "printf ( \"%llu\\n\" , ( A * B / O ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 325,
                          "end_byte": 360,
                          "text": "printf ( \"%llu\\n\" , ( A * B / O ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 331,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 332,
                              "end_byte": 360,
                              "text": "( \"%llu\\n\" , ( A * B / O ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 332,
                                  "end_byte": 333,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 334,
                                  "end_byte": 342,
                                  "text": "\"%llu\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 334,
                                      "end_byte": 335,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 335,
                                      "end_byte": 339,
                                      "text": "%llu",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 339,
                                      "end_byte": 341,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 341,
                                      "end_byte": 342,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 343,
                                  "end_byte": 344,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 345,
                                  "end_byte": 358,
                                  "text": "( A * B / O )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 345,
                                      "end_byte": 346,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 347,
                                      "end_byte": 356,
                                      "text": "A * B / O",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 347,
                                          "end_byte": 352,
                                          "text": "A * B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 347,
                                              "end_byte": 348,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 349,
                                              "end_byte": 350,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 351,
                                              "end_byte": 352,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 353,
                                          "end_byte": 354,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 355,
                                          "end_byte": 356,
                                          "text": "O",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 357,
                                      "end_byte": 358,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 359,
                                  "end_byte": 360,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 361,
                          "end_byte": 362,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 363,
                      "end_byte": 364,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 365,
              "end_byte": 375,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 365,
                  "end_byte": 371,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 372,
                  "end_byte": 373,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 374,
                  "end_byte": 375,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 376,
              "end_byte": 377,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 378,
      "end_byte": 543,
      "text": "unsigned long long int find_gcm ( unsigned long long int A , unsigned long long int B ) { while ( A != B ) { if ( A > B ) A = A - B ; else B = B - A ; } return A ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 378,
          "end_byte": 400,
          "text": "unsigned long long int",
          "children": [
            {
              "type": "unsigned",
              "start_byte": 378,
              "end_byte": 386,
              "text": "unsigned",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 387,
              "end_byte": 391,
              "text": "long",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 392,
              "end_byte": 396,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 397,
              "end_byte": 400,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 401,
          "end_byte": 465,
          "text": "find_gcm ( unsigned long long int A , unsigned long long int B )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 401,
              "end_byte": 409,
              "text": "find_gcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 410,
              "end_byte": 465,
              "text": "( unsigned long long int A , unsigned long long int B )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 410,
                  "end_byte": 411,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 412,
                  "end_byte": 436,
                  "text": "unsigned long long int A",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 412,
                      "end_byte": 434,
                      "text": "unsigned long long int",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 412,
                          "end_byte": 420,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 421,
                          "end_byte": 425,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 426,
                          "end_byte": 430,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 431,
                          "end_byte": 434,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 435,
                      "end_byte": 436,
                      "text": "A",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 437,
                  "end_byte": 438,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 439,
                  "end_byte": 463,
                  "text": "unsigned long long int B",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 439,
                      "end_byte": 461,
                      "text": "unsigned long long int",
                      "children": [
                        {
                          "type": "unsigned",
                          "start_byte": 439,
                          "end_byte": 447,
                          "text": "unsigned",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 448,
                          "end_byte": 452,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 453,
                          "end_byte": 457,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 458,
                          "end_byte": 461,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 462,
                      "end_byte": 463,
                      "text": "B",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 464,
                  "end_byte": 465,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 466,
          "end_byte": 543,
          "text": "{ while ( A != B ) { if ( A > B ) A = A - B ; else B = B - A ; } return A ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 466,
              "end_byte": 467,
              "text": "{",
              "children": []
            },
            {
              "type": "while_statement",
              "start_byte": 468,
              "end_byte": 530,
              "text": "while ( A != B ) { if ( A > B ) A = A - B ; else B = B - A ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 468,
                  "end_byte": 473,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 474,
                  "end_byte": 484,
                  "text": "( A != B )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 474,
                      "end_byte": 475,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 476,
                      "end_byte": 482,
                      "text": "A != B",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 476,
                          "end_byte": 477,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 478,
                          "end_byte": 480,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 481,
                          "end_byte": 482,
                          "text": "B",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 483,
                      "end_byte": 484,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 485,
                  "end_byte": 530,
                  "text": "{ if ( A > B ) A = A - B ; else B = B - A ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 485,
                      "end_byte": 486,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 487,
                      "end_byte": 528,
                      "text": "if ( A > B ) A = A - B ; else B = B - A ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 487,
                          "end_byte": 489,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 490,
                          "end_byte": 499,
                          "text": "( A > B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 490,
                              "end_byte": 491,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 492,
                              "end_byte": 497,
                              "text": "A > B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 492,
                                  "end_byte": 493,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 494,
                                  "end_byte": 495,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 496,
                                  "end_byte": 497,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 498,
                              "end_byte": 499,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 500,
                          "end_byte": 511,
                          "text": "A = A - B ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 500,
                              "end_byte": 509,
                              "text": "A = A - B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 500,
                                  "end_byte": 501,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 502,
                                  "end_byte": 503,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 504,
                                  "end_byte": 509,
                                  "text": "A - B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 504,
                                      "end_byte": 505,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 506,
                                      "end_byte": 507,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 508,
                                      "end_byte": 509,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 510,
                              "end_byte": 511,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 512,
                          "end_byte": 528,
                          "text": "else B = B - A ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 512,
                              "end_byte": 516,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 517,
                              "end_byte": 528,
                              "text": "B = B - A ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 517,
                                  "end_byte": 526,
                                  "text": "B = B - A",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 517,
                                      "end_byte": 518,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 519,
                                      "end_byte": 520,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 521,
                                      "end_byte": 526,
                                      "text": "B - A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 521,
                                          "end_byte": 522,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 523,
                                          "end_byte": 524,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 525,
                                          "end_byte": 526,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 527,
                                  "end_byte": 528,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 529,
                      "end_byte": 530,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 531,
              "end_byte": 541,
              "text": "return A ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 531,
                  "end_byte": 537,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 538,
                  "end_byte": 539,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 540,
                  "end_byte": 541,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 542,
              "end_byte": 543,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}