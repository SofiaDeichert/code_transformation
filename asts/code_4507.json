{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 386,
  "text": "int find_gcd ( int a , int b ) { int max , min , temp ; max = a > b ? a : b ; min = a < b ? a : b ; while ( max % min ) { temp = min ; min = max % min ; max = temp ; } return min ; } int main ( ) { int t , n , a , b , gcd , lcm ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 182,
      "text": "int find_gcd ( int a , int b ) { int max , min , temp ; max = a > b ? a : b ; min = a < b ? a : b ; while ( max % min ) { temp = min ; min = max % min ; max = temp ; } return min ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 30,
          "text": "find_gcd ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 12,
              "text": "find_gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 13,
              "end_byte": 30,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 15,
                  "end_byte": 20,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 15,
                      "end_byte": 18,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 19,
                      "end_byte": 20,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 23,
                  "end_byte": 28,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 23,
                      "end_byte": 26,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 27,
                      "end_byte": 28,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 31,
          "end_byte": 182,
          "text": "{ int max , min , temp ; max = a > b ? a : b ; min = a < b ? a : b ; while ( max % min ) { temp = min ; min = max % min ; max = temp ; } return min ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 31,
              "end_byte": 32,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 33,
              "end_byte": 55,
              "text": "int max , min , temp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 33,
                  "end_byte": 36,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 40,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 43,
                  "end_byte": 46,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 49,
                  "end_byte": 53,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 56,
              "end_byte": 77,
              "text": "max = a > b ? a : b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 56,
                  "end_byte": 75,
                  "text": "max = a > b ? a : b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 56,
                      "end_byte": 59,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "conditional_expression",
                      "start_byte": 62,
                      "end_byte": 75,
                      "text": "a > b ? a : b",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 62,
                          "end_byte": 67,
                          "text": "a > b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 62,
                              "end_byte": 63,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 66,
                              "end_byte": 67,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start_byte": 68,
                          "end_byte": 69,
                          "text": "?",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 70,
                          "end_byte": 71,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ":",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": ":",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": "b",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 78,
              "end_byte": 99,
              "text": "min = a < b ? a : b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 78,
                  "end_byte": 97,
                  "text": "min = a < b ? a : b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 78,
                      "end_byte": 81,
                      "text": "min",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 82,
                      "end_byte": 83,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "conditional_expression",
                      "start_byte": 84,
                      "end_byte": 97,
                      "text": "a < b ? a : b",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 84,
                          "end_byte": 89,
                          "text": "a < b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": "?",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 92,
                          "end_byte": 93,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ":",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ":",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "b",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 100,
              "end_byte": 167,
              "text": "while ( max % min ) { temp = min ; min = max % min ; max = temp ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 100,
                  "end_byte": 105,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 106,
                  "end_byte": 119,
                  "text": "( max % min )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 108,
                      "end_byte": 117,
                      "text": "max % min",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 108,
                          "end_byte": 111,
                          "text": "max",
                          "children": []
                        },
                        {
                          "type": "%",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": "%",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 114,
                          "end_byte": 117,
                          "text": "min",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 120,
                  "end_byte": 167,
                  "text": "{ temp = min ; min = max % min ; max = temp ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 120,
                      "end_byte": 121,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 122,
                      "end_byte": 134,
                      "text": "temp = min ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 122,
                          "end_byte": 132,
                          "text": "temp = min",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 122,
                              "end_byte": 126,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 129,
                              "end_byte": 132,
                              "text": "min",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 133,
                          "end_byte": 134,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 135,
                      "end_byte": 152,
                      "text": "min = max % min ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 135,
                          "end_byte": 150,
                          "text": "min = max % min",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 135,
                              "end_byte": 138,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 141,
                              "end_byte": 150,
                              "text": "max % min",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 141,
                                  "end_byte": 144,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 145,
                                  "end_byte": 146,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 147,
                                  "end_byte": 150,
                                  "text": "min",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 151,
                          "end_byte": 152,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 153,
                      "end_byte": 165,
                      "text": "max = temp ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 153,
                          "end_byte": 163,
                          "text": "max = temp",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 153,
                              "end_byte": 156,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 159,
                              "end_byte": 163,
                              "text": "temp",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 164,
                          "end_byte": 165,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 168,
              "end_byte": 180,
              "text": "return min ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 168,
                  "end_byte": 174,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 175,
                  "end_byte": 178,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 179,
                  "end_byte": 180,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 181,
              "end_byte": 182,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 183,
      "end_byte": 386,
      "text": "int main ( ) { int t , n , a , b , gcd , lcm ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 183,
          "end_byte": 186,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 187,
          "end_byte": 195,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 187,
              "end_byte": 191,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 192,
              "end_byte": 195,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 192,
                  "end_byte": 193,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 194,
                  "end_byte": 195,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 196,
          "end_byte": 386,
          "text": "{ int t , n , a , b , gcd , lcm ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 196,
              "end_byte": 197,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 198,
              "end_byte": 229,
              "text": "int t , n , a , b , gcd , lcm ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 198,
                  "end_byte": 201,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 202,
                  "end_byte": 203,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 204,
                  "end_byte": 205,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 206,
                  "end_byte": 207,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 208,
                  "end_byte": 209,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 210,
                  "end_byte": 211,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 212,
                  "end_byte": 213,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 214,
                  "end_byte": 215,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 216,
                  "end_byte": 217,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 218,
                  "end_byte": 221,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 222,
                  "end_byte": 223,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 224,
                  "end_byte": 227,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 228,
                  "end_byte": 229,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 230,
              "end_byte": 252,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 230,
                  "end_byte": 250,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 230,
                      "end_byte": 235,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 236,
                      "end_byte": 250,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 236,
                          "end_byte": 237,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 238,
                          "end_byte": 242,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 238,
                              "end_byte": 239,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 239,
                              "end_byte": 241,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 241,
                              "end_byte": 242,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 243,
                          "end_byte": 244,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 245,
                          "end_byte": 248,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 245,
                              "end_byte": 246,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 247,
                              "end_byte": 248,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 249,
                          "end_byte": 250,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 251,
                  "end_byte": 252,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 253,
              "end_byte": 384,
              "text": "while ( t -- ) { scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 253,
                  "end_byte": 258,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 259,
                  "end_byte": 267,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 259,
                      "end_byte": 260,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 261,
                      "end_byte": 265,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 261,
                          "end_byte": 262,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 263,
                          "end_byte": 265,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 266,
                      "end_byte": 267,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 268,
                  "end_byte": 384,
                  "text": "{ scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = a * b / gcd ; printf ( \"%d %d\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 268,
                      "end_byte": 269,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 270,
                      "end_byte": 300,
                      "text": "scanf ( \"%d%d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 270,
                          "end_byte": 298,
                          "text": "scanf ( \"%d%d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 270,
                              "end_byte": 275,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 276,
                              "end_byte": 298,
                              "text": "( \"%d%d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 276,
                                  "end_byte": 277,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 278,
                                  "end_byte": 284,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 278,
                                      "end_byte": 279,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 279,
                                      "end_byte": 283,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 285,
                                  "end_byte": 286,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 287,
                                  "end_byte": 290,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 287,
                                      "end_byte": 288,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 289,
                                      "end_byte": 290,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 291,
                                  "end_byte": 292,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 293,
                                  "end_byte": 296,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 293,
                                      "end_byte": 294,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 295,
                                      "end_byte": 296,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 297,
                                  "end_byte": 298,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 299,
                          "end_byte": 300,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 301,
                      "end_byte": 327,
                      "text": "gcd = find_gcd ( a , b ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 301,
                          "end_byte": 325,
                          "text": "gcd = find_gcd ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 301,
                              "end_byte": 304,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 305,
                              "end_byte": 306,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 307,
                              "end_byte": 325,
                              "text": "find_gcd ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 307,
                                  "end_byte": 315,
                                  "text": "find_gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 316,
                                  "end_byte": 325,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 316,
                                      "end_byte": 317,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 318,
                                      "end_byte": 319,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 322,
                                      "end_byte": 323,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 324,
                                      "end_byte": 325,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 326,
                          "end_byte": 327,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 328,
                      "end_byte": 347,
                      "text": "lcm = a * b / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 328,
                          "end_byte": 345,
                          "text": "lcm = a * b / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 328,
                              "end_byte": 331,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 332,
                              "end_byte": 333,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 334,
                              "end_byte": 345,
                              "text": "a * b / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 334,
                                  "end_byte": 339,
                                  "text": "a * b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 334,
                                      "end_byte": 335,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 336,
                                      "end_byte": 337,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 338,
                                      "end_byte": 339,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 340,
                                  "end_byte": 341,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 342,
                                  "end_byte": 345,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 346,
                          "end_byte": 347,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 348,
                      "end_byte": 382,
                      "text": "printf ( \"%d %d\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 348,
                          "end_byte": 380,
                          "text": "printf ( \"%d %d\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 348,
                              "end_byte": 354,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 355,
                              "end_byte": 380,
                              "text": "( \"%d %d\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 355,
                                  "end_byte": 356,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 357,
                                  "end_byte": 366,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 357,
                                      "end_byte": 358,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 358,
                                      "end_byte": 363,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 363,
                                      "end_byte": 365,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 367,
                                  "end_byte": 368,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 369,
                                  "end_byte": 372,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 373,
                                  "end_byte": 374,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 375,
                                  "end_byte": 378,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 381,
                          "end_byte": 382,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 383,
                      "end_byte": 384,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 385,
              "end_byte": 386,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}