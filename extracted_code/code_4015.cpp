int finalarr [ 1001 ] ; int maxarr [ 101 ] ; int i , r , c , j , p ; int arr [ 101 ] [ 101 ] ; int Max ( int arr [ ] , int row ) { int i = 0 ; int max = 0 ; for ( i = 0 ; i < row ; i ++ ) { if ( arr [ i ] > max ) max = arr [ i ] ; } return max ; } int main ( ) { int testcases ; scanf ( "%d" , & testcases ) ; for ( i = 0 ; i < testcases ; i ++ ) { int rows ; scanf ( "%d" , & rows ) ; for ( r = 0 ; r < rows ; r ++ ) { for ( c = 0 ; c < ( r + 1 ) ; c ++ ) { scanf ( "%d" , & arr [ r ] [ c ] ) ; } } for ( c = 0 ; c < rows ; c ++ ) { int max1 = 0 , max2 = 0 ; for ( r = c ; r < rows ; r ++ ) { max1 += arr [ r ] [ c ] ; if ( r == ( rows - 1 ) && c != ( rows - 1 ) ) max2 = max1 + arr [ r ] [ c + 1 ] - arr [ r ] [ c ] ; } maxarr [ c ] = ( max1 > max2 ) ? max1 : max2 ; } finalarr [ i ] = Max ( maxarr , rows ) ; for ( j = 0 ; j < rows ; j ++ ) { maxarr [ j ] = 0 ; } } for ( i = 0 ; i < testcases ; i ++ ) printf ( "%d\n" , finalarr [ i ] ) ; system ( "pause" ) ; }