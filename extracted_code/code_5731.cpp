main ( ) { int feld [ 110 ] [ 110 ] , fall , n , x , y , max , z ; scanf ( "%d" , & fall ) ; while ( fall -- ) { scanf ( "%d" , & n ) ; for ( y = 1 ; y <= n ; y ++ ) for ( x = 1 ; x <= y ; x ++ ) scanf ( "%d" , & feld [ y ] [ x ] ) ; for ( y = 2 ; y <= n ; y ++ ) { feld [ y ] [ 1 ] = feld [ y ] [ 1 ] + feld [ y - 1 ] [ 1 ] ; feld [ y ] [ y ] = feld [ y ] [ y ] + feld [ y - 1 ] [ y - 1 ] ; for ( x = 2 ; x <= y - 1 ; x ++ ) if ( feld [ y - 1 ] [ x - 1 ] > feld [ y - 1 ] [ x ] ) feld [ y ] [ x ] = feld [ y ] [ x ] + feld [ y - 1 ] [ x - 1 ] ; else feld [ y ] [ x ] = feld [ y ] [ x ] + feld [ y - 1 ] [ x ] ; } max = feld [ n ] [ 1 ] ; for ( x = 2 ; x <= n ; x ++ ) if ( feld [ n ] [ x ] > max ) max = feld [ n ] [ x ] ; printf ( "%d\n" , max ) ; } return 0 ; }