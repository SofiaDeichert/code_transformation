int output , arr [ 5050 ] ; int main ( ) { int testcase , test , total_row , i , start , end , output1 [ 1000 ] ; scanf ( "%d" , & testcase ) ; end = - 1 ; for ( test = 1 ; test <= testcase ; test ++ ) { scanf ( "%d" , & total_row ) ; start = end + 1 ; end = start + total_row * ( total_row + 1 ) / 2 - 1 ; for ( i = start ; i <= end ; i ++ ) scanf ( "%d" , & arr [ i ] ) ; output = arr [ start ] ; total ( total_row , 1 , start ) ; output1 [ test - 1 ] = output ; } for ( i = 0 ; i < testcase ; i ++ ) printf ( "%d\n" , output1 [ i ] ) ; return ( 0 ) ; } int total ( int total_row , int row , int index ) { if ( row == total_row ) return ; int below , row_end ; below = row + index ; row_end = ( row * ( row + 1 ) % 2 ) - 1 ; if ( below - 1 == row_end ) index = maxof2 ( below , below + 1 ) ; else index = maxof3 ( below - 1 , below , below + 1 ) ; output += arr [ index ] ; total ( total_row , row + 1 , index ) ; } int maxof2 ( int a , int b ) { if ( arr [ a ] > arr [ b ] ) return ( a ) ; else return ( b ) ; } int maxof3 ( int a , int b , int c ) { int d = maxof2 ( a , b ) ; return ( maxof2 ( d , c ) ) ; }