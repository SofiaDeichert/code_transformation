int path ( int no [ 100 ] [ 100 ] , int row , int col , int tot ) { if ( row == tot - 1 ) return no [ row ] [ col ] ; return ( no [ row ] [ col ] + max ( path ( no , row + 1 , col , tot ) , path ( no , row + 1 , col + 1 , tot ) ) ) ; } int main ( ) { int n , i ; scanf ( "%d" , & n ) ; int ans [ n ] ; for ( i = 0 ; i < n ; i ++ ) { int k , j , lines ; scanf ( "%d" , & lines ) ; if ( lines <= 0 ) break ; int no [ 100 ] [ 100 ] ; for ( k = 0 ; k < lines ; k ++ ) { for ( j = 0 ; j <= k ; j ++ ) { scanf ( "%d" , & no [ k ] [ j ] ) ; } } ans [ i ] = path ( no , 0 , 0 , lines ) ; } for ( i = 0 ; i < n ; i ++ ) { printf ( "%d\n" , ans [ i ] ) ; } return 0 ; }