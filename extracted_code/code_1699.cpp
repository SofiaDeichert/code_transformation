int main ( ) { int i , j , k , rows , rowVal [ 101 ] , maxSum [ 101 ] , max = 0 , sumL , sumT ; scanf ( "%d" , & i ) ; for ( ; i > 0 ; i -- ) { scanf ( "%d" , & rows ) ; max = 0 ; for ( j = 1 ; j <= rows ; j ++ ) { for ( k = 0 ; k < j ; k ++ ) { scanf ( "%d" , & rowVal [ k ] ) ; } if ( j > 1 ) { rowVal [ 0 ] = rowVal [ 0 ] + maxSum [ 0 ] ; for ( k = 1 ; k < j - 1 ; k ++ ) { sumL = maxSum [ k - 1 ] + rowVal [ k ] ; sumT = maxSum [ k ] + rowVal [ k ] ; rowVal [ k ] = sumL > sumT ? sumL : sumT ; } rowVal [ k ] = rowVal [ k ] + maxSum [ k - 1 ] ; } for ( k = 0 ; k < j ; k ++ ) { maxSum [ k ] = rowVal [ k ] ; } } printf ( "" ) ; for ( j = 0 ; j < rows ; j ++ ) { max = maxSum [ j ] > max ? maxSum [ j ] : max ; } printf ( "%d\n" , max ) ; } return 0 ; }