{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 442,
  "text": "int main ( ) { int i , j , k , r , suma , sumb , sum1 = 0 , sum2 = 0 ; for ( i = 1 ; i <= 4 ; i ++ ) { suma = 0 ; sumb = 0 ; for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & k ) ; if ( j == 1 ) { suma = suma + k ; } if ( j == i ) { sumb = sumb + k ; } } sum1 = suma + sum1 ; sum2 = sumb + sum2 ; } if ( sum2 > sum1 ) printf ( \" the value of largest sum is%d\" , sum2 ) ; else printf ( \"\\n the value of largest sum is%d\" , sum1 ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 442,
      "text": "int main ( ) { int i , j , k , r , suma , sumb , sum1 = 0 , sum2 = 0 ; for ( i = 1 ; i <= 4 ; i ++ ) { suma = 0 ; sumb = 0 ; for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & k ) ; if ( j == 1 ) { suma = suma + k ; } if ( j == i ) { sumb = sumb + k ; } } sum1 = suma + sum1 ; sum2 = sumb + sum2 ; } if ( sum2 > sum1 ) printf ( \" the value of largest sum is%d\" , sum2 ) ; else printf ( \"\\n the value of largest sum is%d\" , sum1 ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 442,
          "text": "{ int i , j , k , r , suma , sumb , sum1 = 0 , sum2 = 0 ; for ( i = 1 ; i <= 4 ; i ++ ) { suma = 0 ; sumb = 0 ; for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & k ) ; if ( j == 1 ) { suma = suma + k ; } if ( j == i ) { sumb = sumb + k ; } } sum1 = suma + sum1 ; sum2 = sumb + sum2 ; } if ( sum2 > sum1 ) printf ( \" the value of largest sum is%d\" , sum2 ) ; else printf ( \"\\n the value of largest sum is%d\" , sum1 ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 70,
              "text": "int i , j , k , r , suma , sumb , sum1 = 0 , sum2 = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": "r",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 39,
                  "text": "suma",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 42,
                  "end_byte": 46,
                  "text": "sumb",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 49,
                  "end_byte": 57,
                  "text": "sum1 = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 49,
                      "end_byte": 53,
                      "text": "sum1",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 54,
                      "end_byte": 55,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 60,
                  "end_byte": 68,
                  "text": "sum2 = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 60,
                      "end_byte": 64,
                      "text": "sum2",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 71,
              "end_byte": 297,
              "text": "for ( i = 1 ; i <= 4 ; i ++ ) { suma = 0 ; sumb = 0 ; for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & k ) ; if ( j == 1 ) { suma = suma + k ; } if ( j == i ) { sumb = sumb + k ; } } sum1 = suma + sum1 ; sum2 = sumb + sum2 ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 71,
                  "end_byte": 74,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 77,
                  "end_byte": 82,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 81,
                      "end_byte": 82,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 85,
                  "end_byte": 91,
                  "text": "i <= 4",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 87,
                      "end_byte": 89,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": "4",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 94,
                  "end_byte": 98,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 96,
                      "end_byte": 98,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 101,
                  "end_byte": 297,
                  "text": "{ suma = 0 ; sumb = 0 ; for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & k ) ; if ( j == 1 ) { suma = suma + k ; } if ( j == i ) { sumb = sumb + k ; } } sum1 = suma + sum1 ; sum2 = sumb + sum2 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 103,
                      "end_byte": 113,
                      "text": "suma = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 103,
                          "end_byte": 111,
                          "text": "suma = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 103,
                              "end_byte": 107,
                              "text": "suma",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 114,
                      "end_byte": 124,
                      "text": "sumb = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 114,
                          "end_byte": 122,
                          "text": "sumb = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 114,
                              "end_byte": 118,
                              "text": "sumb",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 119,
                              "end_byte": 120,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 121,
                              "end_byte": 122,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 125,
                      "end_byte": 253,
                      "text": "for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & k ) ; if ( j == 1 ) { suma = suma + k ; } if ( j == i ) { sumb = sumb + k ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 125,
                          "end_byte": 128,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 131,
                          "end_byte": 136,
                          "text": "j = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 133,
                              "end_byte": 134,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 139,
                          "end_byte": 145,
                          "text": "j <= i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 141,
                              "end_byte": 143,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 146,
                          "end_byte": 147,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 148,
                          "end_byte": 152,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 148,
                              "end_byte": 149,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 150,
                              "end_byte": 152,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 155,
                          "end_byte": 253,
                          "text": "{ scanf ( \"%d\" , & k ) ; if ( j == 1 ) { suma = suma + k ; } if ( j == i ) { sumb = sumb + k ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 155,
                              "end_byte": 156,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 157,
                              "end_byte": 179,
                              "text": "scanf ( \"%d\" , & k ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 157,
                                  "end_byte": 177,
                                  "text": "scanf ( \"%d\" , & k )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 157,
                                      "end_byte": 162,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 163,
                                      "end_byte": 177,
                                      "text": "( \"%d\" , & k )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 163,
                                          "end_byte": 164,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 165,
                                          "end_byte": 169,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 165,
                                              "end_byte": 166,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 166,
                                              "end_byte": 168,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 168,
                                              "end_byte": 169,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 170,
                                          "end_byte": 171,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 172,
                                          "end_byte": 175,
                                          "text": "& k",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 172,
                                              "end_byte": 173,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 174,
                                              "end_byte": 175,
                                              "text": "k",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 176,
                                          "end_byte": 177,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 178,
                                  "end_byte": 179,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 180,
                              "end_byte": 215,
                              "text": "if ( j == 1 ) { suma = suma + k ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 180,
                                  "end_byte": 182,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 183,
                                  "end_byte": 193,
                                  "text": "( j == 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 185,
                                      "end_byte": 191,
                                      "text": "j == 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 185,
                                          "end_byte": 186,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 187,
                                          "end_byte": 189,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 190,
                                          "end_byte": 191,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 194,
                                  "end_byte": 215,
                                  "text": "{ suma = suma + k ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 196,
                                      "end_byte": 213,
                                      "text": "suma = suma + k ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 196,
                                          "end_byte": 211,
                                          "text": "suma = suma + k",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 196,
                                              "end_byte": 200,
                                              "text": "suma",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 201,
                                              "end_byte": 202,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 203,
                                              "end_byte": 211,
                                              "text": "suma + k",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 203,
                                                  "end_byte": 207,
                                                  "text": "suma",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 208,
                                                  "end_byte": 209,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 210,
                                                  "end_byte": 211,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 216,
                              "end_byte": 251,
                              "text": "if ( j == i ) { sumb = sumb + k ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 216,
                                  "end_byte": 218,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 219,
                                  "end_byte": 229,
                                  "text": "( j == i )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 219,
                                      "end_byte": 220,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 221,
                                      "end_byte": 227,
                                      "text": "j == i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 221,
                                          "end_byte": 222,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 223,
                                          "end_byte": 225,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 226,
                                          "end_byte": 227,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 230,
                                  "end_byte": 251,
                                  "text": "{ sumb = sumb + k ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 230,
                                      "end_byte": 231,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 232,
                                      "end_byte": 249,
                                      "text": "sumb = sumb + k ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 232,
                                          "end_byte": 247,
                                          "text": "sumb = sumb + k",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 232,
                                              "end_byte": 236,
                                              "text": "sumb",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 237,
                                              "end_byte": 238,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 239,
                                              "end_byte": 247,
                                              "text": "sumb + k",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 239,
                                                  "end_byte": 243,
                                                  "text": "sumb",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 244,
                                                  "end_byte": 245,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 246,
                                                  "end_byte": 247,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 248,
                                          "end_byte": 249,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 250,
                                      "end_byte": 251,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 252,
                              "end_byte": 253,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 254,
                      "end_byte": 274,
                      "text": "sum1 = suma + sum1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 254,
                          "end_byte": 272,
                          "text": "sum1 = suma + sum1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 254,
                              "end_byte": 258,
                              "text": "sum1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 259,
                              "end_byte": 260,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 261,
                              "end_byte": 272,
                              "text": "suma + sum1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 261,
                                  "end_byte": 265,
                                  "text": "suma",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 266,
                                  "end_byte": 267,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 268,
                                  "end_byte": 272,
                                  "text": "sum1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 273,
                          "end_byte": 274,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 275,
                      "end_byte": 295,
                      "text": "sum2 = sumb + sum2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 275,
                          "end_byte": 293,
                          "text": "sum2 = sumb + sum2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 275,
                              "end_byte": 279,
                              "text": "sum2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 280,
                              "end_byte": 281,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 282,
                              "end_byte": 293,
                              "text": "sumb + sum2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 282,
                                  "end_byte": 286,
                                  "text": "sumb",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 289,
                                  "end_byte": 293,
                                  "text": "sum2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 294,
                          "end_byte": 295,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 296,
                      "end_byte": 297,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 298,
              "end_byte": 429,
              "text": "if ( sum2 > sum1 ) printf ( \" the value of largest sum is%d\" , sum2 ) ; else printf ( \"\\n the value of largest sum is%d\" , sum1 ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 298,
                  "end_byte": 300,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 301,
                  "end_byte": 316,
                  "text": "( sum2 > sum1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 303,
                      "end_byte": 314,
                      "text": "sum2 > sum1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 303,
                          "end_byte": 307,
                          "text": "sum2",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 308,
                          "end_byte": 309,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 310,
                          "end_byte": 314,
                          "text": "sum1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 315,
                      "end_byte": 316,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 317,
                  "end_byte": 369,
                  "text": "printf ( \" the value of largest sum is%d\" , sum2 ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 317,
                      "end_byte": 367,
                      "text": "printf ( \" the value of largest sum is%d\" , sum2 )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 317,
                          "end_byte": 323,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 324,
                          "end_byte": 367,
                          "text": "( \" the value of largest sum is%d\" , sum2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 324,
                              "end_byte": 325,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 326,
                              "end_byte": 358,
                              "text": "\" the value of largest sum is%d\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 326,
                                  "end_byte": 327,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 327,
                                  "end_byte": 357,
                                  "text": " the value of largest sum is%d",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 357,
                                  "end_byte": 358,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 359,
                              "end_byte": 360,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 361,
                              "end_byte": 365,
                              "text": "sum2",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 366,
                              "end_byte": 367,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 368,
                      "end_byte": 369,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 370,
                  "end_byte": 429,
                  "text": "else printf ( \"\\n the value of largest sum is%d\" , sum1 ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 370,
                      "end_byte": 374,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 375,
                      "end_byte": 429,
                      "text": "printf ( \"\\n the value of largest sum is%d\" , sum1 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 375,
                          "end_byte": 427,
                          "text": "printf ( \"\\n the value of largest sum is%d\" , sum1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 375,
                              "end_byte": 381,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 382,
                              "end_byte": 427,
                              "text": "( \"\\n the value of largest sum is%d\" , sum1 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 382,
                                  "end_byte": 383,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 384,
                                  "end_byte": 418,
                                  "text": "\"\\n the value of largest sum is%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 384,
                                      "end_byte": 385,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 385,
                                      "end_byte": 387,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 387,
                                      "end_byte": 417,
                                      "text": " the value of largest sum is%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 417,
                                      "end_byte": 418,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 419,
                                  "end_byte": 420,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 421,
                                  "end_byte": 425,
                                  "text": "sum1",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 426,
                                  "end_byte": 427,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 428,
                          "end_byte": 429,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 430,
              "end_byte": 440,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 430,
                  "end_byte": 436,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 437,
                  "end_byte": 438,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 439,
                  "end_byte": 440,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 441,
              "end_byte": 442,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}