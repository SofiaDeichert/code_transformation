int A [ 10 ] [ 10 ] ; int max ( int x , int y ) { if ( x < y ) return y ; if ( y <= x ) return x ; } int newPath ( int n , int i , int j ) { if ( i == n ) return 0 ; else { return A [ i ] [ j ] + max ( newPath ( n , i + 1 , j + 1 ) , newPath ( n , i + 1 , j ) ) ; } } int main ( ) { int m , k , l , i , j ; scanf ( "%d" , & i ) ; for ( j = 0 ; j < i ; j ++ ) { scanf ( "%d" , & m ) ; for ( k = 0 ; k < m ; k ++ ) { for ( l = 0 ; l < k + 1 ; l ++ ) { scanf ( "%d" , & A [ k ] [ l ] ) ; } } printf ( "%d\n" , newPath ( m , 0 , 0 ) ) ; } return 0 ; }