{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 345,
  "text": "int gcd ( int m , int n ) { if ( m == 0 || n == 0 ) { return 0 ; } if ( m % n == 0 ) { return n ; } else { return gcd ( n , m % n ) ; } } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; int m , n , c , d ; for ( int i = 0 ; i < t ; i ++ ) { scanf ( \"%d %d\" , & m , & n ) ; c = gcd ( m , n ) ; d = ( m * n ) / c ; printf ( \"%d %d\\n\" , c , d ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 137,
      "text": "int gcd ( int m , int n ) { if ( m == 0 || n == 0 ) { return 0 ; } if ( m % n == 0 ) { return n ; } else { return gcd ( n , m % n ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "gcd ( int m , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int m , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 137,
          "text": "{ if ( m == 0 || n == 0 ) { return 0 ; } if ( m % n == 0 ) { return n ; } else { return gcd ( n , m % n ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 28,
              "end_byte": 66,
              "text": "if ( m == 0 || n == 0 ) { return 0 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 28,
                  "end_byte": 30,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 31,
                  "end_byte": 51,
                  "text": "( m == 0 || n == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 33,
                      "end_byte": 49,
                      "text": "m == 0 || n == 0",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 33,
                          "end_byte": 39,
                          "text": "m == 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 33,
                              "end_byte": 34,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": "==",
                              "start_byte": 35,
                              "end_byte": 37,
                              "text": "==",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 38,
                              "end_byte": 39,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start_byte": 40,
                          "end_byte": 42,
                          "text": "||",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 43,
                          "end_byte": 49,
                          "text": "n == 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 43,
                              "end_byte": 44,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "==",
                              "start_byte": 45,
                              "end_byte": 47,
                              "text": "==",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 48,
                              "end_byte": 49,
                              "text": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 52,
                  "end_byte": 66,
                  "text": "{ return 0 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 52,
                      "end_byte": 53,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 54,
                      "end_byte": 64,
                      "text": "return 0 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 54,
                          "end_byte": 60,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 61,
                          "end_byte": 62,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 67,
              "end_byte": 135,
              "text": "if ( m % n == 0 ) { return n ; } else { return gcd ( n , m % n ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 67,
                  "end_byte": 69,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 70,
                  "end_byte": 84,
                  "text": "( m % n == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 70,
                      "end_byte": 71,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 72,
                      "end_byte": 82,
                      "text": "m % n == 0",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 72,
                          "end_byte": 77,
                          "text": "m % n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 72,
                              "end_byte": 73,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": "%",
                              "start_byte": 74,
                              "end_byte": 75,
                              "text": "%",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 76,
                              "end_byte": 77,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start_byte": 78,
                          "end_byte": 80,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 85,
                  "end_byte": 99,
                  "text": "{ return n ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 87,
                      "end_byte": 97,
                      "text": "return n ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 87,
                          "end_byte": 93,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 100,
                  "end_byte": 135,
                  "text": "else { return gcd ( n , m % n ) ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 100,
                      "end_byte": 104,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 105,
                      "end_byte": 135,
                      "text": "{ return gcd ( n , m % n ) ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 105,
                          "end_byte": 106,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 107,
                          "end_byte": 133,
                          "text": "return gcd ( n , m % n ) ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 107,
                              "end_byte": 113,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 114,
                              "end_byte": 131,
                              "text": "gcd ( n , m % n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 114,
                                  "end_byte": 117,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 118,
                                  "end_byte": 131,
                                  "text": "( n , m % n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 118,
                                      "end_byte": 119,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 120,
                                      "end_byte": 121,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 122,
                                      "end_byte": 123,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 124,
                                      "end_byte": 129,
                                      "text": "m % n",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 124,
                                          "end_byte": 125,
                                          "text": "m",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 126,
                                          "end_byte": 127,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 128,
                                          "end_byte": 129,
                                          "text": "n",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 132,
                              "end_byte": 133,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 134,
                          "end_byte": 135,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 136,
              "end_byte": 137,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 138,
      "end_byte": 345,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; int m , n , c , d ; for ( int i = 0 ; i < t ; i ++ ) { scanf ( \"%d %d\" , & m , & n ) ; c = gcd ( m , n ) ; d = ( m * n ) / c ; printf ( \"%d %d\\n\" , c , d ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 138,
          "end_byte": 141,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 142,
          "end_byte": 150,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 142,
              "end_byte": 146,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 147,
              "end_byte": 150,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 147,
                  "end_byte": 148,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 149,
                  "end_byte": 150,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 151,
          "end_byte": 345,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; int m , n , c , d ; for ( int i = 0 ; i < t ; i ++ ) { scanf ( \"%d %d\" , & m , & n ) ; c = gcd ( m , n ) ; d = ( m * n ) / c ; printf ( \"%d %d\\n\" , c , d ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 151,
              "end_byte": 152,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 153,
              "end_byte": 160,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 153,
                  "end_byte": 156,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 157,
                  "end_byte": 158,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 159,
                  "end_byte": 160,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 161,
              "end_byte": 183,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 161,
                  "end_byte": 181,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 161,
                      "end_byte": 166,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 167,
                      "end_byte": 181,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 167,
                          "end_byte": 168,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 169,
                          "end_byte": 173,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 169,
                              "end_byte": 170,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 170,
                              "end_byte": 172,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 174,
                          "end_byte": 175,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 176,
                          "end_byte": 179,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 178,
                              "end_byte": 179,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 180,
                          "end_byte": 181,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 182,
                  "end_byte": 183,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 184,
              "end_byte": 203,
              "text": "int m , n , c , d ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 184,
                  "end_byte": 187,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 188,
                  "end_byte": 189,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 190,
                  "end_byte": 191,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 192,
                  "end_byte": 193,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 194,
                  "end_byte": 195,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 196,
                  "end_byte": 197,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 198,
                  "end_byte": 199,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 200,
                  "end_byte": 201,
                  "text": "d",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 202,
                  "end_byte": 203,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 204,
              "end_byte": 343,
              "text": "for ( int i = 0 ; i < t ; i ++ ) { scanf ( \"%d %d\" , & m , & n ) ; c = gcd ( m , n ) ; d = ( m * n ) / c ; printf ( \"%d %d\\n\" , c , d ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 204,
                  "end_byte": 207,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 208,
                  "end_byte": 209,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "declaration",
                  "start_byte": 210,
                  "end_byte": 221,
                  "text": "int i = 0 ;",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 210,
                      "end_byte": 213,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "init_declarator",
                      "start_byte": 214,
                      "end_byte": 219,
                      "text": "i = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 214,
                          "end_byte": 215,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 216,
                          "end_byte": 217,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 218,
                          "end_byte": 219,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "binary_expression",
                  "start_byte": 222,
                  "end_byte": 227,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 222,
                      "end_byte": 223,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 224,
                      "end_byte": 225,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 228,
                  "end_byte": 229,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 230,
                  "end_byte": 234,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 230,
                      "end_byte": 231,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 232,
                      "end_byte": 234,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 235,
                  "end_byte": 236,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 237,
                  "end_byte": 343,
                  "text": "{ scanf ( \"%d %d\" , & m , & n ) ; c = gcd ( m , n ) ; d = ( m * n ) / c ; printf ( \"%d %d\\n\" , c , d ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 237,
                      "end_byte": 238,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 239,
                      "end_byte": 270,
                      "text": "scanf ( \"%d %d\" , & m , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 239,
                          "end_byte": 268,
                          "text": "scanf ( \"%d %d\" , & m , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 239,
                              "end_byte": 244,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 245,
                              "end_byte": 268,
                              "text": "( \"%d %d\" , & m , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 245,
                                  "end_byte": 246,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 247,
                                  "end_byte": 254,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 247,
                                      "end_byte": 248,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 248,
                                      "end_byte": 253,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 253,
                                      "end_byte": 254,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 255,
                                  "end_byte": 256,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 257,
                                  "end_byte": 260,
                                  "text": "& m",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 257,
                                      "end_byte": 258,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 259,
                                      "end_byte": 260,
                                      "text": "m",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 261,
                                  "end_byte": 262,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 263,
                                  "end_byte": 266,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 267,
                                  "end_byte": 268,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 269,
                          "end_byte": 270,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 271,
                      "end_byte": 290,
                      "text": "c = gcd ( m , n ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 271,
                          "end_byte": 288,
                          "text": "c = gcd ( m , n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 273,
                              "end_byte": 274,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 275,
                              "end_byte": 288,
                              "text": "gcd ( m , n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 275,
                                  "end_byte": 278,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 279,
                                  "end_byte": 288,
                                  "text": "( m , n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 281,
                                      "end_byte": 282,
                                      "text": "m",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 287,
                                      "end_byte": 288,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 289,
                          "end_byte": 290,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 291,
                      "end_byte": 310,
                      "text": "d = ( m * n ) / c ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 291,
                          "end_byte": 308,
                          "text": "d = ( m * n ) / c",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 291,
                              "end_byte": 292,
                              "text": "d",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 293,
                              "end_byte": 294,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 295,
                              "end_byte": 308,
                              "text": "( m * n ) / c",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 295,
                                  "end_byte": 304,
                                  "text": "( m * n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 295,
                                      "end_byte": 296,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 297,
                                      "end_byte": 302,
                                      "text": "m * n",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 297,
                                          "end_byte": 298,
                                          "text": "m",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 299,
                                          "end_byte": 300,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 301,
                                          "end_byte": 302,
                                          "text": "n",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 303,
                                      "end_byte": 304,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": "c",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 309,
                          "end_byte": 310,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 311,
                      "end_byte": 341,
                      "text": "printf ( \"%d %d\\n\" , c , d ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 311,
                          "end_byte": 339,
                          "text": "printf ( \"%d %d\\n\" , c , d )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 311,
                              "end_byte": 317,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 318,
                              "end_byte": 339,
                              "text": "( \"%d %d\\n\" , c , d )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 318,
                                  "end_byte": 319,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 320,
                                  "end_byte": 329,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 321,
                                      "end_byte": 326,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 326,
                                      "end_byte": 328,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 328,
                                      "end_byte": 329,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 330,
                                  "end_byte": 331,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 332,
                                  "end_byte": 333,
                                  "text": "c",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 334,
                                  "end_byte": 335,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 336,
                                  "end_byte": 337,
                                  "text": "d",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 338,
                                  "end_byte": 339,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 340,
                          "end_byte": 341,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 342,
                      "end_byte": 343,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 344,
              "end_byte": 345,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}