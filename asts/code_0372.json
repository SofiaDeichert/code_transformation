{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 361,
  "text": "void main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , minmultiple , lcm ; scanf ( \"%d %d\" , & n1 , & n2 ) ; minmultiple = ( n1 > n2 ) ? n1 : n2 ; while ( 1 ) { if ( minmultiple % n1 == 0 && minmultiple % n2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } int gcd ; gcd = ( n1 * n2 ) / lcm ; printf ( \"%d %d\" , gcd , lcm ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 361,
      "text": "void main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , minmultiple , lcm ; scanf ( \"%d %d\" , & n1 , & n2 ) ; minmultiple = ( n1 > n2 ) ? n1 : n2 ; while ( 1 ) { if ( minmultiple % n1 == 0 && minmultiple % n2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } int gcd ; gcd = ( n1 * n2 ) / lcm ; printf ( \"%d %d\" , gcd , lcm ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 361,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , minmultiple , lcm ; scanf ( \"%d %d\" , & n1 , & n2 ) ; minmultiple = ( n1 > n2 ) ? n1 : n2 ; while ( 1 ) { if ( minmultiple % n1 == 0 && minmultiple % n2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } int gcd ; gcd = ( n1 * n2 ) / lcm ; printf ( \"%d %d\" , gcd , lcm ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 23,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 24,
              "end_byte": 46,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 24,
                  "end_byte": 44,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 24,
                      "end_byte": 29,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 30,
                      "end_byte": 44,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 30,
                          "end_byte": 31,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 32,
                          "end_byte": 36,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 32,
                              "end_byte": 33,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 33,
                              "end_byte": 35,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 35,
                              "end_byte": 36,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 37,
                          "end_byte": 38,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 39,
                          "end_byte": 42,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 39,
                              "end_byte": 40,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 41,
                              "end_byte": 42,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 43,
                          "end_byte": 44,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 47,
              "end_byte": 359,
              "text": "while ( t -- ) { int n1 , n2 , minmultiple , lcm ; scanf ( \"%d %d\" , & n1 , & n2 ) ; minmultiple = ( n1 > n2 ) ? n1 : n2 ; while ( 1 ) { if ( minmultiple % n1 == 0 && minmultiple % n2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } int gcd ; gcd = ( n1 * n2 ) / lcm ; printf ( \"%d %d\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 47,
                  "end_byte": 52,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 53,
                  "end_byte": 61,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 53,
                      "end_byte": 54,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 55,
                      "end_byte": 59,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 55,
                          "end_byte": 56,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 57,
                          "end_byte": 59,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 62,
                  "end_byte": 359,
                  "text": "{ int n1 , n2 , minmultiple , lcm ; scanf ( \"%d %d\" , & n1 , & n2 ) ; minmultiple = ( n1 > n2 ) ? n1 : n2 ; while ( 1 ) { if ( minmultiple % n1 == 0 && minmultiple % n2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; } int gcd ; gcd = ( n1 * n2 ) / lcm ; printf ( \"%d %d\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 62,
                      "end_byte": 63,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 64,
                      "end_byte": 97,
                      "text": "int n1 , n2 , minmultiple , lcm ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 64,
                          "end_byte": 67,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 68,
                          "end_byte": 70,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 71,
                          "end_byte": 72,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 73,
                          "end_byte": 75,
                          "text": "n2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 76,
                          "end_byte": 77,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 78,
                          "end_byte": 89,
                          "text": "minmultiple",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 92,
                          "end_byte": 95,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 98,
                      "end_byte": 131,
                      "text": "scanf ( \"%d %d\" , & n1 , & n2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 98,
                          "end_byte": 129,
                          "text": "scanf ( \"%d %d\" , & n1 , & n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 98,
                              "end_byte": 103,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 104,
                              "end_byte": 129,
                              "text": "( \"%d %d\" , & n1 , & n2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 104,
                                  "end_byte": 105,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 106,
                                  "end_byte": 113,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 106,
                                      "end_byte": 107,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 107,
                                      "end_byte": 112,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 112,
                                      "end_byte": 113,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 114,
                                  "end_byte": 115,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 116,
                                  "end_byte": 120,
                                  "text": "& n1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 116,
                                      "end_byte": 117,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 118,
                                      "end_byte": 120,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 121,
                                  "end_byte": 122,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 123,
                                  "end_byte": 127,
                                  "text": "& n2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 123,
                                      "end_byte": 124,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 125,
                                      "end_byte": 127,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 128,
                                  "end_byte": 129,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 130,
                          "end_byte": 131,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 132,
                      "end_byte": 169,
                      "text": "minmultiple = ( n1 > n2 ) ? n1 : n2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 132,
                          "end_byte": 167,
                          "text": "minmultiple = ( n1 > n2 ) ? n1 : n2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 132,
                              "end_byte": 143,
                              "text": "minmultiple",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "conditional_expression",
                              "start_byte": 146,
                              "end_byte": 167,
                              "text": "( n1 > n2 ) ? n1 : n2",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 146,
                                  "end_byte": 157,
                                  "text": "( n1 > n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 148,
                                      "end_byte": 155,
                                      "text": "n1 > n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 148,
                                          "end_byte": 150,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 151,
                                          "end_byte": 152,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 153,
                                          "end_byte": 155,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 156,
                                      "end_byte": 157,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "?",
                                  "start_byte": 158,
                                  "end_byte": 159,
                                  "text": "?",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 160,
                                  "end_byte": 162,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ":",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": ":",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 165,
                                  "end_byte": 167,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 168,
                          "end_byte": 169,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 170,
                      "end_byte": 288,
                      "text": "while ( 1 ) { if ( minmultiple % n1 == 0 && minmultiple % n2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 170,
                          "end_byte": 175,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 176,
                          "end_byte": 181,
                          "text": "( 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 178,
                              "end_byte": 179,
                              "text": "1",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 182,
                          "end_byte": 288,
                          "text": "{ if ( minmultiple % n1 == 0 && minmultiple % n2 == 0 ) { lcm = minmultiple ; break ; } ++ minmultiple ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 184,
                              "end_byte": 269,
                              "text": "if ( minmultiple % n1 == 0 && minmultiple % n2 == 0 ) { lcm = minmultiple ; break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 184,
                                  "end_byte": 186,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 187,
                                  "end_byte": 237,
                                  "text": "( minmultiple % n1 == 0 && minmultiple % n2 == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 189,
                                      "end_byte": 235,
                                      "text": "minmultiple % n1 == 0 && minmultiple % n2 == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 189,
                                          "end_byte": 210,
                                          "text": "minmultiple % n1 == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 189,
                                              "end_byte": 205,
                                              "text": "minmultiple % n1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 189,
                                                  "end_byte": 200,
                                                  "text": "minmultiple",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 201,
                                                  "end_byte": 202,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 203,
                                                  "end_byte": 205,
                                                  "text": "n1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 206,
                                              "end_byte": 208,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 209,
                                              "end_byte": 210,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 211,
                                          "end_byte": 213,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 214,
                                          "end_byte": 235,
                                          "text": "minmultiple % n2 == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 214,
                                              "end_byte": 230,
                                              "text": "minmultiple % n2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 214,
                                                  "end_byte": 225,
                                                  "text": "minmultiple",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 226,
                                                  "end_byte": 227,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 228,
                                                  "end_byte": 230,
                                                  "text": "n2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 231,
                                              "end_byte": 233,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 234,
                                              "end_byte": 235,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 236,
                                      "end_byte": 237,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 238,
                                  "end_byte": 269,
                                  "text": "{ lcm = minmultiple ; break ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 238,
                                      "end_byte": 239,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 240,
                                      "end_byte": 259,
                                      "text": "lcm = minmultiple ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 240,
                                          "end_byte": 257,
                                          "text": "lcm = minmultiple",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 240,
                                              "end_byte": 243,
                                              "text": "lcm",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 244,
                                              "end_byte": 245,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 246,
                                              "end_byte": 257,
                                              "text": "minmultiple",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 258,
                                          "end_byte": 259,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "break_statement",
                                      "start_byte": 260,
                                      "end_byte": 267,
                                      "text": "break ;",
                                      "children": [
                                        {
                                          "type": "break",
                                          "start_byte": 260,
                                          "end_byte": 265,
                                          "text": "break",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 266,
                                          "end_byte": 267,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 268,
                                      "end_byte": 269,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 270,
                              "end_byte": 286,
                              "text": "++ minmultiple ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 270,
                                  "end_byte": 284,
                                  "text": "++ minmultiple",
                                  "children": [
                                    {
                                      "type": "++",
                                      "start_byte": 270,
                                      "end_byte": 272,
                                      "text": "++",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 273,
                                      "end_byte": 284,
                                      "text": "minmultiple",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 285,
                                  "end_byte": 286,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 287,
                              "end_byte": 288,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 289,
                      "end_byte": 298,
                      "text": "int gcd ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 289,
                          "end_byte": 292,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 293,
                          "end_byte": 296,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 299,
                      "end_byte": 324,
                      "text": "gcd = ( n1 * n2 ) / lcm ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 299,
                          "end_byte": 322,
                          "text": "gcd = ( n1 * n2 ) / lcm",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 299,
                              "end_byte": 302,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 303,
                              "end_byte": 304,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 305,
                              "end_byte": 322,
                              "text": "( n1 * n2 ) / lcm",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 305,
                                  "end_byte": 316,
                                  "text": "( n1 * n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 305,
                                      "end_byte": 306,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 307,
                                      "end_byte": 314,
                                      "text": "n1 * n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 307,
                                          "end_byte": 309,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 310,
                                          "end_byte": 311,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 312,
                                          "end_byte": 314,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 315,
                                      "end_byte": 316,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 317,
                                  "end_byte": 318,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 319,
                                  "end_byte": 322,
                                  "text": "lcm",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 325,
                      "end_byte": 357,
                      "text": "printf ( \"%d %d\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 325,
                          "end_byte": 355,
                          "text": "printf ( \"%d %d\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 331,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 332,
                              "end_byte": 355,
                              "text": "( \"%d %d\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 332,
                                  "end_byte": 333,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 334,
                                  "end_byte": 341,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 334,
                                      "end_byte": 335,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 335,
                                      "end_byte": 340,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 340,
                                      "end_byte": 341,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 342,
                                  "end_byte": 343,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 344,
                                  "end_byte": 347,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 348,
                                  "end_byte": 349,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 350,
                                  "end_byte": 353,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 354,
                                  "end_byte": 355,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 358,
                      "end_byte": 359,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 360,
              "end_byte": 361,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}