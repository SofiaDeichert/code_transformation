{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 436,
  "text": "int gcd ( int num1 , int num2 ) { int rem ; rem = num1 % num2 ; while ( rem != 0 ) { num1 = num2 ; num2 = rem ; rem = num1 % num2 ; } return num2 ; } int lcm ( int num1 , int num2 ) { int n = gcd ( num1 , num2 ) ; return num1 * num2 / n ; } int main ( ) { int t , num1 , num2 ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; printf ( \"%d %d\\n\" , gcd ( num1 , num2 ) , lcm ( num1 , num2 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 149,
      "text": "int gcd ( int num1 , int num2 ) { int rem ; rem = num1 % num2 ; while ( rem != 0 ) { num1 = num2 ; num2 = rem ; rem = num1 % num2 ; } return num2 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 31,
          "text": "gcd ( int num1 , int num2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 31,
              "text": "( int num1 , int num2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 18,
                  "text": "int num1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 18,
                      "text": "num1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 21,
                  "end_byte": 29,
                  "text": "int num2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 21,
                      "end_byte": 24,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 25,
                      "end_byte": 29,
                      "text": "num2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 32,
          "end_byte": 149,
          "text": "{ int rem ; rem = num1 % num2 ; while ( rem != 0 ) { num1 = num2 ; num2 = rem ; rem = num1 % num2 ; } return num2 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 32,
              "end_byte": 33,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 34,
              "end_byte": 43,
              "text": "int rem ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 41,
                  "text": "rem",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 44,
              "end_byte": 63,
              "text": "rem = num1 % num2 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 44,
                  "end_byte": 61,
                  "text": "rem = num1 % num2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 44,
                      "end_byte": 47,
                      "text": "rem",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 48,
                      "end_byte": 49,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 50,
                      "end_byte": 61,
                      "text": "num1 % num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 50,
                          "end_byte": 54,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": "%",
                          "start_byte": 55,
                          "end_byte": 56,
                          "text": "%",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 57,
                          "end_byte": 61,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 64,
              "end_byte": 133,
              "text": "while ( rem != 0 ) { num1 = num2 ; num2 = rem ; rem = num1 % num2 ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 64,
                  "end_byte": 69,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 70,
                  "end_byte": 82,
                  "text": "( rem != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 70,
                      "end_byte": 71,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 72,
                      "end_byte": 80,
                      "text": "rem != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 72,
                          "end_byte": 75,
                          "text": "rem",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 76,
                          "end_byte": 78,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 81,
                      "end_byte": 82,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 83,
                  "end_byte": 133,
                  "text": "{ num1 = num2 ; num2 = rem ; rem = num1 % num2 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 85,
                      "end_byte": 98,
                      "text": "num1 = num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 85,
                          "end_byte": 96,
                          "text": "num1 = num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 85,
                              "end_byte": 89,
                              "text": "num1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 90,
                              "end_byte": 91,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 92,
                              "end_byte": 96,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 99,
                      "end_byte": 111,
                      "text": "num2 = rem ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 99,
                          "end_byte": 109,
                          "text": "num2 = rem",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 99,
                              "end_byte": 103,
                              "text": "num2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 106,
                              "end_byte": 109,
                              "text": "rem",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 110,
                          "end_byte": 111,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 112,
                      "end_byte": 131,
                      "text": "rem = num1 % num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 112,
                          "end_byte": 129,
                          "text": "rem = num1 % num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 112,
                              "end_byte": 115,
                              "text": "rem",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 118,
                              "end_byte": 129,
                              "text": "num1 % num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 118,
                                  "end_byte": 122,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 123,
                                  "end_byte": 124,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 125,
                                  "end_byte": 129,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 130,
                          "end_byte": 131,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 134,
              "end_byte": 147,
              "text": "return num2 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 134,
                  "end_byte": 140,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 141,
                  "end_byte": 145,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 146,
                  "end_byte": 147,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 148,
              "end_byte": 149,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 150,
      "end_byte": 240,
      "text": "int lcm ( int num1 , int num2 ) { int n = gcd ( num1 , num2 ) ; return num1 * num2 / n ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 150,
          "end_byte": 153,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 154,
          "end_byte": 181,
          "text": "lcm ( int num1 , int num2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 154,
              "end_byte": 157,
              "text": "lcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 158,
              "end_byte": 181,
              "text": "( int num1 , int num2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 158,
                  "end_byte": 159,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 160,
                  "end_byte": 168,
                  "text": "int num1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 160,
                      "end_byte": 163,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 164,
                      "end_byte": 168,
                      "text": "num1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 169,
                  "end_byte": 170,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 171,
                  "end_byte": 179,
                  "text": "int num2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 171,
                      "end_byte": 174,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 175,
                      "end_byte": 179,
                      "text": "num2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 182,
          "end_byte": 240,
          "text": "{ int n = gcd ( num1 , num2 ) ; return num1 * num2 / n ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 182,
              "end_byte": 183,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 184,
              "end_byte": 213,
              "text": "int n = gcd ( num1 , num2 ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 184,
                  "end_byte": 187,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 188,
                  "end_byte": 211,
                  "text": "n = gcd ( num1 , num2 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 188,
                      "end_byte": 189,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 190,
                      "end_byte": 191,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 192,
                      "end_byte": 211,
                      "text": "gcd ( num1 , num2 )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 192,
                          "end_byte": 195,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 196,
                          "end_byte": 211,
                          "text": "( num1 , num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 196,
                              "end_byte": 197,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 198,
                              "end_byte": 202,
                              "text": "num1",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 203,
                              "end_byte": 204,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 205,
                              "end_byte": 209,
                              "text": "num2",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 210,
                              "end_byte": 211,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 212,
                  "end_byte": 213,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 214,
              "end_byte": 238,
              "text": "return num1 * num2 / n ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 214,
                  "end_byte": 220,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 221,
                  "end_byte": 236,
                  "text": "num1 * num2 / n",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 221,
                      "end_byte": 232,
                      "text": "num1 * num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 221,
                          "end_byte": 225,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": "*",
                          "start_byte": 226,
                          "end_byte": 227,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 228,
                          "end_byte": 232,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "/",
                      "start_byte": 233,
                      "end_byte": 234,
                      "text": "/",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 235,
                      "end_byte": 236,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 237,
                  "end_byte": 238,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 239,
              "end_byte": 240,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 241,
      "end_byte": 436,
      "text": "int main ( ) { int t , num1 , num2 ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; printf ( \"%d %d\\n\" , gcd ( num1 , num2 ) , lcm ( num1 , num2 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 241,
          "end_byte": 244,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 245,
          "end_byte": 253,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 245,
              "end_byte": 249,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 250,
              "end_byte": 253,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 250,
                  "end_byte": 251,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 252,
                  "end_byte": 253,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 254,
          "end_byte": 436,
          "text": "{ int t , num1 , num2 ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; printf ( \"%d %d\\n\" , gcd ( num1 , num2 ) , lcm ( num1 , num2 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 254,
              "end_byte": 255,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 256,
              "end_byte": 277,
              "text": "int t , num1 , num2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 256,
                  "end_byte": 259,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 260,
                  "end_byte": 261,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 262,
                  "end_byte": 263,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 264,
                  "end_byte": 268,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 269,
                  "end_byte": 270,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 271,
                  "end_byte": 275,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 276,
                  "end_byte": 277,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 278,
              "end_byte": 300,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 278,
                  "end_byte": 298,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 278,
                      "end_byte": 283,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 284,
                      "end_byte": 298,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 284,
                          "end_byte": 285,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 286,
                          "end_byte": 290,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 286,
                              "end_byte": 287,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 287,
                              "end_byte": 289,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 289,
                              "end_byte": 290,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 291,
                          "end_byte": 292,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 293,
                          "end_byte": 296,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 293,
                              "end_byte": 294,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 297,
                          "end_byte": 298,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 299,
                  "end_byte": 300,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 301,
              "end_byte": 423,
              "text": "while ( t -- ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; printf ( \"%d %d\\n\" , gcd ( num1 , num2 ) , lcm ( num1 , num2 ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 301,
                  "end_byte": 306,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 307,
                  "end_byte": 315,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 307,
                      "end_byte": 308,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 309,
                      "end_byte": 313,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 309,
                          "end_byte": 310,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 311,
                          "end_byte": 313,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 314,
                      "end_byte": 315,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 316,
                  "end_byte": 423,
                  "text": "{ scanf ( \"%d%d\" , & num1 , & num2 ) ; printf ( \"%d %d\\n\" , gcd ( num1 , num2 ) , lcm ( num1 , num2 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 316,
                      "end_byte": 317,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 318,
                      "end_byte": 354,
                      "text": "scanf ( \"%d%d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 318,
                          "end_byte": 352,
                          "text": "scanf ( \"%d%d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 318,
                              "end_byte": 323,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 324,
                              "end_byte": 352,
                              "text": "( \"%d%d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 324,
                                  "end_byte": 325,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 326,
                                  "end_byte": 332,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 327,
                                      "end_byte": 331,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 331,
                                      "end_byte": 332,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 333,
                                  "end_byte": 334,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 335,
                                  "end_byte": 341,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 335,
                                      "end_byte": 336,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 337,
                                      "end_byte": 341,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 342,
                                  "end_byte": 343,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 344,
                                  "end_byte": 350,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 344,
                                      "end_byte": 345,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 346,
                                      "end_byte": 350,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 351,
                                  "end_byte": 352,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 355,
                      "end_byte": 421,
                      "text": "printf ( \"%d %d\\n\" , gcd ( num1 , num2 ) , lcm ( num1 , num2 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 355,
                          "end_byte": 419,
                          "text": "printf ( \"%d %d\\n\" , gcd ( num1 , num2 ) , lcm ( num1 , num2 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 355,
                              "end_byte": 361,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 362,
                              "end_byte": 419,
                              "text": "( \"%d %d\\n\" , gcd ( num1 , num2 ) , lcm ( num1 , num2 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 362,
                                  "end_byte": 363,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 364,
                                  "end_byte": 373,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 364,
                                      "end_byte": 365,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 365,
                                      "end_byte": 370,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 370,
                                      "end_byte": 372,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 372,
                                      "end_byte": 373,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 374,
                                  "end_byte": 375,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 376,
                                  "end_byte": 395,
                                  "text": "gcd ( num1 , num2 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 376,
                                      "end_byte": 379,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 380,
                                      "end_byte": 395,
                                      "text": "( num1 , num2 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 380,
                                          "end_byte": 381,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 382,
                                          "end_byte": 386,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 387,
                                          "end_byte": 388,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 389,
                                          "end_byte": 393,
                                          "text": "num2",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 394,
                                          "end_byte": 395,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 396,
                                  "end_byte": 397,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 398,
                                  "end_byte": 417,
                                  "text": "lcm ( num1 , num2 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 398,
                                      "end_byte": 401,
                                      "text": "lcm",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 402,
                                      "end_byte": 417,
                                      "text": "( num1 , num2 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 402,
                                          "end_byte": 403,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 404,
                                          "end_byte": 408,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 409,
                                          "end_byte": 410,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 411,
                                          "end_byte": 415,
                                          "text": "num2",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 416,
                                          "end_byte": 417,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 418,
                                  "end_byte": 419,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 420,
                          "end_byte": 421,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 422,
                      "end_byte": 423,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 424,
              "end_byte": 434,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 424,
                  "end_byte": 430,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 431,
                  "end_byte": 432,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 433,
                  "end_byte": 434,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 435,
              "end_byte": 436,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}