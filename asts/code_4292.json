{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 398,
  "text": "void main ( ) { int min , max , i , gcd , lcm , j , tmp ; printf ( \"enter two numbers\" ) ; scanf ( \"%u%u\" , & min , & max ) ; if ( min > max ) { tmp = min ; min = max ; max = tmp ; } for ( i = min ; i >= 1 ; i -- ) { if ( ( min % i == 0 ) && ( max % i == 0 ) ) { break ; } } for ( j = 1 ; j <= max ; j ++ ) { lcm = min * j ; if ( lcm % max == 0 ) break ; } printf ( \"lcm=%u\\ngcd=%u\" , lcm , i ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 398,
      "text": "void main ( ) { int min , max , i , gcd , lcm , j , tmp ; printf ( \"enter two numbers\" ) ; scanf ( \"%u%u\" , & min , & max ) ; if ( min > max ) { tmp = min ; min = max ; max = tmp ; } for ( i = min ; i >= 1 ; i -- ) { if ( ( min % i == 0 ) && ( max % i == 0 ) ) { break ; } } for ( j = 1 ; j <= max ; j ++ ) { lcm = min * j ; if ( lcm % max == 0 ) break ; } printf ( \"lcm=%u\\ngcd=%u\" , lcm , i ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 398,
          "text": "{ int min , max , i , gcd , lcm , j , tmp ; printf ( \"enter two numbers\" ) ; scanf ( \"%u%u\" , & min , & max ) ; if ( min > max ) { tmp = min ; min = max ; max = tmp ; } for ( i = min ; i >= 1 ; i -- ) { if ( ( min % i == 0 ) && ( max % i == 0 ) ) { break ; } } for ( j = 1 ; j <= max ; j ++ ) { lcm = min * j ; if ( lcm % max == 0 ) break ; } printf ( \"lcm=%u\\ngcd=%u\" , lcm , i ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 57,
              "text": "int min , max , i , gcd , lcm , j , tmp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 23,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 26,
                  "end_byte": 29,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 39,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 42,
                  "end_byte": 45,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 52,
                  "end_byte": 55,
                  "text": "tmp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 58,
              "end_byte": 90,
              "text": "printf ( \"enter two numbers\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 58,
                  "end_byte": 88,
                  "text": "printf ( \"enter two numbers\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 58,
                      "end_byte": 64,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 65,
                      "end_byte": 88,
                      "text": "( \"enter two numbers\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 65,
                          "end_byte": 66,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 67,
                          "end_byte": 86,
                          "text": "\"enter two numbers\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 67,
                              "end_byte": 68,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 68,
                              "end_byte": 85,
                              "text": "enter two numbers",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 85,
                              "end_byte": 86,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 89,
                  "end_byte": 90,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 91,
              "end_byte": 125,
              "text": "scanf ( \"%u%u\" , & min , & max ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 91,
                  "end_byte": 123,
                  "text": "scanf ( \"%u%u\" , & min , & max )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 91,
                      "end_byte": 96,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 97,
                      "end_byte": 123,
                      "text": "( \"%u%u\" , & min , & max )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 99,
                          "end_byte": 105,
                          "text": "\"%u%u\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 99,
                              "end_byte": 100,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 100,
                              "end_byte": 104,
                              "text": "%u%u",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 106,
                          "end_byte": 107,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 108,
                          "end_byte": 113,
                          "text": "& min",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 110,
                              "end_byte": 113,
                              "text": "min",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 116,
                          "end_byte": 121,
                          "text": "& max",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 118,
                              "end_byte": 121,
                              "text": "max",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 124,
                  "end_byte": 125,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 126,
              "end_byte": 182,
              "text": "if ( min > max ) { tmp = min ; min = max ; max = tmp ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 126,
                  "end_byte": 128,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 129,
                  "end_byte": 142,
                  "text": "( min > max )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 131,
                      "end_byte": 140,
                      "text": "min > max",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 131,
                          "end_byte": 134,
                          "text": "min",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 135,
                          "end_byte": 136,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 137,
                          "end_byte": 140,
                          "text": "max",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 141,
                      "end_byte": 142,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 143,
                  "end_byte": 182,
                  "text": "{ tmp = min ; min = max ; max = tmp ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 143,
                      "end_byte": 144,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 145,
                      "end_byte": 156,
                      "text": "tmp = min ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 145,
                          "end_byte": 154,
                          "text": "tmp = min",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 145,
                              "end_byte": 148,
                              "text": "tmp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 154,
                              "text": "min",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 155,
                          "end_byte": 156,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 157,
                      "end_byte": 168,
                      "text": "min = max ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 157,
                          "end_byte": 166,
                          "text": "min = max",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 157,
                              "end_byte": 160,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 161,
                              "end_byte": 162,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 163,
                              "end_byte": 166,
                              "text": "max",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 167,
                          "end_byte": 168,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 169,
                      "end_byte": 180,
                      "text": "max = tmp ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 169,
                          "end_byte": 178,
                          "text": "max = tmp",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 169,
                              "end_byte": 172,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 173,
                              "end_byte": 174,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 175,
                              "end_byte": 178,
                              "text": "tmp",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 179,
                          "end_byte": 180,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 181,
                      "end_byte": 182,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 183,
              "end_byte": 274,
              "text": "for ( i = min ; i >= 1 ; i -- ) { if ( ( min % i == 0 ) && ( max % i == 0 ) ) { break ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 183,
                  "end_byte": 186,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 187,
                  "end_byte": 188,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 189,
                  "end_byte": 196,
                  "text": "i = min",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 189,
                      "end_byte": 190,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 191,
                      "end_byte": 192,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 193,
                      "end_byte": 196,
                      "text": "min",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 197,
                  "end_byte": 198,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 199,
                  "end_byte": 205,
                  "text": "i >= 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 199,
                      "end_byte": 200,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 201,
                      "end_byte": 203,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 204,
                      "end_byte": 205,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 206,
                  "end_byte": 207,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 208,
                  "end_byte": 212,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 208,
                      "end_byte": 209,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 210,
                      "end_byte": 212,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 213,
                  "end_byte": 214,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 215,
                  "end_byte": 274,
                  "text": "{ if ( ( min % i == 0 ) && ( max % i == 0 ) ) { break ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 215,
                      "end_byte": 216,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 217,
                      "end_byte": 272,
                      "text": "if ( ( min % i == 0 ) && ( max % i == 0 ) ) { break ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 217,
                          "end_byte": 219,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 220,
                          "end_byte": 260,
                          "text": "( ( min % i == 0 ) && ( max % i == 0 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 222,
                              "end_byte": 258,
                              "text": "( min % i == 0 ) && ( max % i == 0 )",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 222,
                                  "end_byte": 238,
                                  "text": "( min % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 222,
                                      "end_byte": 223,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 224,
                                      "end_byte": 236,
                                      "text": "min % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 224,
                                          "end_byte": 231,
                                          "text": "min % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 224,
                                              "end_byte": 227,
                                              "text": "min",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 228,
                                              "end_byte": 229,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 230,
                                              "end_byte": 231,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 232,
                                          "end_byte": 234,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 235,
                                          "end_byte": 236,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 237,
                                      "end_byte": 238,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 239,
                                  "end_byte": 241,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 242,
                                  "end_byte": 258,
                                  "text": "( max % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 242,
                                      "end_byte": 243,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 244,
                                      "end_byte": 256,
                                      "text": "max % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 244,
                                          "end_byte": 251,
                                          "text": "max % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 244,
                                              "end_byte": 247,
                                              "text": "max",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 248,
                                              "end_byte": 249,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 250,
                                              "end_byte": 251,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 252,
                                          "end_byte": 254,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 255,
                                          "end_byte": 256,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 257,
                                      "end_byte": 258,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 259,
                              "end_byte": 260,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 261,
                          "end_byte": 272,
                          "text": "{ break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "break_statement",
                              "start_byte": 263,
                              "end_byte": 270,
                              "text": "break ;",
                              "children": [
                                {
                                  "type": "break",
                                  "start_byte": 263,
                                  "end_byte": 268,
                                  "text": "break",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 269,
                                  "end_byte": 270,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 273,
                      "end_byte": 274,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 275,
              "end_byte": 356,
              "text": "for ( j = 1 ; j <= max ; j ++ ) { lcm = min * j ; if ( lcm % max == 0 ) break ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 275,
                  "end_byte": 278,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 279,
                  "end_byte": 280,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 281,
                  "end_byte": 286,
                  "text": "j = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 281,
                      "end_byte": 282,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 287,
                  "end_byte": 288,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 289,
                  "end_byte": 297,
                  "text": "j <= max",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 289,
                      "end_byte": 290,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 291,
                      "end_byte": 293,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 294,
                      "end_byte": 297,
                      "text": "max",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 298,
                  "end_byte": 299,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 300,
                  "end_byte": 304,
                  "text": "j ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 300,
                      "end_byte": 301,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 302,
                      "end_byte": 304,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 305,
                  "end_byte": 306,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 307,
                  "end_byte": 356,
                  "text": "{ lcm = min * j ; if ( lcm % max == 0 ) break ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 307,
                      "end_byte": 308,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 309,
                      "end_byte": 324,
                      "text": "lcm = min * j ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 309,
                          "end_byte": 322,
                          "text": "lcm = min * j",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 309,
                              "end_byte": 312,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 313,
                              "end_byte": 314,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 315,
                              "end_byte": 322,
                              "text": "min * j",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 315,
                                  "end_byte": 318,
                                  "text": "min",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 319,
                                  "end_byte": 320,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 321,
                                  "end_byte": 322,
                                  "text": "j",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 325,
                      "end_byte": 354,
                      "text": "if ( lcm % max == 0 ) break ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 325,
                          "end_byte": 327,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 328,
                          "end_byte": 346,
                          "text": "( lcm % max == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 330,
                              "end_byte": 344,
                              "text": "lcm % max == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 330,
                                  "end_byte": 339,
                                  "text": "lcm % max",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 330,
                                      "end_byte": 333,
                                      "text": "lcm",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 334,
                                      "end_byte": 335,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 336,
                                      "end_byte": 339,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "start_byte": 340,
                                  "end_byte": 342,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 343,
                                  "end_byte": 344,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 345,
                              "end_byte": 346,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "break_statement",
                          "start_byte": 347,
                          "end_byte": 354,
                          "text": "break ;",
                          "children": [
                            {
                              "type": "break",
                              "start_byte": 347,
                              "end_byte": 352,
                              "text": "break",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 353,
                              "end_byte": 354,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 357,
              "end_byte": 396,
              "text": "printf ( \"lcm=%u\\ngcd=%u\" , lcm , i ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 357,
                  "end_byte": 394,
                  "text": "printf ( \"lcm=%u\\ngcd=%u\" , lcm , i )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 357,
                      "end_byte": 363,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 364,
                      "end_byte": 394,
                      "text": "( \"lcm=%u\\ngcd=%u\" , lcm , i )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 364,
                          "end_byte": 365,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 366,
                          "end_byte": 382,
                          "text": "\"lcm=%u\\ngcd=%u\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 366,
                              "end_byte": 367,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 367,
                              "end_byte": 373,
                              "text": "lcm=%u",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 373,
                              "end_byte": 375,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 375,
                              "end_byte": 381,
                              "text": "gcd=%u",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 381,
                              "end_byte": 382,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 383,
                          "end_byte": 384,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 385,
                          "end_byte": 388,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 389,
                          "end_byte": 390,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 391,
                          "end_byte": 392,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 393,
                          "end_byte": 394,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 395,
                  "end_byte": 396,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 397,
              "end_byte": 398,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}