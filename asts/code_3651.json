{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 572,
  "text": "int a [ 100 ] [ 100 ] ; int size ; int maxvalue ( int m , int n ) { if ( n > m ) return 0 ; if ( ( m == size - 1 ) && ( m <= n ) ) return a [ m ] [ n ] ; else return a [ m ] [ n ] + max ( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) ) ; } int max ( int aa , int b ) { if ( aa > b ) return aa ; else return b ; } int main ( ) { int t , i , j ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & size ) ; for ( i = 0 ; i < size ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; } printf ( \"%d\\n\" , maxvalue ( 0 , 0 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 23,
      "text": "int a [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 21,
          "text": "a [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 13,
              "text": "a [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 5,
                  "text": "a",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 6,
                  "end_byte": 7,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 8,
                  "end_byte": 11,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 14,
              "end_byte": 15,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 16,
              "end_byte": 19,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 20,
              "end_byte": 21,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 22,
          "end_byte": 23,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 24,
      "end_byte": 34,
      "text": "int size ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 24,
          "end_byte": 27,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 28,
          "end_byte": 32,
          "text": "size",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 33,
          "end_byte": 34,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 35,
      "end_byte": 245,
      "text": "int maxvalue ( int m , int n ) { if ( n > m ) return 0 ; if ( ( m == size - 1 ) && ( m <= n ) ) return a [ m ] [ n ] ; else return a [ m ] [ n ] + max ( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 35,
          "end_byte": 38,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 39,
          "end_byte": 65,
          "text": "maxvalue ( int m , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 39,
              "end_byte": 47,
              "text": "maxvalue",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 48,
              "end_byte": 65,
              "text": "( int m , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 50,
                  "end_byte": 55,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 50,
                      "end_byte": 53,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 55,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 58,
                  "end_byte": 63,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 58,
                      "end_byte": 61,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 62,
                      "end_byte": 63,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 66,
          "end_byte": 245,
          "text": "{ if ( n > m ) return 0 ; if ( ( m == size - 1 ) && ( m <= n ) ) return a [ m ] [ n ] ; else return a [ m ] [ n ] + max ( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 66,
              "end_byte": 67,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 68,
              "end_byte": 91,
              "text": "if ( n > m ) return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 68,
                  "end_byte": 70,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 71,
                  "end_byte": 80,
                  "text": "( n > m )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 73,
                      "end_byte": 78,
                      "text": "n > m",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 73,
                          "end_byte": 74,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 75,
                          "end_byte": 76,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 77,
                          "end_byte": 78,
                          "text": "m",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 81,
                  "end_byte": 91,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 81,
                      "end_byte": 87,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 88,
                      "end_byte": 89,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 92,
              "end_byte": 243,
              "text": "if ( ( m == size - 1 ) && ( m <= n ) ) return a [ m ] [ n ] ; else return a [ m ] [ n ] + max ( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 92,
                  "end_byte": 94,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 95,
                  "end_byte": 130,
                  "text": "( ( m == size - 1 ) && ( m <= n ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 95,
                      "end_byte": 96,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 97,
                      "end_byte": 128,
                      "text": "( m == size - 1 ) && ( m <= n )",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 97,
                          "end_byte": 114,
                          "text": "( m == size - 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 97,
                              "end_byte": 98,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 99,
                              "end_byte": 112,
                              "text": "m == size - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 99,
                                  "end_byte": 100,
                                  "text": "m",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 101,
                                  "end_byte": 103,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 104,
                                  "end_byte": 112,
                                  "text": "size - 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 104,
                                      "end_byte": 108,
                                      "text": "size",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 109,
                                      "end_byte": 110,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 111,
                                      "end_byte": 112,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 113,
                              "end_byte": 114,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 115,
                          "end_byte": 117,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 118,
                          "end_byte": 128,
                          "text": "( m <= n )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 120,
                              "end_byte": 126,
                              "text": "m <= n",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 120,
                                  "end_byte": 121,
                                  "text": "m",
                                  "children": []
                                },
                                {
                                  "type": "<=",
                                  "start_byte": 122,
                                  "end_byte": 124,
                                  "text": "<=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 125,
                                  "end_byte": 126,
                                  "text": "n",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 131,
                  "end_byte": 153,
                  "text": "return a [ m ] [ n ] ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 131,
                      "end_byte": 137,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 138,
                      "end_byte": 151,
                      "text": "a [ m ] [ n ]",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 138,
                          "end_byte": 145,
                          "text": "a [ m ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 138,
                              "end_byte": 139,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 140,
                              "end_byte": 145,
                              "text": "[ m ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 142,
                                  "end_byte": 143,
                                  "text": "m",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 144,
                                  "end_byte": 145,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 146,
                          "end_byte": 151,
                          "text": "[ n ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 146,
                              "end_byte": 147,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 148,
                              "end_byte": 149,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 150,
                              "end_byte": 151,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 152,
                      "end_byte": 153,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 154,
                  "end_byte": 243,
                  "text": "else return a [ m ] [ n ] + max ( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 154,
                      "end_byte": 158,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 159,
                      "end_byte": 243,
                      "text": "return a [ m ] [ n ] + max ( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 159,
                          "end_byte": 165,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 166,
                          "end_byte": 241,
                          "text": "a [ m ] [ n ] + max ( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 166,
                              "end_byte": 179,
                              "text": "a [ m ] [ n ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 166,
                                  "end_byte": 173,
                                  "text": "a [ m ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 166,
                                      "end_byte": 167,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 168,
                                      "end_byte": 173,
                                      "text": "[ m ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 168,
                                          "end_byte": 169,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 170,
                                          "end_byte": 171,
                                          "text": "m",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 172,
                                          "end_byte": 173,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 174,
                                  "end_byte": 179,
                                  "text": "[ n ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 178,
                                      "end_byte": 179,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 182,
                              "end_byte": 241,
                              "text": "max ( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 182,
                                  "end_byte": 185,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 186,
                                  "end_byte": 241,
                                  "text": "( maxvalue ( m + 1 , n ) , maxvalue ( m + 1 , n + 1 ) )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 186,
                                      "end_byte": 187,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 188,
                                      "end_byte": 210,
                                      "text": "maxvalue ( m + 1 , n )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 188,
                                          "end_byte": 196,
                                          "text": "maxvalue",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 197,
                                          "end_byte": 210,
                                          "text": "( m + 1 , n )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 197,
                                              "end_byte": 198,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 199,
                                              "end_byte": 204,
                                              "text": "m + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 199,
                                                  "end_byte": 200,
                                                  "text": "m",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 201,
                                                  "end_byte": 202,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 203,
                                                  "end_byte": 204,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 205,
                                              "end_byte": 206,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 207,
                                              "end_byte": 208,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 209,
                                              "end_byte": 210,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 213,
                                      "end_byte": 239,
                                      "text": "maxvalue ( m + 1 , n + 1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 213,
                                          "end_byte": 221,
                                          "text": "maxvalue",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 222,
                                          "end_byte": 239,
                                          "text": "( m + 1 , n + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 222,
                                              "end_byte": 223,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 224,
                                              "end_byte": 229,
                                              "text": "m + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 224,
                                                  "end_byte": 225,
                                                  "text": "m",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 226,
                                                  "end_byte": 227,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 228,
                                                  "end_byte": 229,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 230,
                                              "end_byte": 231,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 232,
                                              "end_byte": 237,
                                              "text": "n + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 232,
                                                  "end_byte": 233,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 234,
                                                  "end_byte": 235,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 236,
                                                  "end_byte": 237,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 238,
                                              "end_byte": 239,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 240,
                                      "end_byte": 241,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 242,
                          "end_byte": 243,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 244,
              "end_byte": 245,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 246,
      "end_byte": 318,
      "text": "int max ( int aa , int b ) { if ( aa > b ) return aa ; else return b ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 246,
          "end_byte": 249,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 250,
          "end_byte": 272,
          "text": "max ( int aa , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 250,
              "end_byte": 253,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 254,
              "end_byte": 272,
              "text": "( int aa , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 254,
                  "end_byte": 255,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 256,
                  "end_byte": 262,
                  "text": "int aa",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 256,
                      "end_byte": 259,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 260,
                      "end_byte": 262,
                      "text": "aa",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 263,
                  "end_byte": 264,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 265,
                  "end_byte": 270,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 265,
                      "end_byte": 268,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 269,
                      "end_byte": 270,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 273,
          "end_byte": 318,
          "text": "{ if ( aa > b ) return aa ; else return b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 273,
              "end_byte": 274,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 275,
              "end_byte": 316,
              "text": "if ( aa > b ) return aa ; else return b ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 275,
                  "end_byte": 277,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 278,
                  "end_byte": 288,
                  "text": "( aa > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 278,
                      "end_byte": 279,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 280,
                      "end_byte": 286,
                      "text": "aa > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 280,
                          "end_byte": 282,
                          "text": "aa",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 283,
                          "end_byte": 284,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 285,
                          "end_byte": 286,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 287,
                      "end_byte": 288,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 289,
                  "end_byte": 300,
                  "text": "return aa ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 289,
                      "end_byte": 295,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 296,
                      "end_byte": 298,
                      "text": "aa",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 299,
                      "end_byte": 300,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 301,
                  "end_byte": 316,
                  "text": "else return b ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 301,
                      "end_byte": 305,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 306,
                      "end_byte": 316,
                      "text": "return b ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 306,
                          "end_byte": 312,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 313,
                          "end_byte": 314,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 317,
              "end_byte": 318,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 319,
      "end_byte": 572,
      "text": "int main ( ) { int t , i , j ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & size ) ; for ( i = 0 ; i < size ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; } printf ( \"%d\\n\" , maxvalue ( 0 , 0 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 319,
          "end_byte": 322,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 323,
          "end_byte": 331,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 323,
              "end_byte": 327,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 328,
              "end_byte": 331,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 328,
                  "end_byte": 329,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 330,
                  "end_byte": 331,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 332,
          "end_byte": 572,
          "text": "{ int t , i , j ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & size ) ; for ( i = 0 ; i < size ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; } printf ( \"%d\\n\" , maxvalue ( 0 , 0 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 332,
              "end_byte": 333,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 334,
              "end_byte": 349,
              "text": "int t , i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 334,
                  "end_byte": 337,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 338,
                  "end_byte": 339,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 340,
                  "end_byte": 341,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 342,
                  "end_byte": 343,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 344,
                  "end_byte": 345,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 346,
                  "end_byte": 347,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 348,
                  "end_byte": 349,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 350,
              "end_byte": 372,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 350,
                  "end_byte": 370,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 350,
                      "end_byte": 355,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 356,
                      "end_byte": 370,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 358,
                          "end_byte": 362,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 358,
                              "end_byte": 359,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 359,
                              "end_byte": 361,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 361,
                              "end_byte": 362,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 363,
                          "end_byte": 364,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 365,
                          "end_byte": 368,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 365,
                              "end_byte": 366,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 367,
                              "end_byte": 368,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 369,
                          "end_byte": 370,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 371,
                  "end_byte": 372,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 373,
              "end_byte": 559,
              "text": "while ( t -- ) { scanf ( \"%d\" , & size ) ; for ( i = 0 ; i < size ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; } printf ( \"%d\\n\" , maxvalue ( 0 , 0 ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 373,
                  "end_byte": 378,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 379,
                  "end_byte": 387,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 379,
                      "end_byte": 380,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 381,
                      "end_byte": 385,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 381,
                          "end_byte": 382,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 383,
                          "end_byte": 385,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 386,
                      "end_byte": 387,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 388,
                  "end_byte": 559,
                  "text": "{ scanf ( \"%d\" , & size ) ; for ( i = 0 ; i < size ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; } printf ( \"%d\\n\" , maxvalue ( 0 , 0 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 388,
                      "end_byte": 389,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 390,
                      "end_byte": 415,
                      "text": "scanf ( \"%d\" , & size ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 390,
                          "end_byte": 413,
                          "text": "scanf ( \"%d\" , & size )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 390,
                              "end_byte": 395,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 396,
                              "end_byte": 413,
                              "text": "( \"%d\" , & size )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 396,
                                  "end_byte": 397,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 398,
                                  "end_byte": 402,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 398,
                                      "end_byte": 399,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 399,
                                      "end_byte": 401,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 401,
                                      "end_byte": 402,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 403,
                                  "end_byte": 404,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 405,
                                  "end_byte": 411,
                                  "text": "& size",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 405,
                                      "end_byte": 406,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 407,
                                      "end_byte": 411,
                                      "text": "size",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 412,
                                  "end_byte": 413,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 414,
                          "end_byte": 415,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 416,
                      "end_byte": 516,
                      "text": "for ( i = 0 ; i < size ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 416,
                          "end_byte": 419,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 420,
                          "end_byte": 421,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 422,
                          "end_byte": 427,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 422,
                              "end_byte": 423,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 426,
                              "end_byte": 427,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 428,
                          "end_byte": 429,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 430,
                          "end_byte": 438,
                          "text": "i < size",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 430,
                              "end_byte": 431,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 432,
                              "end_byte": 433,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 434,
                              "end_byte": 438,
                              "text": "size",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 439,
                          "end_byte": 440,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 441,
                          "end_byte": 445,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 441,
                              "end_byte": 442,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 443,
                              "end_byte": 445,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 446,
                          "end_byte": 447,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 448,
                          "end_byte": 516,
                          "text": "{ for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 448,
                              "end_byte": 449,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 450,
                              "end_byte": 514,
                              "text": "for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ;",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 450,
                                  "end_byte": 453,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 456,
                                  "end_byte": 461,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 456,
                                      "end_byte": 457,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 458,
                                      "end_byte": 459,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 460,
                                      "end_byte": 461,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 462,
                                  "end_byte": 463,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 464,
                                  "end_byte": 470,
                                  "text": "j <= i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 464,
                                      "end_byte": 465,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 466,
                                      "end_byte": 468,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 469,
                                      "end_byte": 470,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 471,
                                  "end_byte": 472,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 473,
                                  "end_byte": 477,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 473,
                                      "end_byte": 474,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 475,
                                      "end_byte": 477,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 478,
                                  "end_byte": 479,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 480,
                                  "end_byte": 514,
                                  "text": "scanf ( \"%d\" , & a [ i ] [ j ] ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 480,
                                      "end_byte": 512,
                                      "text": "scanf ( \"%d\" , & a [ i ] [ j ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 480,
                                          "end_byte": 485,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 486,
                                          "end_byte": 512,
                                          "text": "( \"%d\" , & a [ i ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 486,
                                              "end_byte": 487,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 488,
                                              "end_byte": 492,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 488,
                                                  "end_byte": 489,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 489,
                                                  "end_byte": 491,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 491,
                                                  "end_byte": 492,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 493,
                                              "end_byte": 494,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 495,
                                              "end_byte": 510,
                                              "text": "& a [ i ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 495,
                                                  "end_byte": 496,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 497,
                                                  "end_byte": 510,
                                                  "text": "a [ i ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 497,
                                                      "end_byte": 504,
                                                      "text": "a [ i ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 497,
                                                          "end_byte": 498,
                                                          "text": "a",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 499,
                                                          "end_byte": 504,
                                                          "text": "[ i ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 499,
                                                              "end_byte": 500,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 501,
                                                              "end_byte": 502,
                                                              "text": "i",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 503,
                                                              "end_byte": 504,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 505,
                                                      "end_byte": 510,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 505,
                                                          "end_byte": 506,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 507,
                                                          "end_byte": 508,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 509,
                                                          "end_byte": 510,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 511,
                                              "end_byte": 512,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 513,
                                      "end_byte": 514,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 515,
                              "end_byte": 516,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 517,
                      "end_byte": 557,
                      "text": "printf ( \"%d\\n\" , maxvalue ( 0 , 0 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 517,
                          "end_byte": 555,
                          "text": "printf ( \"%d\\n\" , maxvalue ( 0 , 0 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 517,
                              "end_byte": 523,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 524,
                              "end_byte": 555,
                              "text": "( \"%d\\n\" , maxvalue ( 0 , 0 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 524,
                                  "end_byte": 525,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 526,
                                  "end_byte": 532,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 526,
                                      "end_byte": 527,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 527,
                                      "end_byte": 529,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 529,
                                      "end_byte": 531,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 531,
                                      "end_byte": 532,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 533,
                                  "end_byte": 534,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 535,
                                  "end_byte": 553,
                                  "text": "maxvalue ( 0 , 0 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 535,
                                      "end_byte": 543,
                                      "text": "maxvalue",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 544,
                                      "end_byte": 553,
                                      "text": "( 0 , 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 544,
                                          "end_byte": 545,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 546,
                                          "end_byte": 547,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 548,
                                          "end_byte": 549,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 550,
                                          "end_byte": 551,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 552,
                                          "end_byte": 553,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 554,
                                  "end_byte": 555,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 556,
                          "end_byte": 557,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 558,
                      "end_byte": 559,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 560,
              "end_byte": 570,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 560,
                  "end_byte": 566,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 567,
                  "end_byte": 568,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 569,
                  "end_byte": 570,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 571,
              "end_byte": 572,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}