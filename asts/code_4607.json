{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1722,
  "text": "static inline int getInt ( void ) { int ch , r = 0 ; while ( ! isdigit ( ch = GetChar ( ) ) && ch != '-' ) { if ( ch == '-' ) { while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return - r ; } if ( ch == EOF ) exit ( 1 ) ; } r = ch - '0' ; while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return r ; } static inline void putInt ( int x ) { if ( x < 0 ) { x = - x ; PutChar ( '-' ) ; } if ( x >= 1000000000 ) { PutChar ( x / 1000000000 + '0' ) ; x %= 1000000000 ; } if ( x >= 100000000 ) { PutChar ( x / 100000000 + '0' ) ; x %= 100000000 ; } if ( x >= 10000000 ) { PutChar ( x / 10000000 + '0' ) ; x %= 10000000 ; } if ( x >= 1000000 ) { PutChar ( x / 1000000 + '0' ) ; x %= 1000000 ; } if ( x >= 100000 ) { PutChar ( x / 100000 + '0' ) ; x %= 100000 ; } if ( x >= 10000 ) { PutChar ( x / 10000 + '0' ) ; x %= 10000 ; } if ( x >= 1000 ) { PutChar ( x / 1000 + '0' ) ; x %= 1000 ; } if ( x >= 100 ) { PutChar ( x / 100 + '0' ) ; x %= 100 ; } if ( x >= 10 ) { PutChar ( x / 10 + '0' ) ; x %= 10 ; } PutChar ( x + '0' ) ; } int main ( void ) { int t = getInt ( ) ; while ( t -- ) { int h = getInt ( ) ; int rw [ 2 ] [ 100 ] ; int r , c , x , y ; int ip = 0 , op = 1 ; rw [ op ] [ 0 ] = getInt ( ) ; for ( r = 1 ; r < h ; r ++ ) { op = ip ; ip = ! ip ; y = rw [ ip ] [ 0 ] ; rw [ op ] [ 0 ] = y + getInt ( ) ; for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; } rw [ op ] [ c ] = y + getInt ( ) ; } for ( c = 1 , x = rw [ op ] [ 0 ] ; c < h ; c ++ ) if ( rw [ op ] [ c ] > x ) x = rw [ op ] [ c ] ; putInt ( x ) ; PutChar ( '\\n' ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 418,
      "text": "static inline int getInt ( void ) { int ch , r = 0 ; while ( ! isdigit ( ch = GetChar ( ) ) && ch != '-' ) { if ( ch == '-' ) { while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return - r ; } if ( ch == EOF ) exit ( 1 ) ; } r = ch - '0' ; while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return r ; }",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 0,
          "end_byte": 6,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 0,
              "end_byte": 6,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "storage_class_specifier",
          "start_byte": 7,
          "end_byte": 13,
          "text": "inline",
          "children": [
            {
              "type": "inline",
              "start_byte": 7,
              "end_byte": 13,
              "text": "inline",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 14,
          "end_byte": 17,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 18,
          "end_byte": 33,
          "text": "getInt ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 18,
              "end_byte": 24,
              "text": "getInt",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 25,
              "end_byte": 33,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 27,
                      "end_byte": 31,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 34,
          "end_byte": 418,
          "text": "{ int ch , r = 0 ; while ( ! isdigit ( ch = GetChar ( ) ) && ch != '-' ) { if ( ch == '-' ) { while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return - r ; } if ( ch == EOF ) exit ( 1 ) ; } r = ch - '0' ; while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return r ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 34,
              "end_byte": 35,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 36,
              "end_byte": 52,
              "text": "int ch , r = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 36,
                  "end_byte": 39,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 42,
                  "text": "ch",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 45,
                  "end_byte": 50,
                  "text": "r = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 45,
                      "end_byte": 46,
                      "text": "r",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 47,
                      "end_byte": 48,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 53,
              "end_byte": 282,
              "text": "while ( ! isdigit ( ch = GetChar ( ) ) && ch != '-' ) { if ( ch == '-' ) { while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return - r ; } if ( ch == EOF ) exit ( 1 ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 53,
                  "end_byte": 58,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 59,
                  "end_byte": 106,
                  "text": "( ! isdigit ( ch = GetChar ( ) ) && ch != '-' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 59,
                      "end_byte": 60,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 61,
                      "end_byte": 104,
                      "text": "! isdigit ( ch = GetChar ( ) ) && ch != '-'",
                      "children": [
                        {
                          "type": "unary_expression",
                          "start_byte": 61,
                          "end_byte": 91,
                          "text": "! isdigit ( ch = GetChar ( ) )",
                          "children": [
                            {
                              "type": "!",
                              "start_byte": 61,
                              "end_byte": 62,
                              "text": "!",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 63,
                              "end_byte": 91,
                              "text": "isdigit ( ch = GetChar ( ) )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 63,
                                  "end_byte": 70,
                                  "text": "isdigit",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 71,
                                  "end_byte": 91,
                                  "text": "( ch = GetChar ( ) )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 71,
                                      "end_byte": 72,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 73,
                                      "end_byte": 89,
                                      "text": "ch = GetChar ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 73,
                                          "end_byte": 75,
                                          "text": "ch",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 76,
                                          "end_byte": 77,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 78,
                                          "end_byte": 89,
                                          "text": "GetChar ( )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 78,
                                              "end_byte": 85,
                                              "text": "GetChar",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 86,
                                              "end_byte": 89,
                                              "text": "( )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 86,
                                                  "end_byte": 87,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 88,
                                                  "end_byte": 89,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 90,
                                      "end_byte": 91,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 92,
                          "end_byte": 94,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 95,
                          "end_byte": 104,
                          "text": "ch != '-'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 95,
                              "end_byte": 97,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": "!=",
                              "start_byte": 98,
                              "end_byte": 100,
                              "text": "!=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 101,
                              "end_byte": 104,
                              "text": "'-'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 101,
                                  "end_byte": 102,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 102,
                                  "end_byte": 103,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 103,
                                  "end_byte": 104,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 105,
                      "end_byte": 106,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 107,
                  "end_byte": 282,
                  "text": "{ if ( ch == '-' ) { while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return - r ; } if ( ch == EOF ) exit ( 1 ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 109,
                      "end_byte": 250,
                      "text": "if ( ch == '-' ) { while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return - r ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 109,
                          "end_byte": 111,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 112,
                          "end_byte": 125,
                          "text": "( ch == '-' )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 112,
                              "end_byte": 113,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 114,
                              "end_byte": 123,
                              "text": "ch == '-'",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 114,
                                  "end_byte": 116,
                                  "text": "ch",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 117,
                                  "end_byte": 119,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 120,
                                  "end_byte": 123,
                                  "text": "'-'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 120,
                                      "end_byte": 121,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 121,
                                      "end_byte": 122,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 122,
                                      "end_byte": 123,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 124,
                              "end_byte": 125,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 126,
                          "end_byte": 250,
                          "text": "{ while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return - r ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "while_statement",
                              "start_byte": 128,
                              "end_byte": 194,
                              "text": "while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ;",
                              "children": [
                                {
                                  "type": "while",
                                  "start_byte": 128,
                                  "end_byte": 133,
                                  "text": "while",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 134,
                                  "end_byte": 166,
                                  "text": "( isdigit ( ch = GetChar ( ) ) )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 134,
                                      "end_byte": 135,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 136,
                                      "end_byte": 164,
                                      "text": "isdigit ( ch = GetChar ( ) )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 136,
                                          "end_byte": 143,
                                          "text": "isdigit",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 144,
                                          "end_byte": 164,
                                          "text": "( ch = GetChar ( ) )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 144,
                                              "end_byte": 145,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 146,
                                              "end_byte": 162,
                                              "text": "ch = GetChar ( )",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 146,
                                                  "end_byte": 148,
                                                  "text": "ch",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 149,
                                                  "end_byte": 150,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "call_expression",
                                                  "start_byte": 151,
                                                  "end_byte": 162,
                                                  "text": "GetChar ( )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 151,
                                                      "end_byte": 158,
                                                      "text": "GetChar",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start_byte": 159,
                                                      "end_byte": 162,
                                                      "text": "( )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 159,
                                                          "end_byte": 160,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 161,
                                                          "end_byte": 162,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 163,
                                              "end_byte": 164,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 167,
                                  "end_byte": 194,
                                  "text": "r = r * 10 + ( ch - '0' ) ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 167,
                                      "end_byte": 192,
                                      "text": "r = r * 10 + ( ch - '0' )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 167,
                                          "end_byte": 168,
                                          "text": "r",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 169,
                                          "end_byte": 170,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 171,
                                          "end_byte": 192,
                                          "text": "r * 10 + ( ch - '0' )",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 171,
                                              "end_byte": 177,
                                              "text": "r * 10",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 171,
                                                  "end_byte": 172,
                                                  "text": "r",
                                                  "children": []
                                                },
                                                {
                                                  "type": "*",
                                                  "start_byte": 173,
                                                  "end_byte": 174,
                                                  "text": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 175,
                                                  "end_byte": 177,
                                                  "text": "10",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 178,
                                              "end_byte": 179,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 180,
                                              "end_byte": 192,
                                              "text": "( ch - '0' )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 180,
                                                  "end_byte": 181,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 182,
                                                  "end_byte": 190,
                                                  "text": "ch - '0'",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 182,
                                                      "end_byte": 184,
                                                      "text": "ch",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 185,
                                                      "end_byte": 186,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "char_literal",
                                                      "start_byte": 187,
                                                      "end_byte": 190,
                                                      "text": "'0'",
                                                      "children": [
                                                        {
                                                          "type": "'",
                                                          "start_byte": 187,
                                                          "end_byte": 188,
                                                          "text": "'",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "character",
                                                          "start_byte": 188,
                                                          "end_byte": 189,
                                                          "text": "0",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "'",
                                                          "start_byte": 189,
                                                          "end_byte": 190,
                                                          "text": "'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 191,
                                                  "end_byte": 192,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 195,
                              "end_byte": 235,
                              "text": "if ( ch != EOF ) ungetc ( ch , stdin ) ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 195,
                                  "end_byte": 197,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 198,
                                  "end_byte": 211,
                                  "text": "( ch != EOF )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 200,
                                      "end_byte": 209,
                                      "text": "ch != EOF",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 200,
                                          "end_byte": 202,
                                          "text": "ch",
                                          "children": []
                                        },
                                        {
                                          "type": "!=",
                                          "start_byte": 203,
                                          "end_byte": 205,
                                          "text": "!=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 206,
                                          "end_byte": 209,
                                          "text": "EOF",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 210,
                                      "end_byte": 211,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 212,
                                  "end_byte": 235,
                                  "text": "ungetc ( ch , stdin ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 212,
                                      "end_byte": 233,
                                      "text": "ungetc ( ch , stdin )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 212,
                                          "end_byte": 218,
                                          "text": "ungetc",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 219,
                                          "end_byte": 233,
                                          "text": "( ch , stdin )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 219,
                                              "end_byte": 220,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 221,
                                              "end_byte": 223,
                                              "text": "ch",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 224,
                                              "end_byte": 225,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 226,
                                              "end_byte": 231,
                                              "text": "stdin",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 232,
                                              "end_byte": 233,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 234,
                                      "end_byte": 235,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 236,
                              "end_byte": 248,
                              "text": "return - r ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 236,
                                  "end_byte": 242,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "unary_expression",
                                  "start_byte": 243,
                                  "end_byte": 246,
                                  "text": "- r",
                                  "children": [
                                    {
                                      "type": "-",
                                      "start_byte": 243,
                                      "end_byte": 244,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 245,
                                      "end_byte": 246,
                                      "text": "r",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 247,
                                  "end_byte": 248,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 249,
                              "end_byte": 250,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 251,
                      "end_byte": 280,
                      "text": "if ( ch == EOF ) exit ( 1 ) ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 251,
                          "end_byte": 253,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 254,
                          "end_byte": 267,
                          "text": "( ch == EOF )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 254,
                              "end_byte": 255,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 256,
                              "end_byte": 265,
                              "text": "ch == EOF",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 256,
                                  "end_byte": 258,
                                  "text": "ch",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 259,
                                  "end_byte": 261,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 262,
                                  "end_byte": 265,
                                  "text": "EOF",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 266,
                              "end_byte": 267,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 268,
                          "end_byte": 280,
                          "text": "exit ( 1 ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 268,
                              "end_byte": 278,
                              "text": "exit ( 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 268,
                                  "end_byte": 272,
                                  "text": "exit",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 273,
                                  "end_byte": 278,
                                  "text": "( 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 273,
                                      "end_byte": 274,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 275,
                                      "end_byte": 276,
                                      "text": "1",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 277,
                                      "end_byte": 278,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 279,
                              "end_byte": 280,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 281,
                      "end_byte": 282,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 283,
              "end_byte": 297,
              "text": "r = ch - '0' ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 283,
                  "end_byte": 295,
                  "text": "r = ch - '0'",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": "r",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 287,
                      "end_byte": 295,
                      "text": "ch - '0'",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 287,
                          "end_byte": 289,
                          "text": "ch",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 290,
                          "end_byte": 291,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "char_literal",
                          "start_byte": 292,
                          "end_byte": 295,
                          "text": "'0'",
                          "children": [
                            {
                              "type": "'",
                              "start_byte": 292,
                              "end_byte": 293,
                              "text": "'",
                              "children": []
                            },
                            {
                              "type": "character",
                              "start_byte": 293,
                              "end_byte": 294,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "'",
                              "start_byte": 294,
                              "end_byte": 295,
                              "text": "'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 296,
                  "end_byte": 297,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 298,
              "end_byte": 364,
              "text": "while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 298,
                  "end_byte": 303,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 304,
                  "end_byte": 336,
                  "text": "( isdigit ( ch = GetChar ( ) ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 304,
                      "end_byte": 305,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 306,
                      "end_byte": 334,
                      "text": "isdigit ( ch = GetChar ( ) )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 306,
                          "end_byte": 313,
                          "text": "isdigit",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 314,
                          "end_byte": 334,
                          "text": "( ch = GetChar ( ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 314,
                              "end_byte": 315,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 316,
                              "end_byte": 332,
                              "text": "ch = GetChar ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 316,
                                  "end_byte": 318,
                                  "text": "ch",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 319,
                                  "end_byte": 320,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 321,
                                  "end_byte": 332,
                                  "text": "GetChar ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 321,
                                      "end_byte": 328,
                                      "text": "GetChar",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 329,
                                      "end_byte": 332,
                                      "text": "( )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 329,
                                          "end_byte": 330,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 331,
                                          "end_byte": 332,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 333,
                              "end_byte": 334,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 335,
                      "end_byte": 336,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 337,
                  "end_byte": 364,
                  "text": "r = r * 10 + ( ch - '0' ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 337,
                      "end_byte": 362,
                      "text": "r = r * 10 + ( ch - '0' )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 337,
                          "end_byte": 338,
                          "text": "r",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 339,
                          "end_byte": 340,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 341,
                          "end_byte": 362,
                          "text": "r * 10 + ( ch - '0' )",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start_byte": 341,
                              "end_byte": 347,
                              "text": "r * 10",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 341,
                                  "end_byte": 342,
                                  "text": "r",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 343,
                                  "end_byte": 344,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 345,
                                  "end_byte": 347,
                                  "text": "10",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start_byte": 348,
                              "end_byte": 349,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "parenthesized_expression",
                              "start_byte": 350,
                              "end_byte": 362,
                              "text": "( ch - '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 350,
                                  "end_byte": 351,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 352,
                                  "end_byte": 360,
                                  "text": "ch - '0'",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 352,
                                      "end_byte": 354,
                                      "text": "ch",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 355,
                                      "end_byte": 356,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 357,
                                      "end_byte": 360,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 357,
                                          "end_byte": 358,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 358,
                                          "end_byte": 359,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 359,
                                          "end_byte": 360,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 361,
                                  "end_byte": 362,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 363,
                      "end_byte": 364,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 365,
              "end_byte": 405,
              "text": "if ( ch != EOF ) ungetc ( ch , stdin ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 365,
                  "end_byte": 367,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 368,
                  "end_byte": 381,
                  "text": "( ch != EOF )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 368,
                      "end_byte": 369,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 370,
                      "end_byte": 379,
                      "text": "ch != EOF",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 370,
                          "end_byte": 372,
                          "text": "ch",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 373,
                          "end_byte": 375,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 376,
                          "end_byte": 379,
                          "text": "EOF",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 380,
                      "end_byte": 381,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 382,
                  "end_byte": 405,
                  "text": "ungetc ( ch , stdin ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 382,
                      "end_byte": 403,
                      "text": "ungetc ( ch , stdin )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 382,
                          "end_byte": 388,
                          "text": "ungetc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 389,
                          "end_byte": 403,
                          "text": "( ch , stdin )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 389,
                              "end_byte": 390,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 391,
                              "end_byte": 393,
                              "text": "ch",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 394,
                              "end_byte": 395,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 396,
                              "end_byte": 401,
                              "text": "stdin",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 402,
                              "end_byte": 403,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 404,
                      "end_byte": 405,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 406,
              "end_byte": 416,
              "text": "return r ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 406,
                  "end_byte": 412,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 413,
                  "end_byte": 414,
                  "text": "r",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 415,
                  "end_byte": 416,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 417,
              "end_byte": 418,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 419,
      "end_byte": 1137,
      "text": "static inline void putInt ( int x ) { if ( x < 0 ) { x = - x ; PutChar ( '-' ) ; } if ( x >= 1000000000 ) { PutChar ( x / 1000000000 + '0' ) ; x %= 1000000000 ; } if ( x >= 100000000 ) { PutChar ( x / 100000000 + '0' ) ; x %= 100000000 ; } if ( x >= 10000000 ) { PutChar ( x / 10000000 + '0' ) ; x %= 10000000 ; } if ( x >= 1000000 ) { PutChar ( x / 1000000 + '0' ) ; x %= 1000000 ; } if ( x >= 100000 ) { PutChar ( x / 100000 + '0' ) ; x %= 100000 ; } if ( x >= 10000 ) { PutChar ( x / 10000 + '0' ) ; x %= 10000 ; } if ( x >= 1000 ) { PutChar ( x / 1000 + '0' ) ; x %= 1000 ; } if ( x >= 100 ) { PutChar ( x / 100 + '0' ) ; x %= 100 ; } if ( x >= 10 ) { PutChar ( x / 10 + '0' ) ; x %= 10 ; } PutChar ( x + '0' ) ; }",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 419,
          "end_byte": 425,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 419,
              "end_byte": 425,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "storage_class_specifier",
          "start_byte": 426,
          "end_byte": 432,
          "text": "inline",
          "children": [
            {
              "type": "inline",
              "start_byte": 426,
              "end_byte": 432,
              "text": "inline",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 433,
          "end_byte": 437,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 438,
          "end_byte": 454,
          "text": "putInt ( int x )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 438,
              "end_byte": 444,
              "text": "putInt",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 445,
              "end_byte": 454,
              "text": "( int x )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 445,
                  "end_byte": 446,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 447,
                  "end_byte": 452,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 447,
                      "end_byte": 450,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 451,
                      "end_byte": 452,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 453,
                  "end_byte": 454,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 455,
          "end_byte": 1137,
          "text": "{ if ( x < 0 ) { x = - x ; PutChar ( '-' ) ; } if ( x >= 1000000000 ) { PutChar ( x / 1000000000 + '0' ) ; x %= 1000000000 ; } if ( x >= 100000000 ) { PutChar ( x / 100000000 + '0' ) ; x %= 100000000 ; } if ( x >= 10000000 ) { PutChar ( x / 10000000 + '0' ) ; x %= 10000000 ; } if ( x >= 1000000 ) { PutChar ( x / 1000000 + '0' ) ; x %= 1000000 ; } if ( x >= 100000 ) { PutChar ( x / 100000 + '0' ) ; x %= 100000 ; } if ( x >= 10000 ) { PutChar ( x / 10000 + '0' ) ; x %= 10000 ; } if ( x >= 1000 ) { PutChar ( x / 1000 + '0' ) ; x %= 1000 ; } if ( x >= 100 ) { PutChar ( x / 100 + '0' ) ; x %= 100 ; } if ( x >= 10 ) { PutChar ( x / 10 + '0' ) ; x %= 10 ; } PutChar ( x + '0' ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 455,
              "end_byte": 456,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 457,
              "end_byte": 501,
              "text": "if ( x < 0 ) { x = - x ; PutChar ( '-' ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 457,
                  "end_byte": 459,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 460,
                  "end_byte": 469,
                  "text": "( x < 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 460,
                      "end_byte": 461,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 462,
                      "end_byte": 467,
                      "text": "x < 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 462,
                          "end_byte": 463,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 464,
                          "end_byte": 465,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 466,
                          "end_byte": 467,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 468,
                      "end_byte": 469,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 470,
                  "end_byte": 501,
                  "text": "{ x = - x ; PutChar ( '-' ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 470,
                      "end_byte": 471,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 472,
                      "end_byte": 481,
                      "text": "x = - x ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 472,
                          "end_byte": 479,
                          "text": "x = - x",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 472,
                              "end_byte": 473,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 474,
                              "end_byte": 475,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "unary_expression",
                              "start_byte": 476,
                              "end_byte": 479,
                              "text": "- x",
                              "children": [
                                {
                                  "type": "-",
                                  "start_byte": 476,
                                  "end_byte": 477,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 478,
                                  "end_byte": 479,
                                  "text": "x",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 480,
                          "end_byte": 481,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 482,
                      "end_byte": 499,
                      "text": "PutChar ( '-' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 482,
                          "end_byte": 497,
                          "text": "PutChar ( '-' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 482,
                              "end_byte": 489,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 490,
                              "end_byte": 497,
                              "text": "( '-' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 490,
                                  "end_byte": 491,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 492,
                                  "end_byte": 495,
                                  "text": "'-'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 492,
                                      "end_byte": 493,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 493,
                                      "end_byte": 494,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 494,
                                      "end_byte": 495,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 496,
                                  "end_byte": 497,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 498,
                          "end_byte": 499,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 500,
                      "end_byte": 501,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 502,
              "end_byte": 581,
              "text": "if ( x >= 1000000000 ) { PutChar ( x / 1000000000 + '0' ) ; x %= 1000000000 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 502,
                  "end_byte": 504,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 505,
                  "end_byte": 524,
                  "text": "( x >= 1000000000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 505,
                      "end_byte": 506,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 507,
                      "end_byte": 522,
                      "text": "x >= 1000000000",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 507,
                          "end_byte": 508,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 509,
                          "end_byte": 511,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 512,
                          "end_byte": 522,
                          "text": "1000000000",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 523,
                      "end_byte": 524,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 525,
                  "end_byte": 581,
                  "text": "{ PutChar ( x / 1000000000 + '0' ) ; x %= 1000000000 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 525,
                      "end_byte": 526,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 527,
                      "end_byte": 561,
                      "text": "PutChar ( x / 1000000000 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 527,
                          "end_byte": 559,
                          "text": "PutChar ( x / 1000000000 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 527,
                              "end_byte": 534,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 535,
                              "end_byte": 559,
                              "text": "( x / 1000000000 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 535,
                                  "end_byte": 536,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 537,
                                  "end_byte": 557,
                                  "text": "x / 1000000000 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 537,
                                      "end_byte": 551,
                                      "text": "x / 1000000000",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 537,
                                          "end_byte": 538,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 539,
                                          "end_byte": 540,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 541,
                                          "end_byte": 551,
                                          "text": "1000000000",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 552,
                                      "end_byte": 553,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 554,
                                      "end_byte": 557,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 554,
                                          "end_byte": 555,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 555,
                                          "end_byte": 556,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 556,
                                          "end_byte": 557,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 558,
                                  "end_byte": 559,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 560,
                          "end_byte": 561,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 562,
                      "end_byte": 579,
                      "text": "x %= 1000000000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 562,
                          "end_byte": 577,
                          "text": "x %= 1000000000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 562,
                              "end_byte": 563,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 564,
                              "end_byte": 566,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 567,
                              "end_byte": 577,
                              "text": "1000000000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 578,
                          "end_byte": 579,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 580,
                      "end_byte": 581,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 582,
              "end_byte": 658,
              "text": "if ( x >= 100000000 ) { PutChar ( x / 100000000 + '0' ) ; x %= 100000000 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 582,
                  "end_byte": 584,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 585,
                  "end_byte": 603,
                  "text": "( x >= 100000000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 585,
                      "end_byte": 586,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 587,
                      "end_byte": 601,
                      "text": "x >= 100000000",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 587,
                          "end_byte": 588,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 589,
                          "end_byte": 591,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 592,
                          "end_byte": 601,
                          "text": "100000000",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 602,
                      "end_byte": 603,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 604,
                  "end_byte": 658,
                  "text": "{ PutChar ( x / 100000000 + '0' ) ; x %= 100000000 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 604,
                      "end_byte": 605,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 606,
                      "end_byte": 639,
                      "text": "PutChar ( x / 100000000 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 606,
                          "end_byte": 637,
                          "text": "PutChar ( x / 100000000 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 606,
                              "end_byte": 613,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 614,
                              "end_byte": 637,
                              "text": "( x / 100000000 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 614,
                                  "end_byte": 615,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 616,
                                  "end_byte": 635,
                                  "text": "x / 100000000 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 616,
                                      "end_byte": 629,
                                      "text": "x / 100000000",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 616,
                                          "end_byte": 617,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 618,
                                          "end_byte": 619,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 620,
                                          "end_byte": 629,
                                          "text": "100000000",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 630,
                                      "end_byte": 631,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 632,
                                      "end_byte": 635,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 632,
                                          "end_byte": 633,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 633,
                                          "end_byte": 634,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 634,
                                          "end_byte": 635,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 636,
                                  "end_byte": 637,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 638,
                          "end_byte": 639,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 640,
                      "end_byte": 656,
                      "text": "x %= 100000000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 640,
                          "end_byte": 654,
                          "text": "x %= 100000000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 640,
                              "end_byte": 641,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 642,
                              "end_byte": 644,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 645,
                              "end_byte": 654,
                              "text": "100000000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 655,
                          "end_byte": 656,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 657,
                      "end_byte": 658,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 659,
              "end_byte": 732,
              "text": "if ( x >= 10000000 ) { PutChar ( x / 10000000 + '0' ) ; x %= 10000000 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 659,
                  "end_byte": 661,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 662,
                  "end_byte": 679,
                  "text": "( x >= 10000000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 662,
                      "end_byte": 663,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 664,
                      "end_byte": 677,
                      "text": "x >= 10000000",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 664,
                          "end_byte": 665,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 666,
                          "end_byte": 668,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 669,
                          "end_byte": 677,
                          "text": "10000000",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 678,
                      "end_byte": 679,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 680,
                  "end_byte": 732,
                  "text": "{ PutChar ( x / 10000000 + '0' ) ; x %= 10000000 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 680,
                      "end_byte": 681,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 682,
                      "end_byte": 714,
                      "text": "PutChar ( x / 10000000 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 682,
                          "end_byte": 712,
                          "text": "PutChar ( x / 10000000 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 682,
                              "end_byte": 689,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 690,
                              "end_byte": 712,
                              "text": "( x / 10000000 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 690,
                                  "end_byte": 691,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 692,
                                  "end_byte": 710,
                                  "text": "x / 10000000 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 692,
                                      "end_byte": 704,
                                      "text": "x / 10000000",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 692,
                                          "end_byte": 693,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 694,
                                          "end_byte": 695,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 696,
                                          "end_byte": 704,
                                          "text": "10000000",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 705,
                                      "end_byte": 706,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 707,
                                      "end_byte": 710,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 707,
                                          "end_byte": 708,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 708,
                                          "end_byte": 709,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 709,
                                          "end_byte": 710,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 711,
                                  "end_byte": 712,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 713,
                          "end_byte": 714,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 715,
                      "end_byte": 730,
                      "text": "x %= 10000000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 715,
                          "end_byte": 728,
                          "text": "x %= 10000000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 715,
                              "end_byte": 716,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 717,
                              "end_byte": 719,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 720,
                              "end_byte": 728,
                              "text": "10000000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 729,
                          "end_byte": 730,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 731,
                      "end_byte": 732,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 733,
              "end_byte": 803,
              "text": "if ( x >= 1000000 ) { PutChar ( x / 1000000 + '0' ) ; x %= 1000000 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 733,
                  "end_byte": 735,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 736,
                  "end_byte": 752,
                  "text": "( x >= 1000000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 736,
                      "end_byte": 737,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 738,
                      "end_byte": 750,
                      "text": "x >= 1000000",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 738,
                          "end_byte": 739,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 740,
                          "end_byte": 742,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 743,
                          "end_byte": 750,
                          "text": "1000000",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 751,
                      "end_byte": 752,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 753,
                  "end_byte": 803,
                  "text": "{ PutChar ( x / 1000000 + '0' ) ; x %= 1000000 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 753,
                      "end_byte": 754,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 755,
                      "end_byte": 786,
                      "text": "PutChar ( x / 1000000 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 755,
                          "end_byte": 784,
                          "text": "PutChar ( x / 1000000 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 755,
                              "end_byte": 762,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 763,
                              "end_byte": 784,
                              "text": "( x / 1000000 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 763,
                                  "end_byte": 764,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 765,
                                  "end_byte": 782,
                                  "text": "x / 1000000 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 765,
                                      "end_byte": 776,
                                      "text": "x / 1000000",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 765,
                                          "end_byte": 766,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 767,
                                          "end_byte": 768,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 769,
                                          "end_byte": 776,
                                          "text": "1000000",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 777,
                                      "end_byte": 778,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 779,
                                      "end_byte": 782,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 779,
                                          "end_byte": 780,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 780,
                                          "end_byte": 781,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 781,
                                          "end_byte": 782,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 783,
                                  "end_byte": 784,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 785,
                          "end_byte": 786,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 787,
                      "end_byte": 801,
                      "text": "x %= 1000000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 787,
                          "end_byte": 799,
                          "text": "x %= 1000000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 787,
                              "end_byte": 788,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 789,
                              "end_byte": 791,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 792,
                              "end_byte": 799,
                              "text": "1000000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 800,
                          "end_byte": 801,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 802,
                      "end_byte": 803,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 804,
              "end_byte": 871,
              "text": "if ( x >= 100000 ) { PutChar ( x / 100000 + '0' ) ; x %= 100000 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 804,
                  "end_byte": 806,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 807,
                  "end_byte": 822,
                  "text": "( x >= 100000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 807,
                      "end_byte": 808,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 809,
                      "end_byte": 820,
                      "text": "x >= 100000",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 809,
                          "end_byte": 810,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 811,
                          "end_byte": 813,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 814,
                          "end_byte": 820,
                          "text": "100000",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 821,
                      "end_byte": 822,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 823,
                  "end_byte": 871,
                  "text": "{ PutChar ( x / 100000 + '0' ) ; x %= 100000 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 823,
                      "end_byte": 824,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 825,
                      "end_byte": 855,
                      "text": "PutChar ( x / 100000 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 825,
                          "end_byte": 853,
                          "text": "PutChar ( x / 100000 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 825,
                              "end_byte": 832,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 833,
                              "end_byte": 853,
                              "text": "( x / 100000 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 833,
                                  "end_byte": 834,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 835,
                                  "end_byte": 851,
                                  "text": "x / 100000 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 835,
                                      "end_byte": 845,
                                      "text": "x / 100000",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 835,
                                          "end_byte": 836,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 837,
                                          "end_byte": 838,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 839,
                                          "end_byte": 845,
                                          "text": "100000",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 846,
                                      "end_byte": 847,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 848,
                                      "end_byte": 851,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 848,
                                          "end_byte": 849,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 849,
                                          "end_byte": 850,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 850,
                                          "end_byte": 851,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 852,
                                  "end_byte": 853,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 854,
                          "end_byte": 855,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 856,
                      "end_byte": 869,
                      "text": "x %= 100000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 856,
                          "end_byte": 867,
                          "text": "x %= 100000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 856,
                              "end_byte": 857,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 858,
                              "end_byte": 860,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 861,
                              "end_byte": 867,
                              "text": "100000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 868,
                          "end_byte": 869,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 870,
                      "end_byte": 871,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 872,
              "end_byte": 936,
              "text": "if ( x >= 10000 ) { PutChar ( x / 10000 + '0' ) ; x %= 10000 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 872,
                  "end_byte": 874,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 875,
                  "end_byte": 889,
                  "text": "( x >= 10000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 875,
                      "end_byte": 876,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 877,
                      "end_byte": 887,
                      "text": "x >= 10000",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 877,
                          "end_byte": 878,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 879,
                          "end_byte": 881,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 882,
                          "end_byte": 887,
                          "text": "10000",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 888,
                      "end_byte": 889,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 890,
                  "end_byte": 936,
                  "text": "{ PutChar ( x / 10000 + '0' ) ; x %= 10000 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 890,
                      "end_byte": 891,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 892,
                      "end_byte": 921,
                      "text": "PutChar ( x / 10000 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 892,
                          "end_byte": 919,
                          "text": "PutChar ( x / 10000 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 892,
                              "end_byte": 899,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 900,
                              "end_byte": 919,
                              "text": "( x / 10000 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 900,
                                  "end_byte": 901,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 902,
                                  "end_byte": 917,
                                  "text": "x / 10000 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 902,
                                      "end_byte": 911,
                                      "text": "x / 10000",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 902,
                                          "end_byte": 903,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 904,
                                          "end_byte": 905,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 906,
                                          "end_byte": 911,
                                          "text": "10000",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 912,
                                      "end_byte": 913,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 914,
                                      "end_byte": 917,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 914,
                                          "end_byte": 915,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 915,
                                          "end_byte": 916,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 916,
                                          "end_byte": 917,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 918,
                                  "end_byte": 919,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 920,
                          "end_byte": 921,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 922,
                      "end_byte": 934,
                      "text": "x %= 10000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 922,
                          "end_byte": 932,
                          "text": "x %= 10000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 922,
                              "end_byte": 923,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 924,
                              "end_byte": 926,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 927,
                              "end_byte": 932,
                              "text": "10000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 933,
                          "end_byte": 934,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 935,
                      "end_byte": 936,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 937,
              "end_byte": 998,
              "text": "if ( x >= 1000 ) { PutChar ( x / 1000 + '0' ) ; x %= 1000 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 937,
                  "end_byte": 939,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 940,
                  "end_byte": 953,
                  "text": "( x >= 1000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 940,
                      "end_byte": 941,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 942,
                      "end_byte": 951,
                      "text": "x >= 1000",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 942,
                          "end_byte": 943,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 944,
                          "end_byte": 946,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 947,
                          "end_byte": 951,
                          "text": "1000",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 952,
                      "end_byte": 953,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 954,
                  "end_byte": 998,
                  "text": "{ PutChar ( x / 1000 + '0' ) ; x %= 1000 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 954,
                      "end_byte": 955,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 956,
                      "end_byte": 984,
                      "text": "PutChar ( x / 1000 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 956,
                          "end_byte": 982,
                          "text": "PutChar ( x / 1000 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 956,
                              "end_byte": 963,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 964,
                              "end_byte": 982,
                              "text": "( x / 1000 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 964,
                                  "end_byte": 965,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 966,
                                  "end_byte": 980,
                                  "text": "x / 1000 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 966,
                                      "end_byte": 974,
                                      "text": "x / 1000",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 966,
                                          "end_byte": 967,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 968,
                                          "end_byte": 969,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 970,
                                          "end_byte": 974,
                                          "text": "1000",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 975,
                                      "end_byte": 976,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 977,
                                      "end_byte": 980,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 977,
                                          "end_byte": 978,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 978,
                                          "end_byte": 979,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 979,
                                          "end_byte": 980,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 981,
                                  "end_byte": 982,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 983,
                          "end_byte": 984,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 985,
                      "end_byte": 996,
                      "text": "x %= 1000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 985,
                          "end_byte": 994,
                          "text": "x %= 1000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 985,
                              "end_byte": 986,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 987,
                              "end_byte": 989,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 990,
                              "end_byte": 994,
                              "text": "1000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 995,
                          "end_byte": 996,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 997,
                      "end_byte": 998,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 999,
              "end_byte": 1057,
              "text": "if ( x >= 100 ) { PutChar ( x / 100 + '0' ) ; x %= 100 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 999,
                  "end_byte": 1001,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 1002,
                  "end_byte": 1014,
                  "text": "( x >= 100 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 1002,
                      "end_byte": 1003,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 1004,
                      "end_byte": 1012,
                      "text": "x >= 100",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1004,
                          "end_byte": 1005,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 1006,
                          "end_byte": 1008,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 1009,
                          "end_byte": 1012,
                          "text": "100",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 1013,
                      "end_byte": 1014,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1015,
                  "end_byte": 1057,
                  "text": "{ PutChar ( x / 100 + '0' ) ; x %= 100 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1015,
                      "end_byte": 1016,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1017,
                      "end_byte": 1044,
                      "text": "PutChar ( x / 100 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1017,
                          "end_byte": 1042,
                          "text": "PutChar ( x / 100 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1017,
                              "end_byte": 1024,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1025,
                              "end_byte": 1042,
                              "text": "( x / 100 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1025,
                                  "end_byte": 1026,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1027,
                                  "end_byte": 1040,
                                  "text": "x / 100 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1027,
                                      "end_byte": 1034,
                                      "text": "x / 100",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1027,
                                          "end_byte": 1028,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 1029,
                                          "end_byte": 1030,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1031,
                                          "end_byte": 1034,
                                          "text": "100",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 1035,
                                      "end_byte": 1036,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 1037,
                                      "end_byte": 1040,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 1037,
                                          "end_byte": 1038,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 1038,
                                          "end_byte": 1039,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 1039,
                                          "end_byte": 1040,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1041,
                                  "end_byte": 1042,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1043,
                          "end_byte": 1044,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1045,
                      "end_byte": 1055,
                      "text": "x %= 100 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1045,
                          "end_byte": 1053,
                          "text": "x %= 100",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1045,
                              "end_byte": 1046,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 1047,
                              "end_byte": 1049,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1050,
                              "end_byte": 1053,
                              "text": "100",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1054,
                          "end_byte": 1055,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1056,
                      "end_byte": 1057,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 1058,
              "end_byte": 1113,
              "text": "if ( x >= 10 ) { PutChar ( x / 10 + '0' ) ; x %= 10 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 1058,
                  "end_byte": 1060,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 1061,
                  "end_byte": 1072,
                  "text": "( x >= 10 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 1061,
                      "end_byte": 1062,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 1063,
                      "end_byte": 1070,
                      "text": "x >= 10",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1063,
                          "end_byte": 1064,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 1065,
                          "end_byte": 1067,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 1068,
                          "end_byte": 1070,
                          "text": "10",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 1071,
                      "end_byte": 1072,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1073,
                  "end_byte": 1113,
                  "text": "{ PutChar ( x / 10 + '0' ) ; x %= 10 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1073,
                      "end_byte": 1074,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1075,
                      "end_byte": 1101,
                      "text": "PutChar ( x / 10 + '0' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1075,
                          "end_byte": 1099,
                          "text": "PutChar ( x / 10 + '0' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1075,
                              "end_byte": 1082,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1083,
                              "end_byte": 1099,
                              "text": "( x / 10 + '0' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1083,
                                  "end_byte": 1084,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1085,
                                  "end_byte": 1097,
                                  "text": "x / 10 + '0'",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1085,
                                      "end_byte": 1091,
                                      "text": "x / 10",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1085,
                                          "end_byte": 1086,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 1087,
                                          "end_byte": 1088,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1089,
                                          "end_byte": 1091,
                                          "text": "10",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 1092,
                                      "end_byte": 1093,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "char_literal",
                                      "start_byte": 1094,
                                      "end_byte": 1097,
                                      "text": "'0'",
                                      "children": [
                                        {
                                          "type": "'",
                                          "start_byte": 1094,
                                          "end_byte": 1095,
                                          "text": "'",
                                          "children": []
                                        },
                                        {
                                          "type": "character",
                                          "start_byte": 1095,
                                          "end_byte": 1096,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "'",
                                          "start_byte": 1096,
                                          "end_byte": 1097,
                                          "text": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1098,
                                  "end_byte": 1099,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1100,
                          "end_byte": 1101,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1102,
                      "end_byte": 1111,
                      "text": "x %= 10 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1102,
                          "end_byte": 1109,
                          "text": "x %= 10",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1102,
                              "end_byte": 1103,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "%=",
                              "start_byte": 1104,
                              "end_byte": 1106,
                              "text": "%=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1107,
                              "end_byte": 1109,
                              "text": "10",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1110,
                          "end_byte": 1111,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1112,
                      "end_byte": 1113,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1114,
              "end_byte": 1135,
              "text": "PutChar ( x + '0' ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 1114,
                  "end_byte": 1133,
                  "text": "PutChar ( x + '0' )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1114,
                      "end_byte": 1121,
                      "text": "PutChar",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 1122,
                      "end_byte": 1133,
                      "text": "( x + '0' )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 1122,
                          "end_byte": 1123,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1124,
                          "end_byte": 1131,
                          "text": "x + '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1124,
                              "end_byte": 1125,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 1126,
                              "end_byte": 1127,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 1128,
                              "end_byte": 1131,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 1128,
                                  "end_byte": 1129,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 1129,
                                  "end_byte": 1130,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 1130,
                                  "end_byte": 1131,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1132,
                          "end_byte": 1133,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1134,
                  "end_byte": 1135,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1136,
              "end_byte": 1137,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 1138,
      "end_byte": 1722,
      "text": "int main ( void ) { int t = getInt ( ) ; while ( t -- ) { int h = getInt ( ) ; int rw [ 2 ] [ 100 ] ; int r , c , x , y ; int ip = 0 , op = 1 ; rw [ op ] [ 0 ] = getInt ( ) ; for ( r = 1 ; r < h ; r ++ ) { op = ip ; ip = ! ip ; y = rw [ ip ] [ 0 ] ; rw [ op ] [ 0 ] = y + getInt ( ) ; for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; } rw [ op ] [ c ] = y + getInt ( ) ; } for ( c = 1 , x = rw [ op ] [ 0 ] ; c < h ; c ++ ) if ( rw [ op ] [ c ] > x ) x = rw [ op ] [ c ] ; putInt ( x ) ; PutChar ( '\\n' ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 1138,
          "end_byte": 1141,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 1142,
          "end_byte": 1155,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 1142,
              "end_byte": 1146,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 1147,
              "end_byte": 1155,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 1147,
                  "end_byte": 1148,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 1149,
                  "end_byte": 1153,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 1149,
                      "end_byte": 1153,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1154,
                  "end_byte": 1155,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 1156,
          "end_byte": 1722,
          "text": "{ int t = getInt ( ) ; while ( t -- ) { int h = getInt ( ) ; int rw [ 2 ] [ 100 ] ; int r , c , x , y ; int ip = 0 , op = 1 ; rw [ op ] [ 0 ] = getInt ( ) ; for ( r = 1 ; r < h ; r ++ ) { op = ip ; ip = ! ip ; y = rw [ ip ] [ 0 ] ; rw [ op ] [ 0 ] = y + getInt ( ) ; for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; } rw [ op ] [ c ] = y + getInt ( ) ; } for ( c = 1 , x = rw [ op ] [ 0 ] ; c < h ; c ++ ) if ( rw [ op ] [ c ] > x ) x = rw [ op ] [ c ] ; putInt ( x ) ; PutChar ( '\\n' ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 1156,
              "end_byte": 1157,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 1158,
              "end_byte": 1178,
              "text": "int t = getInt ( ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 1158,
                  "end_byte": 1161,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 1162,
                  "end_byte": 1176,
                  "text": "t = getInt ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1162,
                      "end_byte": 1163,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1164,
                      "end_byte": 1165,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 1166,
                      "end_byte": 1176,
                      "text": "getInt ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1166,
                          "end_byte": 1172,
                          "text": "getInt",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 1173,
                          "end_byte": 1176,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1173,
                              "end_byte": 1174,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 1175,
                              "end_byte": 1176,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1177,
                  "end_byte": 1178,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 1179,
              "end_byte": 1709,
              "text": "while ( t -- ) { int h = getInt ( ) ; int rw [ 2 ] [ 100 ] ; int r , c , x , y ; int ip = 0 , op = 1 ; rw [ op ] [ 0 ] = getInt ( ) ; for ( r = 1 ; r < h ; r ++ ) { op = ip ; ip = ! ip ; y = rw [ ip ] [ 0 ] ; rw [ op ] [ 0 ] = y + getInt ( ) ; for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; } rw [ op ] [ c ] = y + getInt ( ) ; } for ( c = 1 , x = rw [ op ] [ 0 ] ; c < h ; c ++ ) if ( rw [ op ] [ c ] > x ) x = rw [ op ] [ c ] ; putInt ( x ) ; PutChar ( '\\n' ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 1179,
                  "end_byte": 1184,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 1185,
                  "end_byte": 1193,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 1185,
                      "end_byte": 1186,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 1187,
                      "end_byte": 1191,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1187,
                          "end_byte": 1188,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 1189,
                          "end_byte": 1191,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 1192,
                      "end_byte": 1193,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1194,
                  "end_byte": 1709,
                  "text": "{ int h = getInt ( ) ; int rw [ 2 ] [ 100 ] ; int r , c , x , y ; int ip = 0 , op = 1 ; rw [ op ] [ 0 ] = getInt ( ) ; for ( r = 1 ; r < h ; r ++ ) { op = ip ; ip = ! ip ; y = rw [ ip ] [ 0 ] ; rw [ op ] [ 0 ] = y + getInt ( ) ; for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; } rw [ op ] [ c ] = y + getInt ( ) ; } for ( c = 1 , x = rw [ op ] [ 0 ] ; c < h ; c ++ ) if ( rw [ op ] [ c ] > x ) x = rw [ op ] [ c ] ; putInt ( x ) ; PutChar ( '\\n' ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1194,
                      "end_byte": 1195,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 1196,
                      "end_byte": 1216,
                      "text": "int h = getInt ( ) ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 1196,
                          "end_byte": 1199,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 1200,
                          "end_byte": 1214,
                          "text": "h = getInt ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1200,
                              "end_byte": 1201,
                              "text": "h",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1202,
                              "end_byte": 1203,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1204,
                              "end_byte": 1214,
                              "text": "getInt ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1204,
                                  "end_byte": 1210,
                                  "text": "getInt",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1211,
                                  "end_byte": 1214,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1211,
                                      "end_byte": 1212,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1213,
                                      "end_byte": 1214,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1215,
                          "end_byte": 1216,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 1217,
                      "end_byte": 1239,
                      "text": "int rw [ 2 ] [ 100 ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 1217,
                          "end_byte": 1220,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 1221,
                          "end_byte": 1237,
                          "text": "rw [ 2 ] [ 100 ]",
                          "children": [
                            {
                              "type": "array_declarator",
                              "start_byte": 1221,
                              "end_byte": 1229,
                              "text": "rw [ 2 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1221,
                                  "end_byte": 1223,
                                  "text": "rw",
                                  "children": []
                                },
                                {
                                  "type": "[",
                                  "start_byte": 1224,
                                  "end_byte": 1225,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 1226,
                                  "end_byte": 1227,
                                  "text": "2",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 1228,
                                  "end_byte": 1229,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "[",
                              "start_byte": 1230,
                              "end_byte": 1231,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1232,
                              "end_byte": 1235,
                              "text": "100",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 1236,
                              "end_byte": 1237,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1238,
                          "end_byte": 1239,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 1240,
                      "end_byte": 1259,
                      "text": "int r , c , x , y ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 1240,
                          "end_byte": 1243,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 1244,
                          "end_byte": 1245,
                          "text": "r",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 1246,
                          "end_byte": 1247,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 1248,
                          "end_byte": 1249,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 1250,
                          "end_byte": 1251,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 1252,
                          "end_byte": 1253,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 1254,
                          "end_byte": 1255,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 1256,
                          "end_byte": 1257,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 1258,
                          "end_byte": 1259,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 1260,
                      "end_byte": 1281,
                      "text": "int ip = 0 , op = 1 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 1260,
                          "end_byte": 1263,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 1264,
                          "end_byte": 1270,
                          "text": "ip = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1264,
                              "end_byte": 1266,
                              "text": "ip",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1267,
                              "end_byte": 1268,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1269,
                              "end_byte": 1270,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 1271,
                          "end_byte": 1272,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 1273,
                          "end_byte": 1279,
                          "text": "op = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1273,
                              "end_byte": 1275,
                              "text": "op",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1276,
                              "end_byte": 1277,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1278,
                              "end_byte": 1279,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1280,
                          "end_byte": 1281,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1282,
                      "end_byte": 1312,
                      "text": "rw [ op ] [ 0 ] = getInt ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1282,
                          "end_byte": 1310,
                          "text": "rw [ op ] [ 0 ] = getInt ( )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 1282,
                              "end_byte": 1297,
                              "text": "rw [ op ] [ 0 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 1282,
                                  "end_byte": 1291,
                                  "text": "rw [ op ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1282,
                                      "end_byte": 1284,
                                      "text": "rw",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 1285,
                                      "end_byte": 1291,
                                      "text": "[ op ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 1285,
                                          "end_byte": 1286,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1287,
                                          "end_byte": 1289,
                                          "text": "op",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 1290,
                                          "end_byte": 1291,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 1292,
                                  "end_byte": 1297,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 1292,
                                      "end_byte": 1293,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1294,
                                      "end_byte": 1295,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 1296,
                                      "end_byte": 1297,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 1298,
                              "end_byte": 1299,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1300,
                              "end_byte": 1310,
                              "text": "getInt ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1300,
                                  "end_byte": 1306,
                                  "text": "getInt",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1307,
                                  "end_byte": 1310,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1307,
                                      "end_byte": 1308,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1309,
                                      "end_byte": 1310,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1311,
                          "end_byte": 1312,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1313,
                      "end_byte": 1573,
                      "text": "for ( r = 1 ; r < h ; r ++ ) { op = ip ; ip = ! ip ; y = rw [ ip ] [ 0 ] ; rw [ op ] [ 0 ] = y + getInt ( ) ; for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; } rw [ op ] [ c ] = y + getInt ( ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1313,
                          "end_byte": 1316,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1317,
                          "end_byte": 1318,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1319,
                          "end_byte": 1324,
                          "text": "r = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1319,
                              "end_byte": 1320,
                              "text": "r",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1321,
                              "end_byte": 1322,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1323,
                              "end_byte": 1324,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1325,
                          "end_byte": 1326,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1327,
                          "end_byte": 1332,
                          "text": "r < h",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1327,
                              "end_byte": 1328,
                              "text": "r",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1329,
                              "end_byte": 1330,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1331,
                              "end_byte": 1332,
                              "text": "h",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1333,
                          "end_byte": 1334,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1335,
                          "end_byte": 1339,
                          "text": "r ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1335,
                              "end_byte": 1336,
                              "text": "r",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1337,
                              "end_byte": 1339,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1340,
                          "end_byte": 1341,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1342,
                          "end_byte": 1573,
                          "text": "{ op = ip ; ip = ! ip ; y = rw [ ip ] [ 0 ] ; rw [ op ] [ 0 ] = y + getInt ( ) ; for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; } rw [ op ] [ c ] = y + getInt ( ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1342,
                              "end_byte": 1343,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1344,
                              "end_byte": 1353,
                              "text": "op = ip ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1344,
                                  "end_byte": 1351,
                                  "text": "op = ip",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1344,
                                      "end_byte": 1346,
                                      "text": "op",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1347,
                                      "end_byte": 1348,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1349,
                                      "end_byte": 1351,
                                      "text": "ip",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1352,
                                  "end_byte": 1353,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1354,
                              "end_byte": 1365,
                              "text": "ip = ! ip ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1354,
                                  "end_byte": 1363,
                                  "text": "ip = ! ip",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1354,
                                      "end_byte": 1356,
                                      "text": "ip",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1357,
                                      "end_byte": 1358,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "unary_expression",
                                      "start_byte": 1359,
                                      "end_byte": 1363,
                                      "text": "! ip",
                                      "children": [
                                        {
                                          "type": "!",
                                          "start_byte": 1359,
                                          "end_byte": 1360,
                                          "text": "!",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1361,
                                          "end_byte": 1363,
                                          "text": "ip",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1364,
                                  "end_byte": 1365,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1366,
                              "end_byte": 1387,
                              "text": "y = rw [ ip ] [ 0 ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1366,
                                  "end_byte": 1385,
                                  "text": "y = rw [ ip ] [ 0 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1366,
                                      "end_byte": 1367,
                                      "text": "y",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1368,
                                      "end_byte": 1369,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1370,
                                      "end_byte": 1385,
                                      "text": "rw [ ip ] [ 0 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1370,
                                          "end_byte": 1379,
                                          "text": "rw [ ip ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1370,
                                              "end_byte": 1372,
                                              "text": "rw",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1373,
                                              "end_byte": 1379,
                                              "text": "[ ip ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1373,
                                                  "end_byte": 1374,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1375,
                                                  "end_byte": 1377,
                                                  "text": "ip",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1378,
                                                  "end_byte": 1379,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1380,
                                          "end_byte": 1385,
                                          "text": "[ 0 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1380,
                                              "end_byte": 1381,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 1382,
                                              "end_byte": 1383,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1384,
                                              "end_byte": 1385,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1386,
                                  "end_byte": 1387,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1388,
                              "end_byte": 1422,
                              "text": "rw [ op ] [ 0 ] = y + getInt ( ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1388,
                                  "end_byte": 1420,
                                  "text": "rw [ op ] [ 0 ] = y + getInt ( )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1388,
                                      "end_byte": 1403,
                                      "text": "rw [ op ] [ 0 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1388,
                                          "end_byte": 1397,
                                          "text": "rw [ op ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1388,
                                              "end_byte": 1390,
                                              "text": "rw",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1391,
                                              "end_byte": 1397,
                                              "text": "[ op ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1391,
                                                  "end_byte": 1392,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1393,
                                                  "end_byte": 1395,
                                                  "text": "op",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1396,
                                                  "end_byte": 1397,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1398,
                                          "end_byte": 1403,
                                          "text": "[ 0 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1398,
                                              "end_byte": 1399,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 1400,
                                              "end_byte": 1401,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1402,
                                              "end_byte": 1403,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1404,
                                      "end_byte": 1405,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1406,
                                      "end_byte": 1420,
                                      "text": "y + getInt ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1406,
                                          "end_byte": 1407,
                                          "text": "y",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 1408,
                                          "end_byte": 1409,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 1410,
                                          "end_byte": 1420,
                                          "text": "getInt ( )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1410,
                                              "end_byte": 1416,
                                              "text": "getInt",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 1417,
                                              "end_byte": 1420,
                                              "text": "( )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 1417,
                                                  "end_byte": 1418,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 1419,
                                                  "end_byte": 1420,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1421,
                                  "end_byte": 1422,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 1423,
                              "end_byte": 1536,
                              "text": "for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 1423,
                                  "end_byte": 1426,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 1427,
                                  "end_byte": 1428,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1429,
                                  "end_byte": 1434,
                                  "text": "c = 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1429,
                                      "end_byte": 1430,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1431,
                                      "end_byte": 1432,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1433,
                                      "end_byte": 1434,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1435,
                                  "end_byte": 1436,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1437,
                                  "end_byte": 1442,
                                  "text": "c < r",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1437,
                                      "end_byte": 1438,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 1439,
                                      "end_byte": 1440,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1441,
                                      "end_byte": 1442,
                                      "text": "r",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1443,
                                  "end_byte": 1444,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 1445,
                                  "end_byte": 1449,
                                  "text": "c ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1445,
                                      "end_byte": 1446,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 1447,
                                      "end_byte": 1449,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1450,
                                  "end_byte": 1451,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 1452,
                                  "end_byte": 1536,
                                  "text": "{ x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 1452,
                                      "end_byte": 1453,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1454,
                                      "end_byte": 1461,
                                      "text": "x = y ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1454,
                                          "end_byte": 1459,
                                          "text": "x = y",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1454,
                                              "end_byte": 1455,
                                              "text": "x",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 1456,
                                              "end_byte": 1457,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1458,
                                              "end_byte": 1459,
                                              "text": "y",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1460,
                                          "end_byte": 1461,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1462,
                                      "end_byte": 1483,
                                      "text": "y = rw [ ip ] [ c ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1462,
                                          "end_byte": 1481,
                                          "text": "y = rw [ ip ] [ c ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1462,
                                              "end_byte": 1463,
                                              "text": "y",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 1464,
                                              "end_byte": 1465,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1466,
                                              "end_byte": 1481,
                                              "text": "rw [ ip ] [ c ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1466,
                                                  "end_byte": 1475,
                                                  "text": "rw [ ip ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1466,
                                                      "end_byte": 1468,
                                                      "text": "rw",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1469,
                                                      "end_byte": 1475,
                                                      "text": "[ ip ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1469,
                                                          "end_byte": 1470,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1471,
                                                          "end_byte": 1473,
                                                          "text": "ip",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1474,
                                                          "end_byte": 1475,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1476,
                                                  "end_byte": 1481,
                                                  "text": "[ c ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1476,
                                                      "end_byte": 1477,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1478,
                                                      "end_byte": 1479,
                                                      "text": "c",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1480,
                                                      "end_byte": 1481,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1482,
                                          "end_byte": 1483,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1484,
                                      "end_byte": 1534,
                                      "text": "rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1484,
                                          "end_byte": 1532,
                                          "text": "rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( )",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1484,
                                              "end_byte": 1499,
                                              "text": "rw [ op ] [ c ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1484,
                                                  "end_byte": 1493,
                                                  "text": "rw [ op ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1484,
                                                      "end_byte": 1486,
                                                      "text": "rw",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1487,
                                                      "end_byte": 1493,
                                                      "text": "[ op ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1487,
                                                          "end_byte": 1488,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1489,
                                                          "end_byte": 1491,
                                                          "text": "op",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1492,
                                                          "end_byte": 1493,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1494,
                                                  "end_byte": 1499,
                                                  "text": "[ c ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1494,
                                                      "end_byte": 1495,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1496,
                                                      "end_byte": 1497,
                                                      "text": "c",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1498,
                                                      "end_byte": 1499,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 1500,
                                              "end_byte": 1501,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1502,
                                              "end_byte": 1532,
                                              "text": "( x > y ? x : y ) + getInt ( )",
                                              "children": [
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start_byte": 1502,
                                                  "end_byte": 1519,
                                                  "text": "( x > y ? x : y )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 1502,
                                                      "end_byte": 1503,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "conditional_expression",
                                                      "start_byte": 1504,
                                                      "end_byte": 1517,
                                                      "text": "x > y ? x : y",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1504,
                                                          "end_byte": 1509,
                                                          "text": "x > y",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1504,
                                                              "end_byte": 1505,
                                                              "text": "x",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": ">",
                                                              "start_byte": 1506,
                                                              "end_byte": 1507,
                                                              "text": ">",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1508,
                                                              "end_byte": 1509,
                                                              "text": "y",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "?",
                                                          "start_byte": 1510,
                                                          "end_byte": 1511,
                                                          "text": "?",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1512,
                                                          "end_byte": 1513,
                                                          "text": "x",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ":",
                                                          "start_byte": 1514,
                                                          "end_byte": 1515,
                                                          "text": ":",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1516,
                                                          "end_byte": 1517,
                                                          "text": "y",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 1518,
                                                      "end_byte": 1519,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 1520,
                                                  "end_byte": 1521,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "call_expression",
                                                  "start_byte": 1522,
                                                  "end_byte": 1532,
                                                  "text": "getInt ( )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1522,
                                                      "end_byte": 1528,
                                                      "text": "getInt",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start_byte": 1529,
                                                      "end_byte": 1532,
                                                      "text": "( )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 1529,
                                                          "end_byte": 1530,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 1531,
                                                          "end_byte": 1532,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1533,
                                          "end_byte": 1534,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1535,
                                      "end_byte": 1536,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1537,
                              "end_byte": 1571,
                              "text": "rw [ op ] [ c ] = y + getInt ( ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1537,
                                  "end_byte": 1569,
                                  "text": "rw [ op ] [ c ] = y + getInt ( )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1537,
                                      "end_byte": 1552,
                                      "text": "rw [ op ] [ c ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1537,
                                          "end_byte": 1546,
                                          "text": "rw [ op ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1537,
                                              "end_byte": 1539,
                                              "text": "rw",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1540,
                                              "end_byte": 1546,
                                              "text": "[ op ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1540,
                                                  "end_byte": 1541,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1542,
                                                  "end_byte": 1544,
                                                  "text": "op",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1545,
                                                  "end_byte": 1546,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1547,
                                          "end_byte": 1552,
                                          "text": "[ c ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1547,
                                              "end_byte": 1548,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1549,
                                              "end_byte": 1550,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1551,
                                              "end_byte": 1552,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1553,
                                      "end_byte": 1554,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1555,
                                      "end_byte": 1569,
                                      "text": "y + getInt ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1555,
                                          "end_byte": 1556,
                                          "text": "y",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 1557,
                                          "end_byte": 1558,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 1559,
                                          "end_byte": 1569,
                                          "text": "getInt ( )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1559,
                                              "end_byte": 1565,
                                              "text": "getInt",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 1566,
                                              "end_byte": 1569,
                                              "text": "( )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 1566,
                                                  "end_byte": 1567,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 1568,
                                                  "end_byte": 1569,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1570,
                                  "end_byte": 1571,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1572,
                              "end_byte": 1573,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1574,
                      "end_byte": 1673,
                      "text": "for ( c = 1 , x = rw [ op ] [ 0 ] ; c < h ; c ++ ) if ( rw [ op ] [ c ] > x ) x = rw [ op ] [ c ] ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1574,
                          "end_byte": 1577,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1578,
                          "end_byte": 1579,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "comma_expression",
                          "start_byte": 1580,
                          "end_byte": 1607,
                          "text": "c = 1 , x = rw [ op ] [ 0 ]",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 1580,
                              "end_byte": 1585,
                              "text": "c = 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1580,
                                  "end_byte": 1581,
                                  "text": "c",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 1582,
                                  "end_byte": 1583,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 1584,
                                  "end_byte": 1585,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 1586,
                              "end_byte": 1587,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 1588,
                              "end_byte": 1607,
                              "text": "x = rw [ op ] [ 0 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1588,
                                  "end_byte": 1589,
                                  "text": "x",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 1590,
                                  "end_byte": 1591,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 1592,
                                  "end_byte": 1607,
                                  "text": "rw [ op ] [ 0 ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1592,
                                      "end_byte": 1601,
                                      "text": "rw [ op ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1592,
                                          "end_byte": 1594,
                                          "text": "rw",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1595,
                                          "end_byte": 1601,
                                          "text": "[ op ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1595,
                                              "end_byte": 1596,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1597,
                                              "end_byte": 1599,
                                              "text": "op",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1600,
                                              "end_byte": 1601,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 1602,
                                      "end_byte": 1607,
                                      "text": "[ 0 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 1602,
                                          "end_byte": 1603,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1604,
                                          "end_byte": 1605,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 1606,
                                          "end_byte": 1607,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1608,
                          "end_byte": 1609,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1610,
                          "end_byte": 1615,
                          "text": "c < h",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1610,
                              "end_byte": 1611,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1612,
                              "end_byte": 1613,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1614,
                              "end_byte": 1615,
                              "text": "h",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1616,
                          "end_byte": 1617,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1618,
                          "end_byte": 1622,
                          "text": "c ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1618,
                              "end_byte": 1619,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1620,
                              "end_byte": 1622,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1623,
                          "end_byte": 1624,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "if_statement",
                          "start_byte": 1625,
                          "end_byte": 1673,
                          "text": "if ( rw [ op ] [ c ] > x ) x = rw [ op ] [ c ] ;",
                          "children": [
                            {
                              "type": "if",
                              "start_byte": 1625,
                              "end_byte": 1627,
                              "text": "if",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 1628,
                              "end_byte": 1651,
                              "text": "( rw [ op ] [ c ] > x )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1628,
                                  "end_byte": 1629,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1630,
                                  "end_byte": 1649,
                                  "text": "rw [ op ] [ c ] > x",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1630,
                                      "end_byte": 1645,
                                      "text": "rw [ op ] [ c ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1630,
                                          "end_byte": 1639,
                                          "text": "rw [ op ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1630,
                                              "end_byte": 1632,
                                              "text": "rw",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1633,
                                              "end_byte": 1639,
                                              "text": "[ op ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1633,
                                                  "end_byte": 1634,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1635,
                                                  "end_byte": 1637,
                                                  "text": "op",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1638,
                                                  "end_byte": 1639,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1640,
                                          "end_byte": 1645,
                                          "text": "[ c ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1640,
                                              "end_byte": 1641,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1642,
                                              "end_byte": 1643,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1644,
                                              "end_byte": 1645,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 1646,
                                      "end_byte": 1647,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1648,
                                      "end_byte": 1649,
                                      "text": "x",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1650,
                                  "end_byte": 1651,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1652,
                              "end_byte": 1673,
                              "text": "x = rw [ op ] [ c ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1652,
                                  "end_byte": 1671,
                                  "text": "x = rw [ op ] [ c ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1652,
                                      "end_byte": 1653,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1654,
                                      "end_byte": 1655,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1656,
                                      "end_byte": 1671,
                                      "text": "rw [ op ] [ c ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1656,
                                          "end_byte": 1665,
                                          "text": "rw [ op ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1656,
                                              "end_byte": 1658,
                                              "text": "rw",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1659,
                                              "end_byte": 1665,
                                              "text": "[ op ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1659,
                                                  "end_byte": 1660,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1661,
                                                  "end_byte": 1663,
                                                  "text": "op",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1664,
                                                  "end_byte": 1665,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1666,
                                          "end_byte": 1671,
                                          "text": "[ c ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1666,
                                              "end_byte": 1667,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1668,
                                              "end_byte": 1669,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1670,
                                              "end_byte": 1671,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1672,
                                  "end_byte": 1673,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1674,
                      "end_byte": 1688,
                      "text": "putInt ( x ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1674,
                          "end_byte": 1686,
                          "text": "putInt ( x )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1674,
                              "end_byte": 1680,
                              "text": "putInt",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1681,
                              "end_byte": 1686,
                              "text": "( x )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1681,
                                  "end_byte": 1682,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1683,
                                  "end_byte": 1684,
                                  "text": "x",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1685,
                                  "end_byte": 1686,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1687,
                          "end_byte": 1688,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1689,
                      "end_byte": 1707,
                      "text": "PutChar ( '\\n' ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1689,
                          "end_byte": 1705,
                          "text": "PutChar ( '\\n' )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1689,
                              "end_byte": 1696,
                              "text": "PutChar",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1697,
                              "end_byte": 1705,
                              "text": "( '\\n' )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1697,
                                  "end_byte": 1698,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 1699,
                                  "end_byte": 1703,
                                  "text": "'\\n'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 1699,
                                      "end_byte": 1700,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1700,
                                      "end_byte": 1702,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 1702,
                                      "end_byte": 1703,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1704,
                                  "end_byte": 1705,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1706,
                          "end_byte": 1707,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1708,
                      "end_byte": 1709,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1710,
              "end_byte": 1720,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1710,
                  "end_byte": 1716,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1717,
                  "end_byte": 1718,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1719,
                  "end_byte": 1720,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1721,
              "end_byte": 1722,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}