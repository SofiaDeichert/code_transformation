int main ( ) { int t , n , triangle [ MAX ] ; scanf ( "%d" , & t ) ; while ( t -- > 0 ) { scanf ( "%d" , & n ) ; int i , j , temp1 , temp2 ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , triangle + ( ( i * ( i + 1 ) ) / 2 ) + j ) ; } if ( n == 1 ) printf ( "%d\n" , triangle [ 0 ] ) ; else { triangle [ 1 ] += triangle [ 0 ] ; triangle [ 2 ] += triangle [ 0 ] ; for ( i = 2 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) triangle [ ( i * ( i + 1 ) ) / 2 ] += triangle [ ( i * ( i - 1 ) ) / 2 ] ; else if ( j != i ) { temp1 = triangle [ ( i * ( i + 1 ) ) / 2 + j ] + triangle [ ( i * ( i - 1 ) ) / 2 + j - 1 ] ; temp2 = triangle [ ( i * ( i + 1 ) ) / 2 + j ] + triangle [ ( i * ( i - 1 ) ) / 2 + j ] ; triangle [ ( i * ( i + 1 ) ) / 2 + j ] = ( temp1 > temp2 ) ? temp1 : temp2 ; } else triangle [ ( i * ( i + 1 ) ) / 2 + j ] += triangle [ ( i * ( i - 1 ) ) / 2 + j - 1 ] ; } } } int max = triangle [ 0 ] ; i = ( n * ( n - 1 ) ) / 2 ; j = ( n * ( n + 1 ) ) / 2 ; for ( ; i < j ; i ++ ) max = ( max > triangle [ i ] ) ? max : triangle [ i ] ; printf ( "%d\n" , max ) ; } }