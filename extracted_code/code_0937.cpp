int k = 0 ; void trian ( int a [ ] [ 1000 ] , int n , int k ) { int i , j , max ; if ( k > n ) return ; { for ( i = 0 ; i < k ; i ++ ) { if ( ! i ) a [ k ] [ i ] += a [ k - 1 ] [ i ] ; else if ( i == k - 1 ) a [ k ] [ i ] += a [ k - 1 ] [ i - 1 ] ; else { max = ( a [ k - 1 ] [ i ] > a [ k - 1 ] [ i - 1 ] ) ? a [ k - 1 ] [ i ] : a [ k - 1 ] [ i - 1 ] ; a [ k ] [ i ] += max ; } } return trian ( a , n , k + 1 ) ; } } int main ( ) { int T , a [ 1000 ] [ 1000 ] , n , max , i , j ; scanf ( "%d" , & T ) ; while ( T -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; trian ( a , n , 2 ) ; max = 0 ; for ( i = 1 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) if ( a [ i ] [ j ] > max ) max = a [ i ] [ j ] ; printf ( "%d\n" , max + a [ 0 ] [ 0 ] ) ; } return 0 ; }