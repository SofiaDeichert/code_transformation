int findSum ( int matrix [ 500 ] [ 500 ] , int x , int y , int dim ) ; int max ( int a , int b ) ; void initialize ( int lines ) ; int findSum ( int matrix [ 500 ] [ 500 ] , int x , int y , int dim ) { if ( y + 1 >= dim || x + 1 >= dim ) return matrix [ x ] [ y ] ; return matrix [ x ] [ y ] + max ( findSum ( matrix , x + 1 , y , dim ) , findSum ( matrix , x + 1 , y + 1 , dim ) ) ; } int max ( int a , int b ) { if ( a > b ) return a ; return b ; } void initialize ( int lines ) { int matrix [ 500 ] [ 500 ] ; int i , a = 0 ; int val = 0 ; for ( ; i < lines ; i ++ ) { for ( ; a < lines ; a ++ ) { if ( i > a ) matrix [ i ] [ a ] = 0 ; else scanf ( "%d" , & matrix [ i ] [ a ] ) ; } a = 0 ; } val = findSum ( matrix , 0 , 0 , lines ) ; printf ( "%d" , val ) ; } int main ( ) { int cases , lines , i = 0 ; puts ( "Hi\n" ) ; scanf ( "%d" , & cases ) ; if ( lines < 0 || lines > 100 ) { return - 1 ; } for ( ; i < cases ; i ++ ) { scanf ( "%d" , & lines ) ; initialize ( lines ) ; } return 0 ; }