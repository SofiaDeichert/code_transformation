{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 476,
  "text": "long int gcd ( long int , long int ) ; int main ( ) { int t ; long long int a , b , min , lcm , hcf , max ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { scanf ( \"%lld%lld\" , & a , & b ) ; if ( a > b ) { min = b ; max = a ; } else { min = a ; max = b ; } hcf = gcd ( max , min ) ; lcm = ( a * b ) / hcf ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; } return 0 ; } long int gcd ( long int p , long int q ) { if ( p % q == 0 ) return q ; else return gcd ( q , p % q ) ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 38,
      "text": "long int gcd ( long int , long int ) ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 8,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 5,
              "end_byte": 8,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 9,
          "end_byte": 36,
          "text": "gcd ( long int , long int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 9,
              "end_byte": 12,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 13,
              "end_byte": 36,
              "text": "( long int , long int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 15,
                  "end_byte": 23,
                  "text": "long int",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 15,
                      "end_byte": 23,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 15,
                          "end_byte": 19,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 20,
                          "end_byte": 23,
                          "text": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 26,
                  "end_byte": 34,
                  "text": "long int",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 26,
                      "end_byte": 34,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 26,
                          "end_byte": 30,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 31,
                          "end_byte": 34,
                          "text": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 37,
          "end_byte": 38,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 39,
      "end_byte": 370,
      "text": "int main ( ) { int t ; long long int a , b , min , lcm , hcf , max ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { scanf ( \"%lld%lld\" , & a , & b ) ; if ( a > b ) { min = b ; max = a ; } else { min = a ; max = b ; } hcf = gcd ( max , min ) ; lcm = ( a * b ) / hcf ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 39,
          "end_byte": 42,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 43,
          "end_byte": 51,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 43,
              "end_byte": 47,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 48,
              "end_byte": 51,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 52,
          "end_byte": 370,
          "text": "{ int t ; long long int a , b , min , lcm , hcf , max ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { scanf ( \"%lld%lld\" , & a , & b ) ; if ( a > b ) { min = b ; max = a ; } else { min = a ; max = b ; } hcf = gcd ( max , min ) ; lcm = ( a * b ) / hcf ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 52,
              "end_byte": 53,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 54,
              "end_byte": 61,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 54,
                  "end_byte": 57,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 62,
              "end_byte": 107,
              "text": "long long int a , b , min , lcm , hcf , max ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 62,
                  "end_byte": 75,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 62,
                      "end_byte": 66,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 67,
                      "end_byte": 71,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 72,
                      "end_byte": 75,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 84,
                  "end_byte": 87,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 88,
                  "end_byte": 89,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 90,
                  "end_byte": 93,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 96,
                  "end_byte": 99,
                  "text": "hcf",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 102,
                  "end_byte": 105,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 108,
              "end_byte": 130,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 108,
                  "end_byte": 128,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 108,
                      "end_byte": 113,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 114,
                      "end_byte": 128,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 116,
                          "end_byte": 120,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 117,
                              "end_byte": 119,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 119,
                              "end_byte": 120,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 123,
                          "end_byte": 126,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 123,
                              "end_byte": 124,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 127,
                          "end_byte": 128,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 129,
                  "end_byte": 130,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 131,
              "end_byte": 357,
              "text": "for ( int i = 0 ; i < t ; i ++ ) { scanf ( \"%lld%lld\" , & a , & b ) ; if ( a > b ) { min = b ; max = a ; } else { min = a ; max = b ; } hcf = gcd ( max , min ) ; lcm = ( a * b ) / hcf ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 131,
                  "end_byte": 134,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 135,
                  "end_byte": 136,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "declaration",
                  "start_byte": 137,
                  "end_byte": 148,
                  "text": "int i = 0 ;",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 137,
                      "end_byte": 140,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "init_declarator",
                      "start_byte": 141,
                      "end_byte": 146,
                      "text": "i = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 141,
                          "end_byte": 142,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 143,
                          "end_byte": 144,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 145,
                          "end_byte": 146,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 147,
                      "end_byte": 148,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "binary_expression",
                  "start_byte": 149,
                  "end_byte": 154,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 149,
                      "end_byte": 150,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 151,
                      "end_byte": 152,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 153,
                      "end_byte": 154,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 155,
                  "end_byte": 156,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 157,
                  "end_byte": 161,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 157,
                      "end_byte": 158,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 159,
                      "end_byte": 161,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 162,
                  "end_byte": 163,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 164,
                  "end_byte": 357,
                  "text": "{ scanf ( \"%lld%lld\" , & a , & b ) ; if ( a > b ) { min = b ; max = a ; } else { min = a ; max = b ; } hcf = gcd ( max , min ) ; lcm = ( a * b ) / hcf ; printf ( \"%lld %lld\\n\" , hcf , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 164,
                      "end_byte": 165,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 166,
                      "end_byte": 200,
                      "text": "scanf ( \"%lld%lld\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 166,
                          "end_byte": 198,
                          "text": "scanf ( \"%lld%lld\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 166,
                              "end_byte": 171,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 172,
                              "end_byte": 198,
                              "text": "( \"%lld%lld\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 174,
                                  "end_byte": 184,
                                  "text": "\"%lld%lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 175,
                                      "end_byte": 183,
                                      "text": "%lld%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 187,
                                  "end_byte": 190,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 189,
                                      "end_byte": 190,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 191,
                                  "end_byte": 192,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 193,
                                  "end_byte": 196,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 197,
                                  "end_byte": 198,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 199,
                          "end_byte": 200,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 201,
                      "end_byte": 266,
                      "text": "if ( a > b ) { min = b ; max = a ; } else { min = a ; max = b ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 201,
                          "end_byte": 203,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 204,
                          "end_byte": 213,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 206,
                              "end_byte": 211,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 206,
                                  "end_byte": 207,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 210,
                                  "end_byte": 211,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 212,
                              "end_byte": 213,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 214,
                          "end_byte": 237,
                          "text": "{ min = b ; max = a ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 214,
                              "end_byte": 215,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 216,
                              "end_byte": 225,
                              "text": "min = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 216,
                                  "end_byte": 223,
                                  "text": "min = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 216,
                                      "end_byte": 219,
                                      "text": "min",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 222,
                                      "end_byte": 223,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 224,
                                  "end_byte": 225,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 226,
                              "end_byte": 235,
                              "text": "max = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 226,
                                  "end_byte": 233,
                                  "text": "max = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 226,
                                      "end_byte": 229,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 230,
                                      "end_byte": 231,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 232,
                                      "end_byte": 233,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 234,
                                  "end_byte": 235,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 236,
                              "end_byte": 237,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 238,
                          "end_byte": 266,
                          "text": "else { min = a ; max = b ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 238,
                              "end_byte": 242,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 243,
                              "end_byte": 266,
                              "text": "{ min = a ; max = b ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 243,
                                  "end_byte": 244,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 245,
                                  "end_byte": 254,
                                  "text": "min = a ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 245,
                                      "end_byte": 252,
                                      "text": "min = a",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 245,
                                          "end_byte": 248,
                                          "text": "min",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 249,
                                          "end_byte": 250,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 251,
                                          "end_byte": 252,
                                          "text": "a",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 253,
                                      "end_byte": 254,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 255,
                                  "end_byte": 264,
                                  "text": "max = b ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 255,
                                      "end_byte": 262,
                                      "text": "max = b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 255,
                                          "end_byte": 258,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 259,
                                          "end_byte": 260,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 261,
                                          "end_byte": 262,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 265,
                                  "end_byte": 266,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 267,
                      "end_byte": 292,
                      "text": "hcf = gcd ( max , min ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 267,
                          "end_byte": 290,
                          "text": "hcf = gcd ( max , min )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 267,
                              "end_byte": 270,
                              "text": "hcf",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 273,
                              "end_byte": 290,
                              "text": "gcd ( max , min )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 273,
                                  "end_byte": 276,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 277,
                                  "end_byte": 290,
                                  "text": "( max , min )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 277,
                                      "end_byte": 278,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 279,
                                      "end_byte": 282,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 285,
                                      "end_byte": 288,
                                      "text": "min",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 289,
                                      "end_byte": 290,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 291,
                          "end_byte": 292,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 293,
                      "end_byte": 316,
                      "text": "lcm = ( a * b ) / hcf ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 293,
                          "end_byte": 314,
                          "text": "lcm = ( a * b ) / hcf",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 293,
                              "end_byte": 296,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 297,
                              "end_byte": 298,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 299,
                              "end_byte": 314,
                              "text": "( a * b ) / hcf",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 299,
                                  "end_byte": 308,
                                  "text": "( a * b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 299,
                                      "end_byte": 300,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 301,
                                      "end_byte": 306,
                                      "text": "a * b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 301,
                                          "end_byte": 302,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 303,
                                          "end_byte": 304,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 305,
                                          "end_byte": 306,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 307,
                                      "end_byte": 308,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 309,
                                  "end_byte": 310,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 311,
                                  "end_byte": 314,
                                  "text": "hcf",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 317,
                      "end_byte": 355,
                      "text": "printf ( \"%lld %lld\\n\" , hcf , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 317,
                          "end_byte": 353,
                          "text": "printf ( \"%lld %lld\\n\" , hcf , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 317,
                              "end_byte": 323,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 324,
                              "end_byte": 353,
                              "text": "( \"%lld %lld\\n\" , hcf , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 324,
                                  "end_byte": 325,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 326,
                                  "end_byte": 339,
                                  "text": "\"%lld %lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 327,
                                      "end_byte": 336,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 336,
                                      "end_byte": 338,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 338,
                                      "end_byte": 339,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 340,
                                  "end_byte": 341,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 342,
                                  "end_byte": 345,
                                  "text": "hcf",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 346,
                                  "end_byte": 347,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 348,
                                  "end_byte": 351,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 352,
                                  "end_byte": 353,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 354,
                          "end_byte": 355,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 356,
                      "end_byte": 357,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 358,
              "end_byte": 368,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 358,
                  "end_byte": 364,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 365,
                  "end_byte": 366,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 367,
                  "end_byte": 368,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 369,
              "end_byte": 370,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 371,
      "end_byte": 476,
      "text": "long int gcd ( long int p , long int q ) { if ( p % q == 0 ) return q ; else return gcd ( q , p % q ) ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 371,
          "end_byte": 379,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 371,
              "end_byte": 375,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 376,
              "end_byte": 379,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 380,
          "end_byte": 411,
          "text": "gcd ( long int p , long int q )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 380,
              "end_byte": 383,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 384,
              "end_byte": 411,
              "text": "( long int p , long int q )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 384,
                  "end_byte": 385,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 386,
                  "end_byte": 396,
                  "text": "long int p",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 386,
                      "end_byte": 394,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 386,
                          "end_byte": 390,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 391,
                          "end_byte": 394,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 395,
                      "end_byte": 396,
                      "text": "p",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 397,
                  "end_byte": 398,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 399,
                  "end_byte": 409,
                  "text": "long int q",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 399,
                      "end_byte": 407,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 399,
                          "end_byte": 403,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 404,
                          "end_byte": 407,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 408,
                      "end_byte": 409,
                      "text": "q",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 410,
                  "end_byte": 411,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 412,
          "end_byte": 476,
          "text": "{ if ( p % q == 0 ) return q ; else return gcd ( q , p % q ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 412,
              "end_byte": 413,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 414,
              "end_byte": 474,
              "text": "if ( p % q == 0 ) return q ; else return gcd ( q , p % q ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 414,
                  "end_byte": 416,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 417,
                  "end_byte": 431,
                  "text": "( p % q == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 417,
                      "end_byte": 418,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 419,
                      "end_byte": 429,
                      "text": "p % q == 0",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 419,
                          "end_byte": 424,
                          "text": "p % q",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 419,
                              "end_byte": 420,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "%",
                              "start_byte": 421,
                              "end_byte": 422,
                              "text": "%",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 423,
                              "end_byte": 424,
                              "text": "q",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start_byte": 425,
                          "end_byte": 427,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 428,
                          "end_byte": 429,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 430,
                      "end_byte": 431,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 432,
                  "end_byte": 442,
                  "text": "return q ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 432,
                      "end_byte": 438,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 439,
                      "end_byte": 440,
                      "text": "q",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 441,
                      "end_byte": 442,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 443,
                  "end_byte": 474,
                  "text": "else return gcd ( q , p % q ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 443,
                      "end_byte": 447,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 448,
                      "end_byte": 474,
                      "text": "return gcd ( q , p % q ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 448,
                          "end_byte": 454,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 455,
                          "end_byte": 472,
                          "text": "gcd ( q , p % q )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 455,
                              "end_byte": 458,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 459,
                              "end_byte": 472,
                              "text": "( q , p % q )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 459,
                                  "end_byte": 460,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 461,
                                  "end_byte": 462,
                                  "text": "q",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 463,
                                  "end_byte": 464,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 465,
                                  "end_byte": 470,
                                  "text": "p % q",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 465,
                                      "end_byte": 466,
                                      "text": "p",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 467,
                                      "end_byte": 468,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 469,
                                      "end_byte": 470,
                                      "text": "q",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 471,
                                  "end_byte": 472,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 473,
                          "end_byte": 474,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 475,
              "end_byte": 476,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}