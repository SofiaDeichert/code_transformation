{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 446,
  "text": "int main ( ) { int store , num1 , num2 , m , check = 0 , tst , hcf ; long long int temp , lcm ; scanf ( \"%d\" , & tst ) ; while ( check < tst ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } store = 0 ; for ( m = 1 ; m < 100000 ; m ++ ) { temp = num1 * m ; if ( temp % num2 == 0 ) { lcm = temp ; store = m ; break ; } } hcf = num2 / store ; printf ( \"%d %d\\n\" , lcm , hcf ) ; check ++ ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 446,
      "text": "int main ( ) { int store , num1 , num2 , m , check = 0 , tst , hcf ; long long int temp , lcm ; scanf ( \"%d\" , & tst ) ; while ( check < tst ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } store = 0 ; for ( m = 1 ; m < 100000 ; m ++ ) { temp = num1 * m ; if ( temp % num2 == 0 ) { lcm = temp ; store = m ; break ; } } hcf = num2 / store ; printf ( \"%d %d\\n\" , lcm , hcf ) ; check ++ ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 446,
          "text": "{ int store , num1 , num2 , m , check = 0 , tst , hcf ; long long int temp , lcm ; scanf ( \"%d\" , & tst ) ; while ( check < tst ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } store = 0 ; for ( m = 1 ; m < 100000 ; m ++ ) { temp = num1 * m ; if ( temp % num2 == 0 ) { lcm = temp ; store = m ; break ; } } hcf = num2 / store ; printf ( \"%d %d\\n\" , lcm , hcf ) ; check ++ ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 68,
              "text": "int store , num1 , num2 , m , check = 0 , tst , hcf ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 24,
                  "text": "store",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 38,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 45,
                  "end_byte": 54,
                  "text": "check = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 45,
                      "end_byte": 50,
                      "text": "check",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 53,
                      "end_byte": 54,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 57,
                  "end_byte": 60,
                  "text": "tst",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 66,
                  "text": "hcf",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 69,
              "end_byte": 95,
              "text": "long long int temp , lcm ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 69,
                  "end_byte": 82,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 69,
                      "end_byte": 73,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 74,
                      "end_byte": 78,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 79,
                      "end_byte": 82,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 83,
                  "end_byte": 87,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 88,
                  "end_byte": 89,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 90,
                  "end_byte": 93,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 96,
              "end_byte": 120,
              "text": "scanf ( \"%d\" , & tst ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 96,
                  "end_byte": 118,
                  "text": "scanf ( \"%d\" , & tst )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 96,
                      "end_byte": 101,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 102,
                      "end_byte": 118,
                      "text": "( \"%d\" , & tst )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 104,
                          "end_byte": 108,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 105,
                              "end_byte": 107,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 107,
                              "end_byte": 108,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 109,
                          "end_byte": 110,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 111,
                          "end_byte": 116,
                          "text": "& tst",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 111,
                              "end_byte": 112,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 113,
                              "end_byte": 116,
                              "text": "tst",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 121,
              "end_byte": 444,
              "text": "while ( check < tst ) { scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } store = 0 ; for ( m = 1 ; m < 100000 ; m ++ ) { temp = num1 * m ; if ( temp % num2 == 0 ) { lcm = temp ; store = m ; break ; } } hcf = num2 / store ; printf ( \"%d %d\\n\" , lcm , hcf ) ; check ++ ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 121,
                  "end_byte": 126,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 127,
                  "end_byte": 142,
                  "text": "( check < tst )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 127,
                      "end_byte": 128,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 129,
                      "end_byte": 140,
                      "text": "check < tst",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 129,
                          "end_byte": 134,
                          "text": "check",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 135,
                          "end_byte": 136,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 137,
                          "end_byte": 140,
                          "text": "tst",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 141,
                      "end_byte": 142,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 143,
                  "end_byte": 444,
                  "text": "{ scanf ( \"%d%d\" , & num1 , & num2 ) ; if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; } store = 0 ; for ( m = 1 ; m < 100000 ; m ++ ) { temp = num1 * m ; if ( temp % num2 == 0 ) { lcm = temp ; store = m ; break ; } } hcf = num2 / store ; printf ( \"%d %d\\n\" , lcm , hcf ) ; check ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 143,
                      "end_byte": 144,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 145,
                      "end_byte": 181,
                      "text": "scanf ( \"%d%d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 145,
                          "end_byte": 179,
                          "text": "scanf ( \"%d%d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 145,
                              "end_byte": 150,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 151,
                              "end_byte": 179,
                              "text": "( \"%d%d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 151,
                                  "end_byte": 152,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 153,
                                  "end_byte": 159,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 154,
                                      "end_byte": 158,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 162,
                                  "end_byte": 168,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 164,
                                      "end_byte": 168,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 169,
                                  "end_byte": 170,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 171,
                                  "end_byte": 177,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 171,
                                      "end_byte": 172,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 173,
                                      "end_byte": 177,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 178,
                                  "end_byte": 179,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 180,
                          "end_byte": 181,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 182,
                      "end_byte": 246,
                      "text": "if ( num1 < num2 ) { temp = num2 ; num2 = num1 ; num1 = temp ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 182,
                          "end_byte": 184,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 185,
                          "end_byte": 200,
                          "text": "( num1 < num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 187,
                              "end_byte": 198,
                              "text": "num1 < num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 187,
                                  "end_byte": 191,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 194,
                                  "end_byte": 198,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 199,
                              "end_byte": 200,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 201,
                          "end_byte": 246,
                          "text": "{ temp = num2 ; num2 = num1 ; num1 = temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 201,
                              "end_byte": 202,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 203,
                              "end_byte": 216,
                              "text": "temp = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 203,
                                  "end_byte": 214,
                                  "text": "temp = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 203,
                                      "end_byte": 207,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 208,
                                      "end_byte": 209,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 210,
                                      "end_byte": 214,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 215,
                                  "end_byte": 216,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 217,
                              "end_byte": 230,
                              "text": "num2 = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 217,
                                  "end_byte": 228,
                                  "text": "num2 = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 217,
                                      "end_byte": 221,
                                      "text": "num2",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 222,
                                      "end_byte": 223,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 224,
                                      "end_byte": 228,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 231,
                              "end_byte": 244,
                              "text": "num1 = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 231,
                                  "end_byte": 242,
                                  "text": "num1 = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 231,
                                      "end_byte": 235,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 236,
                                      "end_byte": 237,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 238,
                                      "end_byte": 242,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 243,
                                  "end_byte": 244,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 245,
                              "end_byte": 246,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 247,
                      "end_byte": 258,
                      "text": "store = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 247,
                          "end_byte": 256,
                          "text": "store = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 247,
                              "end_byte": 252,
                              "text": "store",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 253,
                              "end_byte": 254,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 255,
                              "end_byte": 256,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 257,
                          "end_byte": 258,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 259,
                      "end_byte": 375,
                      "text": "for ( m = 1 ; m < 100000 ; m ++ ) { temp = num1 * m ; if ( temp % num2 == 0 ) { lcm = temp ; store = m ; break ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 259,
                          "end_byte": 262,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 263,
                          "end_byte": 264,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 265,
                          "end_byte": 270,
                          "text": "m = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 265,
                              "end_byte": 266,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 267,
                              "end_byte": 268,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 269,
                              "end_byte": 270,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 271,
                          "end_byte": 272,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 273,
                          "end_byte": 283,
                          "text": "m < 100000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 273,
                              "end_byte": 274,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 275,
                              "end_byte": 276,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 277,
                              "end_byte": 283,
                              "text": "100000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 284,
                          "end_byte": 285,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 286,
                          "end_byte": 290,
                          "text": "m ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 286,
                              "end_byte": 287,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 288,
                              "end_byte": 290,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 291,
                          "end_byte": 292,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 293,
                          "end_byte": 375,
                          "text": "{ temp = num1 * m ; if ( temp % num2 == 0 ) { lcm = temp ; store = m ; break ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 293,
                              "end_byte": 294,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 295,
                              "end_byte": 312,
                              "text": "temp = num1 * m ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 295,
                                  "end_byte": 310,
                                  "text": "temp = num1 * m",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 295,
                                      "end_byte": 299,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 302,
                                      "end_byte": 310,
                                      "text": "num1 * m",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 302,
                                          "end_byte": 306,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 307,
                                          "end_byte": 308,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 309,
                                          "end_byte": 310,
                                          "text": "m",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 311,
                                  "end_byte": 312,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 313,
                              "end_byte": 373,
                              "text": "if ( temp % num2 == 0 ) { lcm = temp ; store = m ; break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 313,
                                  "end_byte": 315,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 316,
                                  "end_byte": 336,
                                  "text": "( temp % num2 == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 316,
                                      "end_byte": 317,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 318,
                                      "end_byte": 334,
                                      "text": "temp % num2 == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 318,
                                          "end_byte": 329,
                                          "text": "temp % num2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 318,
                                              "end_byte": 322,
                                              "text": "temp",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 323,
                                              "end_byte": 324,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 325,
                                              "end_byte": 329,
                                              "text": "num2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 330,
                                          "end_byte": 332,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 333,
                                          "end_byte": 334,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 335,
                                      "end_byte": 336,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 337,
                                  "end_byte": 373,
                                  "text": "{ lcm = temp ; store = m ; break ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 337,
                                      "end_byte": 338,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 339,
                                      "end_byte": 351,
                                      "text": "lcm = temp ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 339,
                                          "end_byte": 349,
                                          "text": "lcm = temp",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 339,
                                              "end_byte": 342,
                                              "text": "lcm",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 343,
                                              "end_byte": 344,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 345,
                                              "end_byte": 349,
                                              "text": "temp",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 350,
                                          "end_byte": 351,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 352,
                                      "end_byte": 363,
                                      "text": "store = m ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 352,
                                          "end_byte": 361,
                                          "text": "store = m",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 352,
                                              "end_byte": 357,
                                              "text": "store",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 358,
                                              "end_byte": 359,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 360,
                                              "end_byte": 361,
                                              "text": "m",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 362,
                                          "end_byte": 363,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "break_statement",
                                      "start_byte": 364,
                                      "end_byte": 371,
                                      "text": "break ;",
                                      "children": [
                                        {
                                          "type": "break",
                                          "start_byte": 364,
                                          "end_byte": 369,
                                          "text": "break",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 370,
                                          "end_byte": 371,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 372,
                                      "end_byte": 373,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 374,
                              "end_byte": 375,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 376,
                      "end_byte": 396,
                      "text": "hcf = num2 / store ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 376,
                          "end_byte": 394,
                          "text": "hcf = num2 / store",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 376,
                              "end_byte": 379,
                              "text": "hcf",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 380,
                              "end_byte": 381,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 382,
                              "end_byte": 394,
                              "text": "num2 / store",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 382,
                                  "end_byte": 386,
                                  "text": "num2",
                                  "children": []
                                },
                                {
                                  "type": "/",
                                  "start_byte": 387,
                                  "end_byte": 388,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 389,
                                  "end_byte": 394,
                                  "text": "store",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 395,
                          "end_byte": 396,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 397,
                      "end_byte": 431,
                      "text": "printf ( \"%d %d\\n\" , lcm , hcf ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 397,
                          "end_byte": 429,
                          "text": "printf ( \"%d %d\\n\" , lcm , hcf )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 397,
                              "end_byte": 403,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 404,
                              "end_byte": 429,
                              "text": "( \"%d %d\\n\" , lcm , hcf )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 404,
                                  "end_byte": 405,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 406,
                                  "end_byte": 415,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 406,
                                      "end_byte": 407,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 407,
                                      "end_byte": 412,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 412,
                                      "end_byte": 414,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 414,
                                      "end_byte": 415,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 416,
                                  "end_byte": 417,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 418,
                                  "end_byte": 421,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 422,
                                  "end_byte": 423,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 424,
                                  "end_byte": 427,
                                  "text": "hcf",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 428,
                                  "end_byte": 429,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 430,
                          "end_byte": 431,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 432,
                      "end_byte": 442,
                      "text": "check ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 432,
                          "end_byte": 440,
                          "text": "check ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 432,
                              "end_byte": 437,
                              "text": "check",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 438,
                              "end_byte": 440,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 441,
                          "end_byte": 442,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 443,
                      "end_byte": 444,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 445,
              "end_byte": 446,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}