{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 524,
  "text": "int tri ( int num [ ] , int i ) ; int main ( ) { int n , r , num [ 100 ] , i , j , max = 0 ; scanf ( \"%d\" , & n ) ; while ( n -- ) { max = 0 ; scanf ( \"%d\" , & r ) ; for ( i = 0 ; i < r ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & num [ j ] ) ; } if ( i == 0 ) continue ; else max = max + tri ( num , i ) ; } printf ( \"%d\\n\" , max ) ; } return 0 ; } int tri ( int num [ 10 ] , int i ) { int k , max ; max = num [ 0 ] ; for ( k = 0 ; k <= i ; k ++ ) { if ( max <= num [ k ] ) max = num [ k ] ; } return max ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 33,
      "text": "int tri ( int num [ ] , int i ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 31,
          "text": "tri ( int num [ ] , int i )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "tri",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 31,
              "text": "( int num [ ] , int i )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 21,
                  "text": "int num [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 14,
                      "end_byte": 21,
                      "text": "num [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 14,
                          "end_byte": 17,
                          "text": "num",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 18,
                          "end_byte": 19,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 20,
                          "end_byte": 21,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 24,
                  "end_byte": 29,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 24,
                      "end_byte": 27,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 28,
                      "end_byte": 29,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 32,
          "end_byte": 33,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 34,
      "end_byte": 364,
      "text": "int main ( ) { int n , r , num [ 100 ] , i , j , max = 0 ; scanf ( \"%d\" , & n ) ; while ( n -- ) { max = 0 ; scanf ( \"%d\" , & r ) ; for ( i = 0 ; i < r ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & num [ j ] ) ; } if ( i == 0 ) continue ; else max = max + tri ( num , i ) ; } printf ( \"%d\\n\" , max ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 34,
          "end_byte": 37,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 38,
          "end_byte": 46,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 38,
              "end_byte": 42,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 43,
              "end_byte": 46,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 47,
          "end_byte": 364,
          "text": "{ int n , r , num [ 100 ] , i , j , max = 0 ; scanf ( \"%d\" , & n ) ; while ( n -- ) { max = 0 ; scanf ( \"%d\" , & r ) ; for ( i = 0 ; i < r ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & num [ j ] ) ; } if ( i == 0 ) continue ; else max = max + tri ( num , i ) ; } printf ( \"%d\\n\" , max ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 47,
              "end_byte": 48,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 49,
              "end_byte": 92,
              "text": "int n , r , num [ 100 ] , i , j , max = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 49,
                  "end_byte": 52,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": "r",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 61,
                  "end_byte": 72,
                  "text": "num [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 61,
                      "end_byte": 64,
                      "text": "num",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 67,
                      "end_byte": 70,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 83,
                  "end_byte": 90,
                  "text": "max = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 83,
                      "end_byte": 86,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 89,
                      "end_byte": 90,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 91,
                  "end_byte": 92,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 93,
              "end_byte": 115,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 93,
                  "end_byte": 113,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 93,
                      "end_byte": 98,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 99,
                      "end_byte": 113,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 99,
                          "end_byte": 100,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 101,
                          "end_byte": 105,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 102,
                              "end_byte": 104,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 106,
                          "end_byte": 107,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 108,
                          "end_byte": 111,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 114,
                  "end_byte": 115,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 116,
              "end_byte": 351,
              "text": "while ( n -- ) { max = 0 ; scanf ( \"%d\" , & r ) ; for ( i = 0 ; i < r ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & num [ j ] ) ; } if ( i == 0 ) continue ; else max = max + tri ( num , i ) ; } printf ( \"%d\\n\" , max ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 116,
                  "end_byte": 121,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 122,
                  "end_byte": 130,
                  "text": "( n -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 124,
                      "end_byte": 128,
                      "text": "n --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 124,
                          "end_byte": 125,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 126,
                          "end_byte": 128,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 131,
                  "end_byte": 351,
                  "text": "{ max = 0 ; scanf ( \"%d\" , & r ) ; for ( i = 0 ; i < r ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & num [ j ] ) ; } if ( i == 0 ) continue ; else max = max + tri ( num , i ) ; } printf ( \"%d\\n\" , max ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 131,
                      "end_byte": 132,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 133,
                      "end_byte": 142,
                      "text": "max = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 133,
                          "end_byte": 140,
                          "text": "max = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 133,
                              "end_byte": 136,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 137,
                              "end_byte": 138,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 141,
                          "end_byte": 142,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 143,
                      "end_byte": 165,
                      "text": "scanf ( \"%d\" , & r ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 143,
                          "end_byte": 163,
                          "text": "scanf ( \"%d\" , & r )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 143,
                              "end_byte": 148,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 149,
                              "end_byte": 163,
                              "text": "( \"%d\" , & r )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 149,
                                  "end_byte": 150,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 151,
                                  "end_byte": 155,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 152,
                                      "end_byte": 154,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 156,
                                  "end_byte": 157,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 158,
                                  "end_byte": 161,
                                  "text": "& r",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 160,
                                      "end_byte": 161,
                                      "text": "r",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 162,
                                  "end_byte": 163,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 164,
                          "end_byte": 165,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 166,
                      "end_byte": 323,
                      "text": "for ( i = 0 ; i < r ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & num [ j ] ) ; } if ( i == 0 ) continue ; else max = max + tri ( num , i ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 166,
                          "end_byte": 169,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 170,
                          "end_byte": 171,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 172,
                          "end_byte": 177,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 178,
                          "end_byte": 179,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 180,
                          "end_byte": 185,
                          "text": "i < r",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "r",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 188,
                          "end_byte": 192,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 188,
                              "end_byte": 189,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 190,
                              "end_byte": 192,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 193,
                          "end_byte": 194,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 195,
                          "end_byte": 323,
                          "text": "{ for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & num [ j ] ) ; } if ( i == 0 ) continue ; else max = max + tri ( num , i ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 195,
                              "end_byte": 196,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 197,
                              "end_byte": 261,
                              "text": "for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & num [ j ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 197,
                                  "end_byte": 200,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 201,
                                  "end_byte": 202,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 203,
                                  "end_byte": 208,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 203,
                                      "end_byte": 204,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 205,
                                      "end_byte": 206,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 207,
                                      "end_byte": 208,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 211,
                                  "end_byte": 217,
                                  "text": "j <= i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 213,
                                      "end_byte": 215,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 216,
                                      "end_byte": 217,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 218,
                                  "end_byte": 219,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 220,
                                  "end_byte": 224,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 222,
                                      "end_byte": 224,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 225,
                                  "end_byte": 226,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 227,
                                  "end_byte": 261,
                                  "text": "{ scanf ( \"%d\" , & num [ j ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 227,
                                      "end_byte": 228,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 229,
                                      "end_byte": 259,
                                      "text": "scanf ( \"%d\" , & num [ j ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 229,
                                          "end_byte": 257,
                                          "text": "scanf ( \"%d\" , & num [ j ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 229,
                                              "end_byte": 234,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 235,
                                              "end_byte": 257,
                                              "text": "( \"%d\" , & num [ j ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 235,
                                                  "end_byte": 236,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 237,
                                                  "end_byte": 241,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 237,
                                                      "end_byte": 238,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 238,
                                                      "end_byte": 240,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 240,
                                                      "end_byte": 241,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 242,
                                                  "end_byte": 243,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 244,
                                                  "end_byte": 255,
                                                  "text": "& num [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 244,
                                                      "end_byte": 245,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 246,
                                                      "end_byte": 255,
                                                      "text": "num [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 246,
                                                          "end_byte": 249,
                                                          "text": "num",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 250,
                                                          "end_byte": 255,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 250,
                                                              "end_byte": 251,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 252,
                                                              "end_byte": 253,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 254,
                                                              "end_byte": 255,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 256,
                                                  "end_byte": 257,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 258,
                                          "end_byte": 259,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 262,
                              "end_byte": 321,
                              "text": "if ( i == 0 ) continue ; else max = max + tri ( num , i ) ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 262,
                                  "end_byte": 264,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 265,
                                  "end_byte": 275,
                                  "text": "( i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 267,
                                      "end_byte": 273,
                                      "text": "i == 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 267,
                                          "end_byte": 268,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 269,
                                          "end_byte": 271,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 272,
                                          "end_byte": 273,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "continue_statement",
                                  "start_byte": 276,
                                  "end_byte": 286,
                                  "text": "continue ;",
                                  "children": [
                                    {
                                      "type": "continue",
                                      "start_byte": 276,
                                      "end_byte": 284,
                                      "text": "continue",
                                      "children": []
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 287,
                                  "end_byte": 321,
                                  "text": "else max = max + tri ( num , i ) ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 287,
                                      "end_byte": 291,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 292,
                                      "end_byte": 321,
                                      "text": "max = max + tri ( num , i ) ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 292,
                                          "end_byte": 319,
                                          "text": "max = max + tri ( num , i )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 292,
                                              "end_byte": 295,
                                              "text": "max",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 296,
                                              "end_byte": 297,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 298,
                                              "end_byte": 319,
                                              "text": "max + tri ( num , i )",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 298,
                                                  "end_byte": 301,
                                                  "text": "max",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 302,
                                                  "end_byte": 303,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "call_expression",
                                                  "start_byte": 304,
                                                  "end_byte": 319,
                                                  "text": "tri ( num , i )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 304,
                                                      "end_byte": 307,
                                                      "text": "tri",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start_byte": 308,
                                                      "end_byte": 319,
                                                      "text": "( num , i )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 308,
                                                          "end_byte": 309,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 310,
                                                          "end_byte": 313,
                                                          "text": "num",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start_byte": 314,
                                                          "end_byte": 315,
                                                          "text": ",",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 316,
                                                          "end_byte": 317,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 318,
                                                          "end_byte": 319,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 320,
                                          "end_byte": 321,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 322,
                              "end_byte": 323,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 324,
                      "end_byte": 349,
                      "text": "printf ( \"%d\\n\" , max ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 324,
                          "end_byte": 347,
                          "text": "printf ( \"%d\\n\" , max )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 324,
                              "end_byte": 330,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 331,
                              "end_byte": 347,
                              "text": "( \"%d\\n\" , max )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 331,
                                  "end_byte": 332,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 333,
                                  "end_byte": 339,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 333,
                                      "end_byte": 334,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 334,
                                      "end_byte": 336,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 336,
                                      "end_byte": 338,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 338,
                                      "end_byte": 339,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 340,
                                  "end_byte": 341,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 342,
                                  "end_byte": 345,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 346,
                                  "end_byte": 347,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 348,
                          "end_byte": 349,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 350,
                      "end_byte": 351,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 352,
              "end_byte": 362,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 352,
                  "end_byte": 358,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 359,
                  "end_byte": 360,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 361,
                  "end_byte": 362,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 363,
              "end_byte": 364,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 365,
      "end_byte": 524,
      "text": "int tri ( int num [ 10 ] , int i ) { int k , max ; max = num [ 0 ] ; for ( k = 0 ; k <= i ; k ++ ) { if ( max <= num [ k ] ) max = num [ k ] ; } return max ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 365,
          "end_byte": 368,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 369,
          "end_byte": 399,
          "text": "tri ( int num [ 10 ] , int i )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 369,
              "end_byte": 372,
              "text": "tri",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 373,
              "end_byte": 399,
              "text": "( int num [ 10 ] , int i )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 373,
                  "end_byte": 374,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 375,
                  "end_byte": 389,
                  "text": "int num [ 10 ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 375,
                      "end_byte": 378,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 379,
                      "end_byte": 389,
                      "text": "num [ 10 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 379,
                          "end_byte": 382,
                          "text": "num",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 383,
                          "end_byte": 384,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 385,
                          "end_byte": 387,
                          "text": "10",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 388,
                          "end_byte": 389,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 390,
                  "end_byte": 391,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 392,
                  "end_byte": 397,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 392,
                      "end_byte": 395,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 396,
                      "end_byte": 397,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 398,
                  "end_byte": 399,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 400,
          "end_byte": 524,
          "text": "{ int k , max ; max = num [ 0 ] ; for ( k = 0 ; k <= i ; k ++ ) { if ( max <= num [ k ] ) max = num [ k ] ; } return max ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 400,
              "end_byte": 401,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 402,
              "end_byte": 415,
              "text": "int k , max ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 402,
                  "end_byte": 405,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 406,
                  "end_byte": 407,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 408,
                  "end_byte": 409,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 410,
                  "end_byte": 413,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 414,
                  "end_byte": 415,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 416,
              "end_byte": 433,
              "text": "max = num [ 0 ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 416,
                  "end_byte": 431,
                  "text": "max = num [ 0 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 416,
                      "end_byte": 419,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 420,
                      "end_byte": 421,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 422,
                      "end_byte": 431,
                      "text": "num [ 0 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 422,
                          "end_byte": 425,
                          "text": "num",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 426,
                          "end_byte": 431,
                          "text": "[ 0 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 426,
                              "end_byte": 427,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 428,
                              "end_byte": 429,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 430,
                              "end_byte": 431,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 432,
                  "end_byte": 433,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 434,
              "end_byte": 509,
              "text": "for ( k = 0 ; k <= i ; k ++ ) { if ( max <= num [ k ] ) max = num [ k ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 434,
                  "end_byte": 437,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 438,
                  "end_byte": 439,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 440,
                  "end_byte": 445,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 440,
                      "end_byte": 441,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 442,
                      "end_byte": 443,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 444,
                      "end_byte": 445,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 446,
                  "end_byte": 447,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 448,
                  "end_byte": 454,
                  "text": "k <= i",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 448,
                      "end_byte": 449,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 450,
                      "end_byte": 452,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 453,
                      "end_byte": 454,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 455,
                  "end_byte": 456,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 457,
                  "end_byte": 461,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 457,
                      "end_byte": 458,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 459,
                      "end_byte": 461,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 462,
                  "end_byte": 463,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 464,
                  "end_byte": 509,
                  "text": "{ if ( max <= num [ k ] ) max = num [ k ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 464,
                      "end_byte": 465,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 466,
                      "end_byte": 507,
                      "text": "if ( max <= num [ k ] ) max = num [ k ] ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 466,
                          "end_byte": 468,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 469,
                          "end_byte": 489,
                          "text": "( max <= num [ k ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 469,
                              "end_byte": 470,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 471,
                              "end_byte": 487,
                              "text": "max <= num [ k ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 471,
                                  "end_byte": 474,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "<=",
                                  "start_byte": 475,
                                  "end_byte": 477,
                                  "text": "<=",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 478,
                                  "end_byte": 487,
                                  "text": "num [ k ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 478,
                                      "end_byte": 481,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 482,
                                      "end_byte": 487,
                                      "text": "[ k ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 482,
                                          "end_byte": 483,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 484,
                                          "end_byte": 485,
                                          "text": "k",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 486,
                                          "end_byte": 487,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 488,
                              "end_byte": 489,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 490,
                          "end_byte": 507,
                          "text": "max = num [ k ] ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 490,
                              "end_byte": 505,
                              "text": "max = num [ k ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 490,
                                  "end_byte": 493,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 494,
                                  "end_byte": 495,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 496,
                                  "end_byte": 505,
                                  "text": "num [ k ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 496,
                                      "end_byte": 499,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 500,
                                      "end_byte": 505,
                                      "text": "[ k ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 500,
                                          "end_byte": 501,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 502,
                                          "end_byte": 503,
                                          "text": "k",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 504,
                                          "end_byte": 505,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 506,
                              "end_byte": 507,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 508,
                      "end_byte": 509,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 510,
              "end_byte": 522,
              "text": "return max ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 510,
                  "end_byte": 516,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 517,
                  "end_byte": 520,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 521,
                  "end_byte": 522,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 523,
              "end_byte": 524,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}