{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1028,
  "text": "int arr [ 100 ] [ 100 ] ; int tri ( int h , int i , int j ) { if ( h == 2 ) return arr [ i ] [ j ] + ( ( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] ) ? arr [ i + 1 ] [ j ] : arr [ i + 1 ] [ j + 1 ] ) ; else { int m , n = 0 , max , k , hori , tria , l , max2 ; m = tri ( h - 1 , i + 1 , j + 1 ) ; for ( k = 1 ; k < h ; k ++ ) n += arr [ i + k ] [ j ] ; max = 0 ; for ( k = 0 ; k < h - 2 ; k ++ ) { hori = 0 ; for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ; if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ; if ( max < hori + tria ) max = hori + tria ; } max2 = m ; if ( n > max2 ) max2 = n ; if ( max > max2 ) max2 = max ; return arr [ i ] [ j ] + max2 ; } } int main ( ) { int i , j , k , t , h , res ; scanf ( \"%d\\n\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & h ) ; for ( j = 0 ; j < h ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } res = tri ( h , 0 , 0 ) ; printf ( \"%d\\n\" , res ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 25,
      "text": "int arr [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "arr [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "arr [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "arr",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 24,
          "end_byte": 25,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 26,
      "end_byte": 737,
      "text": "int tri ( int h , int i , int j ) { if ( h == 2 ) return arr [ i ] [ j ] + ( ( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] ) ? arr [ i + 1 ] [ j ] : arr [ i + 1 ] [ j + 1 ] ) ; else { int m , n = 0 , max , k , hori , tria , l , max2 ; m = tri ( h - 1 , i + 1 , j + 1 ) ; for ( k = 1 ; k < h ; k ++ ) n += arr [ i + k ] [ j ] ; max = 0 ; for ( k = 0 ; k < h - 2 ; k ++ ) { hori = 0 ; for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ; if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ; if ( max < hori + tria ) max = hori + tria ; } max2 = m ; if ( n > max2 ) max2 = n ; if ( max > max2 ) max2 = max ; return arr [ i ] [ j ] + max2 ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 26,
          "end_byte": 29,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 30,
          "end_byte": 59,
          "text": "tri ( int h , int i , int j )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 30,
              "end_byte": 33,
              "text": "tri",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 34,
              "end_byte": 59,
              "text": "( int h , int i , int j )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 36,
                  "end_byte": 41,
                  "text": "int h",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 36,
                      "end_byte": 39,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 40,
                      "end_byte": 41,
                      "text": "h",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 44,
                  "end_byte": 49,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 44,
                      "end_byte": 47,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 48,
                      "end_byte": 49,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 52,
                  "end_byte": 57,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 52,
                      "end_byte": 55,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 60,
          "end_byte": 737,
          "text": "{ if ( h == 2 ) return arr [ i ] [ j ] + ( ( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] ) ? arr [ i + 1 ] [ j ] : arr [ i + 1 ] [ j + 1 ] ) ; else { int m , n = 0 , max , k , hori , tria , l , max2 ; m = tri ( h - 1 , i + 1 , j + 1 ) ; for ( k = 1 ; k < h ; k ++ ) n += arr [ i + k ] [ j ] ; max = 0 ; for ( k = 0 ; k < h - 2 ; k ++ ) { hori = 0 ; for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ; if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ; if ( max < hori + tria ) max = hori + tria ; } max2 = m ; if ( n > max2 ) max2 = n ; if ( max > max2 ) max2 = max ; return arr [ i ] [ j ] + max2 ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 60,
              "end_byte": 61,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 62,
              "end_byte": 735,
              "text": "if ( h == 2 ) return arr [ i ] [ j ] + ( ( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] ) ? arr [ i + 1 ] [ j ] : arr [ i + 1 ] [ j + 1 ] ) ; else { int m , n = 0 , max , k , hori , tria , l , max2 ; m = tri ( h - 1 , i + 1 , j + 1 ) ; for ( k = 1 ; k < h ; k ++ ) n += arr [ i + k ] [ j ] ; max = 0 ; for ( k = 0 ; k < h - 2 ; k ++ ) { hori = 0 ; for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ; if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ; if ( max < hori + tria ) max = hori + tria ; } max2 = m ; if ( n > max2 ) max2 = n ; if ( max > max2 ) max2 = max ; return arr [ i ] [ j ] + max2 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 62,
                  "end_byte": 64,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 65,
                  "end_byte": 75,
                  "text": "( h == 2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 67,
                      "end_byte": 73,
                      "text": "h == 2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": "h",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 69,
                          "end_byte": 71,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 74,
                      "end_byte": 75,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 76,
                  "end_byte": 204,
                  "text": "return arr [ i ] [ j ] + ( ( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] ) ? arr [ i + 1 ] [ j ] : arr [ i + 1 ] [ j + 1 ] ) ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 76,
                      "end_byte": 82,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 83,
                      "end_byte": 202,
                      "text": "arr [ i ] [ j ] + ( ( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] ) ? arr [ i + 1 ] [ j ] : arr [ i + 1 ] [ j + 1 ] )",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 83,
                          "end_byte": 98,
                          "text": "arr [ i ] [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 83,
                              "end_byte": 92,
                              "text": "arr [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 83,
                                  "end_byte": 86,
                                  "text": "arr",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 87,
                                  "end_byte": 92,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 87,
                                      "end_byte": 88,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 89,
                                      "end_byte": 90,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 91,
                                      "end_byte": 92,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 93,
                              "end_byte": 98,
                              "text": "[ j ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 93,
                                  "end_byte": 94,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 95,
                                  "end_byte": 96,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 97,
                                  "end_byte": 98,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start_byte": 99,
                          "end_byte": 100,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 101,
                          "end_byte": 202,
                          "text": "( ( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] ) ? arr [ i + 1 ] [ j ] : arr [ i + 1 ] [ j + 1 ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "conditional_expression",
                              "start_byte": 103,
                              "end_byte": 200,
                              "text": "( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] ) ? arr [ i + 1 ] [ j ] : arr [ i + 1 ] [ j + 1 ]",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 103,
                                  "end_byte": 152,
                                  "text": "( arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 103,
                                      "end_byte": 104,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 105,
                                      "end_byte": 150,
                                      "text": "arr [ i + 1 ] [ j ] > arr [ i + 1 ] [ j + 1 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 105,
                                          "end_byte": 124,
                                          "text": "arr [ i + 1 ] [ j ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 105,
                                              "end_byte": 118,
                                              "text": "arr [ i + 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 105,
                                                  "end_byte": 108,
                                                  "text": "arr",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 109,
                                                  "end_byte": 118,
                                                  "text": "[ i + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 109,
                                                      "end_byte": 110,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 111,
                                                      "end_byte": 116,
                                                      "text": "i + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 111,
                                                          "end_byte": 112,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 113,
                                                          "end_byte": 114,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 115,
                                                          "end_byte": 116,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 117,
                                                      "end_byte": 118,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 119,
                                              "end_byte": 124,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 119,
                                                  "end_byte": 120,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 121,
                                                  "end_byte": 122,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 123,
                                                  "end_byte": 124,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 125,
                                          "end_byte": 126,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 127,
                                          "end_byte": 150,
                                          "text": "arr [ i + 1 ] [ j + 1 ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 127,
                                              "end_byte": 140,
                                              "text": "arr [ i + 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 127,
                                                  "end_byte": 130,
                                                  "text": "arr",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 131,
                                                  "end_byte": 140,
                                                  "text": "[ i + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 131,
                                                      "end_byte": 132,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 133,
                                                      "end_byte": 138,
                                                      "text": "i + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 133,
                                                          "end_byte": 134,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 135,
                                                          "end_byte": 136,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 137,
                                                          "end_byte": 138,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 139,
                                                      "end_byte": 140,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 141,
                                              "end_byte": 150,
                                              "text": "[ j + 1 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 141,
                                                  "end_byte": 142,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 143,
                                                  "end_byte": 148,
                                                  "text": "j + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 143,
                                                      "end_byte": 144,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 145,
                                                      "end_byte": 146,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 147,
                                                      "end_byte": 148,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 149,
                                                  "end_byte": 150,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "?",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": "?",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 155,
                                  "end_byte": 174,
                                  "text": "arr [ i + 1 ] [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 155,
                                      "end_byte": 168,
                                      "text": "arr [ i + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 155,
                                          "end_byte": 158,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 159,
                                          "end_byte": 168,
                                          "text": "[ i + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 159,
                                              "end_byte": 160,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 161,
                                              "end_byte": 166,
                                              "text": "i + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 161,
                                                  "end_byte": 162,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 163,
                                                  "end_byte": 164,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 165,
                                                  "end_byte": 166,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 167,
                                              "end_byte": 168,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 169,
                                      "end_byte": 174,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 169,
                                          "end_byte": 170,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 171,
                                          "end_byte": 172,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 173,
                                          "end_byte": 174,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ":",
                                  "start_byte": 175,
                                  "end_byte": 176,
                                  "text": ":",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 177,
                                  "end_byte": 200,
                                  "text": "arr [ i + 1 ] [ j + 1 ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 177,
                                      "end_byte": 190,
                                      "text": "arr [ i + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 177,
                                          "end_byte": 180,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 181,
                                          "end_byte": 190,
                                          "text": "[ i + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 181,
                                              "end_byte": 182,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 183,
                                              "end_byte": 188,
                                              "text": "i + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 183,
                                                  "end_byte": 184,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 185,
                                                  "end_byte": 186,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 187,
                                                  "end_byte": 188,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 189,
                                              "end_byte": 190,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 191,
                                      "end_byte": 200,
                                      "text": "[ j + 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 191,
                                          "end_byte": 192,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 193,
                                          "end_byte": 198,
                                          "text": "j + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 193,
                                              "end_byte": 194,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 195,
                                              "end_byte": 196,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 197,
                                              "end_byte": 198,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 199,
                                          "end_byte": 200,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 201,
                              "end_byte": 202,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 203,
                      "end_byte": 204,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 205,
                  "end_byte": 735,
                  "text": "else { int m , n = 0 , max , k , hori , tria , l , max2 ; m = tri ( h - 1 , i + 1 , j + 1 ) ; for ( k = 1 ; k < h ; k ++ ) n += arr [ i + k ] [ j ] ; max = 0 ; for ( k = 0 ; k < h - 2 ; k ++ ) { hori = 0 ; for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ; if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ; if ( max < hori + tria ) max = hori + tria ; } max2 = m ; if ( n > max2 ) max2 = n ; if ( max > max2 ) max2 = max ; return arr [ i ] [ j ] + max2 ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 205,
                      "end_byte": 209,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 210,
                      "end_byte": 735,
                      "text": "{ int m , n = 0 , max , k , hori , tria , l , max2 ; m = tri ( h - 1 , i + 1 , j + 1 ) ; for ( k = 1 ; k < h ; k ++ ) n += arr [ i + k ] [ j ] ; max = 0 ; for ( k = 0 ; k < h - 2 ; k ++ ) { hori = 0 ; for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ; if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ; if ( max < hori + tria ) max = hori + tria ; } max2 = m ; if ( n > max2 ) max2 = n ; if ( max > max2 ) max2 = max ; return arr [ i ] [ j ] + max2 ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 210,
                          "end_byte": 211,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "declaration",
                          "start_byte": 212,
                          "end_byte": 262,
                          "text": "int m , n = 0 , max , k , hori , tria , l , max2 ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 212,
                              "end_byte": 215,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 216,
                              "end_byte": 217,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 218,
                              "end_byte": 219,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 220,
                              "end_byte": 225,
                              "text": "n = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 220,
                                  "end_byte": 221,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 222,
                                  "end_byte": 223,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 224,
                                  "end_byte": 225,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 226,
                              "end_byte": 227,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 228,
                              "end_byte": 231,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 232,
                              "end_byte": 233,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 234,
                              "end_byte": 235,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 236,
                              "end_byte": 237,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 238,
                              "end_byte": 242,
                              "text": "hori",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 243,
                              "end_byte": 244,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 245,
                              "end_byte": 249,
                              "text": "tria",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 250,
                              "end_byte": 251,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 252,
                              "end_byte": 253,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 254,
                              "end_byte": 255,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 256,
                              "end_byte": 260,
                              "text": "max2",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 263,
                          "end_byte": 298,
                          "text": "m = tri ( h - 1 , i + 1 , j + 1 ) ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 263,
                              "end_byte": 296,
                              "text": "m = tri ( h - 1 , i + 1 , j + 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 263,
                                  "end_byte": 264,
                                  "text": "m",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 265,
                                  "end_byte": 266,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 267,
                                  "end_byte": 296,
                                  "text": "tri ( h - 1 , i + 1 , j + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 267,
                                      "end_byte": 270,
                                      "text": "tri",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 271,
                                      "end_byte": 296,
                                      "text": "( h - 1 , i + 1 , j + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 271,
                                          "end_byte": 272,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 273,
                                          "end_byte": 278,
                                          "text": "h - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 273,
                                              "end_byte": 274,
                                              "text": "h",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 275,
                                              "end_byte": 276,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 277,
                                              "end_byte": 278,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 279,
                                          "end_byte": 280,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 281,
                                          "end_byte": 286,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 281,
                                              "end_byte": 282,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 283,
                                              "end_byte": 284,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 285,
                                              "end_byte": 286,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 287,
                                          "end_byte": 288,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 289,
                                          "end_byte": 294,
                                          "text": "j + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 289,
                                              "end_byte": 290,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 291,
                                              "end_byte": 292,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 293,
                                              "end_byte": 294,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 295,
                                          "end_byte": 296,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 297,
                              "end_byte": 298,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 299,
                          "end_byte": 354,
                          "text": "for ( k = 1 ; k < h ; k ++ ) n += arr [ i + k ] [ j ] ;",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 299,
                              "end_byte": 302,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 303,
                              "end_byte": 304,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 305,
                              "end_byte": 310,
                              "text": "k = 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 309,
                                  "end_byte": 310,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 311,
                              "end_byte": 312,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 313,
                              "end_byte": 318,
                              "text": "k < h",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 313,
                                  "end_byte": 314,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 315,
                                  "end_byte": 316,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 317,
                                  "end_byte": 318,
                                  "text": "h",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 319,
                              "end_byte": 320,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 321,
                              "end_byte": 325,
                              "text": "k ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 321,
                                  "end_byte": 322,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 323,
                                  "end_byte": 325,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 328,
                              "end_byte": 354,
                              "text": "n += arr [ i + k ] [ j ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 328,
                                  "end_byte": 352,
                                  "text": "n += arr [ i + k ] [ j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 328,
                                      "end_byte": 329,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 330,
                                      "end_byte": 332,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 333,
                                      "end_byte": 352,
                                      "text": "arr [ i + k ] [ j ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 333,
                                          "end_byte": 346,
                                          "text": "arr [ i + k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 333,
                                              "end_byte": 336,
                                              "text": "arr",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 337,
                                              "end_byte": 346,
                                              "text": "[ i + k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 337,
                                                  "end_byte": 338,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 339,
                                                  "end_byte": 344,
                                                  "text": "i + k",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 339,
                                                      "end_byte": 340,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 341,
                                                      "end_byte": 342,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 343,
                                                      "end_byte": 344,
                                                      "text": "k",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 345,
                                                  "end_byte": 346,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 347,
                                          "end_byte": 352,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 347,
                                              "end_byte": 348,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 349,
                                              "end_byte": 350,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 351,
                                              "end_byte": 352,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 353,
                                  "end_byte": 354,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 355,
                          "end_byte": 364,
                          "text": "max = 0 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 355,
                              "end_byte": 362,
                              "text": "max = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 355,
                                  "end_byte": 358,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 359,
                                  "end_byte": 360,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 361,
                                  "end_byte": 362,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 363,
                              "end_byte": 364,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 365,
                          "end_byte": 632,
                          "text": "for ( k = 0 ; k < h - 2 ; k ++ ) { hori = 0 ; for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ; if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ; if ( max < hori + tria ) max = hori + tria ; }",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 365,
                              "end_byte": 368,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 369,
                              "end_byte": 370,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 371,
                              "end_byte": 376,
                              "text": "k = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 371,
                                  "end_byte": 372,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 373,
                                  "end_byte": 374,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 375,
                                  "end_byte": 376,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 377,
                              "end_byte": 378,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 379,
                              "end_byte": 388,
                              "text": "k < h - 2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 381,
                                  "end_byte": 382,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 383,
                                  "end_byte": 388,
                                  "text": "h - 2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 383,
                                      "end_byte": 384,
                                      "text": "h",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 385,
                                      "end_byte": 386,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 387,
                                      "end_byte": 388,
                                      "text": "2",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 389,
                              "end_byte": 390,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 391,
                              "end_byte": 395,
                              "text": "k ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 391,
                                  "end_byte": 392,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 393,
                                  "end_byte": 395,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 396,
                              "end_byte": 397,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 398,
                              "end_byte": 632,
                              "text": "{ hori = 0 ; for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ; if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ; if ( max < hori + tria ) max = hori + tria ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 398,
                                  "end_byte": 399,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 400,
                                  "end_byte": 410,
                                  "text": "hori = 0 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 400,
                                      "end_byte": 408,
                                      "text": "hori = 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 400,
                                          "end_byte": 404,
                                          "text": "hori",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 405,
                                          "end_byte": 406,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 407,
                                          "end_byte": 408,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 409,
                                      "end_byte": 410,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "for_statement",
                                  "start_byte": 411,
                                  "end_byte": 474,
                                  "text": "for ( l = 0 ; l <= k ; l ++ ) hori += arr [ i + l + 1 ] [ j ] ;",
                                  "children": [
                                    {
                                      "type": "for",
                                      "start_byte": 411,
                                      "end_byte": 414,
                                      "text": "for",
                                      "children": []
                                    },
                                    {
                                      "type": "(",
                                      "start_byte": 415,
                                      "end_byte": 416,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 417,
                                      "end_byte": 422,
                                      "text": "l = 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 417,
                                          "end_byte": 418,
                                          "text": "l",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 419,
                                          "end_byte": 420,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 421,
                                          "end_byte": 422,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 423,
                                      "end_byte": 424,
                                      "text": ";",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 425,
                                      "end_byte": 431,
                                      "text": "l <= k",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 425,
                                          "end_byte": 426,
                                          "text": "l",
                                          "children": []
                                        },
                                        {
                                          "type": "<=",
                                          "start_byte": 427,
                                          "end_byte": 429,
                                          "text": "<=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 430,
                                          "end_byte": 431,
                                          "text": "k",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 432,
                                      "end_byte": 433,
                                      "text": ";",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 434,
                                      "end_byte": 438,
                                      "text": "l ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 434,
                                          "end_byte": 435,
                                          "text": "l",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 436,
                                          "end_byte": 438,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 439,
                                      "end_byte": 440,
                                      "text": ")",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 441,
                                      "end_byte": 474,
                                      "text": "hori += arr [ i + l + 1 ] [ j ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 441,
                                          "end_byte": 472,
                                          "text": "hori += arr [ i + l + 1 ] [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 441,
                                              "end_byte": 445,
                                              "text": "hori",
                                              "children": []
                                            },
                                            {
                                              "type": "+=",
                                              "start_byte": 446,
                                              "end_byte": 448,
                                              "text": "+=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 449,
                                              "end_byte": 472,
                                              "text": "arr [ i + l + 1 ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 449,
                                                  "end_byte": 466,
                                                  "text": "arr [ i + l + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 449,
                                                      "end_byte": 452,
                                                      "text": "arr",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 453,
                                                      "end_byte": 466,
                                                      "text": "[ i + l + 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 453,
                                                          "end_byte": 454,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 455,
                                                          "end_byte": 464,
                                                          "text": "i + l + 1",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 455,
                                                              "end_byte": 460,
                                                              "text": "i + l",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 455,
                                                                  "end_byte": 456,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 457,
                                                                  "end_byte": 458,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 459,
                                                                  "end_byte": 460,
                                                                  "text": "l",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 461,
                                                              "end_byte": 462,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 463,
                                                              "end_byte": 464,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 465,
                                                          "end_byte": 466,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 467,
                                                  "end_byte": 472,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 467,
                                                      "end_byte": 468,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 469,
                                                      "end_byte": 470,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 471,
                                                      "end_byte": 472,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 473,
                                          "end_byte": 474,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start_byte": 475,
                                  "end_byte": 585,
                                  "text": "if ( h - 2 - k == 1 ) tria = arr [ i + 2 + k ] [ j + 1 ] ; else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ;",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start_byte": 475,
                                      "end_byte": 477,
                                      "text": "if",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 478,
                                      "end_byte": 496,
                                      "text": "( h - 2 - k == 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 478,
                                          "end_byte": 479,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 480,
                                          "end_byte": 494,
                                          "text": "h - 2 - k == 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 480,
                                              "end_byte": 489,
                                              "text": "h - 2 - k",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 480,
                                                  "end_byte": 485,
                                                  "text": "h - 2",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 480,
                                                      "end_byte": 481,
                                                      "text": "h",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 482,
                                                      "end_byte": 483,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 484,
                                                      "end_byte": 485,
                                                      "text": "2",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 486,
                                                  "end_byte": 487,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 488,
                                                  "end_byte": 489,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 490,
                                              "end_byte": 492,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 493,
                                              "end_byte": 494,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 495,
                                          "end_byte": 496,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 497,
                                      "end_byte": 533,
                                      "text": "tria = arr [ i + 2 + k ] [ j + 1 ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 497,
                                          "end_byte": 531,
                                          "text": "tria = arr [ i + 2 + k ] [ j + 1 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 497,
                                              "end_byte": 501,
                                              "text": "tria",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 502,
                                              "end_byte": 503,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 504,
                                              "end_byte": 531,
                                              "text": "arr [ i + 2 + k ] [ j + 1 ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 504,
                                                  "end_byte": 521,
                                                  "text": "arr [ i + 2 + k ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 504,
                                                      "end_byte": 507,
                                                      "text": "arr",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 508,
                                                      "end_byte": 521,
                                                      "text": "[ i + 2 + k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 508,
                                                          "end_byte": 509,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 510,
                                                          "end_byte": 519,
                                                          "text": "i + 2 + k",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 510,
                                                              "end_byte": 515,
                                                              "text": "i + 2",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 510,
                                                                  "end_byte": 511,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 512,
                                                                  "end_byte": 513,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 514,
                                                                  "end_byte": 515,
                                                                  "text": "2",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 516,
                                                              "end_byte": 517,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 518,
                                                              "end_byte": 519,
                                                              "text": "k",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 520,
                                                          "end_byte": 521,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 522,
                                                  "end_byte": 531,
                                                  "text": "[ j + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 522,
                                                      "end_byte": 523,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 524,
                                                      "end_byte": 529,
                                                      "text": "j + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 524,
                                                          "end_byte": 525,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 526,
                                                          "end_byte": 527,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 528,
                                                          "end_byte": 529,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 530,
                                                      "end_byte": 531,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 532,
                                          "end_byte": 533,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "else_clause",
                                      "start_byte": 534,
                                      "end_byte": 585,
                                      "text": "else tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ;",
                                      "children": [
                                        {
                                          "type": "else",
                                          "start_byte": 534,
                                          "end_byte": 538,
                                          "text": "else",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 539,
                                          "end_byte": 585,
                                          "text": "tria = tri ( h - 2 - k , i + 2 + k , j + 1 ) ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 539,
                                              "end_byte": 583,
                                              "text": "tria = tri ( h - 2 - k , i + 2 + k , j + 1 )",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 539,
                                                  "end_byte": 543,
                                                  "text": "tria",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 544,
                                                  "end_byte": 545,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "call_expression",
                                                  "start_byte": 546,
                                                  "end_byte": 583,
                                                  "text": "tri ( h - 2 - k , i + 2 + k , j + 1 )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 546,
                                                      "end_byte": 549,
                                                      "text": "tri",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "argument_list",
                                                      "start_byte": 550,
                                                      "end_byte": 583,
                                                      "text": "( h - 2 - k , i + 2 + k , j + 1 )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 550,
                                                          "end_byte": 551,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 552,
                                                          "end_byte": 561,
                                                          "text": "h - 2 - k",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 552,
                                                              "end_byte": 557,
                                                              "text": "h - 2",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 552,
                                                                  "end_byte": 553,
                                                                  "text": "h",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 554,
                                                                  "end_byte": 555,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 556,
                                                                  "end_byte": 557,
                                                                  "text": "2",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 558,
                                                              "end_byte": 559,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 560,
                                                              "end_byte": 561,
                                                              "text": "k",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start_byte": 562,
                                                          "end_byte": 563,
                                                          "text": ",",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 564,
                                                          "end_byte": 573,
                                                          "text": "i + 2 + k",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 564,
                                                              "end_byte": 569,
                                                              "text": "i + 2",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 564,
                                                                  "end_byte": 565,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "+",
                                                                  "start_byte": 566,
                                                                  "end_byte": 567,
                                                                  "text": "+",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 568,
                                                                  "end_byte": 569,
                                                                  "text": "2",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 570,
                                                              "end_byte": 571,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 572,
                                                              "end_byte": 573,
                                                              "text": "k",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ",",
                                                          "start_byte": 574,
                                                          "end_byte": 575,
                                                          "text": ",",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 576,
                                                          "end_byte": 581,
                                                          "text": "j + 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 576,
                                                              "end_byte": 577,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 578,
                                                              "end_byte": 579,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 580,
                                                              "end_byte": 581,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 582,
                                                          "end_byte": 583,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 584,
                                              "end_byte": 585,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start_byte": 586,
                                  "end_byte": 630,
                                  "text": "if ( max < hori + tria ) max = hori + tria ;",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start_byte": 586,
                                      "end_byte": 588,
                                      "text": "if",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 589,
                                      "end_byte": 610,
                                      "text": "( max < hori + tria )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 589,
                                          "end_byte": 590,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 591,
                                          "end_byte": 608,
                                          "text": "max < hori + tria",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 591,
                                              "end_byte": 594,
                                              "text": "max",
                                              "children": []
                                            },
                                            {
                                              "type": "<",
                                              "start_byte": 595,
                                              "end_byte": 596,
                                              "text": "<",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 597,
                                              "end_byte": 608,
                                              "text": "hori + tria",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 597,
                                                  "end_byte": 601,
                                                  "text": "hori",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 602,
                                                  "end_byte": 603,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 604,
                                                  "end_byte": 608,
                                                  "text": "tria",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 609,
                                          "end_byte": 610,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 611,
                                      "end_byte": 630,
                                      "text": "max = hori + tria ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 611,
                                          "end_byte": 628,
                                          "text": "max = hori + tria",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 611,
                                              "end_byte": 614,
                                              "text": "max",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 615,
                                              "end_byte": 616,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 617,
                                              "end_byte": 628,
                                              "text": "hori + tria",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 617,
                                                  "end_byte": 621,
                                                  "text": "hori",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 622,
                                                  "end_byte": 623,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 624,
                                                  "end_byte": 628,
                                                  "text": "tria",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 629,
                                          "end_byte": 630,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 631,
                                  "end_byte": 632,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 633,
                          "end_byte": 643,
                          "text": "max2 = m ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 633,
                              "end_byte": 641,
                              "text": "max2 = m",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 633,
                                  "end_byte": 637,
                                  "text": "max2",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 638,
                                  "end_byte": 639,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 640,
                                  "end_byte": 641,
                                  "text": "m",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 642,
                              "end_byte": 643,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "if_statement",
                          "start_byte": 644,
                          "end_byte": 670,
                          "text": "if ( n > max2 ) max2 = n ;",
                          "children": [
                            {
                              "type": "if",
                              "start_byte": 644,
                              "end_byte": 646,
                              "text": "if",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 647,
                              "end_byte": 659,
                              "text": "( n > max2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 647,
                                  "end_byte": 648,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 649,
                                  "end_byte": 657,
                                  "text": "n > max2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 649,
                                      "end_byte": 650,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 651,
                                      "end_byte": 652,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 653,
                                      "end_byte": 657,
                                      "text": "max2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 658,
                                  "end_byte": 659,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 660,
                              "end_byte": 670,
                              "text": "max2 = n ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 660,
                                  "end_byte": 668,
                                  "text": "max2 = n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 660,
                                      "end_byte": 664,
                                      "text": "max2",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 665,
                                      "end_byte": 666,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 667,
                                      "end_byte": 668,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 669,
                                  "end_byte": 670,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "if_statement",
                          "start_byte": 671,
                          "end_byte": 701,
                          "text": "if ( max > max2 ) max2 = max ;",
                          "children": [
                            {
                              "type": "if",
                              "start_byte": 671,
                              "end_byte": 673,
                              "text": "if",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 674,
                              "end_byte": 688,
                              "text": "( max > max2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 674,
                                  "end_byte": 675,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 676,
                                  "end_byte": 686,
                                  "text": "max > max2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 676,
                                      "end_byte": 679,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 680,
                                      "end_byte": 681,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 682,
                                      "end_byte": 686,
                                      "text": "max2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 687,
                                  "end_byte": 688,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 689,
                              "end_byte": 701,
                              "text": "max2 = max ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 689,
                                  "end_byte": 699,
                                  "text": "max2 = max",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 689,
                                      "end_byte": 693,
                                      "text": "max2",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 694,
                                      "end_byte": 695,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 696,
                                      "end_byte": 699,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 700,
                                  "end_byte": 701,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 702,
                          "end_byte": 733,
                          "text": "return arr [ i ] [ j ] + max2 ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 702,
                              "end_byte": 708,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 709,
                              "end_byte": 731,
                              "text": "arr [ i ] [ j ] + max2",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 709,
                                  "end_byte": 724,
                                  "text": "arr [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 709,
                                      "end_byte": 718,
                                      "text": "arr [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 709,
                                          "end_byte": 712,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 713,
                                          "end_byte": 718,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 713,
                                              "end_byte": 714,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 715,
                                              "end_byte": 716,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 717,
                                              "end_byte": 718,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 719,
                                      "end_byte": 724,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 719,
                                          "end_byte": 720,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 721,
                                          "end_byte": 722,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 723,
                                          "end_byte": 724,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 725,
                                  "end_byte": 726,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 727,
                                  "end_byte": 731,
                                  "text": "max2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 732,
                              "end_byte": 733,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 734,
                          "end_byte": 735,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 736,
              "end_byte": 737,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 738,
      "end_byte": 1028,
      "text": "int main ( ) { int i , j , k , t , h , res ; scanf ( \"%d\\n\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & h ) ; for ( j = 0 ; j < h ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } res = tri ( h , 0 , 0 ) ; printf ( \"%d\\n\" , res ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 738,
          "end_byte": 741,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 742,
          "end_byte": 750,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 742,
              "end_byte": 746,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 747,
              "end_byte": 750,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 747,
                  "end_byte": 748,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 749,
                  "end_byte": 750,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 751,
          "end_byte": 1028,
          "text": "{ int i , j , k , t , h , res ; scanf ( \"%d\\n\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & h ) ; for ( j = 0 ; j < h ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } res = tri ( h , 0 , 0 ) ; printf ( \"%d\\n\" , res ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 751,
              "end_byte": 752,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 753,
              "end_byte": 782,
              "text": "int i , j , k , t , h , res ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 753,
                  "end_byte": 756,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 757,
                  "end_byte": 758,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 759,
                  "end_byte": 760,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 761,
                  "end_byte": 762,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 763,
                  "end_byte": 764,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 765,
                  "end_byte": 766,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 767,
                  "end_byte": 768,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 769,
                  "end_byte": 770,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 771,
                  "end_byte": 772,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 773,
                  "end_byte": 774,
                  "text": "h",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 775,
                  "end_byte": 776,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 777,
                  "end_byte": 780,
                  "text": "res",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 781,
                  "end_byte": 782,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 783,
              "end_byte": 807,
              "text": "scanf ( \"%d\\n\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 783,
                  "end_byte": 805,
                  "text": "scanf ( \"%d\\n\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 783,
                      "end_byte": 788,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 789,
                      "end_byte": 805,
                      "text": "( \"%d\\n\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 789,
                          "end_byte": 790,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 791,
                          "end_byte": 797,
                          "text": "\"%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 791,
                              "end_byte": 792,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 792,
                              "end_byte": 794,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 794,
                              "end_byte": 796,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 796,
                              "end_byte": 797,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 798,
                          "end_byte": 799,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 800,
                          "end_byte": 803,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 800,
                              "end_byte": 801,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 802,
                              "end_byte": 803,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 804,
                          "end_byte": 805,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 806,
                  "end_byte": 807,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 808,
              "end_byte": 1015,
              "text": "for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & h ) ; for ( j = 0 ; j < h ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } res = tri ( h , 0 , 0 ) ; printf ( \"%d\\n\" , res ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 808,
                  "end_byte": 811,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 812,
                  "end_byte": 813,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 814,
                  "end_byte": 819,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 814,
                      "end_byte": 815,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 816,
                      "end_byte": 817,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 818,
                      "end_byte": 819,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 820,
                  "end_byte": 821,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 822,
                  "end_byte": 827,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 822,
                      "end_byte": 823,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 824,
                      "end_byte": 825,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 826,
                      "end_byte": 827,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 828,
                  "end_byte": 829,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 830,
                  "end_byte": 834,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 830,
                      "end_byte": 831,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 832,
                      "end_byte": 834,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 835,
                  "end_byte": 836,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 837,
                  "end_byte": 1015,
                  "text": "{ scanf ( \"%d\" , & h ) ; for ( j = 0 ; j < h ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } res = tri ( h , 0 , 0 ) ; printf ( \"%d\\n\" , res ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 837,
                      "end_byte": 838,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 839,
                      "end_byte": 861,
                      "text": "scanf ( \"%d\" , & h ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 839,
                          "end_byte": 859,
                          "text": "scanf ( \"%d\" , & h )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 839,
                              "end_byte": 844,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 845,
                              "end_byte": 859,
                              "text": "( \"%d\" , & h )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 845,
                                  "end_byte": 846,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 847,
                                  "end_byte": 851,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 847,
                                      "end_byte": 848,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 848,
                                      "end_byte": 850,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 850,
                                      "end_byte": 851,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 852,
                                  "end_byte": 853,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 854,
                                  "end_byte": 857,
                                  "text": "& h",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 854,
                                      "end_byte": 855,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 856,
                                      "end_byte": 857,
                                      "text": "h",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 858,
                                  "end_byte": 859,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 860,
                          "end_byte": 861,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 862,
                      "end_byte": 961,
                      "text": "for ( j = 0 ; j < h ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 862,
                          "end_byte": 865,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 866,
                          "end_byte": 867,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 868,
                          "end_byte": 873,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 868,
                              "end_byte": 869,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 870,
                              "end_byte": 871,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 872,
                              "end_byte": 873,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 874,
                          "end_byte": 875,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 876,
                          "end_byte": 881,
                          "text": "j < h",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 876,
                              "end_byte": 877,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 878,
                              "end_byte": 879,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 880,
                              "end_byte": 881,
                              "text": "h",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 882,
                          "end_byte": 883,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 884,
                          "end_byte": 888,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 884,
                              "end_byte": 885,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 886,
                              "end_byte": 888,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 889,
                          "end_byte": 890,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 891,
                          "end_byte": 961,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 891,
                              "end_byte": 892,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 893,
                              "end_byte": 959,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ;",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 893,
                                  "end_byte": 896,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 897,
                                  "end_byte": 898,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 899,
                                  "end_byte": 904,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 899,
                                      "end_byte": 900,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 901,
                                      "end_byte": 902,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 903,
                                      "end_byte": 904,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 905,
                                  "end_byte": 906,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 907,
                                  "end_byte": 913,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 907,
                                      "end_byte": 908,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 909,
                                      "end_byte": 911,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 912,
                                      "end_byte": 913,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 914,
                                  "end_byte": 915,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 916,
                                  "end_byte": 920,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 916,
                                      "end_byte": 917,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 918,
                                      "end_byte": 920,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 921,
                                  "end_byte": 922,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 923,
                                  "end_byte": 959,
                                  "text": "scanf ( \"%d\" , & arr [ j ] [ k ] ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 923,
                                      "end_byte": 957,
                                      "text": "scanf ( \"%d\" , & arr [ j ] [ k ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 923,
                                          "end_byte": 928,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 929,
                                          "end_byte": 957,
                                          "text": "( \"%d\" , & arr [ j ] [ k ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 929,
                                              "end_byte": 930,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 931,
                                              "end_byte": 935,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 931,
                                                  "end_byte": 932,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 932,
                                                  "end_byte": 934,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 934,
                                                  "end_byte": 935,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 936,
                                              "end_byte": 937,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 938,
                                              "end_byte": 955,
                                              "text": "& arr [ j ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 938,
                                                  "end_byte": 939,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 940,
                                                  "end_byte": 955,
                                                  "text": "arr [ j ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 940,
                                                      "end_byte": 949,
                                                      "text": "arr [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 940,
                                                          "end_byte": 943,
                                                          "text": "arr",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 944,
                                                          "end_byte": 949,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 944,
                                                              "end_byte": 945,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 946,
                                                              "end_byte": 947,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 948,
                                                              "end_byte": 949,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 950,
                                                      "end_byte": 955,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 950,
                                                          "end_byte": 951,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 952,
                                                          "end_byte": 953,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 954,
                                                          "end_byte": 955,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 956,
                                              "end_byte": 957,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 958,
                                      "end_byte": 959,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 960,
                              "end_byte": 961,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 962,
                      "end_byte": 987,
                      "text": "res = tri ( h , 0 , 0 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 962,
                          "end_byte": 985,
                          "text": "res = tri ( h , 0 , 0 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 962,
                              "end_byte": 965,
                              "text": "res",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 966,
                              "end_byte": 967,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 968,
                              "end_byte": 985,
                              "text": "tri ( h , 0 , 0 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 968,
                                  "end_byte": 971,
                                  "text": "tri",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 972,
                                  "end_byte": 985,
                                  "text": "( h , 0 , 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 972,
                                      "end_byte": 973,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 974,
                                      "end_byte": 975,
                                      "text": "h",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 976,
                                      "end_byte": 977,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 978,
                                      "end_byte": 979,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 980,
                                      "end_byte": 981,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 982,
                                      "end_byte": 983,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 984,
                                      "end_byte": 985,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 986,
                          "end_byte": 987,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 988,
                      "end_byte": 1013,
                      "text": "printf ( \"%d\\n\" , res ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 988,
                          "end_byte": 1011,
                          "text": "printf ( \"%d\\n\" , res )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 988,
                              "end_byte": 994,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 995,
                              "end_byte": 1011,
                              "text": "( \"%d\\n\" , res )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 995,
                                  "end_byte": 996,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 997,
                                  "end_byte": 1003,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 997,
                                      "end_byte": 998,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 998,
                                      "end_byte": 1000,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1000,
                                      "end_byte": 1002,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1002,
                                      "end_byte": 1003,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1004,
                                  "end_byte": 1005,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1006,
                                  "end_byte": 1009,
                                  "text": "res",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1010,
                                  "end_byte": 1011,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1012,
                          "end_byte": 1013,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1014,
                      "end_byte": 1015,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1016,
              "end_byte": 1026,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1016,
                  "end_byte": 1022,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1023,
                  "end_byte": 1024,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1025,
                  "end_byte": 1026,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1027,
              "end_byte": 1028,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}