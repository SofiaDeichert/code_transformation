static int sum1 = 0 ; static int sum = 0 ; void fun ( int * * , int , int , int ) ; void down ( int * * ptr , int x , int y , int n ) { if ( x < n - 1 ) { x ++ ; sum1 += ptr [ x ] [ y ] ; if ( sum1 > sum ) sum = sum1 ; fun ( ptr , x , y , n ) ; sum1 -= ptr [ x ] [ y ] ; } } void diag ( int * * ptr , int x , int y , int n ) { if ( x < n - 1 ) { x ++ ; y ++ ; sum1 += ptr [ x ] [ y ] ; if ( sum1 > sum ) sum = sum1 ; fun ( ptr , x , y , n ) ; sum1 -= ptr [ x ] [ y ] ; } } void fun ( int * * ptr , int x , int y , int n ) { down ( ptr , x , y , n ) ; diag ( ptr , x , y , n ) ; } int main ( void ) { int * * ptr , i , j , n , k , l ; scanf ( "%d" , & k ) ; for ( l = 0 ; l < k ; l ++ ) { scanf ( "%d" , & n ) ; ptr = ( int * * ) malloc ( sizeof ( int * ) * n ) ; for ( i = 0 ; i < n ; i ++ ) ptr [ i ] = ( int * ) malloc ( sizeof ( int ) * ( n + 1 ) ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & ptr [ i ] [ j ] ) ; } sum = sum1 = ptr [ 0 ] [ 0 ] ; fun ( ptr , 0 , 0 , n ) ; printf ( "%d" , sum ) ; } return 0 ; }