int Maxsum ( int A [ 100 ] [ 100 ] , int n ) { int i , k ; for ( i = 0 ; i < n ; i ++ ) { for ( k = 0 ; k <= i ; k ++ ) { if ( i - 1 >= 0 && k - 1 >= 0 && k < i ) A [ i ] [ k ] = MAX ( A [ i ] [ k ] + A [ i - 1 ] [ k - 1 ] , A [ i ] [ k ] + A [ i - 1 ] [ k ] ) ; else if ( k == i ) A [ i ] [ k ] += A [ i - 1 ] [ k - 1 ] ; else A [ i ] [ k ] += A [ i - 1 ] [ k ] ; } } int max = - 1 ; int j ; i = n - 1 ; for ( j = 0 ; j < n ; j ++ ) { if ( A [ i ] [ j ] > max ) max = A [ i ] [ j ] ; } return max ; } int main ( ) { int T [ 100 ] [ 100 ] ; int t , n , k = 0 , ans [ 1000 ] , i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; j = 0 ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & T [ i ] [ j ] ) ; } } ans [ k ++ ] = Maxsum ( T , n ) ; } printf ( "\n\n\n" ) ; for ( i = 0 ; i < k ; i ++ ) printf ( "%d\n" , ans [ i ] ) ; return 0 ; }