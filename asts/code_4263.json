{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 996,
  "text": "int inp [ 5051 ] , out [ 100 ] ; char str [ BUFF ] ; int largR ( int N ) { int i , j , a , b ; for ( i = N - 1 ; i >= 1 ; i -- ) { a = ( i - 1 ) * i / 2 ; b = ( i + 1 ) * i / 2 ; for ( j = 1 ; j <= i ; j ++ ) inp [ a + j ] += inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ] ; } return inp [ 1 ] ; } int main ( ) { int T , i , row , incount , readint ; int N , Ma , num , k ; char cha ; scanf ( \"%d\" , & T ) ; while ( cha = fgetc ( stdin ) ) { if ( cha == '\\n' ) break ; } N = Ma = row = readint = num = 0 ; while ( ( incount = fread ( str , 1 , BUFF , stdin ) ) > 0 ) { for ( i = 0 ; i < incount ; i ++ ) { if ( str [ i ] >= '0' && str [ i ] <= '9' ) { readint = 1 ; num = num * 10 + str [ i ] - '0' ; } else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; } } } for ( i = 0 ; i < row ; i ++ ) printf ( \"%d\\n\" , out [ i ] ) ; return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 32,
      "text": "int inp [ 5051 ] , out [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 16,
          "text": "inp [ 5051 ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "inp",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 8,
              "end_byte": 9,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 10,
              "end_byte": 14,
              "text": "5051",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 15,
              "end_byte": 16,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ",",
          "start_byte": 17,
          "end_byte": 18,
          "text": ",",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 19,
          "end_byte": 30,
          "text": "out [ 100 ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 19,
              "end_byte": 22,
              "text": "out",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 23,
              "end_byte": 24,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 25,
              "end_byte": 28,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 29,
              "end_byte": 30,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 31,
          "end_byte": 32,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 33,
      "end_byte": 52,
      "text": "char str [ BUFF ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 33,
          "end_byte": 37,
          "text": "char",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 38,
          "end_byte": 50,
          "text": "str [ BUFF ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 38,
              "end_byte": 41,
              "text": "str",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 42,
              "end_byte": 43,
              "text": "[",
              "children": []
            },
            {
              "type": "identifier",
              "start_byte": 44,
              "end_byte": 48,
              "text": "BUFF",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 49,
              "end_byte": 50,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 51,
          "end_byte": 52,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 53,
      "end_byte": 320,
      "text": "int largR ( int N ) { int i , j , a , b ; for ( i = N - 1 ; i >= 1 ; i -- ) { a = ( i - 1 ) * i / 2 ; b = ( i + 1 ) * i / 2 ; for ( j = 1 ; j <= i ; j ++ ) inp [ a + j ] += inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ] ; } return inp [ 1 ] ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 53,
          "end_byte": 56,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 57,
          "end_byte": 72,
          "text": "largR ( int N )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 57,
              "end_byte": 62,
              "text": "largR",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 63,
              "end_byte": 72,
              "text": "( int N )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 65,
                  "end_byte": 70,
                  "text": "int N",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 65,
                      "end_byte": 68,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "N",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 73,
          "end_byte": 320,
          "text": "{ int i , j , a , b ; for ( i = N - 1 ; i >= 1 ; i -- ) { a = ( i - 1 ) * i / 2 ; b = ( i + 1 ) * i / 2 ; for ( j = 1 ; j <= i ; j ++ ) inp [ a + j ] += inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ] ; } return inp [ 1 ] ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 73,
              "end_byte": 74,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 75,
              "end_byte": 94,
              "text": "int i , j , a , b ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 75,
                  "end_byte": 78,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 85,
                  "end_byte": 86,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 89,
                  "end_byte": 90,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 91,
                  "end_byte": 92,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 93,
                  "end_byte": 94,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 95,
              "end_byte": 299,
              "text": "for ( i = N - 1 ; i >= 1 ; i -- ) { a = ( i - 1 ) * i / 2 ; b = ( i + 1 ) * i / 2 ; for ( j = 1 ; j <= i ; j ++ ) inp [ a + j ] += inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 95,
                  "end_byte": 98,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 101,
                  "end_byte": 110,
                  "text": "i = N - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 103,
                      "end_byte": 104,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 105,
                      "end_byte": 110,
                      "text": "N - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 105,
                          "end_byte": 106,
                          "text": "N",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 109,
                          "end_byte": 110,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 113,
                  "end_byte": 119,
                  "text": "i >= 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 115,
                      "end_byte": 117,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 122,
                  "end_byte": 126,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 124,
                      "end_byte": 126,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 129,
                  "end_byte": 299,
                  "text": "{ a = ( i - 1 ) * i / 2 ; b = ( i + 1 ) * i / 2 ; for ( j = 1 ; j <= i ; j ++ ) inp [ a + j ] += inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 131,
                      "end_byte": 154,
                      "text": "a = ( i - 1 ) * i / 2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 131,
                          "end_byte": 152,
                          "text": "a = ( i - 1 ) * i / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 133,
                              "end_byte": 134,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 135,
                              "end_byte": 152,
                              "text": "( i - 1 ) * i / 2",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 135,
                                  "end_byte": 148,
                                  "text": "( i - 1 ) * i",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 135,
                                      "end_byte": 144,
                                      "text": "( i - 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 135,
                                          "end_byte": 136,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 137,
                                          "end_byte": 142,
                                          "text": "i - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 137,
                                              "end_byte": 138,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 139,
                                              "end_byte": 140,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 141,
                                              "end_byte": 142,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 143,
                                          "end_byte": 144,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 145,
                                      "end_byte": 146,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 147,
                                      "end_byte": 148,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 149,
                                  "end_byte": 150,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 151,
                                  "end_byte": 152,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 155,
                      "end_byte": 178,
                      "text": "b = ( i + 1 ) * i / 2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 155,
                          "end_byte": 176,
                          "text": "b = ( i + 1 ) * i / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 155,
                              "end_byte": 156,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 159,
                              "end_byte": 176,
                              "text": "( i + 1 ) * i / 2",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 159,
                                  "end_byte": 172,
                                  "text": "( i + 1 ) * i",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 159,
                                      "end_byte": 168,
                                      "text": "( i + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 159,
                                          "end_byte": 160,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 161,
                                          "end_byte": 166,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 161,
                                              "end_byte": 162,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 163,
                                              "end_byte": 164,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 165,
                                              "end_byte": 166,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 167,
                                          "end_byte": 168,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 169,
                                      "end_byte": 170,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 171,
                                      "end_byte": 172,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 175,
                                  "end_byte": 176,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 179,
                      "end_byte": 297,
                      "text": "for ( j = 1 ; j <= i ; j ++ ) inp [ a + j ] += inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ] ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 179,
                          "end_byte": 182,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 183,
                          "end_byte": 184,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 185,
                          "end_byte": 190,
                          "text": "j = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 187,
                              "end_byte": 188,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 189,
                              "end_byte": 190,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 191,
                          "end_byte": 192,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 193,
                          "end_byte": 199,
                          "text": "j <= i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 195,
                              "end_byte": 197,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 198,
                              "end_byte": 199,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 200,
                          "end_byte": 201,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 202,
                          "end_byte": 206,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 204,
                              "end_byte": 206,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 207,
                          "end_byte": 208,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 209,
                          "end_byte": 297,
                          "text": "inp [ a + j ] += inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ] ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 209,
                              "end_byte": 295,
                              "text": "inp [ a + j ] += inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 209,
                                  "end_byte": 222,
                                  "text": "inp [ a + j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 209,
                                      "end_byte": 212,
                                      "text": "inp",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 213,
                                      "end_byte": 222,
                                      "text": "[ a + j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 213,
                                          "end_byte": 214,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 215,
                                          "end_byte": 220,
                                          "text": "a + j",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 215,
                                              "end_byte": 216,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 217,
                                              "end_byte": 218,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 219,
                                              "end_byte": 220,
                                              "text": "j",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 221,
                                          "end_byte": 222,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+=",
                                  "start_byte": 223,
                                  "end_byte": 225,
                                  "text": "+=",
                                  "children": []
                                },
                                {
                                  "type": "conditional_expression",
                                  "start_byte": 226,
                                  "end_byte": 295,
                                  "text": "inp [ b + j ] > inp [ b + j + 1 ] ? inp [ b + j ] : inp [ b + j + 1 ]",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 226,
                                      "end_byte": 259,
                                      "text": "inp [ b + j ] > inp [ b + j + 1 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 226,
                                          "end_byte": 239,
                                          "text": "inp [ b + j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 226,
                                              "end_byte": 229,
                                              "text": "inp",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 230,
                                              "end_byte": 239,
                                              "text": "[ b + j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 230,
                                                  "end_byte": 231,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 232,
                                                  "end_byte": 237,
                                                  "text": "b + j",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 232,
                                                      "end_byte": 233,
                                                      "text": "b",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 234,
                                                      "end_byte": 235,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 236,
                                                      "end_byte": 237,
                                                      "text": "j",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 238,
                                                  "end_byte": 239,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 240,
                                          "end_byte": 241,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 242,
                                          "end_byte": 259,
                                          "text": "inp [ b + j + 1 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 242,
                                              "end_byte": 245,
                                              "text": "inp",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 246,
                                              "end_byte": 259,
                                              "text": "[ b + j + 1 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 246,
                                                  "end_byte": 247,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 248,
                                                  "end_byte": 257,
                                                  "text": "b + j + 1",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 248,
                                                      "end_byte": 253,
                                                      "text": "b + j",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 248,
                                                          "end_byte": 249,
                                                          "text": "b",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 250,
                                                          "end_byte": 251,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 252,
                                                          "end_byte": 253,
                                                          "text": "j",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 254,
                                                      "end_byte": 255,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 256,
                                                      "end_byte": 257,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 258,
                                                  "end_byte": 259,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "?",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "?",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 262,
                                      "end_byte": 275,
                                      "text": "inp [ b + j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 262,
                                          "end_byte": 265,
                                          "text": "inp",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 266,
                                          "end_byte": 275,
                                          "text": "[ b + j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 266,
                                              "end_byte": 267,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 268,
                                              "end_byte": 273,
                                              "text": "b + j",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 268,
                                                  "end_byte": 269,
                                                  "text": "b",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 270,
                                                  "end_byte": 271,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 272,
                                                  "end_byte": 273,
                                                  "text": "j",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 274,
                                              "end_byte": 275,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ":",
                                      "start_byte": 276,
                                      "end_byte": 277,
                                      "text": ":",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 278,
                                      "end_byte": 295,
                                      "text": "inp [ b + j + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 278,
                                          "end_byte": 281,
                                          "text": "inp",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 282,
                                          "end_byte": 295,
                                          "text": "[ b + j + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 282,
                                              "end_byte": 283,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 284,
                                              "end_byte": 293,
                                              "text": "b + j + 1",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 284,
                                                  "end_byte": 289,
                                                  "text": "b + j",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 284,
                                                      "end_byte": 285,
                                                      "text": "b",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 286,
                                                      "end_byte": 287,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 288,
                                                      "end_byte": 289,
                                                      "text": "j",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 290,
                                                  "end_byte": 291,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 292,
                                                  "end_byte": 293,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 294,
                                              "end_byte": 295,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 296,
                              "end_byte": 297,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 298,
                      "end_byte": 299,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 300,
              "end_byte": 318,
              "text": "return inp [ 1 ] ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 300,
                  "end_byte": 306,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "subscript_expression",
                  "start_byte": 307,
                  "end_byte": 316,
                  "text": "inp [ 1 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 307,
                      "end_byte": 310,
                      "text": "inp",
                      "children": []
                    },
                    {
                      "type": "subscript_argument_list",
                      "start_byte": 311,
                      "end_byte": 316,
                      "text": "[ 1 ]",
                      "children": [
                        {
                          "type": "[",
                          "start_byte": 311,
                          "end_byte": 312,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 313,
                          "end_byte": 314,
                          "text": "1",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 317,
                  "end_byte": 318,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 319,
              "end_byte": 320,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 321,
      "end_byte": 996,
      "text": "int main ( ) { int T , i , row , incount , readint ; int N , Ma , num , k ; char cha ; scanf ( \"%d\" , & T ) ; while ( cha = fgetc ( stdin ) ) { if ( cha == '\\n' ) break ; } N = Ma = row = readint = num = 0 ; while ( ( incount = fread ( str , 1 , BUFF , stdin ) ) > 0 ) { for ( i = 0 ; i < incount ; i ++ ) { if ( str [ i ] >= '0' && str [ i ] <= '9' ) { readint = 1 ; num = num * 10 + str [ i ] - '0' ; } else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; } } } for ( i = 0 ; i < row ; i ++ ) printf ( \"%d\\n\" , out [ i ] ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 321,
          "end_byte": 324,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 325,
          "end_byte": 333,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 325,
              "end_byte": 329,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 330,
              "end_byte": 333,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 330,
                  "end_byte": 331,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 332,
                  "end_byte": 333,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 334,
          "end_byte": 996,
          "text": "{ int T , i , row , incount , readint ; int N , Ma , num , k ; char cha ; scanf ( \"%d\" , & T ) ; while ( cha = fgetc ( stdin ) ) { if ( cha == '\\n' ) break ; } N = Ma = row = readint = num = 0 ; while ( ( incount = fread ( str , 1 , BUFF , stdin ) ) > 0 ) { for ( i = 0 ; i < incount ; i ++ ) { if ( str [ i ] >= '0' && str [ i ] <= '9' ) { readint = 1 ; num = num * 10 + str [ i ] - '0' ; } else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; } } } for ( i = 0 ; i < row ; i ++ ) printf ( \"%d\\n\" , out [ i ] ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 334,
              "end_byte": 335,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 336,
              "end_byte": 373,
              "text": "int T , i , row , incount , readint ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 336,
                  "end_byte": 339,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 340,
                  "end_byte": 341,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 342,
                  "end_byte": 343,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 344,
                  "end_byte": 345,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 346,
                  "end_byte": 347,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 348,
                  "end_byte": 351,
                  "text": "row",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 352,
                  "end_byte": 353,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 354,
                  "end_byte": 361,
                  "text": "incount",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 362,
                  "end_byte": 363,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 364,
                  "end_byte": 371,
                  "text": "readint",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 372,
                  "end_byte": 373,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 374,
              "end_byte": 396,
              "text": "int N , Ma , num , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 374,
                  "end_byte": 377,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 378,
                  "end_byte": 379,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 380,
                  "end_byte": 381,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 382,
                  "end_byte": 384,
                  "text": "Ma",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 385,
                  "end_byte": 386,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 387,
                  "end_byte": 390,
                  "text": "num",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 391,
                  "end_byte": 392,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 393,
                  "end_byte": 394,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 395,
                  "end_byte": 396,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 397,
              "end_byte": 407,
              "text": "char cha ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 397,
                  "end_byte": 401,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 402,
                  "end_byte": 405,
                  "text": "cha",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 406,
                  "end_byte": 407,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 408,
              "end_byte": 430,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 408,
                  "end_byte": 428,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 408,
                      "end_byte": 413,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 414,
                      "end_byte": 428,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 414,
                          "end_byte": 415,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 416,
                          "end_byte": 420,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 416,
                              "end_byte": 417,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 417,
                              "end_byte": 419,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 419,
                              "end_byte": 420,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 421,
                          "end_byte": 422,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 423,
                          "end_byte": 426,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 423,
                              "end_byte": 424,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 425,
                              "end_byte": 426,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 427,
                          "end_byte": 428,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 429,
                  "end_byte": 430,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 431,
              "end_byte": 493,
              "text": "while ( cha = fgetc ( stdin ) ) { if ( cha == '\\n' ) break ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 431,
                  "end_byte": 436,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 437,
                  "end_byte": 462,
                  "text": "( cha = fgetc ( stdin ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 437,
                      "end_byte": 438,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 439,
                      "end_byte": 460,
                      "text": "cha = fgetc ( stdin )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 439,
                          "end_byte": 442,
                          "text": "cha",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 443,
                          "end_byte": 444,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 445,
                          "end_byte": 460,
                          "text": "fgetc ( stdin )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 445,
                              "end_byte": 450,
                              "text": "fgetc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 451,
                              "end_byte": 460,
                              "text": "( stdin )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 451,
                                  "end_byte": 452,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 453,
                                  "end_byte": 458,
                                  "text": "stdin",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 459,
                                  "end_byte": 460,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 461,
                      "end_byte": 462,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 463,
                  "end_byte": 493,
                  "text": "{ if ( cha == '\\n' ) break ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 463,
                      "end_byte": 464,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 465,
                      "end_byte": 491,
                      "text": "if ( cha == '\\n' ) break ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 465,
                          "end_byte": 467,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 468,
                          "end_byte": 483,
                          "text": "( cha == '\\n' )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 468,
                              "end_byte": 469,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 470,
                              "end_byte": 481,
                              "text": "cha == '\\n'",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 470,
                                  "end_byte": 473,
                                  "text": "cha",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 474,
                                  "end_byte": 476,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 477,
                                  "end_byte": 481,
                                  "text": "'\\n'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 477,
                                      "end_byte": 478,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 478,
                                      "end_byte": 480,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 480,
                                      "end_byte": 481,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 482,
                              "end_byte": 483,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "break_statement",
                          "start_byte": 484,
                          "end_byte": 491,
                          "text": "break ;",
                          "children": [
                            {
                              "type": "break",
                              "start_byte": 484,
                              "end_byte": 489,
                              "text": "break",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 490,
                              "end_byte": 491,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 492,
                      "end_byte": 493,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 494,
              "end_byte": 528,
              "text": "N = Ma = row = readint = num = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 494,
                  "end_byte": 526,
                  "text": "N = Ma = row = readint = num = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 494,
                      "end_byte": 495,
                      "text": "N",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 496,
                      "end_byte": 497,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 498,
                      "end_byte": 526,
                      "text": "Ma = row = readint = num = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 498,
                          "end_byte": 500,
                          "text": "Ma",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 501,
                          "end_byte": 502,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 503,
                          "end_byte": 526,
                          "text": "row = readint = num = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 503,
                              "end_byte": 506,
                              "text": "row",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 507,
                              "end_byte": 508,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 509,
                              "end_byte": 526,
                              "text": "readint = num = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 509,
                                  "end_byte": 516,
                                  "text": "readint",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 517,
                                  "end_byte": 518,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 519,
                                  "end_byte": 526,
                                  "text": "num = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 519,
                                      "end_byte": 522,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 523,
                                      "end_byte": 524,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 525,
                                      "end_byte": 526,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 527,
                  "end_byte": 528,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 529,
              "end_byte": 920,
              "text": "while ( ( incount = fread ( str , 1 , BUFF , stdin ) ) > 0 ) { for ( i = 0 ; i < incount ; i ++ ) { if ( str [ i ] >= '0' && str [ i ] <= '9' ) { readint = 1 ; num = num * 10 + str [ i ] - '0' ; } else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; } } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 529,
                  "end_byte": 534,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 535,
                  "end_byte": 589,
                  "text": "( ( incount = fread ( str , 1 , BUFF , stdin ) ) > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 535,
                      "end_byte": 536,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 537,
                      "end_byte": 587,
                      "text": "( incount = fread ( str , 1 , BUFF , stdin ) ) > 0",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 537,
                          "end_byte": 583,
                          "text": "( incount = fread ( str , 1 , BUFF , stdin ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 537,
                              "end_byte": 538,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 539,
                              "end_byte": 581,
                              "text": "incount = fread ( str , 1 , BUFF , stdin )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 539,
                                  "end_byte": 546,
                                  "text": "incount",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 547,
                                  "end_byte": 548,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 549,
                                  "end_byte": 581,
                                  "text": "fread ( str , 1 , BUFF , stdin )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 549,
                                      "end_byte": 554,
                                      "text": "fread",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 555,
                                      "end_byte": 581,
                                      "text": "( str , 1 , BUFF , stdin )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 555,
                                          "end_byte": 556,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 557,
                                          "end_byte": 560,
                                          "text": "str",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 561,
                                          "end_byte": 562,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 563,
                                          "end_byte": 564,
                                          "text": "1",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 565,
                                          "end_byte": 566,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 567,
                                          "end_byte": 571,
                                          "text": "BUFF",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 572,
                                          "end_byte": 573,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 574,
                                          "end_byte": 579,
                                          "text": "stdin",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 580,
                                          "end_byte": 581,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 582,
                              "end_byte": 583,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start_byte": 584,
                          "end_byte": 585,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 586,
                          "end_byte": 587,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 588,
                      "end_byte": 589,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 590,
                  "end_byte": 920,
                  "text": "{ for ( i = 0 ; i < incount ; i ++ ) { if ( str [ i ] >= '0' && str [ i ] <= '9' ) { readint = 1 ; num = num * 10 + str [ i ] - '0' ; } else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 590,
                      "end_byte": 591,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 592,
                      "end_byte": 918,
                      "text": "for ( i = 0 ; i < incount ; i ++ ) { if ( str [ i ] >= '0' && str [ i ] <= '9' ) { readint = 1 ; num = num * 10 + str [ i ] - '0' ; } else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 592,
                          "end_byte": 595,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 596,
                          "end_byte": 597,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 598,
                          "end_byte": 603,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 598,
                              "end_byte": 599,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 600,
                              "end_byte": 601,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 602,
                              "end_byte": 603,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 604,
                          "end_byte": 605,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 606,
                          "end_byte": 617,
                          "text": "i < incount",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 606,
                              "end_byte": 607,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 608,
                              "end_byte": 609,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 610,
                              "end_byte": 617,
                              "text": "incount",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 618,
                          "end_byte": 619,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 620,
                          "end_byte": 624,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 620,
                              "end_byte": 621,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 622,
                              "end_byte": 624,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 625,
                          "end_byte": 626,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 627,
                          "end_byte": 918,
                          "text": "{ if ( str [ i ] >= '0' && str [ i ] <= '9' ) { readint = 1 ; num = num * 10 + str [ i ] - '0' ; } else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 627,
                              "end_byte": 628,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 629,
                              "end_byte": 916,
                              "text": "if ( str [ i ] >= '0' && str [ i ] <= '9' ) { readint = 1 ; num = num * 10 + str [ i ] - '0' ; } else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 629,
                                  "end_byte": 631,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 632,
                                  "end_byte": 672,
                                  "text": "( str [ i ] >= '0' && str [ i ] <= '9' )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 632,
                                      "end_byte": 633,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 634,
                                      "end_byte": 670,
                                      "text": "str [ i ] >= '0' && str [ i ] <= '9'",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 634,
                                          "end_byte": 650,
                                          "text": "str [ i ] >= '0'",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 634,
                                              "end_byte": 643,
                                              "text": "str [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 634,
                                                  "end_byte": 637,
                                                  "text": "str",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 638,
                                                  "end_byte": 643,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 638,
                                                      "end_byte": 639,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 640,
                                                      "end_byte": 641,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 642,
                                                      "end_byte": 643,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ">=",
                                              "start_byte": 644,
                                              "end_byte": 646,
                                              "text": ">=",
                                              "children": []
                                            },
                                            {
                                              "type": "char_literal",
                                              "start_byte": 647,
                                              "end_byte": 650,
                                              "text": "'0'",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start_byte": 647,
                                                  "end_byte": 648,
                                                  "text": "'",
                                                  "children": []
                                                },
                                                {
                                                  "type": "character",
                                                  "start_byte": 648,
                                                  "end_byte": 649,
                                                  "text": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": "'",
                                                  "start_byte": 649,
                                                  "end_byte": 650,
                                                  "text": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 651,
                                          "end_byte": 653,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 654,
                                          "end_byte": 670,
                                          "text": "str [ i ] <= '9'",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 654,
                                              "end_byte": 663,
                                              "text": "str [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 654,
                                                  "end_byte": 657,
                                                  "text": "str",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 658,
                                                  "end_byte": 663,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 658,
                                                      "end_byte": 659,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 660,
                                                      "end_byte": 661,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 662,
                                                      "end_byte": 663,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "<=",
                                              "start_byte": 664,
                                              "end_byte": 666,
                                              "text": "<=",
                                              "children": []
                                            },
                                            {
                                              "type": "char_literal",
                                              "start_byte": 667,
                                              "end_byte": 670,
                                              "text": "'9'",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start_byte": 667,
                                                  "end_byte": 668,
                                                  "text": "'",
                                                  "children": []
                                                },
                                                {
                                                  "type": "character",
                                                  "start_byte": 668,
                                                  "end_byte": 669,
                                                  "text": "9",
                                                  "children": []
                                                },
                                                {
                                                  "type": "'",
                                                  "start_byte": 669,
                                                  "end_byte": 670,
                                                  "text": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 671,
                                      "end_byte": 672,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 673,
                                  "end_byte": 725,
                                  "text": "{ readint = 1 ; num = num * 10 + str [ i ] - '0' ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 673,
                                      "end_byte": 674,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 675,
                                      "end_byte": 688,
                                      "text": "readint = 1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 675,
                                          "end_byte": 686,
                                          "text": "readint = 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 675,
                                              "end_byte": 682,
                                              "text": "readint",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 683,
                                              "end_byte": 684,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 685,
                                              "end_byte": 686,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 687,
                                          "end_byte": 688,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 689,
                                      "end_byte": 723,
                                      "text": "num = num * 10 + str [ i ] - '0' ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 689,
                                          "end_byte": 721,
                                          "text": "num = num * 10 + str [ i ] - '0'",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 689,
                                              "end_byte": 692,
                                              "text": "num",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 693,
                                              "end_byte": 694,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 695,
                                              "end_byte": 721,
                                              "text": "num * 10 + str [ i ] - '0'",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 695,
                                                  "end_byte": 715,
                                                  "text": "num * 10 + str [ i ]",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 695,
                                                      "end_byte": 703,
                                                      "text": "num * 10",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 695,
                                                          "end_byte": 698,
                                                          "text": "num",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "*",
                                                          "start_byte": 699,
                                                          "end_byte": 700,
                                                          "text": "*",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 701,
                                                          "end_byte": 703,
                                                          "text": "10",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 704,
                                                      "end_byte": 705,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 706,
                                                      "end_byte": 715,
                                                      "text": "str [ i ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 706,
                                                          "end_byte": 709,
                                                          "text": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 710,
                                                          "end_byte": 715,
                                                          "text": "[ i ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 710,
                                                              "end_byte": 711,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 712,
                                                              "end_byte": 713,
                                                              "text": "i",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 714,
                                                              "end_byte": 715,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 716,
                                                  "end_byte": 717,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "char_literal",
                                                  "start_byte": 718,
                                                  "end_byte": 721,
                                                  "text": "'0'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start_byte": 718,
                                                      "end_byte": 719,
                                                      "text": "'",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "character",
                                                      "start_byte": 719,
                                                      "end_byte": 720,
                                                      "text": "0",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start_byte": 720,
                                                      "end_byte": 721,
                                                      "text": "'",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 722,
                                          "end_byte": 723,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 724,
                                      "end_byte": 725,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 726,
                                  "end_byte": 916,
                                  "text": "else if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 726,
                                      "end_byte": 730,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 731,
                                      "end_byte": 916,
                                      "text": "if ( readint ) { if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 731,
                                          "end_byte": 733,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 734,
                                          "end_byte": 745,
                                          "text": "( readint )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 734,
                                              "end_byte": 735,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 736,
                                              "end_byte": 743,
                                              "text": "readint",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 744,
                                              "end_byte": 745,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 746,
                                          "end_byte": 916,
                                          "text": "{ if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } } num = readint = 0 ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 746,
                                              "end_byte": 747,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 748,
                                              "end_byte": 894,
                                              "text": "if ( ! Ma ) { N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; } else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 748,
                                                  "end_byte": 750,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 751,
                                                  "end_byte": 759,
                                                  "text": "( ! Ma )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 751,
                                                      "end_byte": 752,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "unary_expression",
                                                      "start_byte": 753,
                                                      "end_byte": 757,
                                                      "text": "! Ma",
                                                      "children": [
                                                        {
                                                          "type": "!",
                                                          "start_byte": 753,
                                                          "end_byte": 754,
                                                          "text": "!",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 755,
                                                          "end_byte": 757,
                                                          "text": "Ma",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 758,
                                                      "end_byte": 759,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 760,
                                                  "end_byte": 806,
                                                  "text": "{ N = num ; Ma = N * ( N + 1 ) / 2 ; k = 1 ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 760,
                                                      "end_byte": 761,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 762,
                                                      "end_byte": 771,
                                                      "text": "N = num ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 762,
                                                          "end_byte": 769,
                                                          "text": "N = num",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 762,
                                                              "end_byte": 763,
                                                              "text": "N",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 764,
                                                              "end_byte": 765,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 766,
                                                              "end_byte": 769,
                                                              "text": "num",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 770,
                                                          "end_byte": 771,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 772,
                                                      "end_byte": 796,
                                                      "text": "Ma = N * ( N + 1 ) / 2 ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 772,
                                                          "end_byte": 794,
                                                          "text": "Ma = N * ( N + 1 ) / 2",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 772,
                                                              "end_byte": 774,
                                                              "text": "Ma",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 775,
                                                              "end_byte": 776,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 777,
                                                              "end_byte": 794,
                                                              "text": "N * ( N + 1 ) / 2",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 777,
                                                                  "end_byte": 790,
                                                                  "text": "N * ( N + 1 )",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 777,
                                                                      "end_byte": 778,
                                                                      "text": "N",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "*",
                                                                      "start_byte": 779,
                                                                      "end_byte": 780,
                                                                      "text": "*",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "parenthesized_expression",
                                                                      "start_byte": 781,
                                                                      "end_byte": 790,
                                                                      "text": "( N + 1 )",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start_byte": 781,
                                                                          "end_byte": 782,
                                                                          "text": "(",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start_byte": 783,
                                                                          "end_byte": 788,
                                                                          "text": "N + 1",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 783,
                                                                              "end_byte": 784,
                                                                              "text": "N",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "+",
                                                                              "start_byte": 785,
                                                                              "end_byte": 786,
                                                                              "text": "+",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "number_literal",
                                                                              "start_byte": 787,
                                                                              "end_byte": 788,
                                                                              "text": "1",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start_byte": 789,
                                                                          "end_byte": 790,
                                                                          "text": ")",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "/",
                                                                  "start_byte": 791,
                                                                  "end_byte": 792,
                                                                  "text": "/",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 793,
                                                                  "end_byte": 794,
                                                                  "text": "2",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 795,
                                                          "end_byte": 796,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 797,
                                                      "end_byte": 804,
                                                      "text": "k = 1 ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 797,
                                                          "end_byte": 802,
                                                          "text": "k = 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 797,
                                                              "end_byte": 798,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 799,
                                                              "end_byte": 800,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 801,
                                                              "end_byte": 802,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 803,
                                                          "end_byte": 804,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 805,
                                                      "end_byte": 806,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "else_clause",
                                                  "start_byte": 807,
                                                  "end_byte": 894,
                                                  "text": "else { inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } }",
                                                  "children": [
                                                    {
                                                      "type": "else",
                                                      "start_byte": 807,
                                                      "end_byte": 811,
                                                      "text": "else",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "compound_statement",
                                                      "start_byte": 812,
                                                      "end_byte": 894,
                                                      "text": "{ inp [ k ++ ] = num ; if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; } }",
                                                      "children": [
                                                        {
                                                          "type": "{",
                                                          "start_byte": 812,
                                                          "end_byte": 813,
                                                          "text": "{",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 814,
                                                          "end_byte": 834,
                                                          "text": "inp [ k ++ ] = num ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 814,
                                                              "end_byte": 832,
                                                              "text": "inp [ k ++ ] = num",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 814,
                                                                  "end_byte": 826,
                                                                  "text": "inp [ k ++ ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 814,
                                                                      "end_byte": 817,
                                                                      "text": "inp",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 818,
                                                                      "end_byte": 826,
                                                                      "text": "[ k ++ ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 818,
                                                                          "end_byte": 819,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "update_expression",
                                                                          "start_byte": 820,
                                                                          "end_byte": 824,
                                                                          "text": "k ++",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 820,
                                                                              "end_byte": 821,
                                                                              "text": "k",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "++",
                                                                              "start_byte": 822,
                                                                              "end_byte": 824,
                                                                              "text": "++",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 825,
                                                                          "end_byte": 826,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 827,
                                                                  "end_byte": 828,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 829,
                                                                  "end_byte": 832,
                                                                  "text": "num",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 833,
                                                              "end_byte": 834,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "if_statement",
                                                          "start_byte": 835,
                                                          "end_byte": 892,
                                                          "text": "if ( k > Ma ) { out [ row ++ ] = largR ( N ) ; Ma = 0 ; }",
                                                          "children": [
                                                            {
                                                              "type": "if",
                                                              "start_byte": 835,
                                                              "end_byte": 837,
                                                              "text": "if",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "condition_clause",
                                                              "start_byte": 838,
                                                              "end_byte": 848,
                                                              "text": "( k > Ma )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 838,
                                                                  "end_byte": 839,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 840,
                                                                  "end_byte": 846,
                                                                  "text": "k > Ma",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 840,
                                                                      "end_byte": 841,
                                                                      "text": "k",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": ">",
                                                                      "start_byte": 842,
                                                                      "end_byte": 843,
                                                                      "text": ">",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 844,
                                                                      "end_byte": 846,
                                                                      "text": "Ma",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 847,
                                                                  "end_byte": 848,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "compound_statement",
                                                              "start_byte": 849,
                                                              "end_byte": 892,
                                                              "text": "{ out [ row ++ ] = largR ( N ) ; Ma = 0 ; }",
                                                              "children": [
                                                                {
                                                                  "type": "{",
                                                                  "start_byte": 849,
                                                                  "end_byte": 850,
                                                                  "text": "{",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "expression_statement",
                                                                  "start_byte": 851,
                                                                  "end_byte": 881,
                                                                  "text": "out [ row ++ ] = largR ( N ) ;",
                                                                  "children": [
                                                                    {
                                                                      "type": "assignment_expression",
                                                                      "start_byte": 851,
                                                                      "end_byte": 879,
                                                                      "text": "out [ row ++ ] = largR ( N )",
                                                                      "children": [
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 851,
                                                                          "end_byte": 865,
                                                                          "text": "out [ row ++ ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 851,
                                                                              "end_byte": 854,
                                                                              "text": "out",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 855,
                                                                              "end_byte": 865,
                                                                              "text": "[ row ++ ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 855,
                                                                                  "end_byte": 856,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "update_expression",
                                                                                  "start_byte": 857,
                                                                                  "end_byte": 863,
                                                                                  "text": "row ++",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "identifier",
                                                                                      "start_byte": 857,
                                                                                      "end_byte": 860,
                                                                                      "text": "row",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "++",
                                                                                      "start_byte": 861,
                                                                                      "end_byte": 863,
                                                                                      "text": "++",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 864,
                                                                                  "end_byte": 865,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "=",
                                                                          "start_byte": 866,
                                                                          "end_byte": 867,
                                                                          "text": "=",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "call_expression",
                                                                          "start_byte": 868,
                                                                          "end_byte": 879,
                                                                          "text": "largR ( N )",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 868,
                                                                              "end_byte": 873,
                                                                              "text": "largR",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "argument_list",
                                                                              "start_byte": 874,
                                                                              "end_byte": 879,
                                                                              "text": "( N )",
                                                                              "children": [
                                                                                {
                                                                                  "type": "(",
                                                                                  "start_byte": 874,
                                                                                  "end_byte": 875,
                                                                                  "text": "(",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 876,
                                                                                  "end_byte": 877,
                                                                                  "text": "N",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": ")",
                                                                                  "start_byte": 878,
                                                                                  "end_byte": 879,
                                                                                  "text": ")",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ";",
                                                                      "start_byte": 880,
                                                                      "end_byte": 881,
                                                                      "text": ";",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "expression_statement",
                                                                  "start_byte": 882,
                                                                  "end_byte": 890,
                                                                  "text": "Ma = 0 ;",
                                                                  "children": [
                                                                    {
                                                                      "type": "assignment_expression",
                                                                      "start_byte": 882,
                                                                      "end_byte": 888,
                                                                      "text": "Ma = 0",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 882,
                                                                          "end_byte": 884,
                                                                          "text": "Ma",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "=",
                                                                          "start_byte": 885,
                                                                          "end_byte": 886,
                                                                          "text": "=",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "number_literal",
                                                                          "start_byte": 887,
                                                                          "end_byte": 888,
                                                                          "text": "0",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ";",
                                                                      "start_byte": 889,
                                                                      "end_byte": 890,
                                                                      "text": ";",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "}",
                                                                  "start_byte": 891,
                                                                  "end_byte": 892,
                                                                  "text": "}",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "}",
                                                          "start_byte": 893,
                                                          "end_byte": 894,
                                                          "text": "}",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 895,
                                              "end_byte": 914,
                                              "text": "num = readint = 0 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 895,
                                                  "end_byte": 912,
                                                  "text": "num = readint = 0",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 895,
                                                      "end_byte": 898,
                                                      "text": "num",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 899,
                                                      "end_byte": 900,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 901,
                                                      "end_byte": 912,
                                                      "text": "readint = 0",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 901,
                                                          "end_byte": 908,
                                                          "text": "readint",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 909,
                                                          "end_byte": 910,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 911,
                                                          "end_byte": 912,
                                                          "text": "0",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 913,
                                                  "end_byte": 914,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 915,
                                              "end_byte": 916,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 917,
                              "end_byte": 918,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 919,
                      "end_byte": 920,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 921,
              "end_byte": 983,
              "text": "for ( i = 0 ; i < row ; i ++ ) printf ( \"%d\\n\" , out [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 921,
                  "end_byte": 924,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 925,
                  "end_byte": 926,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 927,
                  "end_byte": 932,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 927,
                      "end_byte": 928,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 929,
                      "end_byte": 930,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 931,
                      "end_byte": 932,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 933,
                  "end_byte": 934,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 935,
                  "end_byte": 942,
                  "text": "i < row",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 935,
                      "end_byte": 936,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 937,
                      "end_byte": 938,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 939,
                      "end_byte": 942,
                      "text": "row",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 943,
                  "end_byte": 944,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 945,
                  "end_byte": 949,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 945,
                      "end_byte": 946,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 947,
                      "end_byte": 949,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 950,
                  "end_byte": 951,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 952,
                  "end_byte": 983,
                  "text": "printf ( \"%d\\n\" , out [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 952,
                      "end_byte": 981,
                      "text": "printf ( \"%d\\n\" , out [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 952,
                          "end_byte": 958,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 959,
                          "end_byte": 981,
                          "text": "( \"%d\\n\" , out [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 959,
                              "end_byte": 960,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 961,
                              "end_byte": 967,
                              "text": "\"%d\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 961,
                                  "end_byte": 962,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 962,
                                  "end_byte": 964,
                                  "text": "%d",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 964,
                                  "end_byte": 966,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 966,
                                  "end_byte": 967,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 968,
                              "end_byte": 969,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 970,
                              "end_byte": 979,
                              "text": "out [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 970,
                                  "end_byte": 973,
                                  "text": "out",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 974,
                                  "end_byte": 979,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 974,
                                      "end_byte": 975,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 976,
                                      "end_byte": 977,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 978,
                                      "end_byte": 979,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 980,
                              "end_byte": 981,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 982,
                      "end_byte": 983,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 984,
              "end_byte": 994,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 984,
                  "end_byte": 990,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 991,
                  "end_byte": 992,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 993,
                  "end_byte": 994,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 995,
              "end_byte": 996,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}