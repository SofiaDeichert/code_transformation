{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 597,
  "text": "void insert ( long long int j , int * B ) { long int parent , child ; int k ; parent = j / 2 ; child = j ; if ( j != 0 ) { while ( child != parent ) { if ( B [ parent ] > B [ child ] ) { k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; } else { break ; } } } } int main ( ) { int T , i , A [ 50002 ] ; long long int N , j ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%lld\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { scanf ( \"%d\" , & A [ j ] ) ; insert ( j , A ) ; } printf ( \"%lld\\n\" , ( N - 1 ) * A [ 0 ] ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 315,
      "text": "void insert ( long long int j , int * B ) { long int parent , child ; int k ; parent = j / 2 ; child = j ; if ( j != 0 ) { while ( child != parent ) { if ( B [ parent ] > B [ child ] ) { k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; } else { break ; } } } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 41,
          "text": "insert ( long long int j , int * B )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 11,
              "text": "insert",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 12,
              "end_byte": 41,
              "text": "( long long int j , int * B )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 14,
                  "end_byte": 29,
                  "text": "long long int j",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 14,
                      "end_byte": 27,
                      "text": "long long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 14,
                          "end_byte": 18,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 19,
                          "end_byte": 23,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 24,
                          "end_byte": 27,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 28,
                      "end_byte": 29,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 32,
                  "end_byte": 39,
                  "text": "int * B",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 32,
                      "end_byte": 35,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 36,
                      "end_byte": 39,
                      "text": "* B",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 36,
                          "end_byte": 37,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 38,
                          "end_byte": 39,
                          "text": "B",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 42,
          "end_byte": 315,
          "text": "{ long int parent , child ; int k ; parent = j / 2 ; child = j ; if ( j != 0 ) { while ( child != parent ) { if ( B [ parent ] > B [ child ] ) { k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; } else { break ; } } } }",
          "children": [
            {
              "type": "{",
              "start_byte": 42,
              "end_byte": 43,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 44,
              "end_byte": 69,
              "text": "long int parent , child ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 44,
                  "end_byte": 52,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 44,
                      "end_byte": 48,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 49,
                      "end_byte": 52,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 59,
                  "text": "parent",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 62,
                  "end_byte": 67,
                  "text": "child",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 70,
              "end_byte": 77,
              "text": "int k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 70,
                  "end_byte": 73,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 78,
              "end_byte": 94,
              "text": "parent = j / 2 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 78,
                  "end_byte": 92,
                  "text": "parent = j / 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 78,
                      "end_byte": 84,
                      "text": "parent",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 87,
                      "end_byte": 92,
                      "text": "j / 2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "/",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 91,
                          "end_byte": 92,
                          "text": "2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 93,
                  "end_byte": 94,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 95,
              "end_byte": 106,
              "text": "child = j ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 95,
                  "end_byte": 104,
                  "text": "child = j",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 95,
                      "end_byte": 100,
                      "text": "child",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 103,
                      "end_byte": 104,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 105,
                  "end_byte": 106,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 107,
              "end_byte": 313,
              "text": "if ( j != 0 ) { while ( child != parent ) { if ( B [ parent ] > B [ child ] ) { k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; } else { break ; } } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 107,
                  "end_byte": 109,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 110,
                  "end_byte": 120,
                  "text": "( j != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 110,
                      "end_byte": 111,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 112,
                      "end_byte": 118,
                      "text": "j != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 114,
                          "end_byte": 116,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 121,
                  "end_byte": 313,
                  "text": "{ while ( child != parent ) { if ( B [ parent ] > B [ child ] ) { k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; } else { break ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 123,
                      "end_byte": 311,
                      "text": "while ( child != parent ) { if ( B [ parent ] > B [ child ] ) { k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; } else { break ; } }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 123,
                          "end_byte": 128,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 129,
                          "end_byte": 148,
                          "text": "( child != parent )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 129,
                              "end_byte": 130,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 131,
                              "end_byte": 146,
                              "text": "child != parent",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 131,
                                  "end_byte": 136,
                                  "text": "child",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 137,
                                  "end_byte": 139,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 140,
                                  "end_byte": 146,
                                  "text": "parent",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 149,
                          "end_byte": 311,
                          "text": "{ if ( B [ parent ] > B [ child ] ) { k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; } else { break ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 151,
                              "end_byte": 309,
                              "text": "if ( B [ parent ] > B [ child ] ) { k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; } else { break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 151,
                                  "end_byte": 153,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 154,
                                  "end_byte": 184,
                                  "text": "( B [ parent ] > B [ child ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 156,
                                      "end_byte": 182,
                                      "text": "B [ parent ] > B [ child ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 156,
                                          "end_byte": 168,
                                          "text": "B [ parent ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 156,
                                              "end_byte": 157,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 158,
                                              "end_byte": 168,
                                              "text": "[ parent ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 158,
                                                  "end_byte": 159,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 160,
                                                  "end_byte": 166,
                                                  "text": "parent",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 167,
                                                  "end_byte": 168,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 169,
                                          "end_byte": 170,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 171,
                                          "end_byte": 182,
                                          "text": "B [ child ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 171,
                                              "end_byte": 172,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 173,
                                              "end_byte": 182,
                                              "text": "[ child ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 173,
                                                  "end_byte": 174,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 175,
                                                  "end_byte": 180,
                                                  "text": "child",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 181,
                                                  "end_byte": 182,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 185,
                                  "end_byte": 292,
                                  "text": "{ k = B [ parent ] ; B [ parent ] = B [ child ] ; B [ child ] = k ; child = parent ; parent = child / 2 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 185,
                                      "end_byte": 186,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 187,
                                      "end_byte": 205,
                                      "text": "k = B [ parent ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 187,
                                          "end_byte": 203,
                                          "text": "k = B [ parent ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 187,
                                              "end_byte": 188,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 189,
                                              "end_byte": 190,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 191,
                                              "end_byte": 203,
                                              "text": "B [ parent ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 191,
                                                  "end_byte": 192,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 193,
                                                  "end_byte": 203,
                                                  "text": "[ parent ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 193,
                                                      "end_byte": 194,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 195,
                                                      "end_byte": 201,
                                                      "text": "parent",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 202,
                                                      "end_byte": 203,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 204,
                                          "end_byte": 205,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 206,
                                      "end_byte": 234,
                                      "text": "B [ parent ] = B [ child ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 206,
                                          "end_byte": 232,
                                          "text": "B [ parent ] = B [ child ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 206,
                                              "end_byte": 218,
                                              "text": "B [ parent ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 206,
                                                  "end_byte": 207,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 208,
                                                  "end_byte": 218,
                                                  "text": "[ parent ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 208,
                                                      "end_byte": 209,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 210,
                                                      "end_byte": 216,
                                                      "text": "parent",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 217,
                                                      "end_byte": 218,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 219,
                                              "end_byte": 220,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 221,
                                              "end_byte": 232,
                                              "text": "B [ child ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 221,
                                                  "end_byte": 222,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 223,
                                                  "end_byte": 232,
                                                  "text": "[ child ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 223,
                                                      "end_byte": 224,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 225,
                                                      "end_byte": 230,
                                                      "text": "child",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 231,
                                                      "end_byte": 232,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 233,
                                          "end_byte": 234,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 235,
                                      "end_byte": 252,
                                      "text": "B [ child ] = k ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 235,
                                          "end_byte": 250,
                                          "text": "B [ child ] = k",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 235,
                                              "end_byte": 246,
                                              "text": "B [ child ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 235,
                                                  "end_byte": 236,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 237,
                                                  "end_byte": 246,
                                                  "text": "[ child ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 237,
                                                      "end_byte": 238,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 239,
                                                      "end_byte": 244,
                                                      "text": "child",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 245,
                                                      "end_byte": 246,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 247,
                                              "end_byte": 248,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 249,
                                              "end_byte": 250,
                                              "text": "k",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 251,
                                          "end_byte": 252,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 253,
                                      "end_byte": 269,
                                      "text": "child = parent ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 253,
                                          "end_byte": 267,
                                          "text": "child = parent",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 253,
                                              "end_byte": 258,
                                              "text": "child",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 259,
                                              "end_byte": 260,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 261,
                                              "end_byte": 267,
                                              "text": "parent",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 268,
                                          "end_byte": 269,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 270,
                                      "end_byte": 290,
                                      "text": "parent = child / 2 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 270,
                                          "end_byte": 288,
                                          "text": "parent = child / 2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 270,
                                              "end_byte": 276,
                                              "text": "parent",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 277,
                                              "end_byte": 278,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 279,
                                              "end_byte": 288,
                                              "text": "child / 2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 279,
                                                  "end_byte": 284,
                                                  "text": "child",
                                                  "children": []
                                                },
                                                {
                                                  "type": "/",
                                                  "start_byte": 285,
                                                  "end_byte": 286,
                                                  "text": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 287,
                                                  "end_byte": 288,
                                                  "text": "2",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 289,
                                          "end_byte": 290,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 291,
                                      "end_byte": 292,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 293,
                                  "end_byte": 309,
                                  "text": "else { break ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 293,
                                      "end_byte": 297,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 298,
                                      "end_byte": 309,
                                      "text": "{ break ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 298,
                                          "end_byte": 299,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "break_statement",
                                          "start_byte": 300,
                                          "end_byte": 307,
                                          "text": "break ;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start_byte": 300,
                                              "end_byte": 305,
                                              "text": "break",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 306,
                                              "end_byte": 307,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 308,
                                          "end_byte": 309,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 310,
                              "end_byte": 311,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 312,
                      "end_byte": 313,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 314,
              "end_byte": 315,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 316,
      "end_byte": 597,
      "text": "int main ( ) { int T , i , A [ 50002 ] ; long long int N , j ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%lld\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { scanf ( \"%d\" , & A [ j ] ) ; insert ( j , A ) ; } printf ( \"%lld\\n\" , ( N - 1 ) * A [ 0 ] ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 316,
          "end_byte": 319,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 320,
          "end_byte": 328,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 320,
              "end_byte": 324,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 325,
              "end_byte": 328,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 325,
                  "end_byte": 326,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 327,
                  "end_byte": 328,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 329,
          "end_byte": 597,
          "text": "{ int T , i , A [ 50002 ] ; long long int N , j ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%lld\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { scanf ( \"%d\" , & A [ j ] ) ; insert ( j , A ) ; } printf ( \"%lld\\n\" , ( N - 1 ) * A [ 0 ] ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 329,
              "end_byte": 330,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 331,
              "end_byte": 356,
              "text": "int T , i , A [ 50002 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 331,
                  "end_byte": 334,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 335,
                  "end_byte": 336,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 337,
                  "end_byte": 338,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 339,
                  "end_byte": 340,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 341,
                  "end_byte": 342,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 343,
                  "end_byte": 354,
                  "text": "A [ 50002 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 343,
                      "end_byte": 344,
                      "text": "A",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 345,
                      "end_byte": 346,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 347,
                      "end_byte": 352,
                      "text": "50002",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 353,
                      "end_byte": 354,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 355,
                  "end_byte": 356,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 357,
              "end_byte": 378,
              "text": "long long int N , j ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 357,
                  "end_byte": 370,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 357,
                      "end_byte": 361,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 362,
                      "end_byte": 366,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 367,
                      "end_byte": 370,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 371,
                  "end_byte": 372,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 373,
                  "end_byte": 374,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 375,
                  "end_byte": 376,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 379,
              "end_byte": 401,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 379,
                  "end_byte": 399,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 379,
                      "end_byte": 384,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 385,
                      "end_byte": 399,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 385,
                          "end_byte": 386,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 387,
                          "end_byte": 391,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 387,
                              "end_byte": 388,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 388,
                              "end_byte": 390,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 390,
                              "end_byte": 391,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 392,
                          "end_byte": 393,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 394,
                          "end_byte": 397,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 394,
                              "end_byte": 395,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 396,
                              "end_byte": 397,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 398,
                          "end_byte": 399,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 400,
                  "end_byte": 401,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 402,
              "end_byte": 584,
              "text": "for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%lld\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { scanf ( \"%d\" , & A [ j ] ) ; insert ( j , A ) ; } printf ( \"%lld\\n\" , ( N - 1 ) * A [ 0 ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 402,
                  "end_byte": 405,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 406,
                  "end_byte": 407,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 408,
                  "end_byte": 413,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 408,
                      "end_byte": 409,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 410,
                      "end_byte": 411,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 412,
                      "end_byte": 413,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 414,
                  "end_byte": 415,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 416,
                  "end_byte": 421,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 416,
                      "end_byte": 417,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 418,
                      "end_byte": 419,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 420,
                      "end_byte": 421,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 422,
                  "end_byte": 423,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 424,
                  "end_byte": 428,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 424,
                      "end_byte": 425,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 426,
                      "end_byte": 428,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 429,
                  "end_byte": 430,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 431,
                  "end_byte": 584,
                  "text": "{ scanf ( \"%lld\" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { scanf ( \"%d\" , & A [ j ] ) ; insert ( j , A ) ; } printf ( \"%lld\\n\" , ( N - 1 ) * A [ 0 ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 431,
                      "end_byte": 432,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 433,
                      "end_byte": 457,
                      "text": "scanf ( \"%lld\" , & N ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 433,
                          "end_byte": 455,
                          "text": "scanf ( \"%lld\" , & N )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 433,
                              "end_byte": 438,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 439,
                              "end_byte": 455,
                              "text": "( \"%lld\" , & N )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 439,
                                  "end_byte": 440,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 441,
                                  "end_byte": 447,
                                  "text": "\"%lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 441,
                                      "end_byte": 442,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 442,
                                      "end_byte": 446,
                                      "text": "%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 446,
                                      "end_byte": 447,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 448,
                                  "end_byte": 449,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 450,
                                  "end_byte": 453,
                                  "text": "& N",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 450,
                                      "end_byte": 451,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 452,
                                      "end_byte": 453,
                                      "text": "N",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 456,
                          "end_byte": 457,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 458,
                      "end_byte": 538,
                      "text": "for ( j = 0 ; j < N ; j ++ ) { scanf ( \"%d\" , & A [ j ] ) ; insert ( j , A ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 458,
                          "end_byte": 461,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 462,
                          "end_byte": 463,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 464,
                          "end_byte": 469,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 464,
                              "end_byte": 465,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 466,
                              "end_byte": 467,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 468,
                              "end_byte": 469,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 470,
                          "end_byte": 471,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 472,
                          "end_byte": 477,
                          "text": "j < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 472,
                              "end_byte": 473,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 474,
                              "end_byte": 475,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 476,
                              "end_byte": 477,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 478,
                          "end_byte": 479,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 480,
                          "end_byte": 484,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 480,
                              "end_byte": 481,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 482,
                              "end_byte": 484,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 485,
                          "end_byte": 486,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 487,
                          "end_byte": 538,
                          "text": "{ scanf ( \"%d\" , & A [ j ] ) ; insert ( j , A ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 487,
                              "end_byte": 488,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 489,
                              "end_byte": 517,
                              "text": "scanf ( \"%d\" , & A [ j ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 489,
                                  "end_byte": 515,
                                  "text": "scanf ( \"%d\" , & A [ j ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 489,
                                      "end_byte": 494,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 495,
                                      "end_byte": 515,
                                      "text": "( \"%d\" , & A [ j ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 495,
                                          "end_byte": 496,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 497,
                                          "end_byte": 501,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 497,
                                              "end_byte": 498,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 498,
                                              "end_byte": 500,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 500,
                                              "end_byte": 501,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 502,
                                          "end_byte": 503,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 504,
                                          "end_byte": 513,
                                          "text": "& A [ j ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 504,
                                              "end_byte": 505,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 506,
                                              "end_byte": 513,
                                              "text": "A [ j ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 506,
                                                  "end_byte": 507,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 508,
                                                  "end_byte": 513,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 508,
                                                      "end_byte": 509,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 510,
                                                      "end_byte": 511,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 512,
                                                      "end_byte": 513,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 514,
                                          "end_byte": 515,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 516,
                                  "end_byte": 517,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 518,
                              "end_byte": 536,
                              "text": "insert ( j , A ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 518,
                                  "end_byte": 534,
                                  "text": "insert ( j , A )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 518,
                                      "end_byte": 524,
                                      "text": "insert",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 525,
                                      "end_byte": 534,
                                      "text": "( j , A )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 525,
                                          "end_byte": 526,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 527,
                                          "end_byte": 528,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 529,
                                          "end_byte": 530,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 531,
                                          "end_byte": 532,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 533,
                                          "end_byte": 534,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 535,
                                  "end_byte": 536,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 537,
                              "end_byte": 538,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 539,
                      "end_byte": 582,
                      "text": "printf ( \"%lld\\n\" , ( N - 1 ) * A [ 0 ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 539,
                          "end_byte": 580,
                          "text": "printf ( \"%lld\\n\" , ( N - 1 ) * A [ 0 ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 539,
                              "end_byte": 545,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 546,
                              "end_byte": 580,
                              "text": "( \"%lld\\n\" , ( N - 1 ) * A [ 0 ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 546,
                                  "end_byte": 547,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 548,
                                  "end_byte": 556,
                                  "text": "\"%lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 548,
                                      "end_byte": 549,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 549,
                                      "end_byte": 553,
                                      "text": "%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 553,
                                      "end_byte": 555,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 555,
                                      "end_byte": 556,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 557,
                                  "end_byte": 558,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 559,
                                  "end_byte": 578,
                                  "text": "( N - 1 ) * A [ 0 ]",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 559,
                                      "end_byte": 568,
                                      "text": "( N - 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 559,
                                          "end_byte": 560,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 561,
                                          "end_byte": 566,
                                          "text": "N - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 561,
                                              "end_byte": 562,
                                              "text": "N",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 563,
                                              "end_byte": 564,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 565,
                                              "end_byte": 566,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 567,
                                          "end_byte": 568,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 569,
                                      "end_byte": 570,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 571,
                                      "end_byte": 578,
                                      "text": "A [ 0 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 571,
                                          "end_byte": 572,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 573,
                                          "end_byte": 578,
                                          "text": "[ 0 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 573,
                                              "end_byte": 574,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 575,
                                              "end_byte": 576,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 577,
                                              "end_byte": 578,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 579,
                                  "end_byte": 580,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 581,
                          "end_byte": 582,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 583,
                      "end_byte": 584,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 585,
              "end_byte": 595,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 585,
                  "end_byte": 591,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 592,
                  "end_byte": 593,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 594,
                  "end_byte": 595,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 596,
              "end_byte": 597,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}