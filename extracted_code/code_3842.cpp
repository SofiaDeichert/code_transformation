int cmpfunc ( const void * a , const void * b ) { return * ( int * ) a - * ( int * ) b ; } int main ( ) { long long int n , a [ 100000 ] , t , c , l , i , j , p = 0 ; ; scanf ( "%d" , & t ) ; while ( t -- ) { c = 0 ; p = 0 ; l = 0 ; scanf ( "%lld" , & n ) ; for ( i = 0 ; i < n ; i ++ ) scanf ( "%lld" , & a [ i ] ) ; if ( n == 1 ) c = 1 ; else { for ( i = 0 ; i < n ; i ++ ) { l = i ; while ( a [ l + 1 ] > a [ l ] ) l ++ ; if ( l > i ) c ++ ; if ( l == n - 2 ) break ; } qsort ( a , n , sizeof ( long long int ) , cmpfunc ) ; for ( i = 0 ; i < n ; i ++ ) { l = i ; while ( a [ l ] == a [ l + 1 ] ) l ++ ; if ( l > i ) c += l - i - 1 ; else c ++ ; if ( l == n - 2 ) break ; } } printf ( "%lld\n" , c ) ; } return 0 ; }