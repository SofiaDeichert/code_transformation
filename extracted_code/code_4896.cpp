int a [ 105 ] [ 105 ] , n ; int cache [ 105 ] [ 105 ] ; max ( int a , int b ) { if ( a > b ) { return a ; } else { return b ; } } int fun ( int i , int j ) { int t ; if ( i + 1 == n ) { t = max ( a [ i ] [ j ] + a [ i + 1 ] [ j ] , a [ i ] [ j ] + a [ i + 1 ] [ j + 1 ] ) ; cache [ i ] [ j ] = t ; return t ; } else if ( cache [ i ] [ j ] != 0 ) { return cache [ i ] [ j ] ; } else { t = a [ i ] [ j ] + max ( fun ( i + 1 , j ) , fun ( i + 1 , j + 1 ) ) ; cache [ i ] [ j ] = t ; return t ; } } int main ( ) { int t , ans , i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; cache [ i ] [ j ] = 0 ; } n -- ; ans = fun ( 0 , 0 ) ; printf ( "%d\n" , ans ) ; } return 0 ; }