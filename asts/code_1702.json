{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 175,
  "text": "int main ( ) { int T , L , W , H ; scanf ( \"%d %d %d %d\" , & T , & L , & W , & H ) ; if ( L >= 1 && W && H >= 50 ) { printf ( \"good\" ) ; } else printf ( \"bad\" ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 175,
      "text": "int main ( ) { int T , L , W , H ; scanf ( \"%d %d %d %d\" , & T , & L , & W , & H ) ; if ( L >= 1 && W && H >= 50 ) { printf ( \"good\" ) ; } else printf ( \"bad\" ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 175,
          "text": "{ int T , L , W , H ; scanf ( \"%d %d %d %d\" , & T , & L , & W , & H ) ; if ( L >= 1 && W && H >= 50 ) { printf ( \"good\" ) ; } else printf ( \"bad\" ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 34,
              "text": "int T , L , W , H ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "L",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "W",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": "H",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 35,
              "end_byte": 84,
              "text": "scanf ( \"%d %d %d %d\" , & T , & L , & W , & H ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 35,
                  "end_byte": 82,
                  "text": "scanf ( \"%d %d %d %d\" , & T , & L , & W , & H )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 35,
                      "end_byte": 40,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 41,
                      "end_byte": 82,
                      "text": "( \"%d %d %d %d\" , & T , & L , & W , & H )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 41,
                          "end_byte": 42,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 43,
                          "end_byte": 56,
                          "text": "\"%d %d %d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 43,
                              "end_byte": 44,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 44,
                              "end_byte": 55,
                              "text": "%d %d %d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 55,
                              "end_byte": 56,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 57,
                          "end_byte": 58,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 59,
                          "end_byte": 62,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 59,
                              "end_byte": 60,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 61,
                              "end_byte": 62,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 65,
                          "end_byte": 68,
                          "text": "& L",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 67,
                              "end_byte": 68,
                              "text": "L",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 69,
                          "end_byte": 70,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 71,
                          "end_byte": 74,
                          "text": "& W",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 71,
                              "end_byte": 72,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 73,
                              "end_byte": 74,
                              "text": "W",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 75,
                          "end_byte": 76,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 77,
                          "end_byte": 80,
                          "text": "& H",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 77,
                              "end_byte": 78,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 79,
                              "end_byte": 80,
                              "text": "H",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 85,
              "end_byte": 162,
              "text": "if ( L >= 1 && W && H >= 50 ) { printf ( \"good\" ) ; } else printf ( \"bad\" ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 85,
                  "end_byte": 87,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 88,
                  "end_byte": 114,
                  "text": "( L >= 1 && W && H >= 50 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 88,
                      "end_byte": 89,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 90,
                      "end_byte": 112,
                      "text": "L >= 1 && W && H >= 50",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 90,
                          "end_byte": 101,
                          "text": "L >= 1 && W",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start_byte": 90,
                              "end_byte": 96,
                              "text": "L >= 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 90,
                                  "end_byte": 91,
                                  "text": "L",
                                  "children": []
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 92,
                                  "end_byte": 94,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 95,
                                  "end_byte": 96,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "&&",
                              "start_byte": 97,
                              "end_byte": 99,
                              "text": "&&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "W",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 102,
                          "end_byte": 104,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 105,
                          "end_byte": 112,
                          "text": "H >= 50",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "H",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 107,
                              "end_byte": 109,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 110,
                              "end_byte": 112,
                              "text": "50",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 115,
                  "end_byte": 138,
                  "text": "{ printf ( \"good\" ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 117,
                      "end_byte": 136,
                      "text": "printf ( \"good\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 117,
                          "end_byte": 134,
                          "text": "printf ( \"good\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 117,
                              "end_byte": 123,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 124,
                              "end_byte": 134,
                              "text": "( \"good\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 124,
                                  "end_byte": 125,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 126,
                                  "end_byte": 132,
                                  "text": "\"good\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 126,
                                      "end_byte": 127,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 127,
                                      "end_byte": 131,
                                      "text": "good",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 131,
                                      "end_byte": 132,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 133,
                                  "end_byte": 134,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 135,
                          "end_byte": 136,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 137,
                      "end_byte": 138,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 139,
                  "end_byte": 162,
                  "text": "else printf ( \"bad\" ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 139,
                      "end_byte": 143,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 144,
                      "end_byte": 162,
                      "text": "printf ( \"bad\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 144,
                          "end_byte": 160,
                          "text": "printf ( \"bad\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 144,
                              "end_byte": 150,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 151,
                              "end_byte": 160,
                              "text": "( \"bad\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 151,
                                  "end_byte": 152,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 153,
                                  "end_byte": 158,
                                  "text": "\"bad\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 154,
                                      "end_byte": 157,
                                      "text": "bad",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 163,
              "end_byte": 173,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 163,
                  "end_byte": 169,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 170,
                  "end_byte": 171,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 172,
                  "end_byte": 173,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 174,
              "end_byte": 175,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}