int main ( int argc , char * argv [ ] ) { int * sums = malloc ( MAX_SIZE * sizeof ( int ) ) ; int * prev_sums = malloc ( MAX_SIZE * sizeof ( int ) ) ; int round , rounds ; int line , width ; int i , tmp , max ; scanf ( "%d" , & rounds ) ; for ( round = 0 ; round < rounds ; ++ round ) { scanf ( "%d" , & width ) ; memset ( prev_sums , 0 , MAX_SIZE * sizeof ( int ) ) ; for ( max = line = 0 ; line < width ; ++ line ) { for ( i = 0 ; i < ( line + 1 ) ; ++ i ) { scanf ( "%d" , & tmp ) ; if ( i == 0 ) { sums [ i ] = prev_sums [ i ] + tmp ; } else { sums [ i ] = ( prev_sums [ i ] > prev_sums [ i - 1 ] ) ? ( prev_sums [ i ] + tmp ) : ( prev_sums [ i - 1 ] + tmp ) ; } if ( max < sums [ i ] ) max = sums [ i ] ; } for ( i = 0 ; i < ( line + 1 ) ; ++ i ) prev_sums [ i ] = sums [ i ] ; } printf ( "%d\n" , max ) ; } free ( prev_sums ) ; free ( sums ) ; return 0 ; }