{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 489,
  "text": "int main ( ) { int n , i , l , depth , add , seed , level , mummy , n1 , n2 , location ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & depth ) ; add = 0 ; scanf ( \"%d\" , & seed ) ; location = 1 ; add += seed ; for ( level = 2 ; level <= depth ; level ++ ) { for ( l = 0 ; l < location - 1 ; l ++ ) scanf ( \"%d\" , & mummy ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; if ( n2 > n1 ) { add += n2 ; location += 1 ; } else add += n1 ; } printf ( \"%d\\n\" , add ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 489,
      "text": "int main ( ) { int n , i , l , depth , add , seed , level , mummy , n1 , n2 , location ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & depth ) ; add = 0 ; scanf ( \"%d\" , & seed ) ; location = 1 ; add += seed ; for ( level = 2 ; level <= depth ; level ++ ) { for ( l = 0 ; l < location - 1 ; l ++ ) scanf ( \"%d\" , & mummy ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; if ( n2 > n1 ) { add += n2 ; location += 1 ; } else add += n1 ; } printf ( \"%d\\n\" , add ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 489,
          "text": "{ int n , i , l , depth , add , seed , level , mummy , n1 , n2 , location ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & depth ) ; add = 0 ; scanf ( \"%d\" , & seed ) ; location = 1 ; add += seed ; for ( level = 2 ; level <= depth ; level ++ ) { for ( l = 0 ; l < location - 1 ; l ++ ) scanf ( \"%d\" , & mummy ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; if ( n2 > n1 ) { add += n2 ; location += 1 ; } else add += n1 ; } printf ( \"%d\\n\" , add ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 88,
              "text": "int n , i , l , depth , add , seed , level , mummy , n1 , n2 , location ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 36,
                  "text": "depth",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 42,
                  "text": "add",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 49,
                  "text": "seed",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 52,
                  "end_byte": 57,
                  "text": "level",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 60,
                  "end_byte": 65,
                  "text": "mummy",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 66,
                  "end_byte": 67,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 68,
                  "end_byte": 70,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 73,
                  "end_byte": 75,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 78,
                  "end_byte": 86,
                  "text": "location",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 89,
              "end_byte": 111,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 89,
                  "end_byte": 109,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 89,
                      "end_byte": 94,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 95,
                      "end_byte": 109,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 97,
                          "end_byte": 101,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 97,
                              "end_byte": 98,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 98,
                              "end_byte": 100,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 104,
                          "end_byte": 107,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 106,
                              "end_byte": 107,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 108,
                          "end_byte": 109,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 112,
              "end_byte": 476,
              "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & depth ) ; add = 0 ; scanf ( \"%d\" , & seed ) ; location = 1 ; add += seed ; for ( level = 2 ; level <= depth ; level ++ ) { for ( l = 0 ; l < location - 1 ; l ++ ) scanf ( \"%d\" , & mummy ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; if ( n2 > n1 ) { add += n2 ; location += 1 ; } else add += n1 ; } printf ( \"%d\\n\" , add ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 112,
                  "end_byte": 115,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 118,
                  "end_byte": 123,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 120,
                      "end_byte": 121,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 124,
                  "end_byte": 125,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 126,
                  "end_byte": 131,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 134,
                  "end_byte": 138,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 134,
                      "end_byte": 135,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 136,
                      "end_byte": 138,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 139,
                  "end_byte": 140,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 141,
                  "end_byte": 476,
                  "text": "{ scanf ( \"%d\" , & depth ) ; add = 0 ; scanf ( \"%d\" , & seed ) ; location = 1 ; add += seed ; for ( level = 2 ; level <= depth ; level ++ ) { for ( l = 0 ; l < location - 1 ; l ++ ) scanf ( \"%d\" , & mummy ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; if ( n2 > n1 ) { add += n2 ; location += 1 ; } else add += n1 ; } printf ( \"%d\\n\" , add ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 141,
                      "end_byte": 142,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 143,
                      "end_byte": 169,
                      "text": "scanf ( \"%d\" , & depth ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 143,
                          "end_byte": 167,
                          "text": "scanf ( \"%d\" , & depth )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 143,
                              "end_byte": 148,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 149,
                              "end_byte": 167,
                              "text": "( \"%d\" , & depth )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 149,
                                  "end_byte": 150,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 151,
                                  "end_byte": 155,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 152,
                                      "end_byte": 154,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 156,
                                  "end_byte": 157,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 158,
                                  "end_byte": 165,
                                  "text": "& depth",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 160,
                                      "end_byte": 165,
                                      "text": "depth",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 166,
                                  "end_byte": 167,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 168,
                          "end_byte": 169,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 170,
                      "end_byte": 179,
                      "text": "add = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 170,
                          "end_byte": 177,
                          "text": "add = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 170,
                              "end_byte": 173,
                              "text": "add",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 178,
                          "end_byte": 179,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 180,
                      "end_byte": 205,
                      "text": "scanf ( \"%d\" , & seed ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 180,
                          "end_byte": 203,
                          "text": "scanf ( \"%d\" , & seed )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 180,
                              "end_byte": 185,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 186,
                              "end_byte": 203,
                              "text": "( \"%d\" , & seed )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 186,
                                  "end_byte": 187,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 188,
                                  "end_byte": 192,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 188,
                                      "end_byte": 189,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 189,
                                      "end_byte": 191,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 191,
                                      "end_byte": 192,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 195,
                                  "end_byte": 201,
                                  "text": "& seed",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 197,
                                      "end_byte": 201,
                                      "text": "seed",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 204,
                          "end_byte": 205,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 206,
                      "end_byte": 220,
                      "text": "location = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 206,
                          "end_byte": 218,
                          "text": "location = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 206,
                              "end_byte": 214,
                              "text": "location",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 219,
                          "end_byte": 220,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 221,
                      "end_byte": 234,
                      "text": "add += seed ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 221,
                          "end_byte": 232,
                          "text": "add += seed",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 221,
                              "end_byte": 224,
                              "text": "add",
                              "children": []
                            },
                            {
                              "type": "+=",
                              "start_byte": 225,
                              "end_byte": 227,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 228,
                              "end_byte": 232,
                              "text": "seed",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 233,
                          "end_byte": 234,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 235,
                      "end_byte": 448,
                      "text": "for ( level = 2 ; level <= depth ; level ++ ) { for ( l = 0 ; l < location - 1 ; l ++ ) scanf ( \"%d\" , & mummy ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; if ( n2 > n1 ) { add += n2 ; location += 1 ; } else add += n1 ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 235,
                          "end_byte": 238,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 239,
                          "end_byte": 240,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 241,
                          "end_byte": 250,
                          "text": "level = 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 241,
                              "end_byte": 246,
                              "text": "level",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 247,
                              "end_byte": 248,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 249,
                              "end_byte": 250,
                              "text": "2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 251,
                          "end_byte": 252,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 253,
                          "end_byte": 267,
                          "text": "level <= depth",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 253,
                              "end_byte": 258,
                              "text": "level",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 259,
                              "end_byte": 261,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 262,
                              "end_byte": 267,
                              "text": "depth",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 268,
                          "end_byte": 269,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 270,
                          "end_byte": 278,
                          "text": "level ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 270,
                              "end_byte": 275,
                              "text": "level",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 276,
                              "end_byte": 278,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 279,
                          "end_byte": 280,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 281,
                          "end_byte": 448,
                          "text": "{ for ( l = 0 ; l < location - 1 ; l ++ ) scanf ( \"%d\" , & mummy ) ; scanf ( \"%d%d\" , & n1 , & n2 ) ; if ( n2 > n1 ) { add += n2 ; location += 1 ; } else add += n1 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 281,
                              "end_byte": 282,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 283,
                              "end_byte": 349,
                              "text": "for ( l = 0 ; l < location - 1 ; l ++ ) scanf ( \"%d\" , & mummy ) ;",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 283,
                                  "end_byte": 286,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 289,
                                  "end_byte": 294,
                                  "text": "l = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 289,
                                      "end_byte": 290,
                                      "text": "l",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 291,
                                      "end_byte": 292,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 293,
                                      "end_byte": 294,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 295,
                                  "end_byte": 296,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 297,
                                  "end_byte": 313,
                                  "text": "l < location - 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 297,
                                      "end_byte": 298,
                                      "text": "l",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 299,
                                      "end_byte": 300,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 301,
                                      "end_byte": 313,
                                      "text": "location - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 301,
                                          "end_byte": 309,
                                          "text": "location",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 310,
                                          "end_byte": 311,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 312,
                                          "end_byte": 313,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 314,
                                  "end_byte": 315,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 316,
                                  "end_byte": 320,
                                  "text": "l ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 316,
                                      "end_byte": 317,
                                      "text": "l",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 318,
                                      "end_byte": 320,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 321,
                                  "end_byte": 322,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 323,
                                  "end_byte": 349,
                                  "text": "scanf ( \"%d\" , & mummy ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 323,
                                      "end_byte": 347,
                                      "text": "scanf ( \"%d\" , & mummy )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 323,
                                          "end_byte": 328,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 329,
                                          "end_byte": 347,
                                          "text": "( \"%d\" , & mummy )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 329,
                                              "end_byte": 330,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 331,
                                              "end_byte": 335,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 331,
                                                  "end_byte": 332,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 332,
                                                  "end_byte": 334,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 334,
                                                  "end_byte": 335,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 336,
                                              "end_byte": 337,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 338,
                                              "end_byte": 345,
                                              "text": "& mummy",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 338,
                                                  "end_byte": 339,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 340,
                                                  "end_byte": 345,
                                                  "text": "mummy",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 346,
                                              "end_byte": 347,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 348,
                                      "end_byte": 349,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 350,
                              "end_byte": 382,
                              "text": "scanf ( \"%d%d\" , & n1 , & n2 ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 350,
                                  "end_byte": 380,
                                  "text": "scanf ( \"%d%d\" , & n1 , & n2 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 350,
                                      "end_byte": 355,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 356,
                                      "end_byte": 380,
                                      "text": "( \"%d%d\" , & n1 , & n2 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 356,
                                          "end_byte": 357,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 358,
                                          "end_byte": 364,
                                          "text": "\"%d%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 358,
                                              "end_byte": 359,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 359,
                                              "end_byte": 363,
                                              "text": "%d%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 363,
                                              "end_byte": 364,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 365,
                                          "end_byte": 366,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 367,
                                          "end_byte": 371,
                                          "text": "& n1",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 367,
                                              "end_byte": 368,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 369,
                                              "end_byte": 371,
                                              "text": "n1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 372,
                                          "end_byte": 373,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 374,
                                          "end_byte": 378,
                                          "text": "& n2",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 374,
                                              "end_byte": 375,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 376,
                                              "end_byte": 378,
                                              "text": "n2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 379,
                                          "end_byte": 380,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 381,
                                  "end_byte": 382,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 383,
                              "end_byte": 446,
                              "text": "if ( n2 > n1 ) { add += n2 ; location += 1 ; } else add += n1 ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 383,
                                  "end_byte": 385,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 386,
                                  "end_byte": 397,
                                  "text": "( n2 > n1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 386,
                                      "end_byte": 387,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 388,
                                      "end_byte": 395,
                                      "text": "n2 > n1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 388,
                                          "end_byte": 390,
                                          "text": "n2",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 391,
                                          "end_byte": 392,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 393,
                                          "end_byte": 395,
                                          "text": "n1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 396,
                                      "end_byte": 397,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 398,
                                  "end_byte": 429,
                                  "text": "{ add += n2 ; location += 1 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 398,
                                      "end_byte": 399,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 400,
                                      "end_byte": 411,
                                      "text": "add += n2 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 400,
                                          "end_byte": 409,
                                          "text": "add += n2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 400,
                                              "end_byte": 403,
                                              "text": "add",
                                              "children": []
                                            },
                                            {
                                              "type": "+=",
                                              "start_byte": 404,
                                              "end_byte": 406,
                                              "text": "+=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 407,
                                              "end_byte": 409,
                                              "text": "n2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 410,
                                          "end_byte": 411,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 412,
                                      "end_byte": 427,
                                      "text": "location += 1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 412,
                                          "end_byte": 425,
                                          "text": "location += 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 412,
                                              "end_byte": 420,
                                              "text": "location",
                                              "children": []
                                            },
                                            {
                                              "type": "+=",
                                              "start_byte": 421,
                                              "end_byte": 423,
                                              "text": "+=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 424,
                                              "end_byte": 425,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 426,
                                          "end_byte": 427,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 428,
                                      "end_byte": 429,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 430,
                                  "end_byte": 446,
                                  "text": "else add += n1 ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 430,
                                      "end_byte": 434,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 435,
                                      "end_byte": 446,
                                      "text": "add += n1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 435,
                                          "end_byte": 444,
                                          "text": "add += n1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 435,
                                              "end_byte": 438,
                                              "text": "add",
                                              "children": []
                                            },
                                            {
                                              "type": "+=",
                                              "start_byte": 439,
                                              "end_byte": 441,
                                              "text": "+=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 442,
                                              "end_byte": 444,
                                              "text": "n1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 445,
                                          "end_byte": 446,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 447,
                              "end_byte": 448,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 449,
                      "end_byte": 474,
                      "text": "printf ( \"%d\\n\" , add ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 449,
                          "end_byte": 472,
                          "text": "printf ( \"%d\\n\" , add )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 449,
                              "end_byte": 455,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 456,
                              "end_byte": 472,
                              "text": "( \"%d\\n\" , add )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 456,
                                  "end_byte": 457,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 458,
                                  "end_byte": 464,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 458,
                                      "end_byte": 459,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 459,
                                      "end_byte": 461,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 461,
                                      "end_byte": 463,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 463,
                                      "end_byte": 464,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 465,
                                  "end_byte": 466,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 467,
                                  "end_byte": 470,
                                  "text": "add",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 471,
                                  "end_byte": 472,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 473,
                          "end_byte": 474,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 475,
                      "end_byte": 476,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 477,
              "end_byte": 487,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 477,
                  "end_byte": 483,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 484,
                  "end_byte": 485,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 486,
                  "end_byte": 487,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 488,
              "end_byte": 489,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}