{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 558,
  "text": "int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } void trinum ( ) { int arr [ 101 ] [ 101 ] , i = 0 , j = 0 , n ; scanf ( \"%d\" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } } for ( i = n ; i >= 2 ; i -- ) { for ( j = 1 ; j <= i - 1 ; j ++ ) { arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] ) ; } } printf ( \"\\n%d\" , arr [ 1 ] [ 1 ] ) ; } int main ( ) { int t = 0 , i ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { trinum ( ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 69,
      "text": "int max ( int a , int b ) { if ( a > b ) return a ; else return b ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "max ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 69,
          "text": "{ if ( a > b ) return a ; else return b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 28,
              "end_byte": 67,
              "text": "if ( a > b ) return a ; else return b ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 28,
                  "end_byte": 30,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 31,
                  "end_byte": 40,
                  "text": "( a > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 33,
                      "end_byte": 38,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 35,
                          "end_byte": 36,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 37,
                          "end_byte": 38,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 39,
                      "end_byte": 40,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 41,
                  "end_byte": 51,
                  "text": "return a ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 41,
                      "end_byte": 47,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 48,
                      "end_byte": 49,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 52,
                  "end_byte": 67,
                  "text": "else return b ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 52,
                      "end_byte": 56,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 57,
                      "end_byte": 67,
                      "text": "return b ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 57,
                          "end_byte": 63,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 64,
                          "end_byte": 65,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 68,
              "end_byte": 69,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 70,
      "end_byte": 444,
      "text": "void trinum ( ) { int arr [ 101 ] [ 101 ] , i = 0 , j = 0 , n ; scanf ( \"%d\" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } } for ( i = n ; i >= 2 ; i -- ) { for ( j = 1 ; j <= i - 1 ; j ++ ) { arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] ) ; } } printf ( \"\\n%d\" , arr [ 1 ] [ 1 ] ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 70,
          "end_byte": 74,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 75,
          "end_byte": 85,
          "text": "trinum ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 75,
              "end_byte": 81,
              "text": "trinum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 82,
              "end_byte": 85,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 84,
                  "end_byte": 85,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 86,
          "end_byte": 444,
          "text": "{ int arr [ 101 ] [ 101 ] , i = 0 , j = 0 , n ; scanf ( \"%d\" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } } for ( i = n ; i >= 2 ; i -- ) { for ( j = 1 ; j <= i - 1 ; j ++ ) { arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] ) ; } } printf ( \"\\n%d\" , arr [ 1 ] [ 1 ] ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 86,
              "end_byte": 87,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 88,
              "end_byte": 133,
              "text": "int arr [ 101 ] [ 101 ] , i = 0 , j = 0 , n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 88,
                  "end_byte": 91,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 92,
                  "end_byte": 111,
                  "text": "arr [ 101 ] [ 101 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 92,
                      "end_byte": 103,
                      "text": "arr [ 101 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 92,
                          "end_byte": 95,
                          "text": "arr",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 98,
                          "end_byte": 101,
                          "text": "101",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 106,
                      "end_byte": 109,
                      "text": "101",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 110,
                      "end_byte": 111,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 112,
                  "end_byte": 113,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 114,
                  "end_byte": 119,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 122,
                  "end_byte": 127,
                  "text": "j = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 128,
                  "end_byte": 129,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 130,
                  "end_byte": 131,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 134,
              "end_byte": 156,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 134,
                  "end_byte": 154,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 134,
                      "end_byte": 139,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 140,
                      "end_byte": 154,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 140,
                          "end_byte": 141,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 142,
                          "end_byte": 146,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 143,
                              "end_byte": 145,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 147,
                          "end_byte": 148,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 149,
                          "end_byte": 152,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 152,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 155,
                  "end_byte": 156,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 157,
              "end_byte": 261,
              "text": "for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 157,
                  "end_byte": 160,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 161,
                  "end_byte": 162,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 163,
                  "end_byte": 168,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 163,
                      "end_byte": 164,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 165,
                      "end_byte": 166,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 167,
                      "end_byte": 168,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 169,
                  "end_byte": 170,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 171,
                  "end_byte": 177,
                  "text": "i <= n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 171,
                      "end_byte": 172,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 173,
                      "end_byte": 175,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 178,
                  "end_byte": 179,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 180,
                  "end_byte": 184,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 180,
                      "end_byte": 181,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 182,
                      "end_byte": 184,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 185,
                  "end_byte": 186,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 187,
                  "end_byte": 261,
                  "text": "{ for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 187,
                      "end_byte": 188,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 189,
                      "end_byte": 259,
                      "text": "for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & arr [ i ] [ j ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 189,
                          "end_byte": 192,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 193,
                          "end_byte": 194,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 195,
                          "end_byte": 200,
                          "text": "j = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 195,
                              "end_byte": 196,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 197,
                              "end_byte": 198,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 199,
                              "end_byte": 200,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 201,
                          "end_byte": 202,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 203,
                          "end_byte": 209,
                          "text": "j <= i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 203,
                              "end_byte": 204,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 205,
                              "end_byte": 207,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 208,
                              "end_byte": 209,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 210,
                          "end_byte": 211,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 212,
                          "end_byte": 216,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 212,
                              "end_byte": 213,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 214,
                              "end_byte": 216,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 217,
                          "end_byte": 218,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 219,
                          "end_byte": 259,
                          "text": "{ scanf ( \"%d\" , & arr [ i ] [ j ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 219,
                              "end_byte": 220,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 221,
                              "end_byte": 257,
                              "text": "scanf ( \"%d\" , & arr [ i ] [ j ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 221,
                                  "end_byte": 255,
                                  "text": "scanf ( \"%d\" , & arr [ i ] [ j ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 221,
                                      "end_byte": 226,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 227,
                                      "end_byte": 255,
                                      "text": "( \"%d\" , & arr [ i ] [ j ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 227,
                                          "end_byte": 228,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 229,
                                          "end_byte": 233,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 229,
                                              "end_byte": 230,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 230,
                                              "end_byte": 232,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 232,
                                              "end_byte": 233,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 234,
                                          "end_byte": 235,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 236,
                                          "end_byte": 253,
                                          "text": "& arr [ i ] [ j ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 236,
                                              "end_byte": 237,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 238,
                                              "end_byte": 253,
                                              "text": "arr [ i ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 238,
                                                  "end_byte": 247,
                                                  "text": "arr [ i ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 238,
                                                      "end_byte": 241,
                                                      "text": "arr",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 242,
                                                      "end_byte": 247,
                                                      "text": "[ i ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 242,
                                                          "end_byte": 243,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 244,
                                                          "end_byte": 245,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 246,
                                                          "end_byte": 247,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 248,
                                                  "end_byte": 253,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 248,
                                                      "end_byte": 249,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 250,
                                                      "end_byte": 251,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 252,
                                                      "end_byte": 253,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 254,
                                          "end_byte": 255,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 256,
                                  "end_byte": 257,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 258,
                              "end_byte": 259,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 260,
                      "end_byte": 261,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 262,
              "end_byte": 404,
              "text": "for ( i = n ; i >= 2 ; i -- ) { for ( j = 1 ; j <= i - 1 ; j ++ ) { arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] ) ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 262,
                  "end_byte": 265,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 266,
                  "end_byte": 267,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 268,
                  "end_byte": 273,
                  "text": "i = n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 268,
                      "end_byte": 269,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 270,
                      "end_byte": 271,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 272,
                      "end_byte": 273,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 274,
                  "end_byte": 275,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 276,
                  "end_byte": 282,
                  "text": "i >= 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 276,
                      "end_byte": 277,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 278,
                      "end_byte": 280,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 281,
                      "end_byte": 282,
                      "text": "2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 283,
                  "end_byte": 284,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 285,
                  "end_byte": 289,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 287,
                      "end_byte": 289,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 290,
                  "end_byte": 291,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 292,
                  "end_byte": 404,
                  "text": "{ for ( j = 1 ; j <= i - 1 ; j ++ ) { arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] ) ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 292,
                      "end_byte": 293,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 294,
                      "end_byte": 402,
                      "text": "for ( j = 1 ; j <= i - 1 ; j ++ ) { arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 294,
                          "end_byte": 297,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 298,
                          "end_byte": 299,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 300,
                          "end_byte": 305,
                          "text": "j = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 300,
                              "end_byte": 301,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 304,
                              "end_byte": 305,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 306,
                          "end_byte": 307,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 308,
                          "end_byte": 318,
                          "text": "j <= i - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 308,
                              "end_byte": 309,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 310,
                              "end_byte": 312,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 313,
                              "end_byte": 318,
                              "text": "i - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 313,
                                  "end_byte": 314,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 315,
                                  "end_byte": 316,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 317,
                                  "end_byte": 318,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 319,
                          "end_byte": 320,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 321,
                          "end_byte": 325,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 321,
                              "end_byte": 322,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 323,
                              "end_byte": 325,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 326,
                          "end_byte": 327,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 328,
                          "end_byte": 402,
                          "text": "{ arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 330,
                              "end_byte": 400,
                              "text": "arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 330,
                                  "end_byte": 398,
                                  "text": "arr [ i - 1 ] [ j ] += max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 330,
                                      "end_byte": 349,
                                      "text": "arr [ i - 1 ] [ j ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 330,
                                          "end_byte": 343,
                                          "text": "arr [ i - 1 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 330,
                                              "end_byte": 333,
                                              "text": "arr",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 334,
                                              "end_byte": 343,
                                              "text": "[ i - 1 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 334,
                                                  "end_byte": 335,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 336,
                                                  "end_byte": 341,
                                                  "text": "i - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 336,
                                                      "end_byte": 337,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 338,
                                                      "end_byte": 339,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 340,
                                                      "end_byte": 341,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 342,
                                                  "end_byte": 343,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 344,
                                          "end_byte": 349,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 344,
                                              "end_byte": 345,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 346,
                                              "end_byte": 347,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 348,
                                              "end_byte": 349,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 350,
                                      "end_byte": 352,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 353,
                                      "end_byte": 398,
                                      "text": "max ( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 353,
                                          "end_byte": 356,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 357,
                                          "end_byte": 398,
                                          "text": "( arr [ i ] [ j ] , arr [ i ] [ j + 1 ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 357,
                                              "end_byte": 358,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 359,
                                              "end_byte": 374,
                                              "text": "arr [ i ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 359,
                                                  "end_byte": 368,
                                                  "text": "arr [ i ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 359,
                                                      "end_byte": 362,
                                                      "text": "arr",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 363,
                                                      "end_byte": 368,
                                                      "text": "[ i ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 363,
                                                          "end_byte": 364,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 365,
                                                          "end_byte": 366,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 367,
                                                          "end_byte": 368,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 369,
                                                  "end_byte": 374,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 369,
                                                      "end_byte": 370,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 371,
                                                      "end_byte": 372,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 373,
                                                      "end_byte": 374,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 375,
                                              "end_byte": 376,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 377,
                                              "end_byte": 396,
                                              "text": "arr [ i ] [ j + 1 ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 377,
                                                  "end_byte": 386,
                                                  "text": "arr [ i ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 377,
                                                      "end_byte": 380,
                                                      "text": "arr",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 381,
                                                      "end_byte": 386,
                                                      "text": "[ i ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 381,
                                                          "end_byte": 382,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 383,
                                                          "end_byte": 384,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 385,
                                                          "end_byte": 386,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 387,
                                                  "end_byte": 396,
                                                  "text": "[ j + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 387,
                                                      "end_byte": 388,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 389,
                                                      "end_byte": 394,
                                                      "text": "j + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 389,
                                                          "end_byte": 390,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 391,
                                                          "end_byte": 392,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 393,
                                                          "end_byte": 394,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 395,
                                                      "end_byte": 396,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 397,
                                              "end_byte": 398,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 399,
                                  "end_byte": 400,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 401,
                              "end_byte": 402,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 403,
                      "end_byte": 404,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 405,
              "end_byte": 442,
              "text": "printf ( \"\\n%d\" , arr [ 1 ] [ 1 ] ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 405,
                  "end_byte": 440,
                  "text": "printf ( \"\\n%d\" , arr [ 1 ] [ 1 ] )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 405,
                      "end_byte": 411,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 412,
                      "end_byte": 440,
                      "text": "( \"\\n%d\" , arr [ 1 ] [ 1 ] )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 412,
                          "end_byte": 413,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 414,
                          "end_byte": 420,
                          "text": "\"\\n%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 414,
                              "end_byte": 415,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 415,
                              "end_byte": 417,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 417,
                              "end_byte": 419,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 419,
                              "end_byte": 420,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 421,
                          "end_byte": 422,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 423,
                          "end_byte": 438,
                          "text": "arr [ 1 ] [ 1 ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 423,
                              "end_byte": 432,
                              "text": "arr [ 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 423,
                                  "end_byte": 426,
                                  "text": "arr",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 427,
                                  "end_byte": 432,
                                  "text": "[ 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 427,
                                      "end_byte": 428,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 429,
                                      "end_byte": 430,
                                      "text": "1",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 431,
                                      "end_byte": 432,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 433,
                              "end_byte": 438,
                              "text": "[ 1 ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 433,
                                  "end_byte": 434,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 435,
                                  "end_byte": 436,
                                  "text": "1",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 437,
                                  "end_byte": 438,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 439,
                          "end_byte": 440,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 441,
                  "end_byte": 442,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 443,
              "end_byte": 444,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 445,
      "end_byte": 558,
      "text": "int main ( ) { int t = 0 , i ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { trinum ( ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 445,
          "end_byte": 448,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 449,
          "end_byte": 457,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 449,
              "end_byte": 453,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 454,
              "end_byte": 457,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 454,
                  "end_byte": 455,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 456,
                  "end_byte": 457,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 458,
          "end_byte": 558,
          "text": "{ int t = 0 , i ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { trinum ( ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 458,
              "end_byte": 459,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 460,
              "end_byte": 475,
              "text": "int t = 0 , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 460,
                  "end_byte": 463,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 464,
                  "end_byte": 469,
                  "text": "t = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 464,
                      "end_byte": 465,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 466,
                      "end_byte": 467,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 468,
                      "end_byte": 469,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 470,
                  "end_byte": 471,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 472,
                  "end_byte": 473,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 474,
                  "end_byte": 475,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 476,
              "end_byte": 498,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 476,
                  "end_byte": 496,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 476,
                      "end_byte": 481,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 482,
                      "end_byte": 496,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 482,
                          "end_byte": 483,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 484,
                          "end_byte": 488,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 484,
                              "end_byte": 485,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 485,
                              "end_byte": 487,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 487,
                              "end_byte": 488,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 489,
                          "end_byte": 490,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 491,
                          "end_byte": 494,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 491,
                              "end_byte": 492,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 493,
                              "end_byte": 494,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 495,
                          "end_byte": 496,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 497,
                  "end_byte": 498,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 499,
              "end_byte": 545,
              "text": "for ( i = 1 ; i <= t ; i ++ ) { trinum ( ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 499,
                  "end_byte": 502,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 503,
                  "end_byte": 504,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 505,
                  "end_byte": 510,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 505,
                      "end_byte": 506,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 507,
                      "end_byte": 508,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 509,
                      "end_byte": 510,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 511,
                  "end_byte": 512,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 513,
                  "end_byte": 519,
                  "text": "i <= t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 513,
                      "end_byte": 514,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 515,
                      "end_byte": 517,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 518,
                      "end_byte": 519,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 520,
                  "end_byte": 521,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 522,
                  "end_byte": 526,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 522,
                      "end_byte": 523,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 524,
                      "end_byte": 526,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 527,
                  "end_byte": 528,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 529,
                  "end_byte": 545,
                  "text": "{ trinum ( ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 529,
                      "end_byte": 530,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 531,
                      "end_byte": 543,
                      "text": "trinum ( ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 531,
                          "end_byte": 541,
                          "text": "trinum ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 531,
                              "end_byte": 537,
                              "text": "trinum",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 538,
                              "end_byte": 541,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 538,
                                  "end_byte": 539,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 540,
                                  "end_byte": 541,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 542,
                          "end_byte": 543,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 544,
                      "end_byte": 545,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 546,
              "end_byte": 556,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 546,
                  "end_byte": 552,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 553,
                  "end_byte": 554,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 555,
                  "end_byte": 556,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 557,
              "end_byte": 558,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}