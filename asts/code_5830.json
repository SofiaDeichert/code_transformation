{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 601,
  "text": "int findmax ( int n , int tri [ ] , int loc , int c_row ) { if ( c_row == n ) return tri [ loc ] ; int v1 , v2 ; v1 = findmax ( n , tri , loc + c_row , c_row + 1 ) ; v2 = findmax ( n , tri , loc + c_row + 1 , c_row + 1 ) ; if ( v1 > v2 ) return v1 + tri [ loc ] ; else return v2 + tri [ loc ] ; } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { int n , tot_n ; scanf ( \"%d\" , & n ) ; tot_n = n * ( n + 1 ) / 2 ; int tri [ tot_n ] ; for ( int j = 0 ; j < tot_n ; j ++ ) { scanf ( \"%d\" , & tri [ j ] ) ; } printf ( \"%d\\n\" , findmax ( n , tri , 0 , 1 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 296,
      "text": "int findmax ( int n , int tri [ ] , int loc , int c_row ) { if ( c_row == n ) return tri [ loc ] ; int v1 , v2 ; v1 = findmax ( n , tri , loc + c_row , c_row + 1 ) ; v2 = findmax ( n , tri , loc + c_row + 1 , c_row + 1 ) ; if ( v1 > v2 ) return v1 + tri [ loc ] ; else return v2 + tri [ loc ] ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 57,
          "text": "findmax ( int n , int tri [ ] , int loc , int c_row )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 11,
              "text": "findmax",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 12,
              "end_byte": 57,
              "text": "( int n , int tri [ ] , int loc , int c_row )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 14,
                  "end_byte": 19,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 14,
                      "end_byte": 17,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 18,
                      "end_byte": 19,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 22,
                  "end_byte": 33,
                  "text": "int tri [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 22,
                      "end_byte": 25,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 26,
                      "end_byte": 33,
                      "text": "tri [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 26,
                          "end_byte": 29,
                          "text": "tri",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 30,
                          "end_byte": 31,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 32,
                          "end_byte": 33,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 36,
                  "end_byte": 43,
                  "text": "int loc",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 36,
                      "end_byte": 39,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 40,
                      "end_byte": 43,
                      "text": "loc",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 46,
                  "end_byte": 55,
                  "text": "int c_row",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 46,
                      "end_byte": 49,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 50,
                      "end_byte": 55,
                      "text": "c_row",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 58,
          "end_byte": 296,
          "text": "{ if ( c_row == n ) return tri [ loc ] ; int v1 , v2 ; v1 = findmax ( n , tri , loc + c_row , c_row + 1 ) ; v2 = findmax ( n , tri , loc + c_row + 1 , c_row + 1 ) ; if ( v1 > v2 ) return v1 + tri [ loc ] ; else return v2 + tri [ loc ] ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 58,
              "end_byte": 59,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 60,
              "end_byte": 98,
              "text": "if ( c_row == n ) return tri [ loc ] ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 60,
                  "end_byte": 62,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 63,
                  "end_byte": 77,
                  "text": "( c_row == n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 63,
                      "end_byte": 64,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 65,
                      "end_byte": 75,
                      "text": "c_row == n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 65,
                          "end_byte": 70,
                          "text": "c_row",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 71,
                          "end_byte": 73,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 76,
                      "end_byte": 77,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 78,
                  "end_byte": 98,
                  "text": "return tri [ loc ] ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 78,
                      "end_byte": 84,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 85,
                      "end_byte": 96,
                      "text": "tri [ loc ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 85,
                          "end_byte": 88,
                          "text": "tri",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 89,
                          "end_byte": 96,
                          "text": "[ loc ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 89,
                              "end_byte": 90,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 91,
                              "end_byte": 94,
                              "text": "loc",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 97,
                      "end_byte": 98,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 99,
              "end_byte": 112,
              "text": "int v1 , v2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 99,
                  "end_byte": 102,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 103,
                  "end_byte": 105,
                  "text": "v1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 108,
                  "end_byte": 110,
                  "text": "v2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 113,
              "end_byte": 165,
              "text": "v1 = findmax ( n , tri , loc + c_row , c_row + 1 ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 113,
                  "end_byte": 163,
                  "text": "v1 = findmax ( n , tri , loc + c_row , c_row + 1 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 113,
                      "end_byte": 115,
                      "text": "v1",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 118,
                      "end_byte": 163,
                      "text": "findmax ( n , tri , loc + c_row , c_row + 1 )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 118,
                          "end_byte": 125,
                          "text": "findmax",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 126,
                          "end_byte": 163,
                          "text": "( n , tri , loc + c_row , c_row + 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 128,
                              "end_byte": 129,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 130,
                              "end_byte": 131,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 132,
                              "end_byte": 135,
                              "text": "tri",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 136,
                              "end_byte": 137,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 138,
                              "end_byte": 149,
                              "text": "loc + c_row",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 138,
                                  "end_byte": 141,
                                  "text": "loc",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 142,
                                  "end_byte": 143,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 144,
                                  "end_byte": 149,
                                  "text": "c_row",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 150,
                              "end_byte": 151,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 152,
                              "end_byte": 161,
                              "text": "c_row + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 152,
                                  "end_byte": 157,
                                  "text": "c_row",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 158,
                                  "end_byte": 159,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 164,
                  "end_byte": 165,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 166,
              "end_byte": 222,
              "text": "v2 = findmax ( n , tri , loc + c_row + 1 , c_row + 1 ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 166,
                  "end_byte": 220,
                  "text": "v2 = findmax ( n , tri , loc + c_row + 1 , c_row + 1 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 166,
                      "end_byte": 168,
                      "text": "v2",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 169,
                      "end_byte": 170,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 171,
                      "end_byte": 220,
                      "text": "findmax ( n , tri , loc + c_row + 1 , c_row + 1 )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 171,
                          "end_byte": 178,
                          "text": "findmax",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 179,
                          "end_byte": 220,
                          "text": "( n , tri , loc + c_row + 1 , c_row + 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 185,
                              "end_byte": 188,
                              "text": "tri",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 189,
                              "end_byte": 190,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 191,
                              "end_byte": 206,
                              "text": "loc + c_row + 1",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 191,
                                  "end_byte": 202,
                                  "text": "loc + c_row",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 191,
                                      "end_byte": 194,
                                      "text": "loc",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 197,
                                      "end_byte": 202,
                                      "text": "c_row",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 203,
                                  "end_byte": 204,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 205,
                                  "end_byte": 206,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 207,
                              "end_byte": 208,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 209,
                              "end_byte": 218,
                              "text": "c_row + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 209,
                                  "end_byte": 214,
                                  "text": "c_row",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 215,
                                  "end_byte": 216,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 217,
                                  "end_byte": 218,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 219,
                              "end_byte": 220,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 221,
                  "end_byte": 222,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 223,
              "end_byte": 294,
              "text": "if ( v1 > v2 ) return v1 + tri [ loc ] ; else return v2 + tri [ loc ] ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 223,
                  "end_byte": 225,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 226,
                  "end_byte": 237,
                  "text": "( v1 > v2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 228,
                      "end_byte": 235,
                      "text": "v1 > v2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 228,
                          "end_byte": 230,
                          "text": "v1",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 231,
                          "end_byte": 232,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 233,
                          "end_byte": 235,
                          "text": "v2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 236,
                      "end_byte": 237,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 238,
                  "end_byte": 263,
                  "text": "return v1 + tri [ loc ] ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 238,
                      "end_byte": 244,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 245,
                      "end_byte": 261,
                      "text": "v1 + tri [ loc ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 245,
                          "end_byte": 247,
                          "text": "v1",
                          "children": []
                        },
                        {
                          "type": "+",
                          "start_byte": 248,
                          "end_byte": 249,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 250,
                          "end_byte": 261,
                          "text": "tri [ loc ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 250,
                              "end_byte": 253,
                              "text": "tri",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 254,
                              "end_byte": 261,
                              "text": "[ loc ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 254,
                                  "end_byte": 255,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 256,
                                  "end_byte": 259,
                                  "text": "loc",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 260,
                                  "end_byte": 261,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 262,
                      "end_byte": 263,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 264,
                  "end_byte": 294,
                  "text": "else return v2 + tri [ loc ] ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 264,
                      "end_byte": 268,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 269,
                      "end_byte": 294,
                      "text": "return v2 + tri [ loc ] ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 269,
                          "end_byte": 275,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 276,
                          "end_byte": 292,
                          "text": "v2 + tri [ loc ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 276,
                              "end_byte": 278,
                              "text": "v2",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 279,
                              "end_byte": 280,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 281,
                              "end_byte": 292,
                              "text": "tri [ loc ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 281,
                                  "end_byte": 284,
                                  "text": "tri",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 285,
                                  "end_byte": 292,
                                  "text": "[ loc ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 287,
                                      "end_byte": 290,
                                      "text": "loc",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 291,
                                      "end_byte": 292,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 293,
                          "end_byte": 294,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 295,
              "end_byte": 296,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 297,
      "end_byte": 601,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { int n , tot_n ; scanf ( \"%d\" , & n ) ; tot_n = n * ( n + 1 ) / 2 ; int tri [ tot_n ] ; for ( int j = 0 ; j < tot_n ; j ++ ) { scanf ( \"%d\" , & tri [ j ] ) ; } printf ( \"%d\\n\" , findmax ( n , tri , 0 , 1 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 297,
          "end_byte": 300,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 301,
          "end_byte": 309,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 301,
              "end_byte": 305,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 306,
              "end_byte": 309,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 306,
                  "end_byte": 307,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 308,
                  "end_byte": 309,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 310,
          "end_byte": 601,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { int n , tot_n ; scanf ( \"%d\" , & n ) ; tot_n = n * ( n + 1 ) / 2 ; int tri [ tot_n ] ; for ( int j = 0 ; j < tot_n ; j ++ ) { scanf ( \"%d\" , & tri [ j ] ) ; } printf ( \"%d\\n\" , findmax ( n , tri , 0 , 1 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 310,
              "end_byte": 311,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 312,
              "end_byte": 319,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 312,
                  "end_byte": 315,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 316,
                  "end_byte": 317,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 318,
                  "end_byte": 319,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 320,
              "end_byte": 342,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 320,
                  "end_byte": 340,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 320,
                      "end_byte": 325,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 326,
                      "end_byte": 340,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 326,
                          "end_byte": 327,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 328,
                          "end_byte": 332,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 329,
                              "end_byte": 331,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 331,
                              "end_byte": 332,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 333,
                          "end_byte": 334,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 335,
                          "end_byte": 338,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 335,
                              "end_byte": 336,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 337,
                              "end_byte": 338,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 339,
                          "end_byte": 340,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 341,
                  "end_byte": 342,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 343,
              "end_byte": 588,
              "text": "for ( int i = 0 ; i < t ; i ++ ) { int n , tot_n ; scanf ( \"%d\" , & n ) ; tot_n = n * ( n + 1 ) / 2 ; int tri [ tot_n ] ; for ( int j = 0 ; j < tot_n ; j ++ ) { scanf ( \"%d\" , & tri [ j ] ) ; } printf ( \"%d\\n\" , findmax ( n , tri , 0 , 1 ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 343,
                  "end_byte": 346,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 347,
                  "end_byte": 348,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "declaration",
                  "start_byte": 349,
                  "end_byte": 360,
                  "text": "int i = 0 ;",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 349,
                      "end_byte": 352,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "init_declarator",
                      "start_byte": 353,
                      "end_byte": 358,
                      "text": "i = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 355,
                          "end_byte": 356,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 357,
                          "end_byte": 358,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 359,
                      "end_byte": 360,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "binary_expression",
                  "start_byte": 361,
                  "end_byte": 366,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 361,
                      "end_byte": 362,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 363,
                      "end_byte": 364,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 365,
                      "end_byte": 366,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 367,
                  "end_byte": 368,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 369,
                  "end_byte": 373,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 369,
                      "end_byte": 370,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 371,
                      "end_byte": 373,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 374,
                  "end_byte": 375,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 376,
                  "end_byte": 588,
                  "text": "{ int n , tot_n ; scanf ( \"%d\" , & n ) ; tot_n = n * ( n + 1 ) / 2 ; int tri [ tot_n ] ; for ( int j = 0 ; j < tot_n ; j ++ ) { scanf ( \"%d\" , & tri [ j ] ) ; } printf ( \"%d\\n\" , findmax ( n , tri , 0 , 1 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 376,
                      "end_byte": 377,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 378,
                      "end_byte": 393,
                      "text": "int n , tot_n ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 378,
                          "end_byte": 381,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 382,
                          "end_byte": 383,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 384,
                          "end_byte": 385,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 386,
                          "end_byte": 391,
                          "text": "tot_n",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 392,
                          "end_byte": 393,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 394,
                      "end_byte": 416,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 394,
                          "end_byte": 414,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 394,
                              "end_byte": 399,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 400,
                              "end_byte": 414,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 400,
                                  "end_byte": 401,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 402,
                                  "end_byte": 406,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 402,
                                      "end_byte": 403,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 403,
                                      "end_byte": 405,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 405,
                                      "end_byte": 406,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 407,
                                  "end_byte": 408,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 409,
                                  "end_byte": 412,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 409,
                                      "end_byte": 410,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 413,
                                  "end_byte": 414,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 415,
                          "end_byte": 416,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 417,
                      "end_byte": 444,
                      "text": "tot_n = n * ( n + 1 ) / 2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 417,
                          "end_byte": 442,
                          "text": "tot_n = n * ( n + 1 ) / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 417,
                              "end_byte": 422,
                              "text": "tot_n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 423,
                              "end_byte": 424,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 425,
                              "end_byte": 442,
                              "text": "n * ( n + 1 ) / 2",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 425,
                                  "end_byte": 438,
                                  "text": "n * ( n + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 425,
                                      "end_byte": 426,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 427,
                                      "end_byte": 428,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 429,
                                      "end_byte": 438,
                                      "text": "( n + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 429,
                                          "end_byte": 430,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 431,
                                          "end_byte": 436,
                                          "text": "n + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 431,
                                              "end_byte": 432,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 433,
                                              "end_byte": 434,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 435,
                                              "end_byte": 436,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 437,
                                          "end_byte": 438,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 439,
                                  "end_byte": 440,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 441,
                                  "end_byte": 442,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 443,
                          "end_byte": 444,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 445,
                      "end_byte": 464,
                      "text": "int tri [ tot_n ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 445,
                          "end_byte": 448,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 449,
                          "end_byte": 462,
                          "text": "tri [ tot_n ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 449,
                              "end_byte": 452,
                              "text": "tri",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 455,
                              "end_byte": 460,
                              "text": "tot_n",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 461,
                              "end_byte": 462,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 463,
                          "end_byte": 464,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 465,
                      "end_byte": 536,
                      "text": "for ( int j = 0 ; j < tot_n ; j ++ ) { scanf ( \"%d\" , & tri [ j ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 465,
                          "end_byte": 468,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 469,
                          "end_byte": 470,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "declaration",
                          "start_byte": 471,
                          "end_byte": 482,
                          "text": "int j = 0 ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 471,
                              "end_byte": 474,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 475,
                              "end_byte": 480,
                              "text": "j = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 475,
                                  "end_byte": 476,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 477,
                                  "end_byte": 478,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 479,
                                  "end_byte": 480,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 481,
                              "end_byte": 482,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 483,
                          "end_byte": 492,
                          "text": "j < tot_n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 483,
                              "end_byte": 484,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 485,
                              "end_byte": 486,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 487,
                              "end_byte": 492,
                              "text": "tot_n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 493,
                          "end_byte": 494,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 495,
                          "end_byte": 499,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 495,
                              "end_byte": 496,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 497,
                              "end_byte": 499,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 500,
                          "end_byte": 501,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 502,
                          "end_byte": 536,
                          "text": "{ scanf ( \"%d\" , & tri [ j ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 502,
                              "end_byte": 503,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 504,
                              "end_byte": 534,
                              "text": "scanf ( \"%d\" , & tri [ j ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 504,
                                  "end_byte": 532,
                                  "text": "scanf ( \"%d\" , & tri [ j ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 504,
                                      "end_byte": 509,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 510,
                                      "end_byte": 532,
                                      "text": "( \"%d\" , & tri [ j ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 510,
                                          "end_byte": 511,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 512,
                                          "end_byte": 516,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 512,
                                              "end_byte": 513,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 513,
                                              "end_byte": 515,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 515,
                                              "end_byte": 516,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 517,
                                          "end_byte": 518,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 519,
                                          "end_byte": 530,
                                          "text": "& tri [ j ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 519,
                                              "end_byte": 520,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 521,
                                              "end_byte": 530,
                                              "text": "tri [ j ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 521,
                                                  "end_byte": 524,
                                                  "text": "tri",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 525,
                                                  "end_byte": 530,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 525,
                                                      "end_byte": 526,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 527,
                                                      "end_byte": 528,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 529,
                                                      "end_byte": 530,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 531,
                                          "end_byte": 532,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 533,
                                  "end_byte": 534,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 535,
                              "end_byte": 536,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 537,
                      "end_byte": 586,
                      "text": "printf ( \"%d\\n\" , findmax ( n , tri , 0 , 1 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 537,
                          "end_byte": 584,
                          "text": "printf ( \"%d\\n\" , findmax ( n , tri , 0 , 1 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 537,
                              "end_byte": 543,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 544,
                              "end_byte": 584,
                              "text": "( \"%d\\n\" , findmax ( n , tri , 0 , 1 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 544,
                                  "end_byte": 545,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 546,
                                  "end_byte": 552,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 546,
                                      "end_byte": 547,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 547,
                                      "end_byte": 549,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 549,
                                      "end_byte": 551,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 551,
                                      "end_byte": 552,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 553,
                                  "end_byte": 554,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 555,
                                  "end_byte": 582,
                                  "text": "findmax ( n , tri , 0 , 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 555,
                                      "end_byte": 562,
                                      "text": "findmax",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 563,
                                      "end_byte": 582,
                                      "text": "( n , tri , 0 , 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 563,
                                          "end_byte": 564,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 565,
                                          "end_byte": 566,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 567,
                                          "end_byte": 568,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 569,
                                          "end_byte": 572,
                                          "text": "tri",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 573,
                                          "end_byte": 574,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 575,
                                          "end_byte": 576,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 577,
                                          "end_byte": 578,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 579,
                                          "end_byte": 580,
                                          "text": "1",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 581,
                                          "end_byte": 582,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 583,
                                  "end_byte": 584,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 585,
                          "end_byte": 586,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 587,
                      "end_byte": 588,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 589,
              "end_byte": 599,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 589,
                  "end_byte": 595,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 596,
                  "end_byte": 597,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 598,
                  "end_byte": 599,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 600,
              "end_byte": 601,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}