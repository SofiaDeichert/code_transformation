{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 507,
  "text": "int main ( ) { int a , b , lcm , gcd , remainder , numerator , denominator ; printf ( \"Enter two numbers:\" ) ; scanf ( \"%d %d\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = a * b / gcd ; printf ( \"GCD of %d and %d is: %d\\n\" , a , b , gcd ) ; printf ( \"LCM of %d and %d is: %d\\n\" , a , b , lcm ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 507,
      "text": "int main ( ) { int a , b , lcm , gcd , remainder , numerator , denominator ; printf ( \"Enter two numbers:\" ) ; scanf ( \"%d %d\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = a * b / gcd ; printf ( \"GCD of %d and %d is: %d\\n\" , a , b , gcd ) ; printf ( \"LCM of %d and %d is: %d\\n\" , a , b , lcm ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 507,
          "text": "{ int a , b , lcm , gcd , remainder , numerator , denominator ; printf ( \"Enter two numbers:\" ) ; scanf ( \"%d %d\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = a * b / gcd ; printf ( \"GCD of %d and %d is: %d\\n\" , a , b , gcd ) ; printf ( \"LCM of %d and %d is: %d\\n\" , a , b , lcm ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 76,
              "text": "int a , b , lcm , gcd , remainder , numerator , denominator ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 30,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 36,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 48,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 60,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 74,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 77,
              "end_byte": 110,
              "text": "printf ( \"Enter two numbers:\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 77,
                  "end_byte": 108,
                  "text": "printf ( \"Enter two numbers:\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 77,
                      "end_byte": 83,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 84,
                      "end_byte": 108,
                      "text": "( \"Enter two numbers:\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 84,
                          "end_byte": 85,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 86,
                          "end_byte": 106,
                          "text": "\"Enter two numbers:\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 87,
                              "end_byte": 105,
                              "text": "Enter two numbers:",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 109,
                  "end_byte": 110,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 111,
              "end_byte": 142,
              "text": "scanf ( \"%d %d\" , & a , & b ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 111,
                  "end_byte": 140,
                  "text": "scanf ( \"%d %d\" , & a , & b )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 111,
                      "end_byte": 116,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 117,
                      "end_byte": 140,
                      "text": "( \"%d %d\" , & a , & b )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 119,
                          "end_byte": 126,
                          "text": "\"%d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 119,
                              "end_byte": 120,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 120,
                              "end_byte": 125,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 127,
                          "end_byte": 128,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 129,
                          "end_byte": 132,
                          "text": "& a",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 129,
                              "end_byte": 130,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 133,
                          "end_byte": 134,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 135,
                          "end_byte": 138,
                          "text": "& b",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 137,
                              "end_byte": 138,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 139,
                          "end_byte": 140,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 141,
                  "end_byte": 142,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 143,
              "end_byte": 236,
              "text": "if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 143,
                  "end_byte": 145,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 146,
                  "end_byte": 155,
                  "text": "( a > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 148,
                      "end_byte": 153,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 148,
                          "end_byte": 149,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 150,
                          "end_byte": 151,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 156,
                  "end_byte": 193,
                  "text": "{ numerator = a ; denominator = b ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 158,
                      "end_byte": 173,
                      "text": "numerator = a ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 158,
                          "end_byte": 171,
                          "text": "numerator = a",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 158,
                              "end_byte": 167,
                              "text": "numerator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 172,
                          "end_byte": 173,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 174,
                      "end_byte": 191,
                      "text": "denominator = b ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 174,
                          "end_byte": 189,
                          "text": "denominator = b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 174,
                              "end_byte": 185,
                              "text": "denominator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 186,
                              "end_byte": 187,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 188,
                              "end_byte": 189,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 190,
                          "end_byte": 191,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 192,
                      "end_byte": 193,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 194,
                  "end_byte": 236,
                  "text": "else { numerator = b ; denominator = a ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 194,
                      "end_byte": 198,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 199,
                      "end_byte": 236,
                      "text": "{ numerator = b ; denominator = a ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 199,
                          "end_byte": 200,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 201,
                          "end_byte": 216,
                          "text": "numerator = b ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 201,
                              "end_byte": 214,
                              "text": "numerator = b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 201,
                                  "end_byte": 210,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 211,
                                  "end_byte": 212,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 213,
                                  "end_byte": 214,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 217,
                          "end_byte": 234,
                          "text": "denominator = a ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 217,
                              "end_byte": 232,
                              "text": "denominator = a",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 217,
                                  "end_byte": 228,
                                  "text": "denominator",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 231,
                                  "end_byte": 232,
                                  "text": "a",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 233,
                              "end_byte": 234,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 235,
                          "end_byte": 236,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 237,
              "end_byte": 355,
              "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 237,
                  "end_byte": 242,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 243,
                  "end_byte": 261,
                  "text": "( remainder != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 245,
                      "end_byte": 259,
                      "text": "remainder != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 245,
                          "end_byte": 254,
                          "text": "remainder",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 255,
                          "end_byte": 257,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 258,
                          "end_byte": 259,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 260,
                      "end_byte": 261,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 262,
                  "end_byte": 355,
                  "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 262,
                      "end_byte": 263,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 264,
                      "end_byte": 289,
                      "text": "numerator = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 264,
                          "end_byte": 287,
                          "text": "numerator = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 264,
                              "end_byte": 273,
                              "text": "numerator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 274,
                              "end_byte": 275,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 276,
                              "end_byte": 287,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 288,
                          "end_byte": 289,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 290,
                      "end_byte": 315,
                      "text": "denominator = remainder ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 290,
                          "end_byte": 313,
                          "text": "denominator = remainder",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 290,
                              "end_byte": 301,
                              "text": "denominator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 304,
                              "end_byte": 313,
                              "text": "remainder",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 314,
                          "end_byte": 315,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 316,
                      "end_byte": 353,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 316,
                          "end_byte": 351,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 316,
                              "end_byte": 325,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 328,
                              "end_byte": 351,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 328,
                                  "end_byte": 337,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 338,
                                  "end_byte": 339,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 340,
                                  "end_byte": 351,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 352,
                          "end_byte": 353,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 354,
                      "end_byte": 355,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 356,
              "end_byte": 375,
              "text": "gcd = denominator ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 356,
                  "end_byte": 373,
                  "text": "gcd = denominator",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 356,
                      "end_byte": 359,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 360,
                      "end_byte": 361,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 362,
                      "end_byte": 373,
                      "text": "denominator",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 374,
                  "end_byte": 375,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 376,
              "end_byte": 395,
              "text": "lcm = a * b / gcd ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 376,
                  "end_byte": 393,
                  "text": "lcm = a * b / gcd",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 376,
                      "end_byte": 379,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 380,
                      "end_byte": 381,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 382,
                      "end_byte": 393,
                      "text": "a * b / gcd",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 382,
                          "end_byte": 387,
                          "text": "a * b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 382,
                              "end_byte": 383,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "*",
                              "start_byte": 384,
                              "end_byte": 385,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 386,
                              "end_byte": 387,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 388,
                          "end_byte": 389,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 390,
                          "end_byte": 393,
                          "text": "gcd",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 394,
                  "end_byte": 395,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 396,
              "end_byte": 450,
              "text": "printf ( \"GCD of %d and %d is: %d\\n\" , a , b , gcd ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 396,
                  "end_byte": 448,
                  "text": "printf ( \"GCD of %d and %d is: %d\\n\" , a , b , gcd )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 396,
                      "end_byte": 402,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 403,
                      "end_byte": 448,
                      "text": "( \"GCD of %d and %d is: %d\\n\" , a , b , gcd )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 403,
                          "end_byte": 404,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 405,
                          "end_byte": 432,
                          "text": "\"GCD of %d and %d is: %d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 405,
                              "end_byte": 406,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 406,
                              "end_byte": 429,
                              "text": "GCD of %d and %d is: %d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 429,
                              "end_byte": 431,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 431,
                              "end_byte": 432,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 433,
                          "end_byte": 434,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 435,
                          "end_byte": 436,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 437,
                          "end_byte": 438,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 439,
                          "end_byte": 440,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 441,
                          "end_byte": 442,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 443,
                          "end_byte": 446,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 447,
                          "end_byte": 448,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 449,
                  "end_byte": 450,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 451,
              "end_byte": 505,
              "text": "printf ( \"LCM of %d and %d is: %d\\n\" , a , b , lcm ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 451,
                  "end_byte": 503,
                  "text": "printf ( \"LCM of %d and %d is: %d\\n\" , a , b , lcm )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 451,
                      "end_byte": 457,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 458,
                      "end_byte": 503,
                      "text": "( \"LCM of %d and %d is: %d\\n\" , a , b , lcm )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 458,
                          "end_byte": 459,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 460,
                          "end_byte": 487,
                          "text": "\"LCM of %d and %d is: %d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 460,
                              "end_byte": 461,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 461,
                              "end_byte": 484,
                              "text": "LCM of %d and %d is: %d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 484,
                              "end_byte": 486,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 486,
                              "end_byte": 487,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 488,
                          "end_byte": 489,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 490,
                          "end_byte": 491,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 492,
                          "end_byte": 493,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 494,
                          "end_byte": 495,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 496,
                          "end_byte": 497,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 498,
                          "end_byte": 501,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 502,
                          "end_byte": 503,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 504,
                  "end_byte": 505,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 506,
              "end_byte": 507,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}