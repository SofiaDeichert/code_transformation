{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 506,
  "text": "int main ( ) { int T , N , A [ 20 ] , i , j , small , sum = 0 ; printf ( \"enter no of cases\" ) ; scanf ( \"%d\" , & T ) ; for ( j = 1 ; j <= T ; j ++ ) { printf ( \"enter no of elements:\" ) ; scanf ( \"%d\" , & N ) ; for ( i = 0 ; i < N ; i ++ ) { printf ( \"enter element:\" ) ; scanf ( \"%d\" , & A [ i ] ) ; } small = A [ 0 ] ; for ( i = 0 ; i < N ; i ++ ) { if ( A [ i ] < small ) small = A [ i ] ; } for ( i = 0 ; i < N - 1 ; i ++ ) { sum = sum + small ; } printf ( \"the min sum is %d\" , sum ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 506,
      "text": "int main ( ) { int T , N , A [ 20 ] , i , j , small , sum = 0 ; printf ( \"enter no of cases\" ) ; scanf ( \"%d\" , & T ) ; for ( j = 1 ; j <= T ; j ++ ) { printf ( \"enter no of elements:\" ) ; scanf ( \"%d\" , & N ) ; for ( i = 0 ; i < N ; i ++ ) { printf ( \"enter element:\" ) ; scanf ( \"%d\" , & A [ i ] ) ; } small = A [ 0 ] ; for ( i = 0 ; i < N ; i ++ ) { if ( A [ i ] < small ) small = A [ i ] ; } for ( i = 0 ; i < N - 1 ; i ++ ) { sum = sum + small ; } printf ( \"the min sum is %d\" , sum ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 506,
          "text": "{ int T , N , A [ 20 ] , i , j , small , sum = 0 ; printf ( \"enter no of cases\" ) ; scanf ( \"%d\" , & T ) ; for ( j = 1 ; j <= T ; j ++ ) { printf ( \"enter no of elements:\" ) ; scanf ( \"%d\" , & N ) ; for ( i = 0 ; i < N ; i ++ ) { printf ( \"enter element:\" ) ; scanf ( \"%d\" , & A [ i ] ) ; } small = A [ 0 ] ; for ( i = 0 ; i < N ; i ++ ) { if ( A [ i ] < small ) small = A [ i ] ; } for ( i = 0 ; i < N - 1 ; i ++ ) { sum = sum + small ; } printf ( \"the min sum is %d\" , sum ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 63,
              "text": "int T , N , A [ 20 ] , i , j , small , sum = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 27,
                  "end_byte": 35,
                  "text": "A [ 20 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 27,
                      "end_byte": 28,
                      "text": "A",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 29,
                      "end_byte": 30,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 31,
                      "end_byte": 33,
                      "text": "20",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 34,
                      "end_byte": 35,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 51,
                  "text": "small",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 54,
                  "end_byte": 61,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 57,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 64,
              "end_byte": 96,
              "text": "printf ( \"enter no of cases\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 64,
                  "end_byte": 94,
                  "text": "printf ( \"enter no of cases\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 64,
                      "end_byte": 70,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 71,
                      "end_byte": 94,
                      "text": "( \"enter no of cases\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 71,
                          "end_byte": 72,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 73,
                          "end_byte": 92,
                          "text": "\"enter no of cases\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 73,
                              "end_byte": 74,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 74,
                              "end_byte": 91,
                              "text": "enter no of cases",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 93,
                          "end_byte": 94,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 95,
                  "end_byte": 96,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 97,
              "end_byte": 119,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 97,
                  "end_byte": 117,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 97,
                      "end_byte": 102,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 103,
                      "end_byte": 117,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 105,
                          "end_byte": 109,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 106,
                              "end_byte": 108,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 110,
                          "end_byte": 111,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 112,
                          "end_byte": 115,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 112,
                              "end_byte": 113,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 114,
                              "end_byte": 115,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 118,
                  "end_byte": 119,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 120,
              "end_byte": 493,
              "text": "for ( j = 1 ; j <= T ; j ++ ) { printf ( \"enter no of elements:\" ) ; scanf ( \"%d\" , & N ) ; for ( i = 0 ; i < N ; i ++ ) { printf ( \"enter element:\" ) ; scanf ( \"%d\" , & A [ i ] ) ; } small = A [ 0 ] ; for ( i = 0 ; i < N ; i ++ ) { if ( A [ i ] < small ) small = A [ i ] ; } for ( i = 0 ; i < N - 1 ; i ++ ) { sum = sum + small ; } printf ( \"the min sum is %d\" , sum ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 120,
                  "end_byte": 123,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 124,
                  "end_byte": 125,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 126,
                  "end_byte": 131,
                  "text": "j = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 134,
                  "end_byte": 140,
                  "text": "j <= T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 134,
                      "end_byte": 135,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 136,
                      "end_byte": 138,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 139,
                      "end_byte": 140,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 141,
                  "end_byte": 142,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 143,
                  "end_byte": 147,
                  "text": "j ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 143,
                      "end_byte": 144,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 145,
                      "end_byte": 147,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 150,
                  "end_byte": 493,
                  "text": "{ printf ( \"enter no of elements:\" ) ; scanf ( \"%d\" , & N ) ; for ( i = 0 ; i < N ; i ++ ) { printf ( \"enter element:\" ) ; scanf ( \"%d\" , & A [ i ] ) ; } small = A [ 0 ] ; for ( i = 0 ; i < N ; i ++ ) { if ( A [ i ] < small ) small = A [ i ] ; } for ( i = 0 ; i < N - 1 ; i ++ ) { sum = sum + small ; } printf ( \"the min sum is %d\" , sum ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 150,
                      "end_byte": 151,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 152,
                      "end_byte": 188,
                      "text": "printf ( \"enter no of elements:\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 152,
                          "end_byte": 186,
                          "text": "printf ( \"enter no of elements:\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 152,
                              "end_byte": 158,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 159,
                              "end_byte": 186,
                              "text": "( \"enter no of elements:\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 161,
                                  "end_byte": 184,
                                  "text": "\"enter no of elements:\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 162,
                                      "end_byte": 183,
                                      "text": "enter no of elements:",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 187,
                          "end_byte": 188,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 189,
                      "end_byte": 211,
                      "text": "scanf ( \"%d\" , & N ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 189,
                          "end_byte": 209,
                          "text": "scanf ( \"%d\" , & N )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 189,
                              "end_byte": 194,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 195,
                              "end_byte": 209,
                              "text": "( \"%d\" , & N )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 197,
                                  "end_byte": 201,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 198,
                                      "end_byte": 200,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 200,
                                      "end_byte": 201,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 204,
                                  "end_byte": 207,
                                  "text": "& N",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 206,
                                      "end_byte": 207,
                                      "text": "N",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 210,
                          "end_byte": 211,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 212,
                      "end_byte": 303,
                      "text": "for ( i = 0 ; i < N ; i ++ ) { printf ( \"enter element:\" ) ; scanf ( \"%d\" , & A [ i ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 212,
                          "end_byte": 215,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 216,
                          "end_byte": 217,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 218,
                          "end_byte": 223,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 218,
                              "end_byte": 219,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 222,
                              "end_byte": 223,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 224,
                          "end_byte": 225,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 226,
                          "end_byte": 231,
                          "text": "i < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 226,
                              "end_byte": 227,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 228,
                              "end_byte": 229,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 230,
                              "end_byte": 231,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 232,
                          "end_byte": 233,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 234,
                          "end_byte": 238,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 234,
                              "end_byte": 235,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 236,
                              "end_byte": 238,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 239,
                          "end_byte": 240,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 241,
                          "end_byte": 303,
                          "text": "{ printf ( \"enter element:\" ) ; scanf ( \"%d\" , & A [ i ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 241,
                              "end_byte": 242,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 243,
                              "end_byte": 272,
                              "text": "printf ( \"enter element:\" ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 243,
                                  "end_byte": 270,
                                  "text": "printf ( \"enter element:\" )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 243,
                                      "end_byte": 249,
                                      "text": "printf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 250,
                                      "end_byte": 270,
                                      "text": "( \"enter element:\" )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 250,
                                          "end_byte": 251,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 252,
                                          "end_byte": 268,
                                          "text": "\"enter element:\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 252,
                                              "end_byte": 253,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 253,
                                              "end_byte": 267,
                                              "text": "enter element:",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 267,
                                              "end_byte": 268,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 269,
                                          "end_byte": 270,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 271,
                                  "end_byte": 272,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 273,
                              "end_byte": 301,
                              "text": "scanf ( \"%d\" , & A [ i ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 273,
                                  "end_byte": 299,
                                  "text": "scanf ( \"%d\" , & A [ i ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 273,
                                      "end_byte": 278,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 279,
                                      "end_byte": 299,
                                      "text": "( \"%d\" , & A [ i ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 279,
                                          "end_byte": 280,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 281,
                                          "end_byte": 285,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 281,
                                              "end_byte": 282,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 282,
                                              "end_byte": 284,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 284,
                                              "end_byte": 285,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 286,
                                          "end_byte": 287,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 288,
                                          "end_byte": 297,
                                          "text": "& A [ i ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 288,
                                              "end_byte": 289,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 290,
                                              "end_byte": 297,
                                              "text": "A [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 290,
                                                  "end_byte": 291,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 292,
                                                  "end_byte": 297,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 292,
                                                      "end_byte": 293,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 294,
                                                      "end_byte": 295,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 296,
                                                      "end_byte": 297,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 298,
                                          "end_byte": 299,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 300,
                                  "end_byte": 301,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 304,
                      "end_byte": 321,
                      "text": "small = A [ 0 ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 304,
                          "end_byte": 319,
                          "text": "small = A [ 0 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 304,
                              "end_byte": 309,
                              "text": "small",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 310,
                              "end_byte": 311,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 312,
                              "end_byte": 319,
                              "text": "A [ 0 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 312,
                                  "end_byte": 313,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 314,
                                  "end_byte": 319,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 314,
                                      "end_byte": 315,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 316,
                                      "end_byte": 317,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 318,
                                      "end_byte": 319,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 322,
                      "end_byte": 395,
                      "text": "for ( i = 0 ; i < N ; i ++ ) { if ( A [ i ] < small ) small = A [ i ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 322,
                          "end_byte": 325,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 326,
                          "end_byte": 327,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 328,
                          "end_byte": 333,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 330,
                              "end_byte": 331,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 332,
                              "end_byte": 333,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 334,
                          "end_byte": 335,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 336,
                          "end_byte": 341,
                          "text": "i < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 336,
                              "end_byte": 337,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 338,
                              "end_byte": 339,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 340,
                              "end_byte": 341,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 342,
                          "end_byte": 343,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 344,
                          "end_byte": 348,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 344,
                              "end_byte": 345,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 346,
                              "end_byte": 348,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 349,
                          "end_byte": 350,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 351,
                          "end_byte": 395,
                          "text": "{ if ( A [ i ] < small ) small = A [ i ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 351,
                              "end_byte": 352,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 353,
                              "end_byte": 393,
                              "text": "if ( A [ i ] < small ) small = A [ i ] ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 353,
                                  "end_byte": 355,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 356,
                                  "end_byte": 375,
                                  "text": "( A [ i ] < small )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 356,
                                      "end_byte": 357,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 358,
                                      "end_byte": 373,
                                      "text": "A [ i ] < small",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 358,
                                          "end_byte": 365,
                                          "text": "A [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 358,
                                              "end_byte": 359,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 360,
                                              "end_byte": 365,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 360,
                                                  "end_byte": 361,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 362,
                                                  "end_byte": 363,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 364,
                                                  "end_byte": 365,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 366,
                                          "end_byte": 367,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 368,
                                          "end_byte": 373,
                                          "text": "small",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 374,
                                      "end_byte": 375,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 376,
                                  "end_byte": 393,
                                  "text": "small = A [ i ] ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 376,
                                      "end_byte": 391,
                                      "text": "small = A [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 376,
                                          "end_byte": 381,
                                          "text": "small",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 382,
                                          "end_byte": 383,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 384,
                                          "end_byte": 391,
                                          "text": "A [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 384,
                                              "end_byte": 385,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 386,
                                              "end_byte": 391,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 386,
                                                  "end_byte": 387,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 388,
                                                  "end_byte": 389,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 390,
                                                  "end_byte": 391,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 392,
                                      "end_byte": 393,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 394,
                              "end_byte": 395,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 396,
                      "end_byte": 452,
                      "text": "for ( i = 0 ; i < N - 1 ; i ++ ) { sum = sum + small ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 396,
                          "end_byte": 399,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 400,
                          "end_byte": 401,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 402,
                          "end_byte": 407,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 402,
                              "end_byte": 403,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 404,
                              "end_byte": 405,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 406,
                              "end_byte": 407,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 408,
                          "end_byte": 409,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 410,
                          "end_byte": 419,
                          "text": "i < N - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 410,
                              "end_byte": 411,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 412,
                              "end_byte": 413,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 414,
                              "end_byte": 419,
                              "text": "N - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 414,
                                  "end_byte": 415,
                                  "text": "N",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 416,
                                  "end_byte": 417,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 418,
                                  "end_byte": 419,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 420,
                          "end_byte": 421,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 422,
                          "end_byte": 426,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 422,
                              "end_byte": 423,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 424,
                              "end_byte": 426,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 427,
                          "end_byte": 428,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 429,
                          "end_byte": 452,
                          "text": "{ sum = sum + small ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 429,
                              "end_byte": 430,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 431,
                              "end_byte": 450,
                              "text": "sum = sum + small ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 431,
                                  "end_byte": 448,
                                  "text": "sum = sum + small",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 431,
                                      "end_byte": 434,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 435,
                                      "end_byte": 436,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 437,
                                      "end_byte": 448,
                                      "text": "sum + small",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 437,
                                          "end_byte": 440,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 441,
                                          "end_byte": 442,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 443,
                                          "end_byte": 448,
                                          "text": "small",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 449,
                                  "end_byte": 450,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 451,
                              "end_byte": 452,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 453,
                      "end_byte": 491,
                      "text": "printf ( \"the min sum is %d\" , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 453,
                          "end_byte": 489,
                          "text": "printf ( \"the min sum is %d\" , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 453,
                              "end_byte": 459,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 460,
                              "end_byte": 489,
                              "text": "( \"the min sum is %d\" , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 460,
                                  "end_byte": 461,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 462,
                                  "end_byte": 481,
                                  "text": "\"the min sum is %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 462,
                                      "end_byte": 463,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 463,
                                      "end_byte": 480,
                                      "text": "the min sum is %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 480,
                                      "end_byte": 481,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 482,
                                  "end_byte": 483,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 484,
                                  "end_byte": 487,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 488,
                                  "end_byte": 489,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 490,
                          "end_byte": 491,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 492,
                      "end_byte": 493,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 494,
              "end_byte": 504,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 494,
                  "end_byte": 500,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 501,
                  "end_byte": 502,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 503,
                  "end_byte": 504,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 505,
              "end_byte": 506,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}