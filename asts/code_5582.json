{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 532,
  "text": "int main ( ) { int t , i ; unsigned long long int gcd , lcm , a , b , small , big ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%llu\" , & a ) ; scanf ( \"%llu\" , & b ) ; if ( a > b ) { small = b ; big = a ; } else { small = a ; big = b ; } if ( a % small == 0 && b % small == 0 ) { gcd = small ; } else { gcd = ( small + 1 ) / 2 ; while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; } } if ( gcd == small ) { lcm = big ; } else { lcm = ( a * b ) / gcd ; } printf ( \"%llu %llu\\n\" , gcd , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 532,
      "text": "int main ( ) { int t , i ; unsigned long long int gcd , lcm , a , b , small , big ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%llu\" , & a ) ; scanf ( \"%llu\" , & b ) ; if ( a > b ) { small = b ; big = a ; } else { small = a ; big = b ; } if ( a % small == 0 && b % small == 0 ) { gcd = small ; } else { gcd = ( small + 1 ) / 2 ; while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; } } if ( gcd == small ) { lcm = big ; } else { lcm = ( a * b ) / gcd ; } printf ( \"%llu %llu\\n\" , gcd , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 532,
          "text": "{ int t , i ; unsigned long long int gcd , lcm , a , b , small , big ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%llu\" , & a ) ; scanf ( \"%llu\" , & b ) ; if ( a > b ) { small = b ; big = a ; } else { small = a ; big = b ; } if ( a % small == 0 && b % small == 0 ) { gcd = small ; } else { gcd = ( small + 1 ) / 2 ; while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; } } if ( gcd == small ) { lcm = big ; } else { lcm = ( a * b ) / gcd ; } printf ( \"%llu %llu\\n\" , gcd , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 26,
              "text": "int t , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 27,
              "end_byte": 83,
              "text": "unsigned long long int gcd , lcm , a , b , small , big ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 27,
                  "end_byte": 49,
                  "text": "unsigned long long int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 27,
                      "end_byte": 35,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 36,
                      "end_byte": 40,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 41,
                      "end_byte": 45,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 46,
                      "end_byte": 49,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 53,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 56,
                  "end_byte": 59,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 66,
                  "end_byte": 67,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 70,
                  "end_byte": 75,
                  "text": "small",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 78,
                  "end_byte": 81,
                  "text": "big",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 84,
              "end_byte": 106,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 84,
                  "end_byte": 104,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 84,
                      "end_byte": 89,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 90,
                      "end_byte": 104,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 92,
                          "end_byte": 96,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 93,
                              "end_byte": 95,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 99,
                          "end_byte": 102,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 99,
                              "end_byte": 100,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 105,
                  "end_byte": 106,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 107,
              "end_byte": 519,
              "text": "for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%llu\" , & a ) ; scanf ( \"%llu\" , & b ) ; if ( a > b ) { small = b ; big = a ; } else { small = a ; big = b ; } if ( a % small == 0 && b % small == 0 ) { gcd = small ; } else { gcd = ( small + 1 ) / 2 ; while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; } } if ( gcd == small ) { lcm = big ; } else { lcm = ( a * b ) / gcd ; } printf ( \"%llu %llu\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 107,
                  "end_byte": 110,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 113,
                  "end_byte": 118,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 121,
                  "end_byte": 126,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 129,
                  "end_byte": 133,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 131,
                      "end_byte": 133,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 134,
                  "end_byte": 135,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 136,
                  "end_byte": 519,
                  "text": "{ scanf ( \"%llu\" , & a ) ; scanf ( \"%llu\" , & b ) ; if ( a > b ) { small = b ; big = a ; } else { small = a ; big = b ; } if ( a % small == 0 && b % small == 0 ) { gcd = small ; } else { gcd = ( small + 1 ) / 2 ; while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; } } if ( gcd == small ) { lcm = big ; } else { lcm = ( a * b ) / gcd ; } printf ( \"%llu %llu\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 136,
                      "end_byte": 137,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 138,
                      "end_byte": 162,
                      "text": "scanf ( \"%llu\" , & a ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 138,
                          "end_byte": 160,
                          "text": "scanf ( \"%llu\" , & a )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 138,
                              "end_byte": 143,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 144,
                              "end_byte": 160,
                              "text": "( \"%llu\" , & a )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 144,
                                  "end_byte": 145,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 146,
                                  "end_byte": 152,
                                  "text": "\"%llu\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 147,
                                      "end_byte": 151,
                                      "text": "%llu",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 155,
                                  "end_byte": 158,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 155,
                                      "end_byte": 156,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 163,
                      "end_byte": 187,
                      "text": "scanf ( \"%llu\" , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 163,
                          "end_byte": 185,
                          "text": "scanf ( \"%llu\" , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 163,
                              "end_byte": 168,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 169,
                              "end_byte": 185,
                              "text": "( \"%llu\" , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 169,
                                  "end_byte": 170,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 171,
                                  "end_byte": 177,
                                  "text": "\"%llu\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 171,
                                      "end_byte": 172,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 172,
                                      "end_byte": 176,
                                      "text": "%llu",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 178,
                                  "end_byte": 179,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 180,
                                  "end_byte": 183,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 180,
                                      "end_byte": 181,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 182,
                                      "end_byte": 183,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 184,
                                  "end_byte": 185,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 188,
                      "end_byte": 257,
                      "text": "if ( a > b ) { small = b ; big = a ; } else { small = a ; big = b ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 188,
                          "end_byte": 190,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 191,
                          "end_byte": 200,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 193,
                              "end_byte": 198,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 197,
                                  "end_byte": 198,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 199,
                              "end_byte": 200,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 201,
                          "end_byte": 226,
                          "text": "{ small = b ; big = a ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 201,
                              "end_byte": 202,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 203,
                              "end_byte": 214,
                              "text": "small = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 203,
                                  "end_byte": 212,
                                  "text": "small = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 203,
                                      "end_byte": 208,
                                      "text": "small",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 213,
                                  "end_byte": 214,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 215,
                              "end_byte": 224,
                              "text": "big = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 215,
                                  "end_byte": 222,
                                  "text": "big = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 215,
                                      "end_byte": 218,
                                      "text": "big",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 219,
                                      "end_byte": 220,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 221,
                                      "end_byte": 222,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 223,
                                  "end_byte": 224,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 225,
                              "end_byte": 226,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 227,
                          "end_byte": 257,
                          "text": "else { small = a ; big = b ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 227,
                              "end_byte": 231,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 232,
                              "end_byte": 257,
                              "text": "{ small = a ; big = b ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 232,
                                  "end_byte": 233,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 234,
                                  "end_byte": 245,
                                  "text": "small = a ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 234,
                                      "end_byte": 243,
                                      "text": "small = a",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 234,
                                          "end_byte": 239,
                                          "text": "small",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 240,
                                          "end_byte": 241,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 242,
                                          "end_byte": 243,
                                          "text": "a",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 244,
                                      "end_byte": 245,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 246,
                                  "end_byte": 255,
                                  "text": "big = b ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 246,
                                      "end_byte": 253,
                                      "text": "big = b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 246,
                                          "end_byte": 249,
                                          "text": "big",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 250,
                                          "end_byte": 251,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 252,
                                          "end_byte": 253,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 254,
                                      "end_byte": 255,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 256,
                                  "end_byte": 257,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 258,
                      "end_byte": 409,
                      "text": "if ( a % small == 0 && b % small == 0 ) { gcd = small ; } else { gcd = ( small + 1 ) / 2 ; while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; } }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 258,
                          "end_byte": 260,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 261,
                          "end_byte": 297,
                          "text": "( a % small == 0 && b % small == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 263,
                              "end_byte": 295,
                              "text": "a % small == 0 && b % small == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 263,
                                  "end_byte": 277,
                                  "text": "a % small == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 263,
                                      "end_byte": 272,
                                      "text": "a % small",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 263,
                                          "end_byte": 264,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 265,
                                          "end_byte": 266,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 267,
                                          "end_byte": 272,
                                          "text": "small",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 273,
                                      "end_byte": 275,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 276,
                                      "end_byte": 277,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 278,
                                  "end_byte": 280,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 281,
                                  "end_byte": 295,
                                  "text": "b % small == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 281,
                                      "end_byte": 290,
                                      "text": "b % small",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 281,
                                          "end_byte": 282,
                                          "text": "b",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 283,
                                          "end_byte": 284,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 285,
                                          "end_byte": 290,
                                          "text": "small",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 291,
                                      "end_byte": 293,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 294,
                                      "end_byte": 295,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 296,
                              "end_byte": 297,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 298,
                          "end_byte": 315,
                          "text": "{ gcd = small ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 298,
                              "end_byte": 299,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 300,
                              "end_byte": 313,
                              "text": "gcd = small ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 300,
                                  "end_byte": 311,
                                  "text": "gcd = small",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 300,
                                      "end_byte": 303,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 304,
                                      "end_byte": 305,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 306,
                                      "end_byte": 311,
                                      "text": "small",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 312,
                                  "end_byte": 313,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 314,
                              "end_byte": 315,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 316,
                          "end_byte": 409,
                          "text": "else { gcd = ( small + 1 ) / 2 ; while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; } }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 316,
                              "end_byte": 320,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 321,
                              "end_byte": 409,
                              "text": "{ gcd = ( small + 1 ) / 2 ; while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; } }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 321,
                                  "end_byte": 322,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 323,
                                  "end_byte": 348,
                                  "text": "gcd = ( small + 1 ) / 2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 323,
                                      "end_byte": 346,
                                      "text": "gcd = ( small + 1 ) / 2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 323,
                                          "end_byte": 326,
                                          "text": "gcd",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 327,
                                          "end_byte": 328,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 329,
                                          "end_byte": 346,
                                          "text": "( small + 1 ) / 2",
                                          "children": [
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 329,
                                              "end_byte": 342,
                                              "text": "( small + 1 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 329,
                                                  "end_byte": 330,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 331,
                                                  "end_byte": 340,
                                                  "text": "small + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 331,
                                                      "end_byte": 336,
                                                      "text": "small",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 337,
                                                      "end_byte": 338,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 339,
                                                      "end_byte": 340,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 341,
                                                  "end_byte": 342,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "/",
                                              "start_byte": 343,
                                              "end_byte": 344,
                                              "text": "/",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 345,
                                              "end_byte": 346,
                                              "text": "2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 347,
                                      "end_byte": 348,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "while_statement",
                                  "start_byte": 349,
                                  "end_byte": 407,
                                  "text": "while ( a % gcd != 0 || b % gcd != 0 ) { gcd = gcd - 1 ; }",
                                  "children": [
                                    {
                                      "type": "while",
                                      "start_byte": 349,
                                      "end_byte": 354,
                                      "text": "while",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 355,
                                      "end_byte": 387,
                                      "text": "( a % gcd != 0 || b % gcd != 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 355,
                                          "end_byte": 356,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 357,
                                          "end_byte": 385,
                                          "text": "a % gcd != 0 || b % gcd != 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 357,
                                              "end_byte": 369,
                                              "text": "a % gcd != 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 357,
                                                  "end_byte": 364,
                                                  "text": "a % gcd",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 357,
                                                      "end_byte": 358,
                                                      "text": "a",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 359,
                                                      "end_byte": 360,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 361,
                                                      "end_byte": 364,
                                                      "text": "gcd",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "!=",
                                                  "start_byte": 365,
                                                  "end_byte": 367,
                                                  "text": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 368,
                                                  "end_byte": 369,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "||",
                                              "start_byte": 370,
                                              "end_byte": 372,
                                              "text": "||",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 373,
                                              "end_byte": 385,
                                              "text": "b % gcd != 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 373,
                                                  "end_byte": 380,
                                                  "text": "b % gcd",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 373,
                                                      "end_byte": 374,
                                                      "text": "b",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 375,
                                                      "end_byte": 376,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 377,
                                                      "end_byte": 380,
                                                      "text": "gcd",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "!=",
                                                  "start_byte": 381,
                                                  "end_byte": 383,
                                                  "text": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 384,
                                                  "end_byte": 385,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 386,
                                          "end_byte": 387,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 388,
                                      "end_byte": 407,
                                      "text": "{ gcd = gcd - 1 ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 388,
                                          "end_byte": 389,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 390,
                                          "end_byte": 405,
                                          "text": "gcd = gcd - 1 ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 390,
                                              "end_byte": 403,
                                              "text": "gcd = gcd - 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 390,
                                                  "end_byte": 393,
                                                  "text": "gcd",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 394,
                                                  "end_byte": 395,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 396,
                                                  "end_byte": 403,
                                                  "text": "gcd - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 396,
                                                      "end_byte": 399,
                                                      "text": "gcd",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 400,
                                                      "end_byte": 401,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 402,
                                                      "end_byte": 403,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 404,
                                              "end_byte": 405,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 406,
                                          "end_byte": 407,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 408,
                                  "end_byte": 409,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 410,
                      "end_byte": 478,
                      "text": "if ( gcd == small ) { lcm = big ; } else { lcm = ( a * b ) / gcd ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 410,
                          "end_byte": 412,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 413,
                          "end_byte": 429,
                          "text": "( gcd == small )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 413,
                              "end_byte": 414,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 415,
                              "end_byte": 427,
                              "text": "gcd == small",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 415,
                                  "end_byte": 418,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 419,
                                  "end_byte": 421,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 422,
                                  "end_byte": 427,
                                  "text": "small",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 428,
                              "end_byte": 429,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 430,
                          "end_byte": 445,
                          "text": "{ lcm = big ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 430,
                              "end_byte": 431,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 432,
                              "end_byte": 443,
                              "text": "lcm = big ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 432,
                                  "end_byte": 441,
                                  "text": "lcm = big",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 432,
                                      "end_byte": 435,
                                      "text": "lcm",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 436,
                                      "end_byte": 437,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 438,
                                      "end_byte": 441,
                                      "text": "big",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 442,
                                  "end_byte": 443,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 444,
                              "end_byte": 445,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 446,
                          "end_byte": 478,
                          "text": "else { lcm = ( a * b ) / gcd ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 446,
                              "end_byte": 450,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 451,
                              "end_byte": 478,
                              "text": "{ lcm = ( a * b ) / gcd ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 451,
                                  "end_byte": 452,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 453,
                                  "end_byte": 476,
                                  "text": "lcm = ( a * b ) / gcd ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 453,
                                      "end_byte": 474,
                                      "text": "lcm = ( a * b ) / gcd",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 453,
                                          "end_byte": 456,
                                          "text": "lcm",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 457,
                                          "end_byte": 458,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 459,
                                          "end_byte": 474,
                                          "text": "( a * b ) / gcd",
                                          "children": [
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 459,
                                              "end_byte": 468,
                                              "text": "( a * b )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 459,
                                                  "end_byte": 460,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 461,
                                                  "end_byte": 466,
                                                  "text": "a * b",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 461,
                                                      "end_byte": 462,
                                                      "text": "a",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 463,
                                                      "end_byte": 464,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 465,
                                                      "end_byte": 466,
                                                      "text": "b",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 467,
                                                  "end_byte": 468,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "/",
                                              "start_byte": 469,
                                              "end_byte": 470,
                                              "text": "/",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 471,
                                              "end_byte": 474,
                                              "text": "gcd",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 475,
                                      "end_byte": 476,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 477,
                                  "end_byte": 478,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 479,
                      "end_byte": 517,
                      "text": "printf ( \"%llu %llu\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 479,
                          "end_byte": 515,
                          "text": "printf ( \"%llu %llu\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 479,
                              "end_byte": 485,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 486,
                              "end_byte": 515,
                              "text": "( \"%llu %llu\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 486,
                                  "end_byte": 487,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 488,
                                  "end_byte": 501,
                                  "text": "\"%llu %llu\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 488,
                                      "end_byte": 489,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 489,
                                      "end_byte": 498,
                                      "text": "%llu %llu",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 498,
                                      "end_byte": 500,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 500,
                                      "end_byte": 501,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 502,
                                  "end_byte": 503,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 504,
                                  "end_byte": 507,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 508,
                                  "end_byte": 509,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 510,
                                  "end_byte": 513,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 514,
                                  "end_byte": 515,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 516,
                          "end_byte": 517,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 518,
                      "end_byte": 519,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 520,
              "end_byte": 530,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 520,
                  "end_byte": 526,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 527,
                  "end_byte": 528,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 529,
                  "end_byte": 530,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 531,
              "end_byte": 532,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}