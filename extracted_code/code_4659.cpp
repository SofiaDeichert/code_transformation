int tree [ 5050 ] ; unsigned long sum [ 5050 ] ; int n ; unsigned long find_sum ( int i , int j ) { int l , r , c ; c = cal ( i ) + j ; if ( c >= n ) return 0 ; if ( sum [ c ] != - 1 ) return sum [ c ] ; l = find_sum ( i + 1 , j ) ; r = find_sum ( i + 1 , j + 1 ) ; return sum [ c ] = tree [ c ] + ( l > r ? l : r ) ; } int main ( int argc , char const * argv [ ] ) { int i , j , T ; scanf ( "%d" , & T ) ; for ( j = 0 ; j < T ; ++ j ) { scanf ( "%d" , & n ) ; n = cal ( n ) ; for ( i = 0 ; i < n ; ++ i ) scanf ( "%d" , & tree [ i ] ) ; for ( i = 0 ; i < n ; ++ i ) sum [ i ] = - 1 ; printf ( "%lu\n" , find_sum ( 0 , 0 ) ) ; } return 0 ; }