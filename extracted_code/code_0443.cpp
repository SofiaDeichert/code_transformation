int arr [ 100 ] [ 100 ] ; void disp ( int len ) { printf ( "\n In disp" ) ; int i , j ; for ( i = 0 ; i < len ; i ++ ) { printf ( "\n" ) ; for ( j = 0 ; j < len ; j ++ ) { printf ( " %d " , arr [ i ] [ j ] ) ; } } } int solve ( int x ) { int k , l ; if ( x == 1 ) return arr [ 0 ] [ 0 ] ; for ( k = x - 2 ; k >= 0 ; k -- ) { for ( l = 0 ; l <= k ; l ++ ) { arr [ k ] [ l ] += ret_max ( arr [ k + 1 ] [ l ] , arr [ k + 1 ] [ l + 1 ] ) ; } } return arr [ 0 ] [ 0 ] ; } int ret_max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int main ( ) { int i , T , k , l , tmp , j ; scanf ( "%d" , & T ) ; int N ; for ( i = 0 ; i < T ; i ++ ) { scanf ( "%d" , & N ) ; for ( j = 0 ; j < N ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( "%d" , & tmp ) ; arr [ j ] [ k ] = tmp ; } } printf ( "%d\n" , solve ( N ) ) ; } return 0 ; }