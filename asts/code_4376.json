{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 339,
  "text": "int main ( ) { int TestCases ; int N1 ; int N2 ; int LCM , GCD ; int iTemp ; scanf ( \"%d\" , & TestCases ) ; while ( TestCases > 0 ) { scanf ( \"%d %d\" , & N1 , & N2 ) ; for ( iTemp = 1 ; iTemp <= N2 / 2 ; iTemp ++ ) { if ( N1 % iTemp == 0 && N2 % iTemp == 0 ) { GCD = iTemp ; } } LCM = N1 * N2 / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 339,
      "text": "int main ( ) { int TestCases ; int N1 ; int N2 ; int LCM , GCD ; int iTemp ; scanf ( \"%d\" , & TestCases ) ; while ( TestCases > 0 ) { scanf ( \"%d %d\" , & N1 , & N2 ) ; for ( iTemp = 1 ; iTemp <= N2 / 2 ; iTemp ++ ) { if ( N1 % iTemp == 0 && N2 % iTemp == 0 ) { GCD = iTemp ; } } LCM = N1 * N2 / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 339,
          "text": "{ int TestCases ; int N1 ; int N2 ; int LCM , GCD ; int iTemp ; scanf ( \"%d\" , & TestCases ) ; while ( TestCases > 0 ) { scanf ( \"%d %d\" , & N1 , & N2 ) ; for ( iTemp = 1 ; iTemp <= N2 / 2 ; iTemp ++ ) { if ( N1 % iTemp == 0 && N2 % iTemp == 0 ) { GCD = iTemp ; } } LCM = N1 * N2 / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 30,
              "text": "int TestCases ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 28,
                  "text": "TestCases",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 31,
              "end_byte": 39,
              "text": "int N1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 31,
                  "end_byte": 34,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 37,
                  "text": "N1",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 40,
              "end_byte": 48,
              "text": "int N2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 46,
                  "text": "N2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 49,
              "end_byte": 64,
              "text": "int LCM , GCD ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 49,
                  "end_byte": 52,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 56,
                  "text": "LCM",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 59,
                  "end_byte": 62,
                  "text": "GCD",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 65,
              "end_byte": 76,
              "text": "int iTemp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 65,
                  "end_byte": 68,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 69,
                  "end_byte": 74,
                  "text": "iTemp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 77,
              "end_byte": 107,
              "text": "scanf ( \"%d\" , & TestCases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 77,
                  "end_byte": 105,
                  "text": "scanf ( \"%d\" , & TestCases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 77,
                      "end_byte": 82,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 83,
                      "end_byte": 105,
                      "text": "( \"%d\" , & TestCases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 83,
                          "end_byte": 84,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 85,
                          "end_byte": 89,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 85,
                              "end_byte": 86,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 86,
                              "end_byte": 88,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 92,
                          "end_byte": 103,
                          "text": "& TestCases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 94,
                              "end_byte": 103,
                              "text": "TestCases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 104,
                          "end_byte": 105,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 108,
              "end_byte": 337,
              "text": "while ( TestCases > 0 ) { scanf ( \"%d %d\" , & N1 , & N2 ) ; for ( iTemp = 1 ; iTemp <= N2 / 2 ; iTemp ++ ) { if ( N1 % iTemp == 0 && N2 % iTemp == 0 ) { GCD = iTemp ; } } LCM = N1 * N2 / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 108,
                  "end_byte": 113,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 114,
                  "end_byte": 131,
                  "text": "( TestCases > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 116,
                      "end_byte": 129,
                      "text": "TestCases > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 116,
                          "end_byte": 125,
                          "text": "TestCases",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 126,
                          "end_byte": 127,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 128,
                          "end_byte": 129,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 132,
                  "end_byte": 337,
                  "text": "{ scanf ( \"%d %d\" , & N1 , & N2 ) ; for ( iTemp = 1 ; iTemp <= N2 / 2 ; iTemp ++ ) { if ( N1 % iTemp == 0 && N2 % iTemp == 0 ) { GCD = iTemp ; } } LCM = N1 * N2 / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 134,
                      "end_byte": 167,
                      "text": "scanf ( \"%d %d\" , & N1 , & N2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 134,
                          "end_byte": 165,
                          "text": "scanf ( \"%d %d\" , & N1 , & N2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 134,
                              "end_byte": 139,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 140,
                              "end_byte": 165,
                              "text": "( \"%d %d\" , & N1 , & N2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 142,
                                  "end_byte": 149,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 143,
                                      "end_byte": 148,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 152,
                                  "end_byte": 156,
                                  "text": "& N1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 154,
                                      "end_byte": 156,
                                      "text": "N1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 157,
                                  "end_byte": 158,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 159,
                                  "end_byte": 163,
                                  "text": "& N2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 159,
                                      "end_byte": 160,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 161,
                                      "end_byte": 163,
                                      "text": "N2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 164,
                                  "end_byte": 165,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 168,
                      "end_byte": 278,
                      "text": "for ( iTemp = 1 ; iTemp <= N2 / 2 ; iTemp ++ ) { if ( N1 % iTemp == 0 && N2 % iTemp == 0 ) { GCD = iTemp ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 168,
                          "end_byte": 171,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 172,
                          "end_byte": 173,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 174,
                          "end_byte": 183,
                          "text": "iTemp = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 174,
                              "end_byte": 179,
                              "text": "iTemp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 184,
                          "end_byte": 185,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 186,
                          "end_byte": 201,
                          "text": "iTemp <= N2 / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 186,
                              "end_byte": 191,
                              "text": "iTemp",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 192,
                              "end_byte": 194,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 195,
                              "end_byte": 201,
                              "text": "N2 / 2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 195,
                                  "end_byte": 197,
                                  "text": "N2",
                                  "children": []
                                },
                                {
                                  "type": "/",
                                  "start_byte": 198,
                                  "end_byte": 199,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 202,
                          "end_byte": 203,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 204,
                          "end_byte": 212,
                          "text": "iTemp ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 204,
                              "end_byte": 209,
                              "text": "iTemp",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 210,
                              "end_byte": 212,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 215,
                          "end_byte": 278,
                          "text": "{ if ( N1 % iTemp == 0 && N2 % iTemp == 0 ) { GCD = iTemp ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 217,
                              "end_byte": 276,
                              "text": "if ( N1 % iTemp == 0 && N2 % iTemp == 0 ) { GCD = iTemp ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 217,
                                  "end_byte": 219,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 220,
                                  "end_byte": 258,
                                  "text": "( N1 % iTemp == 0 && N2 % iTemp == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 222,
                                      "end_byte": 256,
                                      "text": "N1 % iTemp == 0 && N2 % iTemp == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 222,
                                          "end_byte": 237,
                                          "text": "N1 % iTemp == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 222,
                                              "end_byte": 232,
                                              "text": "N1 % iTemp",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 222,
                                                  "end_byte": 224,
                                                  "text": "N1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 225,
                                                  "end_byte": 226,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 227,
                                                  "end_byte": 232,
                                                  "text": "iTemp",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 233,
                                              "end_byte": 235,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 236,
                                              "end_byte": 237,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 238,
                                          "end_byte": 240,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 241,
                                          "end_byte": 256,
                                          "text": "N2 % iTemp == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 241,
                                              "end_byte": 251,
                                              "text": "N2 % iTemp",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 241,
                                                  "end_byte": 243,
                                                  "text": "N2",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 244,
                                                  "end_byte": 245,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 246,
                                                  "end_byte": 251,
                                                  "text": "iTemp",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 252,
                                              "end_byte": 254,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 255,
                                              "end_byte": 256,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 257,
                                      "end_byte": 258,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 259,
                                  "end_byte": 276,
                                  "text": "{ GCD = iTemp ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 259,
                                      "end_byte": 260,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 261,
                                      "end_byte": 274,
                                      "text": "GCD = iTemp ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 261,
                                          "end_byte": 272,
                                          "text": "GCD = iTemp",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 261,
                                              "end_byte": 264,
                                              "text": "GCD",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 265,
                                              "end_byte": 266,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 267,
                                              "end_byte": 272,
                                              "text": "iTemp",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 273,
                                          "end_byte": 274,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 275,
                                      "end_byte": 276,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 277,
                              "end_byte": 278,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 279,
                      "end_byte": 300,
                      "text": "LCM = N1 * N2 / GCD ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 279,
                          "end_byte": 298,
                          "text": "LCM = N1 * N2 / GCD",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 279,
                              "end_byte": 282,
                              "text": "LCM",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 283,
                              "end_byte": 284,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 285,
                              "end_byte": 298,
                              "text": "N1 * N2 / GCD",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 285,
                                  "end_byte": 292,
                                  "text": "N1 * N2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 285,
                                      "end_byte": 287,
                                      "text": "N1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 288,
                                      "end_byte": 289,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 290,
                                      "end_byte": 292,
                                      "text": "N2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 293,
                                  "end_byte": 294,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 295,
                                  "end_byte": 298,
                                  "text": "GCD",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 299,
                          "end_byte": 300,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 301,
                      "end_byte": 335,
                      "text": "printf ( \"%d %d\\n\" , GCD , LCM ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 301,
                          "end_byte": 333,
                          "text": "printf ( \"%d %d\\n\" , GCD , LCM )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 301,
                              "end_byte": 307,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 308,
                              "end_byte": 333,
                              "text": "( \"%d %d\\n\" , GCD , LCM )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 310,
                                  "end_byte": 319,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 310,
                                      "end_byte": 311,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 311,
                                      "end_byte": 316,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 316,
                                      "end_byte": 318,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 318,
                                      "end_byte": 319,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 320,
                                  "end_byte": 321,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 322,
                                  "end_byte": 325,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 326,
                                  "end_byte": 327,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 328,
                                  "end_byte": 331,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 332,
                                  "end_byte": 333,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 334,
                          "end_byte": 335,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 336,
                      "end_byte": 337,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 338,
              "end_byte": 339,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}