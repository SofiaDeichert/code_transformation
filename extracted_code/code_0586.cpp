int main ( ) { short int n ; short int i , j , p , r ; scanf ( "%d" , & n ) ; int k [ n ] ; printf ( "\n" ) ; short int t [ 99 ] [ 99 ] [ 99 ] = { 0 } ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & k [ i ] ) ; for ( j = 0 ; j < k [ i ] ; j ++ ) { for ( r = 0 ; r <= j ; r ++ ) { scanf ( "%d" , & t [ i ] [ j ] [ r ] ) ; } } printf ( "\n" ) ; } for ( p = 0 ; p < n ; p ++ ) { int l ; l = k [ p ] ; for ( j = l ; j > 1 ; j -- ) { for ( i = l - 1 ; i > 0 ; i -- ) { if ( * ( t [ p ] [ j - 1 ] + i ) >= * ( t [ p ] [ j - 1 ] + i - 1 ) ) * ( t [ p ] [ j - 2 ] + i - 1 ) = * ( t [ p ] [ j - 2 ] + i - 1 ) + * ( t [ p ] [ j - 1 ] + i ) ; else * ( t [ p ] [ j - 2 ] + i - 1 ) = * ( t [ p ] [ j - 2 ] + i - 1 ) + * ( t [ p ] [ j - 1 ] + i - 1 ) ; } } } for ( i = 0 ; i < n ; i ++ ) { printf ( "%d\n" , t [ i ] [ 0 ] [ 0 ] ) ; } return 0 ; }