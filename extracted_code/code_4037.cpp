void quicksort ( long long x [ 10 ] , long long first , long long last ) { long long pivot , j , temp , i ; if ( first < last ) { pivot = first ; i = first ; j = last ; while ( i < j ) { while ( x [ i ] <= x [ pivot ] && i < last ) i ++ ; while ( x [ j ] > x [ pivot ] ) j -- ; if ( i < j ) { temp = x [ i ] ; x [ i ] = x [ j ] ; x [ j ] = temp ; } } temp = x [ pivot ] ; x [ pivot ] = x [ j ] ; x [ j ] = temp ; quicksort ( x , first , j - 1 ) ; quicksort ( x , j + 1 , last ) ; } } int main ( ) { long long n , budget [ 5000 ] , i , money = 0 , count = 0 ; scanf ( "%lld" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%lld" , & budget [ i ] ) ; } quicksort ( budget , 0 , n - 1 ) ; money = budget [ n / 2 ] ; for ( i = 0 ; i < n ; i ++ ) { if ( budget [ i ] >= money ) { count += 1 ; } } printf ( "%lld" , money * count ) ; return 0 ; }