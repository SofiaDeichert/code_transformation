int solve ( int a [ ] [ 100 ] , int n , int i , int j ) ; int max ( int x , int y ) ; int main ( void ) { int a [ 100 ] [ 100 ] , i , j , t , n , res , k ; scanf ( "%d" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { res = 0 ; scanf ( "%d" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%d" , & a [ j ] [ k ] ) ; } } res = solve ( a , n , 0 , 0 ) ; printf ( "%d\n" , res ) ; } return 0 ; } int solve ( int a [ ] [ 100 ] , int n , int i , int j ) { int cache [ 100 ] [ 100 ] , t1 , t2 , t ; if ( i > n ) return 0 ; else { if ( cache [ i ] [ j ] && 1 ) return cache [ i ] [ j ] ; else { t1 = solve ( a , n , i + 1 , j ) ; t2 = solve ( a , n , i + 1 , j + 1 ) ; t = max ( t1 , t2 ) + a [ i ] [ j ] ; cache [ i ] [ j ] = t ; return t ; } } } int max ( int x , int y ) { if ( x > y ) return x ; else return y ; }