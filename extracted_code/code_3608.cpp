void input ( int a [ ] , int n ) { int i ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & a [ i ] ) ; } } int countSubArrays ( int a [ ] , int n ) { int i , j , c = 0 ; for ( i = 0 ; i < n ; i ++ ) { for ( j = i ; j < n ; j ++ ) { c ++ ; if ( a [ j ] == a [ n - 1 ] || a [ j ] > a [ j + 1 ] ) { break ; } } } return c ; } int main ( ) { int a1 [ MAX ] , a2 [ MAX ] , a3 [ MAX ] , a4 [ MAX ] , a5 [ MAX ] , n , t ; scanf ( "%d" , & t ) ; switch ( t ) { case 1 : scanf ( "%d" , & n ) ; input ( a1 , n ) ; printf ( "%d\n" , countSubArrays ( a1 , n ) ) ; break ; case 2 : scanf ( "%d" , & n ) ; input ( a1 , n ) ; printf ( "%d\n" , countSubArrays ( a1 , n ) ) ; scanf ( "%d" , & n ) ; input ( a2 , n ) ; printf ( "%d\n" , countSubArrays ( a2 , n ) ) ; break ; case 3 : scanf ( "%d" , & n ) ; input ( a1 , n ) ; printf ( "%d\n" , countSubArrays ( a1 , n ) ) ; scanf ( "%d" , & n ) ; input ( a2 , n ) ; printf ( "%d\n" , countSubArrays ( a2 , n ) ) ; scanf ( "%d" , & n ) ; input ( a3 , n ) ; printf ( "%d\n" , countSubArrays ( a3 , n ) ) ; break ; case 4 : scanf ( "%d" , & n ) ; input ( a1 , n ) ; printf ( "%d\n" , countSubArrays ( a1 , n ) ) ; scanf ( "%d" , & n ) ; input ( a2 , n ) ; printf ( "%d\n" , countSubArrays ( a2 , n ) ) ; scanf ( "%d" , & n ) ; input ( a3 , n ) ; printf ( "%d\n" , countSubArrays ( a3 , n ) ) ; scanf ( "%d" , & n ) ; input ( a4 , n ) ; printf ( "%d\n" , countSubArrays ( a4 , n ) ) ; break ; case 5 : scanf ( "%d" , & n ) ; input ( a1 , n ) ; printf ( "%d\n" , countSubArrays ( a1 , n ) ) ; scanf ( "%d" , & n ) ; input ( a2 , n ) ; printf ( "%d\n" , countSubArrays ( a2 , n ) ) ; scanf ( "%d" , & n ) ; input ( a3 , n ) ; printf ( "%d\n" , countSubArrays ( a3 , n ) ) ; scanf ( "%d" , & n ) ; input ( a4 , n ) ; printf ( "%d\n" , countSubArrays ( a4 , n ) ) ; scanf ( "%d" , & n ) ; input ( a5 , n ) ; printf ( "%d\n" , countSubArrays ( a5 , n ) ) ; break ; } return 0 ; }