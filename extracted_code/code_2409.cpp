int a [ 100 ] [ 100 ] ; int b [ 100 ] [ 100 ] ; struct co { int x ; int y ; } ind [ 1000 ] ; int in ; int max ( int s1 , int s2 ) { if ( s1 >= s2 ) return s1 ; else return s2 ; } int before ( int i , int j ) { int k ; for ( k = 0 ; k < in ; k ++ ) if ( ind [ k ] . x == i && ind [ k ] . y == j ) return 1 ; return 0 ; } int sum ( int i , int j , int n ) { int s1 , s2 , s ; if ( i >= n ) return 0 ; if ( before ( i , j ) ) return b [ i ] [ j ] ; s1 = sum ( i + 1 , j , n ) ; s2 = sum ( i + 1 , j + 1 , n ) ; s = a [ i ] [ j ] + max ( s1 , s2 ) ; b [ i ] [ j ] = s ; ind [ in ] . x = i ; ind [ in ++ ] . y = j ; return s ; } main ( ) { int t , n ; int i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; printf ( "%d\n" , sum ( 0 , 0 , n ) ) ; } return 0 ; }