{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 270,
  "text": "int main ( void ) { int arr [ 10 ] , n , c , i , j ; scanf ( \"%d\" , & n ) ; c = n ; for ( i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = i ; arr [ j ] <= arr [ j + 1 ] ; j ++ ) c ++ ; } printf ( \"\\n%d\" , c ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 270,
      "text": "int main ( void ) { int arr [ 10 ] , n , c , i , j ; scanf ( \"%d\" , & n ) ; c = n ; for ( i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = i ; arr [ j ] <= arr [ j + 1 ] ; j ++ ) c ++ ; } printf ( \"\\n%d\" , c ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 17,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 15,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 270,
          "text": "{ int arr [ 10 ] , n , c , i , j ; scanf ( \"%d\" , & n ) ; c = n ; for ( i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = i ; arr [ j ] <= arr [ j + 1 ] ; j ++ ) c ++ ; } printf ( \"\\n%d\" , c ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 52,
              "text": "int arr [ 10 ] , n , c , i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 20,
                  "end_byte": 23,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 24,
                  "end_byte": 34,
                  "text": "arr [ 10 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 24,
                      "end_byte": 27,
                      "text": "arr",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 28,
                      "end_byte": 29,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 30,
                      "end_byte": 32,
                      "text": "10",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 33,
                      "end_byte": 34,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 53,
              "end_byte": 75,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 53,
                  "end_byte": 73,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 53,
                      "end_byte": 58,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 59,
                      "end_byte": 73,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 59,
                          "end_byte": 60,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 61,
                          "end_byte": 65,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 61,
                              "end_byte": 62,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 62,
                              "end_byte": 64,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 64,
                              "end_byte": 65,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 68,
                          "end_byte": 71,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 68,
                              "end_byte": 69,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 70,
                              "end_byte": 71,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 76,
              "end_byte": 83,
              "text": "c = n ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 76,
                  "end_byte": 81,
                  "text": "c = n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 77,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 78,
                      "end_byte": 79,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 84,
              "end_byte": 143,
              "text": "for ( i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 84,
                  "end_byte": 87,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 88,
                  "end_byte": 89,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 90,
                  "end_byte": 95,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 92,
                      "end_byte": 93,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 98,
                  "end_byte": 103,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 104,
                  "end_byte": 105,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 106,
                  "end_byte": 110,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 108,
                      "end_byte": 110,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 113,
                  "end_byte": 143,
                  "text": "scanf ( \"%d\" , & arr [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 113,
                      "end_byte": 141,
                      "text": "scanf ( \"%d\" , & arr [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 113,
                          "end_byte": 118,
                          "text": "scanf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 119,
                          "end_byte": 141,
                          "text": "( \"%d\" , & arr [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 119,
                              "end_byte": 120,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 121,
                              "end_byte": 125,
                              "text": "\"%d\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 121,
                                  "end_byte": 122,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 122,
                                  "end_byte": 124,
                                  "text": "%d",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 124,
                                  "end_byte": 125,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "pointer_expression",
                              "start_byte": 128,
                              "end_byte": 139,
                              "text": "& arr [ i ]",
                              "children": [
                                {
                                  "type": "&",
                                  "start_byte": 128,
                                  "end_byte": 129,
                                  "text": "&",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 130,
                                  "end_byte": 139,
                                  "text": "arr [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 130,
                                      "end_byte": 133,
                                      "text": "arr",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 134,
                                      "end_byte": 139,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 134,
                                          "end_byte": 135,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 136,
                                          "end_byte": 137,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 138,
                                          "end_byte": 139,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 140,
                              "end_byte": 141,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 142,
                      "end_byte": 143,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 144,
              "end_byte": 233,
              "text": "for ( i = 0 ; i < n ; i ++ ) { for ( j = i ; arr [ j ] <= arr [ j + 1 ] ; j ++ ) c ++ ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 144,
                  "end_byte": 147,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 150,
                  "end_byte": 155,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 150,
                      "end_byte": 151,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 152,
                      "end_byte": 153,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 156,
                  "end_byte": 157,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 158,
                  "end_byte": 163,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 160,
                      "end_byte": 161,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 162,
                      "end_byte": 163,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 164,
                  "end_byte": 165,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 166,
                  "end_byte": 170,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 168,
                      "end_byte": 170,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 171,
                  "end_byte": 172,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 173,
                  "end_byte": 233,
                  "text": "{ for ( j = i ; arr [ j ] <= arr [ j + 1 ] ; j ++ ) c ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 173,
                      "end_byte": 174,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 175,
                      "end_byte": 231,
                      "text": "for ( j = i ; arr [ j ] <= arr [ j + 1 ] ; j ++ ) c ++ ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 175,
                          "end_byte": 178,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 179,
                          "end_byte": 180,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 181,
                          "end_byte": 186,
                          "text": "j = i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 187,
                          "end_byte": 188,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 189,
                          "end_byte": 215,
                          "text": "arr [ j ] <= arr [ j + 1 ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 189,
                              "end_byte": 198,
                              "text": "arr [ j ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 189,
                                  "end_byte": 192,
                                  "text": "arr",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 193,
                                  "end_byte": 198,
                                  "text": "[ j ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "<=",
                              "start_byte": 199,
                              "end_byte": 201,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 202,
                              "end_byte": 215,
                              "text": "arr [ j + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 202,
                                  "end_byte": 205,
                                  "text": "arr",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 206,
                                  "end_byte": 215,
                                  "text": "[ j + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 206,
                                      "end_byte": 207,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 208,
                                      "end_byte": 213,
                                      "text": "j + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 208,
                                          "end_byte": 209,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 210,
                                          "end_byte": 211,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 216,
                          "end_byte": 217,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 218,
                          "end_byte": 222,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 218,
                              "end_byte": 219,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 220,
                              "end_byte": 222,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 223,
                          "end_byte": 224,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 225,
                          "end_byte": 231,
                          "text": "c ++ ;",
                          "children": [
                            {
                              "type": "update_expression",
                              "start_byte": 225,
                              "end_byte": 229,
                              "text": "c ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 225,
                                  "end_byte": 226,
                                  "text": "c",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 227,
                                  "end_byte": 229,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 230,
                              "end_byte": 231,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 232,
                      "end_byte": 233,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 234,
              "end_byte": 257,
              "text": "printf ( \"\\n%d\" , c ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 234,
                  "end_byte": 255,
                  "text": "printf ( \"\\n%d\" , c )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 234,
                      "end_byte": 240,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 241,
                      "end_byte": 255,
                      "text": "( \"\\n%d\" , c )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 241,
                          "end_byte": 242,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 243,
                          "end_byte": 249,
                          "text": "\"\\n%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 243,
                              "end_byte": 244,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 244,
                              "end_byte": 246,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 246,
                              "end_byte": 248,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 248,
                              "end_byte": 249,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 250,
                          "end_byte": 251,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 252,
                          "end_byte": 253,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 254,
                          "end_byte": 255,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 256,
                  "end_byte": 257,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 258,
              "end_byte": 268,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 258,
                  "end_byte": 264,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 265,
                  "end_byte": 266,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 267,
                  "end_byte": 268,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 269,
              "end_byte": 270,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}