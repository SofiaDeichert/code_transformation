{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 429,
  "text": "int main ( ) { int numberOfLines , j , i , k , numberOfInputs , content , sum = 0 , max ; scanf ( \"%d\" , & numberOfInputs ) ; for ( k = 0 ; k < numberOfInputs ; k ++ ) { sum = 0 ; scanf ( \"%d\" , & numberOfLines ) ; for ( i = 0 ; i < numberOfLines ; i ++ ) { max = 0 ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } } sum += max ; } printf ( \"\\n%d\\n\" , sum ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 429,
      "text": "int main ( ) { int numberOfLines , j , i , k , numberOfInputs , content , sum = 0 , max ; scanf ( \"%d\" , & numberOfInputs ) ; for ( k = 0 ; k < numberOfInputs ; k ++ ) { sum = 0 ; scanf ( \"%d\" , & numberOfLines ) ; for ( i = 0 ; i < numberOfLines ; i ++ ) { max = 0 ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } } sum += max ; } printf ( \"\\n%d\\n\" , sum ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 429,
          "text": "{ int numberOfLines , j , i , k , numberOfInputs , content , sum = 0 , max ; scanf ( \"%d\" , & numberOfInputs ) ; for ( k = 0 ; k < numberOfInputs ; k ++ ) { sum = 0 ; scanf ( \"%d\" , & numberOfLines ) ; for ( i = 0 ; i < numberOfLines ; i ++ ) { max = 0 ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } } sum += max ; } printf ( \"\\n%d\\n\" , sum ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 89,
              "text": "int numberOfLines , j , i , k , numberOfInputs , content , sum = 0 , max ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 32,
                  "text": "numberOfLines",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 47,
                  "end_byte": 61,
                  "text": "numberOfInputs",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 64,
                  "end_byte": 71,
                  "text": "content",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 72,
                  "end_byte": 73,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 74,
                  "end_byte": 81,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 74,
                      "end_byte": 77,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 78,
                      "end_byte": 79,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 80,
                      "end_byte": 81,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 84,
                  "end_byte": 87,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 88,
                  "end_byte": 89,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 90,
              "end_byte": 125,
              "text": "scanf ( \"%d\" , & numberOfInputs ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 90,
                  "end_byte": 123,
                  "text": "scanf ( \"%d\" , & numberOfInputs )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 90,
                      "end_byte": 95,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 96,
                      "end_byte": 123,
                      "text": "( \"%d\" , & numberOfInputs )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 98,
                          "end_byte": 102,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 99,
                              "end_byte": 101,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 105,
                          "end_byte": 121,
                          "text": "& numberOfInputs",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 107,
                              "end_byte": 121,
                              "text": "numberOfInputs",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 124,
                  "end_byte": 125,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 126,
              "end_byte": 416,
              "text": "for ( k = 0 ; k < numberOfInputs ; k ++ ) { sum = 0 ; scanf ( \"%d\" , & numberOfLines ) ; for ( i = 0 ; i < numberOfLines ; i ++ ) { max = 0 ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } } sum += max ; } printf ( \"\\n%d\\n\" , sum ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 126,
                  "end_byte": 129,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 130,
                  "end_byte": 131,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 132,
                  "end_byte": 137,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 134,
                      "end_byte": 135,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 136,
                      "end_byte": 137,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 138,
                  "end_byte": 139,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 140,
                  "end_byte": 158,
                  "text": "k < numberOfInputs",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 140,
                      "end_byte": 141,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 142,
                      "end_byte": 143,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 144,
                      "end_byte": 158,
                      "text": "numberOfInputs",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 159,
                  "end_byte": 160,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 161,
                  "end_byte": 165,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 163,
                      "end_byte": 165,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 166,
                  "end_byte": 167,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 168,
                  "end_byte": 416,
                  "text": "{ sum = 0 ; scanf ( \"%d\" , & numberOfLines ) ; for ( i = 0 ; i < numberOfLines ; i ++ ) { max = 0 ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } } sum += max ; } printf ( \"\\n%d\\n\" , sum ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 168,
                      "end_byte": 169,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 170,
                      "end_byte": 179,
                      "text": "sum = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 170,
                          "end_byte": 177,
                          "text": "sum = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 170,
                              "end_byte": 173,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 178,
                          "end_byte": 179,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 180,
                      "end_byte": 214,
                      "text": "scanf ( \"%d\" , & numberOfLines ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 180,
                          "end_byte": 212,
                          "text": "scanf ( \"%d\" , & numberOfLines )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 180,
                              "end_byte": 185,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 186,
                              "end_byte": 212,
                              "text": "( \"%d\" , & numberOfLines )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 186,
                                  "end_byte": 187,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 188,
                                  "end_byte": 192,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 188,
                                      "end_byte": 189,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 189,
                                      "end_byte": 191,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 191,
                                      "end_byte": 192,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 195,
                                  "end_byte": 210,
                                  "text": "& numberOfLines",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 197,
                                      "end_byte": 210,
                                      "text": "numberOfLines",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 211,
                                  "end_byte": 212,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 215,
                      "end_byte": 386,
                      "text": "for ( i = 0 ; i < numberOfLines ; i ++ ) { max = 0 ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } } sum += max ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 215,
                          "end_byte": 218,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 219,
                          "end_byte": 220,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 221,
                          "end_byte": 226,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 221,
                              "end_byte": 222,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 223,
                              "end_byte": 224,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 225,
                              "end_byte": 226,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 227,
                          "end_byte": 228,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 229,
                          "end_byte": 246,
                          "text": "i < numberOfLines",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 229,
                              "end_byte": 230,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 231,
                              "end_byte": 232,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 233,
                              "end_byte": 246,
                              "text": "numberOfLines",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 247,
                          "end_byte": 248,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 249,
                          "end_byte": 253,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 249,
                              "end_byte": 250,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 251,
                              "end_byte": 253,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 254,
                          "end_byte": 255,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 256,
                          "end_byte": 386,
                          "text": "{ max = 0 ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } } sum += max ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 256,
                              "end_byte": 257,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 258,
                              "end_byte": 267,
                              "text": "max = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 258,
                                  "end_byte": 265,
                                  "text": "max = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 258,
                                      "end_byte": 261,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 262,
                                      "end_byte": 263,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 266,
                                  "end_byte": 267,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 268,
                              "end_byte": 371,
                              "text": "for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 268,
                                  "end_byte": 271,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 272,
                                  "end_byte": 273,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 274,
                                  "end_byte": 279,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 276,
                                      "end_byte": 277,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 278,
                                      "end_byte": 279,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 282,
                                  "end_byte": 288,
                                  "text": "j <= i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 282,
                                      "end_byte": 283,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 284,
                                      "end_byte": 286,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 287,
                                      "end_byte": 288,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 289,
                                  "end_byte": 290,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 291,
                                  "end_byte": 295,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 291,
                                      "end_byte": 292,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 293,
                                      "end_byte": 295,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 296,
                                  "end_byte": 297,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 298,
                                  "end_byte": 371,
                                  "text": "{ scanf ( \"%d\" , & content ) ; if ( max < content ) { max = content ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 300,
                                      "end_byte": 328,
                                      "text": "scanf ( \"%d\" , & content ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 300,
                                          "end_byte": 326,
                                          "text": "scanf ( \"%d\" , & content )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 300,
                                              "end_byte": 305,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 306,
                                              "end_byte": 326,
                                              "text": "( \"%d\" , & content )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 306,
                                                  "end_byte": 307,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 308,
                                                  "end_byte": 312,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 308,
                                                      "end_byte": 309,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 309,
                                                      "end_byte": 311,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 311,
                                                      "end_byte": 312,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 313,
                                                  "end_byte": 314,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 315,
                                                  "end_byte": 324,
                                                  "text": "& content",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 315,
                                                      "end_byte": 316,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 317,
                                                      "end_byte": 324,
                                                      "text": "content",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 325,
                                                  "end_byte": 326,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 327,
                                          "end_byte": 328,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 329,
                                      "end_byte": 369,
                                      "text": "if ( max < content ) { max = content ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 329,
                                          "end_byte": 331,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 332,
                                          "end_byte": 349,
                                          "text": "( max < content )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 332,
                                              "end_byte": 333,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 334,
                                              "end_byte": 347,
                                              "text": "max < content",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 334,
                                                  "end_byte": 337,
                                                  "text": "max",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<",
                                                  "start_byte": 338,
                                                  "end_byte": 339,
                                                  "text": "<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 340,
                                                  "end_byte": 347,
                                                  "text": "content",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 348,
                                              "end_byte": 349,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 350,
                                          "end_byte": 369,
                                          "text": "{ max = content ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 350,
                                              "end_byte": 351,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 352,
                                              "end_byte": 367,
                                              "text": "max = content ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 352,
                                                  "end_byte": 365,
                                                  "text": "max = content",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 352,
                                                      "end_byte": 355,
                                                      "text": "max",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 356,
                                                      "end_byte": 357,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 358,
                                                      "end_byte": 365,
                                                      "text": "content",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 366,
                                                  "end_byte": 367,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 368,
                                              "end_byte": 369,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 370,
                                      "end_byte": 371,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 372,
                              "end_byte": 384,
                              "text": "sum += max ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 372,
                                  "end_byte": 382,
                                  "text": "sum += max",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 372,
                                      "end_byte": 375,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 376,
                                      "end_byte": 378,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 379,
                                      "end_byte": 382,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 383,
                                  "end_byte": 384,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 385,
                              "end_byte": 386,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 387,
                      "end_byte": 414,
                      "text": "printf ( \"\\n%d\\n\" , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 387,
                          "end_byte": 412,
                          "text": "printf ( \"\\n%d\\n\" , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 387,
                              "end_byte": 393,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 394,
                              "end_byte": 412,
                              "text": "( \"\\n%d\\n\" , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 394,
                                  "end_byte": 395,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 396,
                                  "end_byte": 404,
                                  "text": "\"\\n%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 396,
                                      "end_byte": 397,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 397,
                                      "end_byte": 399,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 399,
                                      "end_byte": 401,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 401,
                                      "end_byte": 403,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 403,
                                      "end_byte": 404,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 405,
                                  "end_byte": 406,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 407,
                                  "end_byte": 410,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 411,
                                  "end_byte": 412,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 413,
                          "end_byte": 414,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 415,
                      "end_byte": 416,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 417,
              "end_byte": 427,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 417,
                  "end_byte": 423,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 424,
                  "end_byte": 425,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 426,
                  "end_byte": 427,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 428,
              "end_byte": 429,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}