{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 658,
  "text": "int solve ( int i , int j ) ; int max ( int , int ) ; int arr [ 100 ] [ 100 ] , n ; int main ( ) { int j = 0 , i , k , x ; scanf ( \"%d \" , & x ) ; for ( k = 1 ; k <= x ; k ++ ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } printf ( \"%d\\n\" , solve ( 0 , 0 ) ) ; } return 0 ; } int solve ( int i , int j ) { int cost1 , cost2 , cost ; if ( i > n ) return 0 ; cost1 = solve ( i + 1 , j ) ; cost2 = solve ( i + 1 , j + 1 ) ; cost = max ( cost1 , cost2 ) + arr [ i ] [ j ] ; return cost ; } int max ( int cost1 , int cost2 ) { if ( cost1 > cost2 ) return cost1 ; else return cost2 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 29,
      "text": "int solve ( int i , int j ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 27,
          "text": "solve ( int i , int j )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 9,
              "text": "solve",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 27,
              "text": "( int i , int j )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 12,
                  "end_byte": 17,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 12,
                      "end_byte": 15,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 16,
                      "end_byte": 17,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 18,
                  "end_byte": 19,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 20,
                  "end_byte": 25,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 20,
                      "end_byte": 23,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 24,
                      "end_byte": 25,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 28,
          "end_byte": 29,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 30,
      "end_byte": 53,
      "text": "int max ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 30,
          "end_byte": 33,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 34,
          "end_byte": 51,
          "text": "max ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 34,
              "end_byte": 37,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 38,
              "end_byte": 51,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 40,
                      "end_byte": 43,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 46,
                  "end_byte": 49,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 46,
                      "end_byte": 49,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 52,
          "end_byte": 53,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 54,
      "end_byte": 83,
      "text": "int arr [ 100 ] [ 100 ] , n ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 54,
          "end_byte": 57,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 58,
          "end_byte": 77,
          "text": "arr [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 58,
              "end_byte": 69,
              "text": "arr [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 61,
                  "text": "arr",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 64,
                  "end_byte": 67,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 70,
              "end_byte": 71,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 72,
              "end_byte": 75,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 76,
              "end_byte": 77,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ",",
          "start_byte": 78,
          "end_byte": 79,
          "text": ",",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 80,
          "end_byte": 81,
          "text": "n",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 82,
          "end_byte": 83,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 84,
      "end_byte": 354,
      "text": "int main ( ) { int j = 0 , i , k , x ; scanf ( \"%d \" , & x ) ; for ( k = 1 ; k <= x ; k ++ ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } printf ( \"%d\\n\" , solve ( 0 , 0 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 84,
          "end_byte": 87,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 88,
          "end_byte": 96,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 88,
              "end_byte": 92,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 93,
              "end_byte": 96,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 93,
                  "end_byte": 94,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 95,
                  "end_byte": 96,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 97,
          "end_byte": 354,
          "text": "{ int j = 0 , i , k , x ; scanf ( \"%d \" , & x ) ; for ( k = 1 ; k <= x ; k ++ ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } printf ( \"%d\\n\" , solve ( 0 , 0 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 97,
              "end_byte": 98,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 99,
              "end_byte": 122,
              "text": "int j = 0 , i , k , x ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 99,
                  "end_byte": 102,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 103,
                  "end_byte": 108,
                  "text": "j = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 103,
                      "end_byte": 104,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 105,
                      "end_byte": 106,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 109,
                  "end_byte": 110,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 121,
                  "end_byte": 122,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 123,
              "end_byte": 146,
              "text": "scanf ( \"%d \" , & x ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 123,
                  "end_byte": 144,
                  "text": "scanf ( \"%d \" , & x )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 123,
                      "end_byte": 128,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 129,
                      "end_byte": 144,
                      "text": "( \"%d \" , & x )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 131,
                          "end_byte": 136,
                          "text": "\"%d \"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 132,
                              "end_byte": 135,
                              "text": "%d ",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 139,
                          "end_byte": 142,
                          "text": "& x",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 141,
                              "end_byte": 142,
                              "text": "x",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 143,
                          "end_byte": 144,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 145,
                  "end_byte": 146,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 147,
              "end_byte": 341,
              "text": "for ( k = 1 ; k <= x ; k ++ ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } printf ( \"%d\\n\" , solve ( 0 , 0 ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 147,
                  "end_byte": 150,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 151,
                  "end_byte": 152,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 153,
                  "end_byte": 158,
                  "text": "k = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 153,
                      "end_byte": 154,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 155,
                      "end_byte": 156,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 157,
                      "end_byte": 158,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 159,
                  "end_byte": 160,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 161,
                  "end_byte": 167,
                  "text": "k <= x",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 163,
                      "end_byte": 165,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 168,
                  "end_byte": 169,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 170,
                  "end_byte": 174,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 170,
                      "end_byte": 171,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 172,
                      "end_byte": 174,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 175,
                  "end_byte": 176,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 177,
                  "end_byte": 341,
                  "text": "{ scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & arr [ i ] [ j ] ) ; } printf ( \"%d\\n\" , solve ( 0 , 0 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 177,
                      "end_byte": 178,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 179,
                      "end_byte": 201,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 179,
                          "end_byte": 199,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 179,
                              "end_byte": 184,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 185,
                              "end_byte": 199,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 187,
                                  "end_byte": 191,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 188,
                                      "end_byte": 190,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 190,
                                      "end_byte": 191,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 194,
                                  "end_byte": 197,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 198,
                                  "end_byte": 199,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 200,
                          "end_byte": 201,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 202,
                      "end_byte": 301,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & arr [ i ] [ j ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 202,
                          "end_byte": 205,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 206,
                          "end_byte": 207,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 208,
                          "end_byte": 213,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 208,
                              "end_byte": 209,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 210,
                              "end_byte": 211,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 212,
                              "end_byte": 213,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 214,
                          "end_byte": 215,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 216,
                          "end_byte": 221,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 216,
                              "end_byte": 217,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 218,
                              "end_byte": 219,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 222,
                          "end_byte": 223,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 224,
                          "end_byte": 228,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 224,
                              "end_byte": 225,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 226,
                              "end_byte": 228,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 229,
                          "end_byte": 230,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 231,
                          "end_byte": 301,
                          "text": "{ for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & arr [ i ] [ j ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 231,
                              "end_byte": 232,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 233,
                              "end_byte": 299,
                              "text": "for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & arr [ i ] [ j ] ) ;",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 233,
                                  "end_byte": 236,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 237,
                                  "end_byte": 238,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 239,
                                  "end_byte": 244,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 241,
                                      "end_byte": 242,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 243,
                                      "end_byte": 244,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 245,
                                  "end_byte": 246,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 247,
                                  "end_byte": 253,
                                  "text": "j <= i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 247,
                                      "end_byte": 248,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 249,
                                      "end_byte": 251,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 252,
                                      "end_byte": 253,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 254,
                                  "end_byte": 255,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 256,
                                  "end_byte": 260,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 256,
                                      "end_byte": 257,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 258,
                                      "end_byte": 260,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 261,
                                  "end_byte": 262,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 263,
                                  "end_byte": 299,
                                  "text": "scanf ( \"%d\" , & arr [ i ] [ j ] ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 263,
                                      "end_byte": 297,
                                      "text": "scanf ( \"%d\" , & arr [ i ] [ j ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 263,
                                          "end_byte": 268,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 269,
                                          "end_byte": 297,
                                          "text": "( \"%d\" , & arr [ i ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 269,
                                              "end_byte": 270,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 271,
                                              "end_byte": 275,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 271,
                                                  "end_byte": 272,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 272,
                                                  "end_byte": 274,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 274,
                                                  "end_byte": 275,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 276,
                                              "end_byte": 277,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 278,
                                              "end_byte": 295,
                                              "text": "& arr [ i ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 278,
                                                  "end_byte": 279,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 280,
                                                  "end_byte": 295,
                                                  "text": "arr [ i ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 280,
                                                      "end_byte": 289,
                                                      "text": "arr [ i ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 280,
                                                          "end_byte": 283,
                                                          "text": "arr",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 284,
                                                          "end_byte": 289,
                                                          "text": "[ i ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 284,
                                                              "end_byte": 285,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 286,
                                                              "end_byte": 287,
                                                              "text": "i",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 288,
                                                              "end_byte": 289,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 290,
                                                      "end_byte": 295,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 290,
                                                          "end_byte": 291,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 292,
                                                          "end_byte": 293,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 294,
                                                          "end_byte": 295,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 296,
                                              "end_byte": 297,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 300,
                              "end_byte": 301,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 302,
                      "end_byte": 339,
                      "text": "printf ( \"%d\\n\" , solve ( 0 , 0 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 302,
                          "end_byte": 337,
                          "text": "printf ( \"%d\\n\" , solve ( 0 , 0 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 302,
                              "end_byte": 308,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 309,
                              "end_byte": 337,
                              "text": "( \"%d\\n\" , solve ( 0 , 0 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 309,
                                  "end_byte": 310,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 311,
                                  "end_byte": 317,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 311,
                                      "end_byte": 312,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 312,
                                      "end_byte": 314,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 314,
                                      "end_byte": 316,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 316,
                                      "end_byte": 317,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 318,
                                  "end_byte": 319,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 320,
                                  "end_byte": 335,
                                  "text": "solve ( 0 , 0 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 320,
                                      "end_byte": 325,
                                      "text": "solve",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 326,
                                      "end_byte": 335,
                                      "text": "( 0 , 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 326,
                                          "end_byte": 327,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 328,
                                          "end_byte": 329,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 330,
                                          "end_byte": 331,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 332,
                                          "end_byte": 333,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 334,
                                          "end_byte": 335,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 336,
                                  "end_byte": 337,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 338,
                          "end_byte": 339,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 340,
                      "end_byte": 341,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 342,
              "end_byte": 352,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 342,
                  "end_byte": 348,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 349,
                  "end_byte": 350,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 351,
                  "end_byte": 352,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 353,
              "end_byte": 354,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 355,
      "end_byte": 564,
      "text": "int solve ( int i , int j ) { int cost1 , cost2 , cost ; if ( i > n ) return 0 ; cost1 = solve ( i + 1 , j ) ; cost2 = solve ( i + 1 , j + 1 ) ; cost = max ( cost1 , cost2 ) + arr [ i ] [ j ] ; return cost ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 355,
          "end_byte": 358,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 359,
          "end_byte": 382,
          "text": "solve ( int i , int j )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 359,
              "end_byte": 364,
              "text": "solve",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 365,
              "end_byte": 382,
              "text": "( int i , int j )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 365,
                  "end_byte": 366,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 367,
                  "end_byte": 372,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 367,
                      "end_byte": 370,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 371,
                      "end_byte": 372,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 373,
                  "end_byte": 374,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 375,
                  "end_byte": 380,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 375,
                      "end_byte": 378,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 379,
                      "end_byte": 380,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 381,
                  "end_byte": 382,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 383,
          "end_byte": 564,
          "text": "{ int cost1 , cost2 , cost ; if ( i > n ) return 0 ; cost1 = solve ( i + 1 , j ) ; cost2 = solve ( i + 1 , j + 1 ) ; cost = max ( cost1 , cost2 ) + arr [ i ] [ j ] ; return cost ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 383,
              "end_byte": 384,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 385,
              "end_byte": 411,
              "text": "int cost1 , cost2 , cost ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 385,
                  "end_byte": 388,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 389,
                  "end_byte": 394,
                  "text": "cost1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 395,
                  "end_byte": 396,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 397,
                  "end_byte": 402,
                  "text": "cost2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 403,
                  "end_byte": 404,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 405,
                  "end_byte": 409,
                  "text": "cost",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 410,
                  "end_byte": 411,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 412,
              "end_byte": 435,
              "text": "if ( i > n ) return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 412,
                  "end_byte": 414,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 415,
                  "end_byte": 424,
                  "text": "( i > n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 415,
                      "end_byte": 416,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 417,
                      "end_byte": 422,
                      "text": "i > n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 417,
                          "end_byte": 418,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 419,
                          "end_byte": 420,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 421,
                          "end_byte": 422,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 423,
                      "end_byte": 424,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 425,
                  "end_byte": 435,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 425,
                      "end_byte": 431,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 432,
                      "end_byte": 433,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 434,
                      "end_byte": 435,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 436,
              "end_byte": 465,
              "text": "cost1 = solve ( i + 1 , j ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 436,
                  "end_byte": 463,
                  "text": "cost1 = solve ( i + 1 , j )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 436,
                      "end_byte": 441,
                      "text": "cost1",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 442,
                      "end_byte": 443,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 444,
                      "end_byte": 463,
                      "text": "solve ( i + 1 , j )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 444,
                          "end_byte": 449,
                          "text": "solve",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 450,
                          "end_byte": 463,
                          "text": "( i + 1 , j )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 450,
                              "end_byte": 451,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 452,
                              "end_byte": 457,
                              "text": "i + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 452,
                                  "end_byte": 453,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 456,
                                  "end_byte": 457,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 458,
                              "end_byte": 459,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 460,
                              "end_byte": 461,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 462,
                              "end_byte": 463,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 464,
                  "end_byte": 465,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 466,
              "end_byte": 499,
              "text": "cost2 = solve ( i + 1 , j + 1 ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 466,
                  "end_byte": 497,
                  "text": "cost2 = solve ( i + 1 , j + 1 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 466,
                      "end_byte": 471,
                      "text": "cost2",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 472,
                      "end_byte": 473,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 474,
                      "end_byte": 497,
                      "text": "solve ( i + 1 , j + 1 )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 474,
                          "end_byte": 479,
                          "text": "solve",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 480,
                          "end_byte": 497,
                          "text": "( i + 1 , j + 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 480,
                              "end_byte": 481,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 482,
                              "end_byte": 487,
                              "text": "i + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 482,
                                  "end_byte": 483,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 484,
                                  "end_byte": 485,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 486,
                                  "end_byte": 487,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 488,
                              "end_byte": 489,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 490,
                              "end_byte": 495,
                              "text": "j + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 490,
                                  "end_byte": 491,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 492,
                                  "end_byte": 493,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 494,
                                  "end_byte": 495,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 496,
                              "end_byte": 497,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 498,
                  "end_byte": 499,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 500,
              "end_byte": 548,
              "text": "cost = max ( cost1 , cost2 ) + arr [ i ] [ j ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 500,
                  "end_byte": 546,
                  "text": "cost = max ( cost1 , cost2 ) + arr [ i ] [ j ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 500,
                      "end_byte": 504,
                      "text": "cost",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 505,
                      "end_byte": 506,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 507,
                      "end_byte": 546,
                      "text": "max ( cost1 , cost2 ) + arr [ i ] [ j ]",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 507,
                          "end_byte": 528,
                          "text": "max ( cost1 , cost2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 507,
                              "end_byte": 510,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 511,
                              "end_byte": 528,
                              "text": "( cost1 , cost2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 511,
                                  "end_byte": 512,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 513,
                                  "end_byte": 518,
                                  "text": "cost1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 519,
                                  "end_byte": 520,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 521,
                                  "end_byte": 526,
                                  "text": "cost2",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 527,
                                  "end_byte": 528,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start_byte": 529,
                          "end_byte": 530,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 531,
                          "end_byte": 546,
                          "text": "arr [ i ] [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 531,
                              "end_byte": 540,
                              "text": "arr [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 531,
                                  "end_byte": 534,
                                  "text": "arr",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 535,
                                  "end_byte": 540,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 535,
                                      "end_byte": 536,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 537,
                                      "end_byte": 538,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 539,
                                      "end_byte": 540,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 541,
                              "end_byte": 546,
                              "text": "[ j ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 541,
                                  "end_byte": 542,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 543,
                                  "end_byte": 544,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 545,
                                  "end_byte": 546,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 547,
                  "end_byte": 548,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 549,
              "end_byte": 562,
              "text": "return cost ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 549,
                  "end_byte": 555,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 556,
                  "end_byte": 560,
                  "text": "cost",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 561,
                  "end_byte": 562,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 563,
              "end_byte": 564,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 565,
      "end_byte": 658,
      "text": "int max ( int cost1 , int cost2 ) { if ( cost1 > cost2 ) return cost1 ; else return cost2 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 565,
          "end_byte": 568,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 569,
          "end_byte": 598,
          "text": "max ( int cost1 , int cost2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 569,
              "end_byte": 572,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 573,
              "end_byte": 598,
              "text": "( int cost1 , int cost2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 573,
                  "end_byte": 574,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 575,
                  "end_byte": 584,
                  "text": "int cost1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 575,
                      "end_byte": 578,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 579,
                      "end_byte": 584,
                      "text": "cost1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 585,
                  "end_byte": 586,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 587,
                  "end_byte": 596,
                  "text": "int cost2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 587,
                      "end_byte": 590,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 591,
                      "end_byte": 596,
                      "text": "cost2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 597,
                  "end_byte": 598,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 599,
          "end_byte": 658,
          "text": "{ if ( cost1 > cost2 ) return cost1 ; else return cost2 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 599,
              "end_byte": 600,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 601,
              "end_byte": 656,
              "text": "if ( cost1 > cost2 ) return cost1 ; else return cost2 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 601,
                  "end_byte": 603,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 604,
                  "end_byte": 621,
                  "text": "( cost1 > cost2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 604,
                      "end_byte": 605,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 606,
                      "end_byte": 619,
                      "text": "cost1 > cost2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 606,
                          "end_byte": 611,
                          "text": "cost1",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 612,
                          "end_byte": 613,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 614,
                          "end_byte": 619,
                          "text": "cost2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 620,
                      "end_byte": 621,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 622,
                  "end_byte": 636,
                  "text": "return cost1 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 622,
                      "end_byte": 628,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 629,
                      "end_byte": 634,
                      "text": "cost1",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 635,
                      "end_byte": 636,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 637,
                  "end_byte": 656,
                  "text": "else return cost2 ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 637,
                      "end_byte": 641,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 642,
                      "end_byte": 656,
                      "text": "return cost2 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 642,
                          "end_byte": 648,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 649,
                          "end_byte": 654,
                          "text": "cost2",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 655,
                          "end_byte": 656,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 657,
              "end_byte": 658,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}