{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 517,
  "text": "int n = 0 ; int main ( void ) { int t , i , test ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%d\" , & t ) ; n = t * ( t + 1 ) / 2 ; int arr [ 1000 ] = { 0 } ; for ( i = 1 ; i <= n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ; printf ( \"%d\\n\" , fun ( arr , 1 ) + arr [ 1 ] ) ; } return 0 ; } int fun ( int arr [ ] , int k ) { if ( 2 * k > n ) return 0 ; else return max ( arr [ 2 * k ] + fun ( arr , 2 * k ) , arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 ) ) ; } int max ( int a , int b ) { return a > b ? a : b ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 11,
      "text": "int n = 0 ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 4,
          "end_byte": 9,
          "text": "n = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 5,
              "text": "n",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 6,
              "end_byte": 7,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 8,
              "end_byte": 9,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 10,
          "end_byte": 11,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 12,
      "end_byte": 296,
      "text": "int main ( void ) { int t , i , test ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%d\" , & t ) ; n = t * ( t + 1 ) / 2 ; int arr [ 1000 ] = { 0 } ; for ( i = 1 ; i <= n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ; printf ( \"%d\\n\" , fun ( arr , 1 ) + arr [ 1 ] ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 12,
          "end_byte": 15,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 16,
          "end_byte": 29,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 16,
              "end_byte": 20,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 21,
              "end_byte": 29,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 23,
                  "end_byte": 27,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 23,
                      "end_byte": 27,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 30,
          "end_byte": 296,
          "text": "{ int t , i , test ; scanf ( \"%d\" , & test ) ; while ( test -- ) { scanf ( \"%d\" , & t ) ; n = t * ( t + 1 ) / 2 ; int arr [ 1000 ] = { 0 } ; for ( i = 1 ; i <= n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ; printf ( \"%d\\n\" , fun ( arr , 1 ) + arr [ 1 ] ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 30,
              "end_byte": 31,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 32,
              "end_byte": 50,
              "text": "int t , i , test ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 32,
                  "end_byte": 35,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 48,
                  "text": "test",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 51,
              "end_byte": 76,
              "text": "scanf ( \"%d\" , & test ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 51,
                  "end_byte": 74,
                  "text": "scanf ( \"%d\" , & test )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 51,
                      "end_byte": 56,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 57,
                      "end_byte": 74,
                      "text": "( \"%d\" , & test )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 57,
                          "end_byte": 58,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 59,
                          "end_byte": 63,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 59,
                              "end_byte": 60,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 60,
                              "end_byte": 62,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 62,
                              "end_byte": 63,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 64,
                          "end_byte": 65,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 66,
                          "end_byte": 72,
                          "text": "& test",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 66,
                              "end_byte": 67,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 68,
                              "end_byte": 72,
                              "text": "test",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 73,
                          "end_byte": 74,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 77,
              "end_byte": 283,
              "text": "while ( test -- ) { scanf ( \"%d\" , & t ) ; n = t * ( t + 1 ) / 2 ; int arr [ 1000 ] = { 0 } ; for ( i = 1 ; i <= n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ; printf ( \"%d\\n\" , fun ( arr , 1 ) + arr [ 1 ] ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 77,
                  "end_byte": 82,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 83,
                  "end_byte": 94,
                  "text": "( test -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 85,
                      "end_byte": 92,
                      "text": "test --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 85,
                          "end_byte": 89,
                          "text": "test",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 90,
                          "end_byte": 92,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 93,
                      "end_byte": 94,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 95,
                  "end_byte": 283,
                  "text": "{ scanf ( \"%d\" , & t ) ; n = t * ( t + 1 ) / 2 ; int arr [ 1000 ] = { 0 } ; for ( i = 1 ; i <= n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ; printf ( \"%d\\n\" , fun ( arr , 1 ) + arr [ 1 ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 95,
                      "end_byte": 96,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 97,
                      "end_byte": 119,
                      "text": "scanf ( \"%d\" , & t ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 97,
                          "end_byte": 117,
                          "text": "scanf ( \"%d\" , & t )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 97,
                              "end_byte": 102,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 103,
                              "end_byte": 117,
                              "text": "( \"%d\" , & t )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 103,
                                  "end_byte": 104,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 105,
                                  "end_byte": 109,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 105,
                                      "end_byte": 106,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 106,
                                      "end_byte": 108,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 108,
                                      "end_byte": 109,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 110,
                                  "end_byte": 111,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 112,
                                  "end_byte": 115,
                                  "text": "& t",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 112,
                                      "end_byte": 113,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 114,
                                      "end_byte": 115,
                                      "text": "t",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 116,
                                  "end_byte": 117,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 118,
                          "end_byte": 119,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 120,
                      "end_byte": 143,
                      "text": "n = t * ( t + 1 ) / 2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 120,
                          "end_byte": 141,
                          "text": "n = t * ( t + 1 ) / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 120,
                              "end_byte": 121,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 122,
                              "end_byte": 123,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 124,
                              "end_byte": 141,
                              "text": "t * ( t + 1 ) / 2",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 124,
                                  "end_byte": 137,
                                  "text": "t * ( t + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "t",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 126,
                                      "end_byte": 127,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 128,
                                      "end_byte": 137,
                                      "text": "( t + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 128,
                                          "end_byte": 129,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 130,
                                          "end_byte": 135,
                                          "text": "t + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 130,
                                              "end_byte": 131,
                                              "text": "t",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 132,
                                              "end_byte": 133,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 134,
                                              "end_byte": 135,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 136,
                                          "end_byte": 137,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 138,
                                  "end_byte": 139,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 142,
                          "end_byte": 143,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 144,
                      "end_byte": 170,
                      "text": "int arr [ 1000 ] = { 0 } ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 144,
                          "end_byte": 147,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 148,
                          "end_byte": 168,
                          "text": "arr [ 1000 ] = { 0 }",
                          "children": [
                            {
                              "type": "array_declarator",
                              "start_byte": 148,
                              "end_byte": 160,
                              "text": "arr [ 1000 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 148,
                                  "end_byte": 151,
                                  "text": "arr",
                                  "children": []
                                },
                                {
                                  "type": "[",
                                  "start_byte": 152,
                                  "end_byte": 153,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 154,
                                  "end_byte": 158,
                                  "text": "1000",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 161,
                              "end_byte": 162,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "initializer_list",
                              "start_byte": 163,
                              "end_byte": 168,
                              "text": "{ 0 }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 165,
                                  "end_byte": 166,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "}",
                                  "start_byte": 167,
                                  "end_byte": 168,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 169,
                          "end_byte": 170,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 171,
                      "end_byte": 231,
                      "text": "for ( i = 1 ; i <= n ; i ++ ) scanf ( \"%d\" , & arr [ i ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 171,
                          "end_byte": 174,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 175,
                          "end_byte": 176,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 177,
                          "end_byte": 182,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 177,
                              "end_byte": 178,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 183,
                          "end_byte": 184,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 185,
                          "end_byte": 191,
                          "text": "i <= n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 187,
                              "end_byte": 189,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 190,
                              "end_byte": 191,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 192,
                          "end_byte": 193,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 194,
                          "end_byte": 198,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 194,
                              "end_byte": 195,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 196,
                              "end_byte": 198,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 199,
                          "end_byte": 200,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 201,
                          "end_byte": 231,
                          "text": "scanf ( \"%d\" , & arr [ i ] ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 201,
                              "end_byte": 229,
                              "text": "scanf ( \"%d\" , & arr [ i ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 201,
                                  "end_byte": 206,
                                  "text": "scanf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 207,
                                  "end_byte": 229,
                                  "text": "( \"%d\" , & arr [ i ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 207,
                                      "end_byte": 208,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 209,
                                      "end_byte": 213,
                                      "text": "\"%d\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 209,
                                          "end_byte": 210,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 210,
                                          "end_byte": 212,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "pointer_expression",
                                      "start_byte": 216,
                                      "end_byte": 227,
                                      "text": "& arr [ i ]",
                                      "children": [
                                        {
                                          "type": "&",
                                          "start_byte": 216,
                                          "end_byte": 217,
                                          "text": "&",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 218,
                                          "end_byte": 227,
                                          "text": "arr [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 218,
                                              "end_byte": 221,
                                              "text": "arr",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 222,
                                              "end_byte": 227,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 222,
                                                  "end_byte": 223,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 224,
                                                  "end_byte": 225,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 226,
                                                  "end_byte": 227,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 230,
                              "end_byte": 231,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 232,
                      "end_byte": 281,
                      "text": "printf ( \"%d\\n\" , fun ( arr , 1 ) + arr [ 1 ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 232,
                          "end_byte": 279,
                          "text": "printf ( \"%d\\n\" , fun ( arr , 1 ) + arr [ 1 ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 232,
                              "end_byte": 238,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 239,
                              "end_byte": 279,
                              "text": "( \"%d\\n\" , fun ( arr , 1 ) + arr [ 1 ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 239,
                                  "end_byte": 240,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 241,
                                  "end_byte": 247,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 241,
                                      "end_byte": 242,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 242,
                                      "end_byte": 244,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 244,
                                      "end_byte": 246,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 246,
                                      "end_byte": 247,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 248,
                                  "end_byte": 249,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 250,
                                  "end_byte": 277,
                                  "text": "fun ( arr , 1 ) + arr [ 1 ]",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 250,
                                      "end_byte": 265,
                                      "text": "fun ( arr , 1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 250,
                                          "end_byte": 253,
                                          "text": "fun",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 254,
                                          "end_byte": 265,
                                          "text": "( arr , 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 254,
                                              "end_byte": 255,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 256,
                                              "end_byte": 259,
                                              "text": "arr",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 260,
                                              "end_byte": 261,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 262,
                                              "end_byte": 263,
                                              "text": "1",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 264,
                                              "end_byte": 265,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 266,
                                      "end_byte": 267,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 268,
                                      "end_byte": 277,
                                      "text": "arr [ 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 268,
                                          "end_byte": 271,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 272,
                                          "end_byte": 277,
                                          "text": "[ 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 272,
                                              "end_byte": 273,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 274,
                                              "end_byte": 275,
                                              "text": "1",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 276,
                                              "end_byte": 277,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 278,
                                  "end_byte": 279,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 280,
                          "end_byte": 281,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 282,
                      "end_byte": 283,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 284,
              "end_byte": 294,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 284,
                  "end_byte": 290,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 291,
                  "end_byte": 292,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 293,
                  "end_byte": 294,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 295,
              "end_byte": 296,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 297,
      "end_byte": 464,
      "text": "int fun ( int arr [ ] , int k ) { if ( 2 * k > n ) return 0 ; else return max ( arr [ 2 * k ] + fun ( arr , 2 * k ) , arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 ) ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 297,
          "end_byte": 300,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 301,
          "end_byte": 328,
          "text": "fun ( int arr [ ] , int k )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 301,
              "end_byte": 304,
              "text": "fun",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 305,
              "end_byte": 328,
              "text": "( int arr [ ] , int k )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 305,
                  "end_byte": 306,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 307,
                  "end_byte": 318,
                  "text": "int arr [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 307,
                      "end_byte": 310,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 311,
                      "end_byte": 318,
                      "text": "arr [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 311,
                          "end_byte": 314,
                          "text": "arr",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 317,
                          "end_byte": 318,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 321,
                  "end_byte": 326,
                  "text": "int k",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 321,
                      "end_byte": 324,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 325,
                      "end_byte": 326,
                      "text": "k",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 327,
                  "end_byte": 328,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 329,
          "end_byte": 464,
          "text": "{ if ( 2 * k > n ) return 0 ; else return max ( arr [ 2 * k ] + fun ( arr , 2 * k ) , arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 ) ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 329,
              "end_byte": 330,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 331,
              "end_byte": 462,
              "text": "if ( 2 * k > n ) return 0 ; else return max ( arr [ 2 * k ] + fun ( arr , 2 * k ) , arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 ) ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 331,
                  "end_byte": 333,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 334,
                  "end_byte": 347,
                  "text": "( 2 * k > n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 334,
                      "end_byte": 335,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 336,
                      "end_byte": 345,
                      "text": "2 * k > n",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 336,
                          "end_byte": 341,
                          "text": "2 * k",
                          "children": [
                            {
                              "type": "number_literal",
                              "start_byte": 336,
                              "end_byte": 337,
                              "text": "2",
                              "children": []
                            },
                            {
                              "type": "*",
                              "start_byte": 338,
                              "end_byte": 339,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 340,
                              "end_byte": 341,
                              "text": "k",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start_byte": 342,
                          "end_byte": 343,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 344,
                          "end_byte": 345,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 346,
                      "end_byte": 347,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 348,
                  "end_byte": 358,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 348,
                      "end_byte": 354,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 357,
                      "end_byte": 358,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 359,
                  "end_byte": 462,
                  "text": "else return max ( arr [ 2 * k ] + fun ( arr , 2 * k ) , arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 ) ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 359,
                      "end_byte": 363,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 364,
                      "end_byte": 462,
                      "text": "return max ( arr [ 2 * k ] + fun ( arr , 2 * k ) , arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 ) ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 364,
                          "end_byte": 370,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 371,
                          "end_byte": 460,
                          "text": "max ( arr [ 2 * k ] + fun ( arr , 2 * k ) , arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 371,
                              "end_byte": 374,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 375,
                              "end_byte": 460,
                              "text": "( arr [ 2 * k ] + fun ( arr , 2 * k ) , arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 375,
                                  "end_byte": 376,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 377,
                                  "end_byte": 412,
                                  "text": "arr [ 2 * k ] + fun ( arr , 2 * k )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 377,
                                      "end_byte": 390,
                                      "text": "arr [ 2 * k ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 377,
                                          "end_byte": 380,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 381,
                                          "end_byte": 390,
                                          "text": "[ 2 * k ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 381,
                                              "end_byte": 382,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 383,
                                              "end_byte": 388,
                                              "text": "2 * k",
                                              "children": [
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 383,
                                                  "end_byte": 384,
                                                  "text": "2",
                                                  "children": []
                                                },
                                                {
                                                  "type": "*",
                                                  "start_byte": 385,
                                                  "end_byte": 386,
                                                  "text": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 387,
                                                  "end_byte": 388,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 389,
                                              "end_byte": 390,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 391,
                                      "end_byte": 392,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 393,
                                      "end_byte": 412,
                                      "text": "fun ( arr , 2 * k )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 393,
                                          "end_byte": 396,
                                          "text": "fun",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 397,
                                          "end_byte": 412,
                                          "text": "( arr , 2 * k )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 397,
                                              "end_byte": 398,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 399,
                                              "end_byte": 402,
                                              "text": "arr",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 403,
                                              "end_byte": 404,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 405,
                                              "end_byte": 410,
                                              "text": "2 * k",
                                              "children": [
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 405,
                                                  "end_byte": 406,
                                                  "text": "2",
                                                  "children": []
                                                },
                                                {
                                                  "type": "*",
                                                  "start_byte": 407,
                                                  "end_byte": 408,
                                                  "text": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 409,
                                                  "end_byte": 410,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 411,
                                              "end_byte": 412,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 413,
                                  "end_byte": 414,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 415,
                                  "end_byte": 458,
                                  "text": "arr [ 2 * k + 1 ] + fun ( arr , 2 * k + 1 )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 415,
                                      "end_byte": 432,
                                      "text": "arr [ 2 * k + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 415,
                                          "end_byte": 418,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 419,
                                          "end_byte": 432,
                                          "text": "[ 2 * k + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 419,
                                              "end_byte": 420,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 421,
                                              "end_byte": 430,
                                              "text": "2 * k + 1",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 421,
                                                  "end_byte": 426,
                                                  "text": "2 * k",
                                                  "children": [
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 421,
                                                      "end_byte": 422,
                                                      "text": "2",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 423,
                                                      "end_byte": 424,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 425,
                                                      "end_byte": 426,
                                                      "text": "k",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 427,
                                                  "end_byte": 428,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 429,
                                                  "end_byte": 430,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 431,
                                              "end_byte": 432,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 433,
                                      "end_byte": 434,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 435,
                                      "end_byte": 458,
                                      "text": "fun ( arr , 2 * k + 1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 435,
                                          "end_byte": 438,
                                          "text": "fun",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 439,
                                          "end_byte": 458,
                                          "text": "( arr , 2 * k + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 439,
                                              "end_byte": 440,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 441,
                                              "end_byte": 444,
                                              "text": "arr",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 445,
                                              "end_byte": 446,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 447,
                                              "end_byte": 456,
                                              "text": "2 * k + 1",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 447,
                                                  "end_byte": 452,
                                                  "text": "2 * k",
                                                  "children": [
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 447,
                                                      "end_byte": 448,
                                                      "text": "2",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 449,
                                                      "end_byte": 450,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 451,
                                                      "end_byte": 452,
                                                      "text": "k",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 453,
                                                  "end_byte": 454,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 455,
                                                  "end_byte": 456,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 457,
                                              "end_byte": 458,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 459,
                                  "end_byte": 460,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 461,
                          "end_byte": 462,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 463,
              "end_byte": 464,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 465,
      "end_byte": 517,
      "text": "int max ( int a , int b ) { return a > b ? a : b ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 465,
          "end_byte": 468,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 469,
          "end_byte": 490,
          "text": "max ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 469,
              "end_byte": 472,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 473,
              "end_byte": 490,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 473,
                  "end_byte": 474,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 475,
                  "end_byte": 480,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 475,
                      "end_byte": 478,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 479,
                      "end_byte": 480,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 481,
                  "end_byte": 482,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 483,
                  "end_byte": 488,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 483,
                      "end_byte": 486,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 487,
                      "end_byte": 488,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 489,
                  "end_byte": 490,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 491,
          "end_byte": 517,
          "text": "{ return a > b ? a : b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 491,
              "end_byte": 492,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 493,
              "end_byte": 515,
              "text": "return a > b ? a : b ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 493,
                  "end_byte": 499,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "conditional_expression",
                  "start_byte": 500,
                  "end_byte": 513,
                  "text": "a > b ? a : b",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 500,
                      "end_byte": 505,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 500,
                          "end_byte": 501,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 502,
                          "end_byte": 503,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 504,
                          "end_byte": 505,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "?",
                      "start_byte": 506,
                      "end_byte": 507,
                      "text": "?",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 508,
                      "end_byte": 509,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ":",
                      "start_byte": 510,
                      "end_byte": 511,
                      "text": ":",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 512,
                      "end_byte": 513,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 514,
                  "end_byte": 515,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 516,
              "end_byte": 517,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}