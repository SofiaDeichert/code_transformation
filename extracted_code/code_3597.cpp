int add ( int * * , int , int , int ) ; int main ( ) { int m = 0 , n = 0 , i = 0 , j = 0 ; scanf ( "%d" , & m ) ; while ( m -- ) { scanf ( "%d" , & n ) ; int * * ar = ( int * * ) malloc ( sizeof ( int * ) * n ) ; for ( i = 1 ; i <= n ; ++ i ) ar [ i - 1 ] = ( int * ) malloc ( sizeof ( int ) * i ) ; for ( i = 0 ; i < n ; ++ i ) for ( j = 0 ; j <= i ; ++ j ) scanf ( "%d" , & ar [ i ] [ j ] ) ; printf ( "%d\n" , add ( ar , 0 , 0 , n ) ) ; for ( i = 0 ; i < n ; ++ i ) { free ( ar [ i ] ) ; ar [ i ] = NULL ; } free ( ar ) ; ar = NULL ; } return 0 ; } int add ( int * * ar , int i , int j , int n ) { int sumleft = 0 , sumright = 0 ; if ( i == n ) return 0 ; else { sumleft = add ( ar , i + 1 , j , n ) ; sumright = add ( ar , i + 1 , j + 1 , n ) ; if ( sumleft >= sumright ) return ( sumleft + ar [ i ] [ j ] ) ; else return ( sumright + ar [ i ] [ j ] ) ; } }