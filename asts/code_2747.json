{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 619,
  "text": "int main ( ) { int t , n , pos , min = 0 , temp ; printf ( \"Enter the no of test cases: \" ) ; scanf ( \"%d\" , & t ) ; printf ( \"Enter the size of the array: \" ) ; scanf ( \"%d\" , & n ) ; int ar [ n ] ; printf ( \"Enter the array elements: \" ) ; for ( int i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & ar [ i ] ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( ar [ j ] > ar [ j + 1 ] ) pos = j ; else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ; min = min + ar [ j ] ; for ( int k = pos ; k < n ; k ++ ) { temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; } n -- ; } } printf ( \"%d\" , min ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 619,
      "text": "int main ( ) { int t , n , pos , min = 0 , temp ; printf ( \"Enter the no of test cases: \" ) ; scanf ( \"%d\" , & t ) ; printf ( \"Enter the size of the array: \" ) ; scanf ( \"%d\" , & n ) ; int ar [ n ] ; printf ( \"Enter the array elements: \" ) ; for ( int i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & ar [ i ] ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( ar [ j ] > ar [ j + 1 ] ) pos = j ; else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ; min = min + ar [ j ] ; for ( int k = pos ; k < n ; k ++ ) { temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; } n -- ; } } printf ( \"%d\" , min ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 619,
          "text": "{ int t , n , pos , min = 0 , temp ; printf ( \"Enter the no of test cases: \" ) ; scanf ( \"%d\" , & t ) ; printf ( \"Enter the size of the array: \" ) ; scanf ( \"%d\" , & n ) ; int ar [ n ] ; printf ( \"Enter the array elements: \" ) ; for ( int i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & ar [ i ] ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( ar [ j ] > ar [ j + 1 ] ) pos = j ; else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ; min = min + ar [ j ] ; for ( int k = pos ; k < n ; k ++ ) { temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; } n -- ; } } printf ( \"%d\" , min ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 49,
              "text": "int t , n , pos , min = 0 , temp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 30,
                  "text": "pos",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 33,
                  "end_byte": 40,
                  "text": "min = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 33,
                      "end_byte": 36,
                      "text": "min",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 37,
                      "end_byte": 38,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 39,
                      "end_byte": 40,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 43,
                  "end_byte": 47,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 50,
              "end_byte": 93,
              "text": "printf ( \"Enter the no of test cases: \" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 50,
                  "end_byte": 91,
                  "text": "printf ( \"Enter the no of test cases: \" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 50,
                      "end_byte": 56,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 57,
                      "end_byte": 91,
                      "text": "( \"Enter the no of test cases: \" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 57,
                          "end_byte": 58,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 59,
                          "end_byte": 89,
                          "text": "\"Enter the no of test cases: \"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 59,
                              "end_byte": 60,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 60,
                              "end_byte": 88,
                              "text": "Enter the no of test cases: ",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 94,
              "end_byte": 116,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 94,
                  "end_byte": 114,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 94,
                      "end_byte": 99,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 100,
                      "end_byte": 114,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 102,
                          "end_byte": 106,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 103,
                              "end_byte": 105,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 109,
                          "end_byte": 112,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 111,
                              "end_byte": 112,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 113,
                          "end_byte": 114,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 117,
              "end_byte": 161,
              "text": "printf ( \"Enter the size of the array: \" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 117,
                  "end_byte": 159,
                  "text": "printf ( \"Enter the size of the array: \" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 117,
                      "end_byte": 123,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 124,
                      "end_byte": 159,
                      "text": "( \"Enter the size of the array: \" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 124,
                          "end_byte": 125,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 126,
                          "end_byte": 157,
                          "text": "\"Enter the size of the array: \"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 127,
                              "end_byte": 156,
                              "text": "Enter the size of the array: ",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 156,
                              "end_byte": 157,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 158,
                          "end_byte": 159,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 160,
                  "end_byte": 161,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 162,
              "end_byte": 184,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 162,
                  "end_byte": 182,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 162,
                      "end_byte": 167,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 168,
                      "end_byte": 182,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 168,
                          "end_byte": 169,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 170,
                          "end_byte": 174,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 171,
                              "end_byte": 173,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 173,
                              "end_byte": 174,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 175,
                          "end_byte": 176,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 177,
                          "end_byte": 180,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 177,
                              "end_byte": 178,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 181,
                          "end_byte": 182,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 183,
                  "end_byte": 184,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 185,
              "end_byte": 199,
              "text": "int ar [ n ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 185,
                  "end_byte": 188,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 189,
                  "end_byte": 197,
                  "text": "ar [ n ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 189,
                      "end_byte": 191,
                      "text": "ar",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 192,
                      "end_byte": 193,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 194,
                      "end_byte": 195,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 196,
                      "end_byte": 197,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 198,
                  "end_byte": 199,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 200,
              "end_byte": 241,
              "text": "printf ( \"Enter the array elements: \" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 200,
                  "end_byte": 239,
                  "text": "printf ( \"Enter the array elements: \" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 200,
                      "end_byte": 206,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 207,
                      "end_byte": 239,
                      "text": "( \"Enter the array elements: \" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 207,
                          "end_byte": 208,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 209,
                          "end_byte": 237,
                          "text": "\"Enter the array elements: \"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 209,
                              "end_byte": 210,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 210,
                              "end_byte": 236,
                              "text": "Enter the array elements: ",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 236,
                              "end_byte": 237,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 238,
                          "end_byte": 239,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 240,
                  "end_byte": 241,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 242,
              "end_byte": 304,
              "text": "for ( int i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & ar [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 242,
                  "end_byte": 245,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 246,
                  "end_byte": 247,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "declaration",
                  "start_byte": 248,
                  "end_byte": 259,
                  "text": "int i = 0 ;",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 248,
                      "end_byte": 251,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "init_declarator",
                      "start_byte": 252,
                      "end_byte": 257,
                      "text": "i = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 252,
                          "end_byte": 253,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 254,
                          "end_byte": 255,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 256,
                          "end_byte": 257,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 258,
                      "end_byte": 259,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "binary_expression",
                  "start_byte": 260,
                  "end_byte": 265,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 260,
                      "end_byte": 261,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 262,
                      "end_byte": 263,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 264,
                      "end_byte": 265,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 266,
                  "end_byte": 267,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 268,
                  "end_byte": 272,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 268,
                      "end_byte": 269,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 270,
                      "end_byte": 272,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 273,
                  "end_byte": 274,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 275,
                  "end_byte": 304,
                  "text": "scanf ( \"%d\" , & ar [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 275,
                      "end_byte": 302,
                      "text": "scanf ( \"%d\" , & ar [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 275,
                          "end_byte": 280,
                          "text": "scanf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 281,
                          "end_byte": 302,
                          "text": "( \"%d\" , & ar [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 281,
                              "end_byte": 282,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 283,
                              "end_byte": 287,
                              "text": "\"%d\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 283,
                                  "end_byte": 284,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 284,
                                  "end_byte": 286,
                                  "text": "%d",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 286,
                                  "end_byte": 287,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 288,
                              "end_byte": 289,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "pointer_expression",
                              "start_byte": 290,
                              "end_byte": 300,
                              "text": "& ar [ i ]",
                              "children": [
                                {
                                  "type": "&",
                                  "start_byte": 290,
                                  "end_byte": 291,
                                  "text": "&",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 292,
                                  "end_byte": 300,
                                  "text": "ar [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 292,
                                      "end_byte": 294,
                                      "text": "ar",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 295,
                                      "end_byte": 300,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 295,
                                          "end_byte": 296,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 297,
                                          "end_byte": 298,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 299,
                                          "end_byte": 300,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 301,
                              "end_byte": 302,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 305,
              "end_byte": 582,
              "text": "for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( ar [ j ] > ar [ j + 1 ] ) pos = j ; else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ; min = min + ar [ j ] ; for ( int k = pos ; k < n ; k ++ ) { temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; } n -- ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 305,
                  "end_byte": 308,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 309,
                  "end_byte": 310,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "declaration",
                  "start_byte": 311,
                  "end_byte": 322,
                  "text": "int i = 0 ;",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 311,
                      "end_byte": 314,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "init_declarator",
                      "start_byte": 315,
                      "end_byte": 320,
                      "text": "i = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 317,
                          "end_byte": 318,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 319,
                          "end_byte": 320,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 321,
                      "end_byte": 322,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "binary_expression",
                  "start_byte": 323,
                  "end_byte": 328,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 323,
                      "end_byte": 324,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 325,
                      "end_byte": 326,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 327,
                      "end_byte": 328,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 329,
                  "end_byte": 330,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 331,
                  "end_byte": 335,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 331,
                      "end_byte": 332,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 333,
                      "end_byte": 335,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 336,
                  "end_byte": 337,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 338,
                  "end_byte": 582,
                  "text": "{ for ( int j = 0 ; j < n ; j ++ ) { if ( ar [ j ] > ar [ j + 1 ] ) pos = j ; else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ; min = min + ar [ j ] ; for ( int k = pos ; k < n ; k ++ ) { temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; } n -- ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 338,
                      "end_byte": 339,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 340,
                      "end_byte": 580,
                      "text": "for ( int j = 0 ; j < n ; j ++ ) { if ( ar [ j ] > ar [ j + 1 ] ) pos = j ; else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ; min = min + ar [ j ] ; for ( int k = pos ; k < n ; k ++ ) { temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; } n -- ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 340,
                          "end_byte": 343,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 344,
                          "end_byte": 345,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "declaration",
                          "start_byte": 346,
                          "end_byte": 357,
                          "text": "int j = 0 ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 346,
                              "end_byte": 349,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "init_declarator",
                              "start_byte": 350,
                              "end_byte": 355,
                              "text": "j = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 350,
                                  "end_byte": 351,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 352,
                                  "end_byte": 353,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 354,
                                  "end_byte": 355,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 356,
                              "end_byte": 357,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 358,
                          "end_byte": 363,
                          "text": "j < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 358,
                              "end_byte": 359,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 360,
                              "end_byte": 361,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 362,
                              "end_byte": 363,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 364,
                          "end_byte": 365,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 366,
                          "end_byte": 370,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 366,
                              "end_byte": 367,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 368,
                              "end_byte": 370,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 371,
                          "end_byte": 372,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 373,
                          "end_byte": 580,
                          "text": "{ if ( ar [ j ] > ar [ j + 1 ] ) pos = j ; else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ; min = min + ar [ j ] ; for ( int k = pos ; k < n ; k ++ ) { temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; } n -- ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 373,
                              "end_byte": 374,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 375,
                              "end_byte": 465,
                              "text": "if ( ar [ j ] > ar [ j + 1 ] ) pos = j ; else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 375,
                                  "end_byte": 377,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 378,
                                  "end_byte": 405,
                                  "text": "( ar [ j ] > ar [ j + 1 ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 378,
                                      "end_byte": 379,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 380,
                                      "end_byte": 403,
                                      "text": "ar [ j ] > ar [ j + 1 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 380,
                                          "end_byte": 388,
                                          "text": "ar [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 380,
                                              "end_byte": 382,
                                              "text": "ar",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 383,
                                              "end_byte": 388,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 383,
                                                  "end_byte": 384,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 385,
                                                  "end_byte": 386,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 387,
                                                  "end_byte": 388,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 389,
                                          "end_byte": 390,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 391,
                                          "end_byte": 403,
                                          "text": "ar [ j + 1 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 391,
                                              "end_byte": 393,
                                              "text": "ar",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 394,
                                              "end_byte": 403,
                                              "text": "[ j + 1 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 394,
                                                  "end_byte": 395,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 396,
                                                  "end_byte": 401,
                                                  "text": "j + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 396,
                                                      "end_byte": 397,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 398,
                                                      "end_byte": 399,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 400,
                                                      "end_byte": 401,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 402,
                                                  "end_byte": 403,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 404,
                                      "end_byte": 405,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 406,
                                  "end_byte": 415,
                                  "text": "pos = j ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 406,
                                      "end_byte": 413,
                                      "text": "pos = j",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 406,
                                          "end_byte": 409,
                                          "text": "pos",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 410,
                                          "end_byte": 411,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 412,
                                          "end_byte": 413,
                                          "text": "j",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 414,
                                      "end_byte": 415,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 416,
                                  "end_byte": 465,
                                  "text": "else if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 416,
                                      "end_byte": 420,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 421,
                                      "end_byte": 465,
                                      "text": "if ( ar [ j + 1 ] > ar [ j ] ) pos = j + 1 ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 421,
                                          "end_byte": 423,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 424,
                                          "end_byte": 451,
                                          "text": "( ar [ j + 1 ] > ar [ j ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 424,
                                              "end_byte": 425,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 426,
                                              "end_byte": 449,
                                              "text": "ar [ j + 1 ] > ar [ j ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 426,
                                                  "end_byte": 438,
                                                  "text": "ar [ j + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 426,
                                                      "end_byte": 428,
                                                      "text": "ar",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 429,
                                                      "end_byte": 438,
                                                      "text": "[ j + 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 429,
                                                          "end_byte": 430,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 431,
                                                          "end_byte": 436,
                                                          "text": "j + 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 431,
                                                              "end_byte": 432,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 433,
                                                              "end_byte": 434,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 435,
                                                              "end_byte": 436,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 437,
                                                          "end_byte": 438,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 439,
                                                  "end_byte": 440,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 441,
                                                  "end_byte": 449,
                                                  "text": "ar [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 441,
                                                      "end_byte": 443,
                                                      "text": "ar",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 444,
                                                      "end_byte": 449,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 444,
                                                          "end_byte": 445,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 446,
                                                          "end_byte": 447,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 448,
                                                          "end_byte": 449,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 450,
                                              "end_byte": 451,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 452,
                                          "end_byte": 465,
                                          "text": "pos = j + 1 ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 452,
                                              "end_byte": 463,
                                              "text": "pos = j + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 452,
                                                  "end_byte": 455,
                                                  "text": "pos",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 456,
                                                  "end_byte": 457,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 458,
                                                  "end_byte": 463,
                                                  "text": "j + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 458,
                                                      "end_byte": 459,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 460,
                                                      "end_byte": 461,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 462,
                                                      "end_byte": 463,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 464,
                                              "end_byte": 465,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 466,
                              "end_byte": 488,
                              "text": "min = min + ar [ j ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 466,
                                  "end_byte": 486,
                                  "text": "min = min + ar [ j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 466,
                                      "end_byte": 469,
                                      "text": "min",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 470,
                                      "end_byte": 471,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 472,
                                      "end_byte": 486,
                                      "text": "min + ar [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 472,
                                          "end_byte": 475,
                                          "text": "min",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 476,
                                          "end_byte": 477,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 478,
                                          "end_byte": 486,
                                          "text": "ar [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 478,
                                              "end_byte": 480,
                                              "text": "ar",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 481,
                                              "end_byte": 486,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 481,
                                                  "end_byte": 482,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 483,
                                                  "end_byte": 484,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 485,
                                                  "end_byte": 486,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 487,
                                  "end_byte": 488,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 489,
                              "end_byte": 571,
                              "text": "for ( int k = pos ; k < n ; k ++ ) { temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 489,
                                  "end_byte": 492,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 493,
                                  "end_byte": 494,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "declaration",
                                  "start_byte": 495,
                                  "end_byte": 508,
                                  "text": "int k = pos ;",
                                  "children": [
                                    {
                                      "type": "primitive_type",
                                      "start_byte": 495,
                                      "end_byte": 498,
                                      "text": "int",
                                      "children": []
                                    },
                                    {
                                      "type": "init_declarator",
                                      "start_byte": 499,
                                      "end_byte": 506,
                                      "text": "k = pos",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 499,
                                          "end_byte": 500,
                                          "text": "k",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 501,
                                          "end_byte": 502,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 503,
                                          "end_byte": 506,
                                          "text": "pos",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 507,
                                      "end_byte": 508,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 509,
                                  "end_byte": 514,
                                  "text": "k < n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 509,
                                      "end_byte": 510,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 511,
                                      "end_byte": 512,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 513,
                                      "end_byte": 514,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 515,
                                  "end_byte": 516,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 517,
                                  "end_byte": 521,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 517,
                                      "end_byte": 518,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 519,
                                      "end_byte": 521,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 522,
                                  "end_byte": 523,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 524,
                                  "end_byte": 571,
                                  "text": "{ temp = ar [ k ] ; ar [ k ] = ar [ k + 1 ] ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 524,
                                      "end_byte": 525,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 526,
                                      "end_byte": 543,
                                      "text": "temp = ar [ k ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 526,
                                          "end_byte": 541,
                                          "text": "temp = ar [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 526,
                                              "end_byte": 530,
                                              "text": "temp",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 531,
                                              "end_byte": 532,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 533,
                                              "end_byte": 541,
                                              "text": "ar [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 533,
                                                  "end_byte": 535,
                                                  "text": "ar",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 536,
                                                  "end_byte": 541,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 536,
                                                      "end_byte": 537,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 538,
                                                      "end_byte": 539,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 540,
                                                      "end_byte": 541,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 542,
                                          "end_byte": 543,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 544,
                                      "end_byte": 569,
                                      "text": "ar [ k ] = ar [ k + 1 ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 544,
                                          "end_byte": 567,
                                          "text": "ar [ k ] = ar [ k + 1 ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 544,
                                              "end_byte": 552,
                                              "text": "ar [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 544,
                                                  "end_byte": 546,
                                                  "text": "ar",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 547,
                                                  "end_byte": 552,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 547,
                                                      "end_byte": 548,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 549,
                                                      "end_byte": 550,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 551,
                                                      "end_byte": 552,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 553,
                                              "end_byte": 554,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 555,
                                              "end_byte": 567,
                                              "text": "ar [ k + 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 555,
                                                  "end_byte": 557,
                                                  "text": "ar",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 558,
                                                  "end_byte": 567,
                                                  "text": "[ k + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 558,
                                                      "end_byte": 559,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 560,
                                                      "end_byte": 565,
                                                      "text": "k + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 560,
                                                          "end_byte": 561,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 562,
                                                          "end_byte": 563,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 564,
                                                          "end_byte": 565,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 566,
                                                      "end_byte": 567,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 568,
                                          "end_byte": 569,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 570,
                                      "end_byte": 571,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 572,
                              "end_byte": 578,
                              "text": "n -- ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 572,
                                  "end_byte": 576,
                                  "text": "n --",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 572,
                                      "end_byte": 573,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": "--",
                                      "start_byte": 574,
                                      "end_byte": 576,
                                      "text": "--",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 577,
                                  "end_byte": 578,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 579,
                              "end_byte": 580,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 581,
                      "end_byte": 582,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 583,
              "end_byte": 606,
              "text": "printf ( \"%d\" , min ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 583,
                  "end_byte": 604,
                  "text": "printf ( \"%d\" , min )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 583,
                      "end_byte": 589,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 590,
                      "end_byte": 604,
                      "text": "( \"%d\" , min )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 590,
                          "end_byte": 591,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 592,
                          "end_byte": 596,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 592,
                              "end_byte": 593,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 593,
                              "end_byte": 595,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 595,
                              "end_byte": 596,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 597,
                          "end_byte": 598,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 599,
                          "end_byte": 602,
                          "text": "min",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 603,
                          "end_byte": 604,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 605,
                  "end_byte": 606,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 607,
              "end_byte": 617,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 607,
                  "end_byte": 613,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 614,
                  "end_byte": 615,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 616,
                  "end_byte": 617,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 618,
              "end_byte": 619,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}