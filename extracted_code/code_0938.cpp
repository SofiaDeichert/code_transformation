int * * a ; int max ( int a , int b ) { if ( a > b ) return ( a ) ; return ( b ) ; } int check ( int i , int j , int size ) { int sum ; if ( i == ( size - 1 ) ) { return ( a [ i ] [ j ] ) ; } else { sum = max ( ( a [ i ] [ j ] + check ( i + 1 , j , size ) ) , ( a [ i ] [ j ] + check ( i + 1 , j + 1 , size ) ) ) ; } return ( sum ) ; } int main ( ) { int testcases , size , i , j , sum ; scanf ( "%d" , & testcases ) ; while ( testcases != 0 ) { scanf ( "%d" , & size ) ; a = ( int * * ) malloc ( size * ( sizeof ( int * ) ) ) ; for ( i = 0 ; i < size ; i ++ ) { a [ i ] = ( int * ) malloc ( ( i + 1 ) * ( sizeof ( int * ) ) ) ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } sum = check ( 0 , 0 , size ) ; printf ( "%d\n" , sum ) ; free ( a ) ; testcases -- ; } return ( 0 ) ; }