int max ( int a , int b ) { return ( a > b ) ? a : b ; } int sums ( int * * p , int n ) { int i , j ; for ( i = n - 1 ; i >= 0 ; i -- ) for ( j = i ; j >= 0 ; j -- ) p [ i ] [ j ] = max ( p [ i + 1 ] [ j ] + p [ i ] [ j ] , p [ i + 1 ] [ j + 1 ] + p [ i ] [ j ] ) ; return p [ 0 ] [ 0 ] ; } int main ( ) { int i , n , t , j , count ; scanf ( "%d" , & t ) ; int * * p ; while ( t -- ) { scanf ( "%d" , & n ) ; p = ( int * * ) calloc ( n , sizeof ( int * ) ) ; for ( i = 0 ; i <= n ; i ++ ) p [ i ] = calloc ( i + 2 , sizeof ( int ) ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & p [ i ] [ j ] ) ; printf ( "%d\n" , sums ( p , n ) ) ; } }