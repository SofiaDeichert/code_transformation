{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 255,
  "text": "int main ( ) { int t , a , b , n1 , n2 ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d %d\" , & a , & b ) ; n1 = a ; n2 = b ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; } printf ( \"%d %d\\n\" , n1 , ( a * b ) / n1 ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 255,
      "text": "int main ( ) { int t , a , b , n1 , n2 ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d %d\" , & a , & b ) ; n1 = a ; n2 = b ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; } printf ( \"%d %d\\n\" , n1 , ( a * b ) / n1 ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 255,
          "text": "{ int t , a , b , n1 , n2 ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d %d\" , & a , & b ) ; n1 = a ; n2 = b ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; } printf ( \"%d %d\\n\" , n1 , ( a * b ) / n1 ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 40,
              "text": "int t , a , b , n1 , n2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 33,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 38,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 41,
              "end_byte": 63,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 41,
                  "end_byte": 61,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 41,
                      "end_byte": 46,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 47,
                      "end_byte": 61,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 47,
                          "end_byte": 48,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 49,
                          "end_byte": 53,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 49,
                              "end_byte": 50,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 50,
                              "end_byte": 52,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 52,
                              "end_byte": 53,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 54,
                          "end_byte": 55,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 56,
                          "end_byte": 59,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 56,
                              "end_byte": 57,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 58,
                              "end_byte": 59,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 60,
                          "end_byte": 61,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 64,
              "end_byte": 242,
              "text": "while ( t -- ) { scanf ( \"%d %d\" , & a , & b ) ; n1 = a ; n2 = b ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; } printf ( \"%d %d\\n\" , n1 , ( a * b ) / n1 ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 64,
                  "end_byte": 69,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 70,
                  "end_byte": 78,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 70,
                      "end_byte": 71,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 72,
                      "end_byte": 76,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 74,
                          "end_byte": 76,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 79,
                  "end_byte": 242,
                  "text": "{ scanf ( \"%d %d\" , & a , & b ) ; n1 = a ; n2 = b ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; } printf ( \"%d %d\\n\" , n1 , ( a * b ) / n1 ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 81,
                      "end_byte": 112,
                      "text": "scanf ( \"%d %d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 81,
                          "end_byte": 110,
                          "text": "scanf ( \"%d %d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 81,
                              "end_byte": 86,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 87,
                              "end_byte": 110,
                              "text": "( \"%d %d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 87,
                                  "end_byte": 88,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 89,
                                  "end_byte": 96,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 89,
                                      "end_byte": 90,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 90,
                                      "end_byte": 95,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 95,
                                      "end_byte": 96,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 97,
                                  "end_byte": 98,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 99,
                                  "end_byte": 102,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 99,
                                      "end_byte": 100,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 101,
                                      "end_byte": 102,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 103,
                                  "end_byte": 104,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 105,
                                  "end_byte": 108,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 105,
                                      "end_byte": 106,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 107,
                                      "end_byte": 108,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 109,
                                  "end_byte": 110,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 113,
                      "end_byte": 121,
                      "text": "n1 = a ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 113,
                          "end_byte": 119,
                          "text": "n1 = a",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 113,
                              "end_byte": 115,
                              "text": "n1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 120,
                          "end_byte": 121,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 122,
                      "end_byte": 130,
                      "text": "n2 = b ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 122,
                          "end_byte": 128,
                          "text": "n2 = b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 122,
                              "end_byte": 124,
                              "text": "n2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 131,
                      "end_byte": 195,
                      "text": "while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 131,
                          "end_byte": 136,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 137,
                          "end_byte": 149,
                          "text": "( n1 != n2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 137,
                              "end_byte": 138,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 139,
                              "end_byte": 147,
                              "text": "n1 != n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 139,
                                  "end_byte": 141,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 142,
                                  "end_byte": 144,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 145,
                                  "end_byte": 147,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 148,
                              "end_byte": 149,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 150,
                          "end_byte": 195,
                          "text": "{ if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 150,
                              "end_byte": 151,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 152,
                              "end_byte": 193,
                              "text": "if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 152,
                                  "end_byte": 154,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 155,
                                  "end_byte": 166,
                                  "text": "( n1 > n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 155,
                                      "end_byte": 156,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 157,
                                      "end_byte": 164,
                                      "text": "n1 > n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 157,
                                          "end_byte": 159,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 160,
                                          "end_byte": 161,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 162,
                                          "end_byte": 164,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 167,
                                  "end_byte": 177,
                                  "text": "n1 -= n2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 167,
                                      "end_byte": 175,
                                      "text": "n1 -= n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 167,
                                          "end_byte": 169,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": "-=",
                                          "start_byte": 170,
                                          "end_byte": 172,
                                          "text": "-=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 173,
                                          "end_byte": 175,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 178,
                                  "end_byte": 193,
                                  "text": "else n2 -= n1 ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 178,
                                      "end_byte": 182,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 183,
                                      "end_byte": 193,
                                      "text": "n2 -= n1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 183,
                                          "end_byte": 191,
                                          "text": "n2 -= n1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 183,
                                              "end_byte": 185,
                                              "text": "n2",
                                              "children": []
                                            },
                                            {
                                              "type": "-=",
                                              "start_byte": 186,
                                              "end_byte": 188,
                                              "text": "-=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 189,
                                              "end_byte": 191,
                                              "text": "n1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 192,
                                          "end_byte": 193,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 194,
                              "end_byte": 195,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 196,
                      "end_byte": 240,
                      "text": "printf ( \"%d %d\\n\" , n1 , ( a * b ) / n1 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 196,
                          "end_byte": 238,
                          "text": "printf ( \"%d %d\\n\" , n1 , ( a * b ) / n1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 196,
                              "end_byte": 202,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 203,
                              "end_byte": 238,
                              "text": "( \"%d %d\\n\" , n1 , ( a * b ) / n1 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 203,
                                  "end_byte": 204,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 205,
                                  "end_byte": 214,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 205,
                                      "end_byte": 206,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 206,
                                      "end_byte": 211,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 211,
                                      "end_byte": 213,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 213,
                                      "end_byte": 214,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 215,
                                  "end_byte": 216,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 217,
                                  "end_byte": 219,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 220,
                                  "end_byte": 221,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 222,
                                  "end_byte": 236,
                                  "text": "( a * b ) / n1",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 222,
                                      "end_byte": 231,
                                      "text": "( a * b )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 222,
                                          "end_byte": 223,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 224,
                                          "end_byte": 229,
                                          "text": "a * b",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 224,
                                              "end_byte": 225,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 226,
                                              "end_byte": 227,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 228,
                                              "end_byte": 229,
                                              "text": "b",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 230,
                                          "end_byte": 231,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 232,
                                      "end_byte": 233,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 234,
                                      "end_byte": 236,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 237,
                                  "end_byte": 238,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 239,
                          "end_byte": 240,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 241,
                      "end_byte": 242,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 243,
              "end_byte": 253,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 243,
                  "end_byte": 249,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 250,
                  "end_byte": 251,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 252,
                  "end_byte": 253,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 254,
              "end_byte": 255,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}