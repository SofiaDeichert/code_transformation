int maxatnode ( int * * a , int i , int j , int n ) { if ( i == n ) return 0 ; int sum ; int ml = maxatnode ( a , i + 1 , j , n ) ; int mr = maxatnode ( a , i + 1 , j + 1 , n ) ; sum = * ( * ( a + i ) + j ) + ( ml < mr ? mr : ml ) ; return sum ; } int main ( ) { int N , k ; scanf ( "%d" , & N ) ; for ( k = 0 ; k < N ; k ++ ) { int n , i , j ; scanf ( "%d" , & n ) ; int * * a ; a = ( int * * ) malloc ( n * sizeof ( int * ) ) ; for ( i = 0 ; i < n ; i ++ ) { * ( a + i ) = ( int * ) malloc ( ( i + 1 ) * sizeof ( int ) ) ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , * ( a + i ) + j ) ; } } for ( i = n - 2 ; i >= 0 ; i -- ) for ( j = i ; j >= 0 ; j -- ) a [ i ] [ j ] += ( a [ i + 1 ] [ j ] > a [ i + 1 ] [ j + 1 ] ? a [ i + 1 ] [ j ] : a [ i + 1 ] [ j + 1 ] ) ; printf ( "%d\n" , * * a ) ; for ( i = 0 ; i < n ; i ++ ) { free ( * ( a + i ) ) ; } free ( a ) ; } return 0 ; }