void main ( ) { int array [ LENGTH ] [ LENGTH ] , i , j , k , l , m , n , temp [ LENGTH ] [ 2 * ( LENGTH - 1 ) ] , highest [ LENGTH ] , test_cases , test_case_no [ LENGTH ] ; for ( i = 0 ; i < LENGTH ; i ++ ) { for ( j = 0 ; j < 2 * ( LENGTH - 1 ) ; j ++ ) { temp [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < LENGTH ; i ++ ) { highest [ i ] = 0 ; } scanf ( "%d\n" , & test_cases ) ; for ( i = 0 ; i < test_cases ; i ++ ) { scanf ( "%d\n" , & test_case_no [ i ] ) ; for ( j = 0 ; j <= test_case_no [ i ] ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%d" , & array [ j ] [ k ] ) ; } printf ( "\n" ) ; } temp [ 0 ] [ 0 ] = array [ 0 ] [ 0 ] ; for ( l = 1 ; l <= test_case_no [ i ] ; l ++ ) { for ( m = 0 ; m < l ; ) { for ( k = 0 ; k < 2 * l ; ) { temp [ l ] [ k ] = temp [ l - 1 ] [ m ] + array [ l ] [ m ] ; k ++ ; temp [ l ] [ k ] = temp [ l - 1 ] [ m ] + array [ l ] [ m + 1 ] ; k ++ ; m ++ ; } } } for ( n = 0 ; n < ( test_case_no [ i ] - 1 ) * 2 ; n ++ ) { if ( temp [ test_case_no [ i ] ] [ n ] > temp [ test_case_no [ i ] ] [ n + 1 ] ) { highest [ i ] = temp [ test_case_no [ i ] ] [ n ] ; } else { highest [ i ] = temp [ test_case_no [ i ] ] [ n + 1 ] ; } } } for ( i = 0 ; i < LENGTH ; i ++ ) { for ( j = 0 ; j < 2 * ( LENGTH - 1 ) ; j ++ ) { temp [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < test_cases ; i ++ ) { printf ( "%d\n" , highest [ i ] ) ; } }