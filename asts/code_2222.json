{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1217,
  "text": "struct node { int triangle [ 100 ] [ 100 ] ; int max ; } ; typedef struct node * NODE ; NODE getnode ( void ) { NODE x ; x = malloc ( sizeof ( struct node ) ) ; x -> max = 0 ; return ( x ) ; } int main ( void ) { int count ; int testcases ; int sum = 0 ; NODE cur , temp ; int rows ; int i , j , k ; int num = 0 ; scanf ( \"%d\" , & testcases ) ; for ( k = 0 ; k < testcases ; k ++ ) { cur = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 0 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ; if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ; } for ( count = 0 ; count < rows ; count ++ ) { i = rows - 1 ; j = count ; sum = 0 ; while ( i >= 0 ) { if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } } if ( sum > cur -> max ) cur -> max = sum ; } printf ( \"%d\\n\" , cur -> max ) ; free ( cur ) ; cur = NULL ; } return 0 ; }",
  "children": [
    {
      "type": "struct_specifier",
      "start_byte": 0,
      "end_byte": 56,
      "text": "struct node { int triangle [ 100 ] [ 100 ] ; int max ; }",
      "children": [
        {
          "type": "struct",
          "start_byte": 0,
          "end_byte": 6,
          "text": "struct",
          "children": []
        },
        {
          "type": "type_identifier",
          "start_byte": 7,
          "end_byte": 11,
          "text": "node",
          "children": []
        },
        {
          "type": "field_declaration_list",
          "start_byte": 12,
          "end_byte": 56,
          "text": "{ int triangle [ 100 ] [ 100 ] ; int max ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 12,
              "end_byte": 13,
              "text": "{",
              "children": []
            },
            {
              "type": "field_declaration",
              "start_byte": 14,
              "end_byte": 44,
              "text": "int triangle [ 100 ] [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 14,
                  "end_byte": 17,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 18,
                  "end_byte": 42,
                  "text": "triangle [ 100 ] [ 100 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 18,
                      "end_byte": 34,
                      "text": "triangle [ 100 ]",
                      "children": [
                        {
                          "type": "field_identifier",
                          "start_byte": 18,
                          "end_byte": 26,
                          "text": "triangle",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 27,
                          "end_byte": 28,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 29,
                          "end_byte": 32,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 35,
                      "end_byte": 36,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 37,
                      "end_byte": 40,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 41,
                      "end_byte": 42,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "field_declaration",
              "start_byte": 45,
              "end_byte": 54,
              "text": "int max ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 45,
                  "end_byte": 48,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "field_identifier",
                  "start_byte": 49,
                  "end_byte": 52,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 55,
              "end_byte": 56,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": ";",
      "start_byte": 57,
      "end_byte": 58,
      "text": ";",
      "children": []
    },
    {
      "type": "type_definition",
      "start_byte": 59,
      "end_byte": 87,
      "text": "typedef struct node * NODE ;",
      "children": [
        {
          "type": "typedef",
          "start_byte": 59,
          "end_byte": 66,
          "text": "typedef",
          "children": []
        },
        {
          "type": "struct_specifier",
          "start_byte": 67,
          "end_byte": 78,
          "text": "struct node",
          "children": [
            {
              "type": "struct",
              "start_byte": 67,
              "end_byte": 73,
              "text": "struct",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 74,
              "end_byte": 78,
              "text": "node",
              "children": []
            }
          ]
        },
        {
          "type": "pointer_declarator",
          "start_byte": 79,
          "end_byte": 85,
          "text": "* NODE",
          "children": [
            {
              "type": "*",
              "start_byte": 79,
              "end_byte": 80,
              "text": "*",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 81,
              "end_byte": 85,
              "text": "NODE",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 86,
          "end_byte": 87,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 88,
      "end_byte": 192,
      "text": "NODE getnode ( void ) { NODE x ; x = malloc ( sizeof ( struct node ) ) ; x -> max = 0 ; return ( x ) ; }",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 88,
          "end_byte": 92,
          "text": "NODE",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 93,
          "end_byte": 109,
          "text": "getnode ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 93,
              "end_byte": 100,
              "text": "getnode",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 101,
              "end_byte": 109,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 101,
                  "end_byte": 102,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 103,
                  "end_byte": 107,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 103,
                      "end_byte": 107,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 110,
          "end_byte": 192,
          "text": "{ NODE x ; x = malloc ( sizeof ( struct node ) ) ; x -> max = 0 ; return ( x ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 110,
              "end_byte": 111,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 112,
              "end_byte": 120,
              "text": "NODE x ;",
              "children": [
                {
                  "type": "type_identifier",
                  "start_byte": 112,
                  "end_byte": 116,
                  "text": "NODE",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 121,
              "end_byte": 160,
              "text": "x = malloc ( sizeof ( struct node ) ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 121,
                  "end_byte": 158,
                  "text": "x = malloc ( sizeof ( struct node ) )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "x",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 125,
                      "end_byte": 158,
                      "text": "malloc ( sizeof ( struct node ) )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 125,
                          "end_byte": 131,
                          "text": "malloc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 132,
                          "end_byte": 158,
                          "text": "( sizeof ( struct node ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 132,
                              "end_byte": 133,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "sizeof_expression",
                              "start_byte": 134,
                              "end_byte": 156,
                              "text": "sizeof ( struct node )",
                              "children": [
                                {
                                  "type": "sizeof",
                                  "start_byte": 134,
                                  "end_byte": 140,
                                  "text": "sizeof",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 141,
                                  "end_byte": 142,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "type_descriptor",
                                  "start_byte": 143,
                                  "end_byte": 154,
                                  "text": "struct node",
                                  "children": [
                                    {
                                      "type": "struct_specifier",
                                      "start_byte": 143,
                                      "end_byte": 154,
                                      "text": "struct node",
                                      "children": [
                                        {
                                          "type": "struct",
                                          "start_byte": 143,
                                          "end_byte": 149,
                                          "text": "struct",
                                          "children": []
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start_byte": 150,
                                          "end_byte": 154,
                                          "text": "node",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 155,
                                  "end_byte": 156,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 159,
                  "end_byte": 160,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 161,
              "end_byte": 175,
              "text": "x -> max = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 161,
                  "end_byte": 173,
                  "text": "x -> max = 0",
                  "children": [
                    {
                      "type": "field_expression",
                      "start_byte": 161,
                      "end_byte": 169,
                      "text": "x -> max",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": "->",
                          "start_byte": 163,
                          "end_byte": 165,
                          "text": "->",
                          "children": []
                        },
                        {
                          "type": "field_identifier",
                          "start_byte": 166,
                          "end_byte": 169,
                          "text": "max",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 170,
                      "end_byte": 171,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 172,
                      "end_byte": 173,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 174,
                  "end_byte": 175,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 176,
              "end_byte": 190,
              "text": "return ( x ) ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 176,
                  "end_byte": 182,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "parenthesized_expression",
                  "start_byte": 183,
                  "end_byte": 188,
                  "text": "( x )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 183,
                      "end_byte": 184,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 185,
                      "end_byte": 186,
                      "text": "x",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 187,
                      "end_byte": 188,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 189,
                  "end_byte": 190,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 191,
              "end_byte": 192,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 193,
      "end_byte": 1217,
      "text": "int main ( void ) { int count ; int testcases ; int sum = 0 ; NODE cur , temp ; int rows ; int i , j , k ; int num = 0 ; scanf ( \"%d\" , & testcases ) ; for ( k = 0 ; k < testcases ; k ++ ) { cur = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 0 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ; if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ; } for ( count = 0 ; count < rows ; count ++ ) { i = rows - 1 ; j = count ; sum = 0 ; while ( i >= 0 ) { if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } } if ( sum > cur -> max ) cur -> max = sum ; } printf ( \"%d\\n\" , cur -> max ) ; free ( cur ) ; cur = NULL ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 193,
          "end_byte": 196,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 197,
          "end_byte": 210,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 197,
              "end_byte": 201,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 202,
              "end_byte": 210,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 202,
                  "end_byte": 203,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 204,
                  "end_byte": 208,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 204,
                      "end_byte": 208,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 209,
                  "end_byte": 210,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 211,
          "end_byte": 1217,
          "text": "{ int count ; int testcases ; int sum = 0 ; NODE cur , temp ; int rows ; int i , j , k ; int num = 0 ; scanf ( \"%d\" , & testcases ) ; for ( k = 0 ; k < testcases ; k ++ ) { cur = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 0 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ; if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ; } for ( count = 0 ; count < rows ; count ++ ) { i = rows - 1 ; j = count ; sum = 0 ; while ( i >= 0 ) { if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } } if ( sum > cur -> max ) cur -> max = sum ; } printf ( \"%d\\n\" , cur -> max ) ; free ( cur ) ; cur = NULL ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 211,
              "end_byte": 212,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 213,
              "end_byte": 224,
              "text": "int count ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 213,
                  "end_byte": 216,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 217,
                  "end_byte": 222,
                  "text": "count",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 223,
                  "end_byte": 224,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 225,
              "end_byte": 240,
              "text": "int testcases ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 225,
                  "end_byte": 228,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 229,
                  "end_byte": 238,
                  "text": "testcases",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 239,
                  "end_byte": 240,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 241,
              "end_byte": 254,
              "text": "int sum = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 241,
                  "end_byte": 244,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 245,
                  "end_byte": 252,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 245,
                      "end_byte": 248,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 249,
                      "end_byte": 250,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 251,
                      "end_byte": 252,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 253,
                  "end_byte": 254,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 255,
              "end_byte": 272,
              "text": "NODE cur , temp ;",
              "children": [
                {
                  "type": "type_identifier",
                  "start_byte": 255,
                  "end_byte": 259,
                  "text": "NODE",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 260,
                  "end_byte": 263,
                  "text": "cur",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 264,
                  "end_byte": 265,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 266,
                  "end_byte": 270,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 273,
              "end_byte": 283,
              "text": "int rows ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 273,
                  "end_byte": 276,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 277,
                  "end_byte": 281,
                  "text": "rows",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 282,
                  "end_byte": 283,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 284,
              "end_byte": 299,
              "text": "int i , j , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 284,
                  "end_byte": 287,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 288,
                  "end_byte": 289,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 290,
                  "end_byte": 291,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 292,
                  "end_byte": 293,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 294,
                  "end_byte": 295,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 296,
                  "end_byte": 297,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 298,
                  "end_byte": 299,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 300,
              "end_byte": 313,
              "text": "int num = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 300,
                  "end_byte": 303,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 304,
                  "end_byte": 311,
                  "text": "num = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 304,
                      "end_byte": 307,
                      "text": "num",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 308,
                      "end_byte": 309,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 310,
                      "end_byte": 311,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 312,
                  "end_byte": 313,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 314,
              "end_byte": 344,
              "text": "scanf ( \"%d\" , & testcases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 314,
                  "end_byte": 342,
                  "text": "scanf ( \"%d\" , & testcases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 314,
                      "end_byte": 319,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 320,
                      "end_byte": 342,
                      "text": "( \"%d\" , & testcases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 322,
                          "end_byte": 326,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 322,
                              "end_byte": 323,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 323,
                              "end_byte": 325,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 325,
                              "end_byte": 326,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 327,
                          "end_byte": 328,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 329,
                          "end_byte": 340,
                          "text": "& testcases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 329,
                              "end_byte": 330,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 331,
                              "end_byte": 340,
                              "text": "testcases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 341,
                          "end_byte": 342,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 343,
                  "end_byte": 344,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 345,
              "end_byte": 1204,
              "text": "for ( k = 0 ; k < testcases ; k ++ ) { cur = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 0 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ; if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ; } for ( count = 0 ; count < rows ; count ++ ) { i = rows - 1 ; j = count ; sum = 0 ; while ( i >= 0 ) { if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } } if ( sum > cur -> max ) cur -> max = sum ; } printf ( \"%d\\n\" , cur -> max ) ; free ( cur ) ; cur = NULL ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 345,
                  "end_byte": 348,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 349,
                  "end_byte": 350,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 351,
                  "end_byte": 356,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 351,
                      "end_byte": 352,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 353,
                      "end_byte": 354,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 357,
                  "end_byte": 358,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 359,
                  "end_byte": 372,
                  "text": "k < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 359,
                      "end_byte": 360,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 361,
                      "end_byte": 362,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 363,
                      "end_byte": 372,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 373,
                  "end_byte": 374,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 375,
                  "end_byte": 379,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 375,
                      "end_byte": 376,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 377,
                      "end_byte": 379,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 380,
                  "end_byte": 381,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 382,
                  "end_byte": 1204,
                  "text": "{ cur = getnode ( ) ; scanf ( \"%d\" , & rows ) ; if ( rows <= 0 || rows > 100 ) exit ( 0 ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ; if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ; } for ( count = 0 ; count < rows ; count ++ ) { i = rows - 1 ; j = count ; sum = 0 ; while ( i >= 0 ) { if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } } if ( sum > cur -> max ) cur -> max = sum ; } printf ( \"%d\\n\" , cur -> max ) ; free ( cur ) ; cur = NULL ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 382,
                      "end_byte": 383,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 384,
                      "end_byte": 403,
                      "text": "cur = getnode ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 384,
                          "end_byte": 401,
                          "text": "cur = getnode ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 384,
                              "end_byte": 387,
                              "text": "cur",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 388,
                              "end_byte": 389,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 390,
                              "end_byte": 401,
                              "text": "getnode ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 390,
                                  "end_byte": 397,
                                  "text": "getnode",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 398,
                                  "end_byte": 401,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 398,
                                      "end_byte": 399,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 400,
                                      "end_byte": 401,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 402,
                          "end_byte": 403,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 404,
                      "end_byte": 429,
                      "text": "scanf ( \"%d\" , & rows ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 404,
                          "end_byte": 427,
                          "text": "scanf ( \"%d\" , & rows )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 404,
                              "end_byte": 409,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 410,
                              "end_byte": 427,
                              "text": "( \"%d\" , & rows )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 410,
                                  "end_byte": 411,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 412,
                                  "end_byte": 416,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 412,
                                      "end_byte": 413,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 413,
                                      "end_byte": 415,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 415,
                                      "end_byte": 416,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 417,
                                  "end_byte": 418,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 419,
                                  "end_byte": 425,
                                  "text": "& rows",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 419,
                                      "end_byte": 420,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 421,
                                      "end_byte": 425,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 426,
                                  "end_byte": 427,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 428,
                          "end_byte": 429,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 430,
                      "end_byte": 473,
                      "text": "if ( rows <= 0 || rows > 100 ) exit ( 0 ) ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 430,
                          "end_byte": 432,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 433,
                          "end_byte": 460,
                          "text": "( rows <= 0 || rows > 100 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 433,
                              "end_byte": 434,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 435,
                              "end_byte": 458,
                              "text": "rows <= 0 || rows > 100",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 435,
                                  "end_byte": 444,
                                  "text": "rows <= 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 435,
                                      "end_byte": 439,
                                      "text": "rows",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 440,
                                      "end_byte": 442,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 443,
                                      "end_byte": 444,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "||",
                                  "start_byte": 445,
                                  "end_byte": 447,
                                  "text": "||",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 448,
                                  "end_byte": 458,
                                  "text": "rows > 100",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 448,
                                      "end_byte": 452,
                                      "text": "rows",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 453,
                                      "end_byte": 454,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 455,
                                      "end_byte": 458,
                                      "text": "100",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 459,
                              "end_byte": 460,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 461,
                          "end_byte": 473,
                          "text": "exit ( 0 ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 461,
                              "end_byte": 471,
                              "text": "exit ( 0 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 461,
                                  "end_byte": 465,
                                  "text": "exit",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 466,
                                  "end_byte": 471,
                                  "text": "( 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 466,
                                      "end_byte": 467,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 468,
                                      "end_byte": 469,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 470,
                                      "end_byte": 471,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 472,
                              "end_byte": 473,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 474,
                      "end_byte": 688,
                      "text": "for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ; if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 474,
                          "end_byte": 477,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 478,
                          "end_byte": 479,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 480,
                          "end_byte": 485,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 480,
                              "end_byte": 481,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 482,
                              "end_byte": 483,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 484,
                              "end_byte": 485,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 486,
                          "end_byte": 487,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 488,
                          "end_byte": 497,
                          "text": "i <= rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 488,
                              "end_byte": 489,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 490,
                              "end_byte": 492,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 493,
                              "end_byte": 497,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 498,
                          "end_byte": 499,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 500,
                          "end_byte": 504,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 500,
                              "end_byte": 501,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 502,
                              "end_byte": 504,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 505,
                          "end_byte": 506,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 507,
                          "end_byte": 688,
                          "text": "for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ; if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ; }",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 507,
                              "end_byte": 510,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 511,
                              "end_byte": 512,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 513,
                              "end_byte": 518,
                              "text": "j = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 513,
                                  "end_byte": 514,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 515,
                                  "end_byte": 516,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 517,
                                  "end_byte": 518,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 519,
                              "end_byte": 520,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 521,
                              "end_byte": 526,
                              "text": "j < i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 521,
                                  "end_byte": 522,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 523,
                                  "end_byte": 524,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 525,
                                  "end_byte": 526,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 527,
                              "end_byte": 528,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 529,
                              "end_byte": 533,
                              "text": "j ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 529,
                                  "end_byte": 530,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 531,
                                  "end_byte": 533,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 534,
                              "end_byte": 535,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 536,
                              "end_byte": 688,
                              "text": "{ scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ; if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 536,
                                  "end_byte": 537,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 538,
                                  "end_byte": 590,
                                  "text": "scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 538,
                                      "end_byte": 588,
                                      "text": "scanf ( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 538,
                                          "end_byte": 543,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 544,
                                          "end_byte": 588,
                                          "text": "( \"%d\" , & cur -> triangle [ i - 1 ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 544,
                                              "end_byte": 545,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 546,
                                              "end_byte": 550,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 546,
                                                  "end_byte": 547,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 547,
                                                  "end_byte": 549,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 549,
                                                  "end_byte": 550,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 551,
                                              "end_byte": 552,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 553,
                                              "end_byte": 586,
                                              "text": "& cur -> triangle [ i - 1 ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 553,
                                                  "end_byte": 554,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 555,
                                                  "end_byte": 586,
                                                  "text": "cur -> triangle [ i - 1 ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 555,
                                                      "end_byte": 580,
                                                      "text": "cur -> triangle [ i - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "field_expression",
                                                          "start_byte": 555,
                                                          "end_byte": 570,
                                                          "text": "cur -> triangle",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 555,
                                                              "end_byte": 558,
                                                              "text": "cur",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "->",
                                                              "start_byte": 559,
                                                              "end_byte": 561,
                                                              "text": "->",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "field_identifier",
                                                              "start_byte": 562,
                                                              "end_byte": 570,
                                                              "text": "triangle",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 571,
                                                          "end_byte": 580,
                                                          "text": "[ i - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 571,
                                                              "end_byte": 572,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 573,
                                                              "end_byte": 578,
                                                              "text": "i - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 573,
                                                                  "end_byte": 574,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 575,
                                                                  "end_byte": 576,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 577,
                                                                  "end_byte": 578,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 579,
                                                              "end_byte": 580,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 581,
                                                      "end_byte": 586,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 581,
                                                          "end_byte": 582,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 583,
                                                          "end_byte": 584,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 585,
                                                          "end_byte": 586,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 587,
                                              "end_byte": 588,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 589,
                                      "end_byte": 590,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "if_statement",
                                  "start_byte": 591,
                                  "end_byte": 686,
                                  "text": "if ( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 ) exit ( 0 ) ;",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start_byte": 591,
                                      "end_byte": 593,
                                      "text": "if",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 594,
                                      "end_byte": 673,
                                      "text": "( cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 594,
                                          "end_byte": 595,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 596,
                                          "end_byte": 671,
                                          "text": "cur -> triangle [ i - 1 ] [ j ] < 0 || cur -> triangle [ i - 1 ] [ j ] > 99",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 596,
                                              "end_byte": 631,
                                              "text": "cur -> triangle [ i - 1 ] [ j ] < 0",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 596,
                                                  "end_byte": 627,
                                                  "text": "cur -> triangle [ i - 1 ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 596,
                                                      "end_byte": 621,
                                                      "text": "cur -> triangle [ i - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "field_expression",
                                                          "start_byte": 596,
                                                          "end_byte": 611,
                                                          "text": "cur -> triangle",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 596,
                                                              "end_byte": 599,
                                                              "text": "cur",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "->",
                                                              "start_byte": 600,
                                                              "end_byte": 602,
                                                              "text": "->",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "field_identifier",
                                                              "start_byte": 603,
                                                              "end_byte": 611,
                                                              "text": "triangle",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 612,
                                                          "end_byte": 621,
                                                          "text": "[ i - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 612,
                                                              "end_byte": 613,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 614,
                                                              "end_byte": 619,
                                                              "text": "i - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 614,
                                                                  "end_byte": 615,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 616,
                                                                  "end_byte": 617,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 618,
                                                                  "end_byte": 619,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 620,
                                                              "end_byte": 621,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 622,
                                                      "end_byte": 627,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 622,
                                                          "end_byte": 623,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 624,
                                                          "end_byte": 625,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 626,
                                                          "end_byte": 627,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "<",
                                                  "start_byte": 628,
                                                  "end_byte": 629,
                                                  "text": "<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 630,
                                                  "end_byte": 631,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "||",
                                              "start_byte": 632,
                                              "end_byte": 634,
                                              "text": "||",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 635,
                                              "end_byte": 671,
                                              "text": "cur -> triangle [ i - 1 ] [ j ] > 99",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 635,
                                                  "end_byte": 666,
                                                  "text": "cur -> triangle [ i - 1 ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 635,
                                                      "end_byte": 660,
                                                      "text": "cur -> triangle [ i - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "field_expression",
                                                          "start_byte": 635,
                                                          "end_byte": 650,
                                                          "text": "cur -> triangle",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 635,
                                                              "end_byte": 638,
                                                              "text": "cur",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "->",
                                                              "start_byte": 639,
                                                              "end_byte": 641,
                                                              "text": "->",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "field_identifier",
                                                              "start_byte": 642,
                                                              "end_byte": 650,
                                                              "text": "triangle",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 651,
                                                          "end_byte": 660,
                                                          "text": "[ i - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 651,
                                                              "end_byte": 652,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 653,
                                                              "end_byte": 658,
                                                              "text": "i - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 653,
                                                                  "end_byte": 654,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 655,
                                                                  "end_byte": 656,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 657,
                                                                  "end_byte": 658,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 659,
                                                              "end_byte": 660,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 661,
                                                      "end_byte": 666,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 661,
                                                          "end_byte": 662,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 663,
                                                          "end_byte": 664,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 665,
                                                          "end_byte": 666,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 667,
                                                  "end_byte": 668,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 669,
                                                  "end_byte": 671,
                                                  "text": "99",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 672,
                                          "end_byte": 673,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 674,
                                      "end_byte": 686,
                                      "text": "exit ( 0 ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 674,
                                          "end_byte": 684,
                                          "text": "exit ( 0 )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 674,
                                              "end_byte": 678,
                                              "text": "exit",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 679,
                                              "end_byte": 684,
                                              "text": "( 0 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 679,
                                                  "end_byte": 680,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 681,
                                                  "end_byte": 682,
                                                  "text": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 683,
                                                  "end_byte": 684,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 685,
                                          "end_byte": 686,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 687,
                                  "end_byte": 688,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 689,
                      "end_byte": 1141,
                      "text": "for ( count = 0 ; count < rows ; count ++ ) { i = rows - 1 ; j = count ; sum = 0 ; while ( i >= 0 ) { if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } } if ( sum > cur -> max ) cur -> max = sum ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 689,
                          "end_byte": 692,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 693,
                          "end_byte": 694,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 695,
                          "end_byte": 704,
                          "text": "count = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 695,
                              "end_byte": 700,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 701,
                              "end_byte": 702,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 703,
                              "end_byte": 704,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 705,
                          "end_byte": 706,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 707,
                          "end_byte": 719,
                          "text": "count < rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 707,
                              "end_byte": 712,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 713,
                              "end_byte": 714,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 715,
                              "end_byte": 719,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 720,
                          "end_byte": 721,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 722,
                          "end_byte": 730,
                          "text": "count ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 722,
                              "end_byte": 727,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 728,
                              "end_byte": 730,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 731,
                          "end_byte": 732,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 733,
                          "end_byte": 1141,
                          "text": "{ i = rows - 1 ; j = count ; sum = 0 ; while ( i >= 0 ) { if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } } if ( sum > cur -> max ) cur -> max = sum ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 733,
                              "end_byte": 734,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 735,
                              "end_byte": 749,
                              "text": "i = rows - 1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 735,
                                  "end_byte": 747,
                                  "text": "i = rows - 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 735,
                                      "end_byte": 736,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 737,
                                      "end_byte": 738,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 739,
                                      "end_byte": 747,
                                      "text": "rows - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 739,
                                          "end_byte": 743,
                                          "text": "rows",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 744,
                                          "end_byte": 745,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 746,
                                          "end_byte": 747,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 748,
                                  "end_byte": 749,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 750,
                              "end_byte": 761,
                              "text": "j = count ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 750,
                                  "end_byte": 759,
                                  "text": "j = count",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 750,
                                      "end_byte": 751,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 752,
                                      "end_byte": 753,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 754,
                                      "end_byte": 759,
                                      "text": "count",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 760,
                                  "end_byte": 761,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 762,
                              "end_byte": 771,
                              "text": "sum = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 762,
                                  "end_byte": 769,
                                  "text": "sum = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 762,
                                      "end_byte": 765,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 766,
                                      "end_byte": 767,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 768,
                                      "end_byte": 769,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 770,
                                  "end_byte": 771,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "while_statement",
                              "start_byte": 772,
                              "end_byte": 1096,
                              "text": "while ( i >= 0 ) { if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } }",
                              "children": [
                                {
                                  "type": "while",
                                  "start_byte": 772,
                                  "end_byte": 777,
                                  "text": "while",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 778,
                                  "end_byte": 788,
                                  "text": "( i >= 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 778,
                                      "end_byte": 779,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 780,
                                      "end_byte": 786,
                                      "text": "i >= 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 780,
                                          "end_byte": 781,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": ">=",
                                          "start_byte": 782,
                                          "end_byte": 784,
                                          "text": ">=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 785,
                                          "end_byte": 786,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 787,
                                      "end_byte": 788,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 789,
                                  "end_byte": 1096,
                                  "text": "{ if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 789,
                                      "end_byte": 790,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 791,
                                      "end_byte": 1094,
                                      "text": "if ( j == 0 ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ; else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 791,
                                          "end_byte": 793,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 794,
                                          "end_byte": 804,
                                          "text": "( j == 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 794,
                                              "end_byte": 795,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 796,
                                              "end_byte": 802,
                                              "text": "j == 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 796,
                                                  "end_byte": 797,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 798,
                                                  "end_byte": 800,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 801,
                                                  "end_byte": 802,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 803,
                                              "end_byte": 804,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "while_statement",
                                          "start_byte": 805,
                                          "end_byte": 861,
                                          "text": "while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j ] ;",
                                          "children": [
                                            {
                                              "type": "while",
                                              "start_byte": 805,
                                              "end_byte": 810,
                                              "text": "while",
                                              "children": []
                                            },
                                            {
                                              "type": "condition_clause",
                                              "start_byte": 811,
                                              "end_byte": 821,
                                              "text": "( i >= 0 )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 811,
                                                  "end_byte": 812,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 813,
                                                  "end_byte": 819,
                                                  "text": "i >= 0",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 813,
                                                      "end_byte": 814,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": ">=",
                                                      "start_byte": 815,
                                                      "end_byte": 817,
                                                      "text": ">=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 818,
                                                      "end_byte": 819,
                                                      "text": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 820,
                                                  "end_byte": 821,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 822,
                                              "end_byte": 861,
                                              "text": "sum += cur -> triangle [ i -- ] [ j ] ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 822,
                                                  "end_byte": 859,
                                                  "text": "sum += cur -> triangle [ i -- ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 822,
                                                      "end_byte": 825,
                                                      "text": "sum",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+=",
                                                      "start_byte": 826,
                                                      "end_byte": 828,
                                                      "text": "+=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 829,
                                                      "end_byte": 859,
                                                      "text": "cur -> triangle [ i -- ] [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 829,
                                                          "end_byte": 853,
                                                          "text": "cur -> triangle [ i -- ]",
                                                          "children": [
                                                            {
                                                              "type": "field_expression",
                                                              "start_byte": 829,
                                                              "end_byte": 844,
                                                              "text": "cur -> triangle",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 829,
                                                                  "end_byte": 832,
                                                                  "text": "cur",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "->",
                                                                  "start_byte": 833,
                                                                  "end_byte": 835,
                                                                  "text": "->",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "field_identifier",
                                                                  "start_byte": 836,
                                                                  "end_byte": 844,
                                                                  "text": "triangle",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 845,
                                                              "end_byte": 853,
                                                              "text": "[ i -- ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 845,
                                                                  "end_byte": 846,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "update_expression",
                                                                  "start_byte": 847,
                                                                  "end_byte": 851,
                                                                  "text": "i --",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 847,
                                                                      "end_byte": 848,
                                                                      "text": "i",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "--",
                                                                      "start_byte": 849,
                                                                      "end_byte": 851,
                                                                      "text": "--",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 852,
                                                                  "end_byte": 853,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 854,
                                                          "end_byte": 859,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 854,
                                                              "end_byte": 855,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 856,
                                                              "end_byte": 857,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 858,
                                                              "end_byte": 859,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 860,
                                                  "end_byte": 861,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 862,
                                          "end_byte": 1094,
                                          "text": "else if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 862,
                                              "end_byte": 866,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 867,
                                              "end_byte": 1094,
                                              "text": "if ( j == i ) while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ; else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 867,
                                                  "end_byte": 869,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 870,
                                                  "end_byte": 880,
                                                  "text": "( j == i )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 870,
                                                      "end_byte": 871,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 872,
                                                      "end_byte": 878,
                                                      "text": "j == i",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 872,
                                                          "end_byte": 873,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "==",
                                                          "start_byte": 874,
                                                          "end_byte": 876,
                                                          "text": "==",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 877,
                                                          "end_byte": 878,
                                                          "text": "i",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 879,
                                                      "end_byte": 880,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "while_statement",
                                                  "start_byte": 881,
                                                  "end_byte": 940,
                                                  "text": "while ( i >= 0 ) sum += cur -> triangle [ i -- ] [ j -- ] ;",
                                                  "children": [
                                                    {
                                                      "type": "while",
                                                      "start_byte": 881,
                                                      "end_byte": 886,
                                                      "text": "while",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "condition_clause",
                                                      "start_byte": 887,
                                                      "end_byte": 897,
                                                      "text": "( i >= 0 )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 887,
                                                          "end_byte": 888,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 889,
                                                          "end_byte": 895,
                                                          "text": "i >= 0",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 889,
                                                              "end_byte": 890,
                                                              "text": "i",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": ">=",
                                                              "start_byte": 891,
                                                              "end_byte": 893,
                                                              "text": ">=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 894,
                                                              "end_byte": 895,
                                                              "text": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 896,
                                                          "end_byte": 897,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 898,
                                                      "end_byte": 940,
                                                      "text": "sum += cur -> triangle [ i -- ] [ j -- ] ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 898,
                                                          "end_byte": 938,
                                                          "text": "sum += cur -> triangle [ i -- ] [ j -- ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 898,
                                                              "end_byte": 901,
                                                              "text": "sum",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+=",
                                                              "start_byte": 902,
                                                              "end_byte": 904,
                                                              "text": "+=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 905,
                                                              "end_byte": 938,
                                                              "text": "cur -> triangle [ i -- ] [ j -- ]",
                                                              "children": [
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 905,
                                                                  "end_byte": 929,
                                                                  "text": "cur -> triangle [ i -- ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "field_expression",
                                                                      "start_byte": 905,
                                                                      "end_byte": 920,
                                                                      "text": "cur -> triangle",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 905,
                                                                          "end_byte": 908,
                                                                          "text": "cur",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "->",
                                                                          "start_byte": 909,
                                                                          "end_byte": 911,
                                                                          "text": "->",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "field_identifier",
                                                                          "start_byte": 912,
                                                                          "end_byte": 920,
                                                                          "text": "triangle",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 921,
                                                                      "end_byte": 929,
                                                                      "text": "[ i -- ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 921,
                                                                          "end_byte": 922,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "update_expression",
                                                                          "start_byte": 923,
                                                                          "end_byte": 927,
                                                                          "text": "i --",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 923,
                                                                              "end_byte": 924,
                                                                              "text": "i",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "--",
                                                                              "start_byte": 925,
                                                                              "end_byte": 927,
                                                                              "text": "--",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 928,
                                                                          "end_byte": 929,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 930,
                                                                  "end_byte": 938,
                                                                  "text": "[ j -- ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 930,
                                                                      "end_byte": 931,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "update_expression",
                                                                      "start_byte": 932,
                                                                      "end_byte": 936,
                                                                      "text": "j --",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 932,
                                                                          "end_byte": 933,
                                                                          "text": "j",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "--",
                                                                          "start_byte": 934,
                                                                          "end_byte": 936,
                                                                          "text": "--",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 937,
                                                                      "end_byte": 938,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 939,
                                                          "end_byte": 940,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "else_clause",
                                                  "start_byte": 941,
                                                  "end_byte": 1094,
                                                  "text": "else { sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; }",
                                                  "children": [
                                                    {
                                                      "type": "else",
                                                      "start_byte": 941,
                                                      "end_byte": 945,
                                                      "text": "else",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "compound_statement",
                                                      "start_byte": 946,
                                                      "end_byte": 1094,
                                                      "text": "{ sum += cur -> triangle [ i ] [ j ] ; num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ; i -- ; j -= num ; }",
                                                      "children": [
                                                        {
                                                          "type": "{",
                                                          "start_byte": 946,
                                                          "end_byte": 947,
                                                          "text": "{",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 948,
                                                          "end_byte": 984,
                                                          "text": "sum += cur -> triangle [ i ] [ j ] ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 948,
                                                              "end_byte": 982,
                                                              "text": "sum += cur -> triangle [ i ] [ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 948,
                                                                  "end_byte": 951,
                                                                  "text": "sum",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "+=",
                                                                  "start_byte": 952,
                                                                  "end_byte": 954,
                                                                  "text": "+=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_expression",
                                                                  "start_byte": 955,
                                                                  "end_byte": 982,
                                                                  "text": "cur -> triangle [ i ] [ j ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "subscript_expression",
                                                                      "start_byte": 955,
                                                                      "end_byte": 976,
                                                                      "text": "cur -> triangle [ i ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "field_expression",
                                                                          "start_byte": 955,
                                                                          "end_byte": 970,
                                                                          "text": "cur -> triangle",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 955,
                                                                              "end_byte": 958,
                                                                              "text": "cur",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "->",
                                                                              "start_byte": 959,
                                                                              "end_byte": 961,
                                                                              "text": "->",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "field_identifier",
                                                                              "start_byte": 962,
                                                                              "end_byte": 970,
                                                                              "text": "triangle",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "subscript_argument_list",
                                                                          "start_byte": 971,
                                                                          "end_byte": 976,
                                                                          "text": "[ i ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "[",
                                                                              "start_byte": 971,
                                                                              "end_byte": 972,
                                                                              "text": "[",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 973,
                                                                              "end_byte": 974,
                                                                              "text": "i",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "]",
                                                                              "start_byte": 975,
                                                                              "end_byte": 976,
                                                                              "text": "]",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "subscript_argument_list",
                                                                      "start_byte": 977,
                                                                      "end_byte": 982,
                                                                      "text": "[ j ]",
                                                                      "children": [
                                                                        {
                                                                          "type": "[",
                                                                          "start_byte": 977,
                                                                          "end_byte": 978,
                                                                          "text": "[",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 979,
                                                                          "end_byte": 980,
                                                                          "text": "j",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "]",
                                                                          "start_byte": 981,
                                                                          "end_byte": 982,
                                                                          "text": "]",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 983,
                                                              "end_byte": 984,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 985,
                                                          "end_byte": 1074,
                                                          "text": "num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0 ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 985,
                                                              "end_byte": 1072,
                                                              "text": "num = ( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 985,
                                                                  "end_byte": 988,
                                                                  "text": "num",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 989,
                                                                  "end_byte": 990,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "conditional_expression",
                                                                  "start_byte": 991,
                                                                  "end_byte": 1072,
                                                                  "text": "( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] ) ? 1 : 0",
                                                                  "children": [
                                                                    {
                                                                      "type": "parenthesized_expression",
                                                                      "start_byte": 991,
                                                                      "end_byte": 1064,
                                                                      "text": "( cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ] )",
                                                                      "children": [
                                                                        {
                                                                          "type": "(",
                                                                          "start_byte": 991,
                                                                          "end_byte": 992,
                                                                          "text": "(",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "binary_expression",
                                                                          "start_byte": 993,
                                                                          "end_byte": 1062,
                                                                          "text": "cur -> triangle [ i - 1 ] [ j ] < cur -> triangle [ i - 1 ] [ j - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "subscript_expression",
                                                                              "start_byte": 993,
                                                                              "end_byte": 1024,
                                                                              "text": "cur -> triangle [ i - 1 ] [ j ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "subscript_expression",
                                                                                  "start_byte": 993,
                                                                                  "end_byte": 1018,
                                                                                  "text": "cur -> triangle [ i - 1 ]",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "field_expression",
                                                                                      "start_byte": 993,
                                                                                      "end_byte": 1008,
                                                                                      "text": "cur -> triangle",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "identifier",
                                                                                          "start_byte": 993,
                                                                                          "end_byte": 996,
                                                                                          "text": "cur",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "->",
                                                                                          "start_byte": 997,
                                                                                          "end_byte": 999,
                                                                                          "text": "->",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "field_identifier",
                                                                                          "start_byte": 1000,
                                                                                          "end_byte": 1008,
                                                                                          "text": "triangle",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "subscript_argument_list",
                                                                                      "start_byte": 1009,
                                                                                      "end_byte": 1018,
                                                                                      "text": "[ i - 1 ]",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "[",
                                                                                          "start_byte": 1009,
                                                                                          "end_byte": 1010,
                                                                                          "text": "[",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "binary_expression",
                                                                                          "start_byte": 1011,
                                                                                          "end_byte": 1016,
                                                                                          "text": "i - 1",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "identifier",
                                                                                              "start_byte": 1011,
                                                                                              "end_byte": 1012,
                                                                                              "text": "i",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "-",
                                                                                              "start_byte": 1013,
                                                                                              "end_byte": 1014,
                                                                                              "text": "-",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "number_literal",
                                                                                              "start_byte": 1015,
                                                                                              "end_byte": 1016,
                                                                                              "text": "1",
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "]",
                                                                                          "start_byte": 1017,
                                                                                          "end_byte": 1018,
                                                                                          "text": "]",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "subscript_argument_list",
                                                                                  "start_byte": 1019,
                                                                                  "end_byte": 1024,
                                                                                  "text": "[ j ]",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "[",
                                                                                      "start_byte": 1019,
                                                                                      "end_byte": 1020,
                                                                                      "text": "[",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "identifier",
                                                                                      "start_byte": 1021,
                                                                                      "end_byte": 1022,
                                                                                      "text": "j",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "]",
                                                                                      "start_byte": 1023,
                                                                                      "end_byte": 1024,
                                                                                      "text": "]",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "<",
                                                                              "start_byte": 1025,
                                                                              "end_byte": 1026,
                                                                              "text": "<",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_expression",
                                                                              "start_byte": 1027,
                                                                              "end_byte": 1062,
                                                                              "text": "cur -> triangle [ i - 1 ] [ j - 1 ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "subscript_expression",
                                                                                  "start_byte": 1027,
                                                                                  "end_byte": 1052,
                                                                                  "text": "cur -> triangle [ i - 1 ]",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "field_expression",
                                                                                      "start_byte": 1027,
                                                                                      "end_byte": 1042,
                                                                                      "text": "cur -> triangle",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "identifier",
                                                                                          "start_byte": 1027,
                                                                                          "end_byte": 1030,
                                                                                          "text": "cur",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "->",
                                                                                          "start_byte": 1031,
                                                                                          "end_byte": 1033,
                                                                                          "text": "->",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "field_identifier",
                                                                                          "start_byte": 1034,
                                                                                          "end_byte": 1042,
                                                                                          "text": "triangle",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "subscript_argument_list",
                                                                                      "start_byte": 1043,
                                                                                      "end_byte": 1052,
                                                                                      "text": "[ i - 1 ]",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "[",
                                                                                          "start_byte": 1043,
                                                                                          "end_byte": 1044,
                                                                                          "text": "[",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "binary_expression",
                                                                                          "start_byte": 1045,
                                                                                          "end_byte": 1050,
                                                                                          "text": "i - 1",
                                                                                          "children": [
                                                                                            {
                                                                                              "type": "identifier",
                                                                                              "start_byte": 1045,
                                                                                              "end_byte": 1046,
                                                                                              "text": "i",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "-",
                                                                                              "start_byte": 1047,
                                                                                              "end_byte": 1048,
                                                                                              "text": "-",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "type": "number_literal",
                                                                                              "start_byte": 1049,
                                                                                              "end_byte": 1050,
                                                                                              "text": "1",
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "type": "]",
                                                                                          "start_byte": 1051,
                                                                                          "end_byte": 1052,
                                                                                          "text": "]",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "subscript_argument_list",
                                                                                  "start_byte": 1053,
                                                                                  "end_byte": 1062,
                                                                                  "text": "[ j - 1 ]",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "[",
                                                                                      "start_byte": 1053,
                                                                                      "end_byte": 1054,
                                                                                      "text": "[",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "binary_expression",
                                                                                      "start_byte": 1055,
                                                                                      "end_byte": 1060,
                                                                                      "text": "j - 1",
                                                                                      "children": [
                                                                                        {
                                                                                          "type": "identifier",
                                                                                          "start_byte": 1055,
                                                                                          "end_byte": 1056,
                                                                                          "text": "j",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "-",
                                                                                          "start_byte": 1057,
                                                                                          "end_byte": 1058,
                                                                                          "text": "-",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "type": "number_literal",
                                                                                          "start_byte": 1059,
                                                                                          "end_byte": 1060,
                                                                                          "text": "1",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "type": "]",
                                                                                      "start_byte": 1061,
                                                                                      "end_byte": 1062,
                                                                                      "text": "]",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": ")",
                                                                          "start_byte": 1063,
                                                                          "end_byte": 1064,
                                                                          "text": ")",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "?",
                                                                      "start_byte": 1065,
                                                                      "end_byte": 1066,
                                                                      "text": "?",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 1067,
                                                                      "end_byte": 1068,
                                                                      "text": "1",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": ":",
                                                                      "start_byte": 1069,
                                                                      "end_byte": 1070,
                                                                      "text": ":",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 1071,
                                                                      "end_byte": 1072,
                                                                      "text": "0",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 1073,
                                                              "end_byte": 1074,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 1075,
                                                          "end_byte": 1081,
                                                          "text": "i -- ;",
                                                          "children": [
                                                            {
                                                              "type": "update_expression",
                                                              "start_byte": 1075,
                                                              "end_byte": 1079,
                                                              "text": "i --",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1075,
                                                                  "end_byte": 1076,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "--",
                                                                  "start_byte": 1077,
                                                                  "end_byte": 1079,
                                                                  "text": "--",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 1080,
                                                              "end_byte": 1081,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 1082,
                                                          "end_byte": 1092,
                                                          "text": "j -= num ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 1082,
                                                              "end_byte": 1090,
                                                              "text": "j -= num",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1082,
                                                                  "end_byte": 1083,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-=",
                                                                  "start_byte": 1084,
                                                                  "end_byte": 1086,
                                                                  "text": "-=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1087,
                                                                  "end_byte": 1090,
                                                                  "text": "num",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 1091,
                                                              "end_byte": 1092,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "}",
                                                          "start_byte": 1093,
                                                          "end_byte": 1094,
                                                          "text": "}",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1095,
                                      "end_byte": 1096,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 1097,
                              "end_byte": 1139,
                              "text": "if ( sum > cur -> max ) cur -> max = sum ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 1097,
                                  "end_byte": 1099,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 1100,
                                  "end_byte": 1120,
                                  "text": "( sum > cur -> max )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1100,
                                      "end_byte": 1101,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1102,
                                      "end_byte": 1118,
                                      "text": "sum > cur -> max",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1102,
                                          "end_byte": 1105,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 1106,
                                          "end_byte": 1107,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "field_expression",
                                          "start_byte": 1108,
                                          "end_byte": 1118,
                                          "text": "cur -> max",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1108,
                                              "end_byte": 1111,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 1112,
                                              "end_byte": 1114,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 1115,
                                              "end_byte": 1118,
                                              "text": "max",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1119,
                                      "end_byte": 1120,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1121,
                                  "end_byte": 1139,
                                  "text": "cur -> max = sum ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1121,
                                      "end_byte": 1137,
                                      "text": "cur -> max = sum",
                                      "children": [
                                        {
                                          "type": "field_expression",
                                          "start_byte": 1121,
                                          "end_byte": 1131,
                                          "text": "cur -> max",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1121,
                                              "end_byte": 1124,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 1125,
                                              "end_byte": 1127,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 1128,
                                              "end_byte": 1131,
                                              "text": "max",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1132,
                                          "end_byte": 1133,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1134,
                                          "end_byte": 1137,
                                          "text": "sum",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1138,
                                      "end_byte": 1139,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1140,
                              "end_byte": 1141,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1142,
                      "end_byte": 1174,
                      "text": "printf ( \"%d\\n\" , cur -> max ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1142,
                          "end_byte": 1172,
                          "text": "printf ( \"%d\\n\" , cur -> max )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1142,
                              "end_byte": 1148,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1149,
                              "end_byte": 1172,
                              "text": "( \"%d\\n\" , cur -> max )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1149,
                                  "end_byte": 1150,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1151,
                                  "end_byte": 1157,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1151,
                                      "end_byte": 1152,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1152,
                                      "end_byte": 1154,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1154,
                                      "end_byte": 1156,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1156,
                                      "end_byte": 1157,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1158,
                                  "end_byte": 1159,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "field_expression",
                                  "start_byte": 1160,
                                  "end_byte": 1170,
                                  "text": "cur -> max",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1160,
                                      "end_byte": 1163,
                                      "text": "cur",
                                      "children": []
                                    },
                                    {
                                      "type": "->",
                                      "start_byte": 1164,
                                      "end_byte": 1166,
                                      "text": "->",
                                      "children": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "start_byte": 1167,
                                      "end_byte": 1170,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1171,
                                  "end_byte": 1172,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1173,
                          "end_byte": 1174,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1175,
                      "end_byte": 1189,
                      "text": "free ( cur ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1175,
                          "end_byte": 1187,
                          "text": "free ( cur )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1175,
                              "end_byte": 1179,
                              "text": "free",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1180,
                              "end_byte": 1187,
                              "text": "( cur )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1180,
                                  "end_byte": 1181,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1182,
                                  "end_byte": 1185,
                                  "text": "cur",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1186,
                                  "end_byte": 1187,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1188,
                          "end_byte": 1189,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1190,
                      "end_byte": 1202,
                      "text": "cur = NULL ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1190,
                          "end_byte": 1200,
                          "text": "cur = NULL",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1190,
                              "end_byte": 1193,
                              "text": "cur",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1194,
                              "end_byte": 1195,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "null",
                              "start_byte": 1196,
                              "end_byte": 1200,
                              "text": "NULL",
                              "children": [
                                {
                                  "type": "NULL",
                                  "start_byte": 1196,
                                  "end_byte": 1200,
                                  "text": "NULL",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1201,
                          "end_byte": 1202,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1203,
                      "end_byte": 1204,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1205,
              "end_byte": 1215,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1205,
                  "end_byte": 1211,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1212,
                  "end_byte": 1213,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1214,
                  "end_byte": 1215,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1216,
              "end_byte": 1217,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}