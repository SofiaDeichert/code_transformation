int main ( ) { int n , i , j , k , * trn , flag = 1 , * * * trdata , sum ; scanf ( "%d" , & n ) ; trn = ( int * ) malloc ( n * sizeof ( int ) ) ; trdata = ( int * * * ) malloc ( n * sizeof ( int * * ) ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & trn [ i ] ) ; trdata [ i ] = ( int * * ) malloc ( trn [ i ] * sizeof ( int * ) ) ; for ( j = 0 ; j < trn [ i ] ; j ++ ) { flag = 1 ; for ( k = 0 ; k <= j ; k ++ ) { if ( flag ) { trdata [ i ] [ j ] = ( int * ) malloc ( ( j + 1 ) * sizeof ( int ) ) ; flag = 0 ; } scanf ( "%d" , & trdata [ i ] [ j ] [ k ] ) ; } } } for ( i = 0 ; i < n ; i ++ ) { printf ( "\n%d" , trn [ i ] ) ; for ( j = 0 ; j < trn [ i ] ; j ++ ) { printf ( "\n" ) ; for ( k = 0 ; k <= j ; k ++ ) { printf ( "%-3d" , trdata [ i ] [ j ] [ k ] ) ; } } } for ( i = 0 ; i < n ; i ++ ) { for ( j = 1 ; j < trn [ i ] ; j += 1 ) { for ( k = 0 ; k <= j ; k += 1 ) { if ( k == 0 ) { trdata [ i ] [ j ] [ 0 ] += trdata [ i ] [ j - 1 ] [ 0 ] ; } else if ( k == j ) { trdata [ i ] [ j ] [ k ] += trdata [ i ] [ j - 1 ] [ k - 1 ] ; } else { trdata [ i ] [ j ] [ k ] += ( ( trdata [ i ] [ j - 1 ] [ k ] > trdata [ i ] [ j - 1 ] [ k - 1 ] ) ? trdata [ i ] [ j - 1 ] [ k ] : trdata [ i ] [ j - 1 ] [ k - 1 ] ) ; } } } sum = trdata [ i ] [ trn [ i ] - 1 ] [ 0 ] ; for ( j = 1 ; j < trn [ i ] ; j += 1 ) { if ( sum < trdata [ i ] [ trn [ i ] - 1 ] [ j ] ) { sum = trdata [ i ] [ trn [ i ] - 1 ] [ j ] ; } } printf ( "\n%d" , sum ) ; } for ( i = 0 ; i < n ; i ++ ) { printf ( "\n%d" , trn [ i ] ) ; for ( j = 0 ; j < trn [ i ] ; j ++ ) { printf ( "\n" ) ; for ( k = 0 ; k <= j ; k ++ ) { printf ( "%-3d" , trdata [ i ] [ j ] [ k ] ) ; } } } return 0 ; }