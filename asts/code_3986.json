{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 421,
  "text": "int fast ( ) { int val = 0 , c ; c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) { val = ( val << 3 ) + ( val << 1 ) + c - '0' ; c = gc ( ) ; } return val ; } int main ( ) { int min = 9999 ; int i , n , x , t ; t = fast ( ) ; while ( t -- ) { n = fast ( ) ; for ( i = 0 ; i < n ; i ++ ) { x = fast ( ) ; if ( x < min ) min = x ; } printf ( \"%d\\n\" , min * ( n - 1 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 196,
      "text": "int fast ( ) { int val = 0 , c ; c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) { val = ( val << 3 ) + ( val << 1 ) + c - '0' ; c = gc ( ) ; } return val ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "fast ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "fast",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 196,
          "text": "{ int val = 0 , c ; c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) { val = ( val << 3 ) + ( val << 1 ) + c - '0' ; c = gc ( ) ; } return val ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 32,
              "text": "int val = 0 , c ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 19,
                  "end_byte": 26,
                  "text": "val = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 19,
                      "end_byte": 22,
                      "text": "val",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 23,
                      "end_byte": 24,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 25,
                      "end_byte": 26,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 33,
              "end_byte": 45,
              "text": "c = gc ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 33,
                  "end_byte": 43,
                  "text": "c = gc ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 33,
                      "end_byte": 34,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 35,
                      "end_byte": 36,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 37,
                      "end_byte": 43,
                      "text": "gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 37,
                          "end_byte": 39,
                          "text": "gc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 40,
                          "end_byte": 43,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 40,
                              "end_byte": 41,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 42,
                              "end_byte": 43,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 46,
              "end_byte": 87,
              "text": "while ( c < '0' || c > '9' ) c = gc ( ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 46,
                  "end_byte": 51,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 52,
                  "end_byte": 74,
                  "text": "( c < '0' || c > '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 52,
                      "end_byte": 53,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 54,
                      "end_byte": 72,
                      "text": "c < '0' || c > '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 54,
                          "end_byte": 61,
                          "text": "c < '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 54,
                              "end_byte": 55,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 56,
                              "end_byte": 57,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 58,
                              "end_byte": 61,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 58,
                                  "end_byte": 59,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 59,
                                  "end_byte": 60,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 60,
                                  "end_byte": 61,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start_byte": 62,
                          "end_byte": 64,
                          "text": "||",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 65,
                          "end_byte": 72,
                          "text": "c > '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 67,
                              "end_byte": 68,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 69,
                              "end_byte": 72,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 69,
                                  "end_byte": 70,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 70,
                                  "end_byte": 71,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 71,
                                  "end_byte": 72,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 73,
                      "end_byte": 74,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 75,
                  "end_byte": 87,
                  "text": "c = gc ( ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 75,
                      "end_byte": 85,
                      "text": "c = gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 75,
                          "end_byte": 76,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 77,
                          "end_byte": 78,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 79,
                          "end_byte": 85,
                          "text": "gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 79,
                              "end_byte": 81,
                              "text": "gc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 82,
                              "end_byte": 85,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 82,
                                  "end_byte": 83,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 84,
                                  "end_byte": 85,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 86,
                      "end_byte": 87,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 88,
              "end_byte": 181,
              "text": "while ( c >= '0' && c <= '9' ) { val = ( val << 3 ) + ( val << 1 ) + c - '0' ; c = gc ( ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 88,
                  "end_byte": 93,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 94,
                  "end_byte": 118,
                  "text": "( c >= '0' && c <= '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 96,
                      "end_byte": 116,
                      "text": "c >= '0' && c <= '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 96,
                          "end_byte": 104,
                          "text": "c >= '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 96,
                              "end_byte": 97,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 98,
                              "end_byte": 100,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 101,
                              "end_byte": 104,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 101,
                                  "end_byte": 102,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 102,
                                  "end_byte": 103,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 103,
                                  "end_byte": 104,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 105,
                          "end_byte": 107,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 108,
                          "end_byte": 116,
                          "text": "c <= '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 110,
                              "end_byte": 112,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 113,
                              "end_byte": 116,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 113,
                                  "end_byte": 114,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 114,
                                  "end_byte": 115,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 115,
                                  "end_byte": 116,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 119,
                  "end_byte": 181,
                  "text": "{ val = ( val << 3 ) + ( val << 1 ) + c - '0' ; c = gc ( ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 121,
                      "end_byte": 166,
                      "text": "val = ( val << 3 ) + ( val << 1 ) + c - '0' ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 121,
                          "end_byte": 164,
                          "text": "val = ( val << 3 ) + ( val << 1 ) + c - '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 121,
                              "end_byte": 124,
                              "text": "val",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 127,
                              "end_byte": 164,
                              "text": "( val << 3 ) + ( val << 1 ) + c - '0'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 127,
                                  "end_byte": 158,
                                  "text": "( val << 3 ) + ( val << 1 ) + c",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 127,
                                      "end_byte": 154,
                                      "text": "( val << 3 ) + ( val << 1 )",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 127,
                                          "end_byte": 139,
                                          "text": "( val << 3 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 127,
                                              "end_byte": 128,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 129,
                                              "end_byte": 137,
                                              "text": "val << 3",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 129,
                                                  "end_byte": 132,
                                                  "text": "val",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 133,
                                                  "end_byte": 135,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 136,
                                                  "end_byte": 137,
                                                  "text": "3",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 138,
                                              "end_byte": 139,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 140,
                                          "end_byte": 141,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 142,
                                          "end_byte": 154,
                                          "text": "( val << 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 142,
                                              "end_byte": 143,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 144,
                                              "end_byte": 152,
                                              "text": "val << 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 144,
                                                  "end_byte": 147,
                                                  "text": "val",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 148,
                                                  "end_byte": 150,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 151,
                                                  "end_byte": 152,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 153,
                                              "end_byte": 154,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 155,
                                      "end_byte": 156,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 161,
                                  "end_byte": 164,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 163,
                                      "end_byte": 164,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 165,
                          "end_byte": 166,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 167,
                      "end_byte": 179,
                      "text": "c = gc ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 167,
                          "end_byte": 177,
                          "text": "c = gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 169,
                              "end_byte": 170,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 171,
                              "end_byte": 177,
                              "text": "gc ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 171,
                                  "end_byte": 173,
                                  "text": "gc",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 174,
                                  "end_byte": 177,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 178,
                          "end_byte": 179,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 180,
                      "end_byte": 181,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 182,
              "end_byte": 194,
              "text": "return val ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 182,
                  "end_byte": 188,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 189,
                  "end_byte": 192,
                  "text": "val",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 193,
                  "end_byte": 194,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 195,
              "end_byte": 196,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 197,
      "end_byte": 421,
      "text": "int main ( ) { int min = 9999 ; int i , n , x , t ; t = fast ( ) ; while ( t -- ) { n = fast ( ) ; for ( i = 0 ; i < n ; i ++ ) { x = fast ( ) ; if ( x < min ) min = x ; } printf ( \"%d\\n\" , min * ( n - 1 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 197,
          "end_byte": 200,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 201,
          "end_byte": 209,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 201,
              "end_byte": 205,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 206,
              "end_byte": 209,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 206,
                  "end_byte": 207,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 208,
                  "end_byte": 209,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 210,
          "end_byte": 421,
          "text": "{ int min = 9999 ; int i , n , x , t ; t = fast ( ) ; while ( t -- ) { n = fast ( ) ; for ( i = 0 ; i < n ; i ++ ) { x = fast ( ) ; if ( x < min ) min = x ; } printf ( \"%d\\n\" , min * ( n - 1 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 210,
              "end_byte": 211,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 212,
              "end_byte": 228,
              "text": "int min = 9999 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 212,
                  "end_byte": 215,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 216,
                  "end_byte": 226,
                  "text": "min = 9999",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 216,
                      "end_byte": 219,
                      "text": "min",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 222,
                      "end_byte": 226,
                      "text": "9999",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 227,
                  "end_byte": 228,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 229,
              "end_byte": 248,
              "text": "int i , n , x , t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 229,
                  "end_byte": 232,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 233,
                  "end_byte": 234,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 235,
                  "end_byte": 236,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 237,
                  "end_byte": 238,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 239,
                  "end_byte": 240,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 241,
                  "end_byte": 242,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 243,
                  "end_byte": 244,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 245,
                  "end_byte": 246,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 247,
                  "end_byte": 248,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 249,
              "end_byte": 263,
              "text": "t = fast ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 249,
                  "end_byte": 261,
                  "text": "t = fast ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 249,
                      "end_byte": 250,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 251,
                      "end_byte": 252,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 253,
                      "end_byte": 261,
                      "text": "fast ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 253,
                          "end_byte": 257,
                          "text": "fast",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 258,
                          "end_byte": 261,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 258,
                              "end_byte": 259,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 260,
                              "end_byte": 261,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 262,
                  "end_byte": 263,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 264,
              "end_byte": 408,
              "text": "while ( t -- ) { n = fast ( ) ; for ( i = 0 ; i < n ; i ++ ) { x = fast ( ) ; if ( x < min ) min = x ; } printf ( \"%d\\n\" , min * ( n - 1 ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 264,
                  "end_byte": 269,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 270,
                  "end_byte": 278,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 270,
                      "end_byte": 271,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 272,
                      "end_byte": 276,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 272,
                          "end_byte": 273,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 274,
                          "end_byte": 276,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 277,
                      "end_byte": 278,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 279,
                  "end_byte": 408,
                  "text": "{ n = fast ( ) ; for ( i = 0 ; i < n ; i ++ ) { x = fast ( ) ; if ( x < min ) min = x ; } printf ( \"%d\\n\" , min * ( n - 1 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 279,
                      "end_byte": 280,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 281,
                      "end_byte": 295,
                      "text": "n = fast ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 281,
                          "end_byte": 293,
                          "text": "n = fast ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 281,
                              "end_byte": 282,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 283,
                              "end_byte": 284,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 285,
                              "end_byte": 293,
                              "text": "fast ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 285,
                                  "end_byte": 289,
                                  "text": "fast",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 290,
                                  "end_byte": 293,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 290,
                                      "end_byte": 291,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 292,
                                      "end_byte": 293,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 294,
                          "end_byte": 295,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 296,
                      "end_byte": 368,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { x = fast ( ) ; if ( x < min ) min = x ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 296,
                          "end_byte": 299,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 300,
                          "end_byte": 301,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 302,
                          "end_byte": 307,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 304,
                              "end_byte": 305,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 308,
                          "end_byte": 309,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 310,
                          "end_byte": 315,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 310,
                              "end_byte": 311,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 312,
                              "end_byte": 313,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 314,
                              "end_byte": 315,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 316,
                          "end_byte": 317,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 318,
                          "end_byte": 322,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 318,
                              "end_byte": 319,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 320,
                              "end_byte": 322,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 325,
                          "end_byte": 368,
                          "text": "{ x = fast ( ) ; if ( x < min ) min = x ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 325,
                              "end_byte": 326,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 327,
                              "end_byte": 341,
                              "text": "x = fast ( ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 327,
                                  "end_byte": 339,
                                  "text": "x = fast ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 327,
                                      "end_byte": 328,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 329,
                                      "end_byte": 330,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 331,
                                      "end_byte": 339,
                                      "text": "fast ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 331,
                                          "end_byte": 335,
                                          "text": "fast",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 336,
                                          "end_byte": 339,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 336,
                                              "end_byte": 337,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 338,
                                              "end_byte": 339,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 340,
                                  "end_byte": 341,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 342,
                              "end_byte": 366,
                              "text": "if ( x < min ) min = x ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 342,
                                  "end_byte": 344,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 345,
                                  "end_byte": 356,
                                  "text": "( x < min )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 345,
                                      "end_byte": 346,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 347,
                                      "end_byte": 354,
                                      "text": "x < min",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 347,
                                          "end_byte": 348,
                                          "text": "x",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 349,
                                          "end_byte": 350,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 351,
                                          "end_byte": 354,
                                          "text": "min",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 355,
                                      "end_byte": 356,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 357,
                                  "end_byte": 366,
                                  "text": "min = x ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 357,
                                      "end_byte": 364,
                                      "text": "min = x",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 357,
                                          "end_byte": 360,
                                          "text": "min",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 361,
                                          "end_byte": 362,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 363,
                                          "end_byte": 364,
                                          "text": "x",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 367,
                              "end_byte": 368,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 369,
                      "end_byte": 406,
                      "text": "printf ( \"%d\\n\" , min * ( n - 1 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 369,
                          "end_byte": 404,
                          "text": "printf ( \"%d\\n\" , min * ( n - 1 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 369,
                              "end_byte": 375,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 376,
                              "end_byte": 404,
                              "text": "( \"%d\\n\" , min * ( n - 1 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 376,
                                  "end_byte": 377,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 378,
                                  "end_byte": 384,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 378,
                                      "end_byte": 379,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 379,
                                      "end_byte": 381,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 381,
                                      "end_byte": 383,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 383,
                                      "end_byte": 384,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 385,
                                  "end_byte": 386,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 387,
                                  "end_byte": 402,
                                  "text": "min * ( n - 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 387,
                                      "end_byte": 390,
                                      "text": "min",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 391,
                                      "end_byte": 392,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 393,
                                      "end_byte": 402,
                                      "text": "( n - 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 393,
                                          "end_byte": 394,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 395,
                                          "end_byte": 400,
                                          "text": "n - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 395,
                                              "end_byte": 396,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 397,
                                              "end_byte": 398,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 399,
                                              "end_byte": 400,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 401,
                                          "end_byte": 402,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 403,
                                  "end_byte": 404,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 405,
                          "end_byte": 406,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 407,
                      "end_byte": 408,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 409,
              "end_byte": 419,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 409,
                  "end_byte": 415,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 416,
                  "end_byte": 417,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 418,
                  "end_byte": 419,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 420,
              "end_byte": 421,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}