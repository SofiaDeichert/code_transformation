{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 214,
  "text": "int main ( ) { int n1 , n2 ; scanf ( \"%d %d\" , & n1 , & n2 ) ; int lcm = n1 * n2 ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; } int gcd = n1 ; printf ( \"%d %d\" , gcd , lcm / gcd ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 214,
      "text": "int main ( ) { int n1 , n2 ; scanf ( \"%d %d\" , & n1 , & n2 ) ; int lcm = n1 * n2 ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; } int gcd = n1 ; printf ( \"%d %d\" , gcd , lcm / gcd ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 214,
          "text": "{ int n1 , n2 ; scanf ( \"%d %d\" , & n1 , & n2 ) ; int lcm = n1 * n2 ; while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; } int gcd = n1 ; printf ( \"%d %d\" , gcd , lcm / gcd ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 28,
              "text": "int n1 , n2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 21,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 26,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 29,
              "end_byte": 62,
              "text": "scanf ( \"%d %d\" , & n1 , & n2 ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 29,
                  "end_byte": 60,
                  "text": "scanf ( \"%d %d\" , & n1 , & n2 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 29,
                      "end_byte": 34,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 35,
                      "end_byte": 60,
                      "text": "( \"%d %d\" , & n1 , & n2 )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 35,
                          "end_byte": 36,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 37,
                          "end_byte": 44,
                          "text": "\"%d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 37,
                              "end_byte": 38,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 38,
                              "end_byte": 43,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 43,
                              "end_byte": 44,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 45,
                          "end_byte": 46,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 47,
                          "end_byte": 51,
                          "text": "& n1",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 47,
                              "end_byte": 48,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 49,
                              "end_byte": 51,
                              "text": "n1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 52,
                          "end_byte": 53,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 54,
                          "end_byte": 58,
                          "text": "& n2",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 54,
                              "end_byte": 55,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 56,
                              "end_byte": 58,
                              "text": "n2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 59,
                          "end_byte": 60,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 63,
              "end_byte": 82,
              "text": "int lcm = n1 * n2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 63,
                  "end_byte": 66,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 67,
                  "end_byte": 80,
                  "text": "lcm = n1 * n2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 67,
                      "end_byte": 70,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 73,
                      "end_byte": 80,
                      "text": "n1 * n2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 73,
                          "end_byte": 75,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": "*",
                          "start_byte": 76,
                          "end_byte": 77,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 78,
                          "end_byte": 80,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 83,
              "end_byte": 147,
              "text": "while ( n1 != n2 ) { if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 83,
                  "end_byte": 88,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 89,
                  "end_byte": 101,
                  "text": "( n1 != n2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 89,
                      "end_byte": 90,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 91,
                      "end_byte": 99,
                      "text": "n1 != n2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 91,
                          "end_byte": 93,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 94,
                          "end_byte": 96,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 97,
                          "end_byte": 99,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 102,
                  "end_byte": 147,
                  "text": "{ if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 104,
                      "end_byte": 145,
                      "text": "if ( n1 > n2 ) n1 -= n2 ; else n2 -= n1 ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 104,
                          "end_byte": 106,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 107,
                          "end_byte": 118,
                          "text": "( n1 > n2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 107,
                              "end_byte": 108,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 109,
                              "end_byte": 116,
                              "text": "n1 > n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 109,
                                  "end_byte": 111,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 112,
                                  "end_byte": 113,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 114,
                                  "end_byte": 116,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 117,
                              "end_byte": 118,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 119,
                          "end_byte": 129,
                          "text": "n1 -= n2 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 119,
                              "end_byte": 127,
                              "text": "n1 -= n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 119,
                                  "end_byte": 121,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "-=",
                                  "start_byte": 122,
                                  "end_byte": 124,
                                  "text": "-=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 125,
                                  "end_byte": 127,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 128,
                              "end_byte": 129,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 130,
                          "end_byte": 145,
                          "text": "else n2 -= n1 ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 130,
                              "end_byte": 134,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 135,
                              "end_byte": 145,
                              "text": "n2 -= n1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 135,
                                  "end_byte": 143,
                                  "text": "n2 -= n1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 135,
                                      "end_byte": 137,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": "-=",
                                      "start_byte": 138,
                                      "end_byte": 140,
                                      "text": "-=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 141,
                                      "end_byte": 143,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 144,
                                  "end_byte": 145,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 148,
              "end_byte": 162,
              "text": "int gcd = n1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 148,
                  "end_byte": 151,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 152,
                  "end_byte": 160,
                  "text": "gcd = n1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 152,
                      "end_byte": 155,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 158,
                      "end_byte": 160,
                      "text": "n1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 161,
                  "end_byte": 162,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 163,
              "end_byte": 201,
              "text": "printf ( \"%d %d\" , gcd , lcm / gcd ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 163,
                  "end_byte": 199,
                  "text": "printf ( \"%d %d\" , gcd , lcm / gcd )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 163,
                      "end_byte": 169,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 170,
                      "end_byte": 199,
                      "text": "( \"%d %d\" , gcd , lcm / gcd )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 170,
                          "end_byte": 171,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 172,
                          "end_byte": 179,
                          "text": "\"%d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 173,
                              "end_byte": 178,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 178,
                              "end_byte": 179,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 180,
                          "end_byte": 181,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 182,
                          "end_byte": 185,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 188,
                          "end_byte": 197,
                          "text": "lcm / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 188,
                              "end_byte": 191,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "/",
                              "start_byte": 192,
                              "end_byte": 193,
                              "text": "/",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 194,
                              "end_byte": 197,
                              "text": "gcd",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 198,
                          "end_byte": 199,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 200,
                  "end_byte": 201,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 202,
              "end_byte": 212,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 202,
                  "end_byte": 208,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 209,
                  "end_byte": 210,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 211,
                  "end_byte": 212,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 213,
              "end_byte": 214,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}