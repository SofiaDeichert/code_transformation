int max ( int a , int b ) ; int cache [ 100 ] [ 100 ] ; int solution ( int arr [ ] [ 100 ] , int size , int i1 , int j1 ) ; int main ( ) { int i = 0 ; int j = 0 ; int k = 0 ; int arr1 [ 100 ] ; int a [ 100 ] [ 100 ] ; int choices = 0 ; int tlength = 0 ; scanf ( "%d" , & choices ) ; for ( i = 0 ; i < choices ; ++ i ) { scanf ( "%d" , & tlength ) ; for ( j = 0 ; j < tlength ; ++ j ) { for ( k = 0 ; k <= j ; ++ k ) { scanf ( "%d" , & a [ j ] [ k ] ) ; cache [ i ] [ j ] = - 1 ; } } arr1 [ i ] = solution ( a , tlength , 0 , 0 ) ; } for ( j = 0 ; j < choices ; ++ j ) { printf ( "%d\n" , arr1 [ j ] ) ; } return 0 ; } int solution ( int arr [ ] [ 100 ] , int size , int i1 , int j1 ) { int t1 = 0 ; int t2 = 0 ; int t = 0 ; if ( i1 > size - 1 ) return 0 ; if ( cache [ i1 ] [ j1 ] != - 1 ) return cache [ i1 ] [ j1 ] ; t1 = solution ( arr , size , i1 + 1 , j1 ) ; t2 = solution ( arr , size , i1 + 1 , j1 + 1 ) ; t = max ( t1 , t2 ) ; t = t + arr [ i1 ] [ j1 ] ; cache [ i1 ] [ j1 ] ; return t ; } int max ( int a , int b ) { if ( a > b ) return a ; else return b ; }