{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 320,
  "text": "int main ( void ) { int n , i , n1 , n2 , p , lcm ; scanf ( \"%d\" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { scanf ( \"%d%d\" , & n1 , & n2 ) ; p = gcd ( n1 , n2 ) ; lcm = ( n1 * n2 ) / p ; printf ( \"%d %d\\n\" , p , lcm ) ; } return 0 ; } int gcd ( int n , int m ) { if ( m == 0 ) return n ; else return gcd ( m , n % m ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 233,
      "text": "int main ( void ) { int n , i , n1 , n2 , p , lcm ; scanf ( \"%d\" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { scanf ( \"%d%d\" , & n1 , & n2 ) ; p = gcd ( n1 , n2 ) ; lcm = ( n1 * n2 ) / p ; printf ( \"%d %d\\n\" , p , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 17,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 15,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 233,
          "text": "{ int n , i , n1 , n2 , p , lcm ; scanf ( \"%d\" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { scanf ( \"%d%d\" , & n1 , & n2 ) ; p = gcd ( n1 , n2 ) ; lcm = ( n1 * n2 ) / p ; printf ( \"%d %d\\n\" , p , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 51,
              "text": "int n , i , n1 , n2 , p , lcm ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 20,
                  "end_byte": 23,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 34,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 39,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": "p",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 49,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 52,
              "end_byte": 74,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 52,
                  "end_byte": 72,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 52,
                      "end_byte": 57,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 58,
                      "end_byte": 72,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 58,
                          "end_byte": 59,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 60,
                          "end_byte": 64,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 60,
                              "end_byte": 61,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 61,
                              "end_byte": 63,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 63,
                              "end_byte": 64,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 65,
                          "end_byte": 66,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 67,
                          "end_byte": 70,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 67,
                              "end_byte": 68,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 69,
                              "end_byte": 70,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 71,
                          "end_byte": 72,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 75,
              "end_byte": 220,
              "text": "for ( i = 1 ; i <= n ; i ++ ) { scanf ( \"%d%d\" , & n1 , & n2 ) ; p = gcd ( n1 , n2 ) ; lcm = ( n1 * n2 ) / p ; printf ( \"%d %d\\n\" , p , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 75,
                  "end_byte": 78,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 81,
                  "end_byte": 86,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 81,
                      "end_byte": 82,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 89,
                  "end_byte": 95,
                  "text": "i <= n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 89,
                      "end_byte": 90,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 91,
                      "end_byte": 93,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 98,
                  "end_byte": 102,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 100,
                      "end_byte": 102,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 103,
                  "end_byte": 104,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 105,
                  "end_byte": 220,
                  "text": "{ scanf ( \"%d%d\" , & n1 , & n2 ) ; p = gcd ( n1 , n2 ) ; lcm = ( n1 * n2 ) / p ; printf ( \"%d %d\\n\" , p , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 105,
                      "end_byte": 106,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 107,
                      "end_byte": 139,
                      "text": "scanf ( \"%d%d\" , & n1 , & n2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 107,
                          "end_byte": 137,
                          "text": "scanf ( \"%d%d\" , & n1 , & n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 107,
                              "end_byte": 112,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 113,
                              "end_byte": 137,
                              "text": "( \"%d%d\" , & n1 , & n2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 113,
                                  "end_byte": 114,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 115,
                                  "end_byte": 121,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 115,
                                      "end_byte": 116,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 116,
                                      "end_byte": 120,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 120,
                                      "end_byte": 121,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 122,
                                  "end_byte": 123,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 124,
                                  "end_byte": 128,
                                  "text": "& n1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 126,
                                      "end_byte": 128,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 129,
                                  "end_byte": 130,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 131,
                                  "end_byte": 135,
                                  "text": "& n2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 131,
                                      "end_byte": 132,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 133,
                                      "end_byte": 135,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 136,
                                  "end_byte": 137,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 138,
                          "end_byte": 139,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 140,
                      "end_byte": 161,
                      "text": "p = gcd ( n1 , n2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 140,
                          "end_byte": 159,
                          "text": "p = gcd ( n1 , n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 140,
                              "end_byte": 141,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 144,
                              "end_byte": 159,
                              "text": "gcd ( n1 , n2 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 144,
                                  "end_byte": 147,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 148,
                                  "end_byte": 159,
                                  "text": "( n1 , n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 150,
                                      "end_byte": 152,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 155,
                                      "end_byte": 157,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 162,
                      "end_byte": 185,
                      "text": "lcm = ( n1 * n2 ) / p ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 162,
                          "end_byte": 183,
                          "text": "lcm = ( n1 * n2 ) / p",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 162,
                              "end_byte": 165,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 166,
                              "end_byte": 167,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 168,
                              "end_byte": 183,
                              "text": "( n1 * n2 ) / p",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 168,
                                  "end_byte": 179,
                                  "text": "( n1 * n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 168,
                                      "end_byte": 169,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 170,
                                      "end_byte": 177,
                                      "text": "n1 * n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 170,
                                          "end_byte": 172,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 173,
                                          "end_byte": 174,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 175,
                                          "end_byte": 177,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 178,
                                      "end_byte": 179,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 180,
                                  "end_byte": 181,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 182,
                                  "end_byte": 183,
                                  "text": "p",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 184,
                          "end_byte": 185,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 186,
                      "end_byte": 218,
                      "text": "printf ( \"%d %d\\n\" , p , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 186,
                          "end_byte": 216,
                          "text": "printf ( \"%d %d\\n\" , p , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 186,
                              "end_byte": 192,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 193,
                              "end_byte": 216,
                              "text": "( \"%d %d\\n\" , p , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 195,
                                  "end_byte": 204,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 196,
                                      "end_byte": 201,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 201,
                                      "end_byte": 203,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 203,
                                      "end_byte": 204,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 205,
                                  "end_byte": 206,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 207,
                                  "end_byte": 208,
                                  "text": "p",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 211,
                                  "end_byte": 214,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 215,
                                  "end_byte": 216,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 217,
                          "end_byte": 218,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 219,
                      "end_byte": 220,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 221,
              "end_byte": 231,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 221,
                  "end_byte": 227,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 228,
                  "end_byte": 229,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 230,
                  "end_byte": 231,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 232,
              "end_byte": 233,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 234,
      "end_byte": 320,
      "text": "int gcd ( int n , int m ) { if ( m == 0 ) return n ; else return gcd ( m , n % m ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 234,
          "end_byte": 237,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 238,
          "end_byte": 259,
          "text": "gcd ( int n , int m )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 238,
              "end_byte": 241,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 242,
              "end_byte": 259,
              "text": "( int n , int m )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 242,
                  "end_byte": 243,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 244,
                  "end_byte": 249,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 244,
                      "end_byte": 247,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 248,
                      "end_byte": 249,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 250,
                  "end_byte": 251,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 252,
                  "end_byte": 257,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 252,
                      "end_byte": 255,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 256,
                      "end_byte": 257,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 258,
                  "end_byte": 259,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 260,
          "end_byte": 320,
          "text": "{ if ( m == 0 ) return n ; else return gcd ( m , n % m ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 260,
              "end_byte": 261,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 262,
              "end_byte": 318,
              "text": "if ( m == 0 ) return n ; else return gcd ( m , n % m ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 262,
                  "end_byte": 264,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 265,
                  "end_byte": 275,
                  "text": "( m == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 265,
                      "end_byte": 266,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 267,
                      "end_byte": 273,
                      "text": "m == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 267,
                          "end_byte": 268,
                          "text": "m",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 269,
                          "end_byte": 271,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 272,
                          "end_byte": 273,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 274,
                      "end_byte": 275,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 276,
                  "end_byte": 286,
                  "text": "return n ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 276,
                      "end_byte": 282,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 287,
                  "end_byte": 318,
                  "text": "else return gcd ( m , n % m ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 287,
                      "end_byte": 291,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 292,
                      "end_byte": 318,
                      "text": "return gcd ( m , n % m ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 292,
                          "end_byte": 298,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 299,
                          "end_byte": 316,
                          "text": "gcd ( m , n % m )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 299,
                              "end_byte": 302,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 303,
                              "end_byte": 316,
                              "text": "( m , n % m )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 303,
                                  "end_byte": 304,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": "m",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 309,
                                  "end_byte": 314,
                                  "text": "n % m",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 309,
                                      "end_byte": 310,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 311,
                                      "end_byte": 312,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 313,
                                      "end_byte": 314,
                                      "text": "m",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 315,
                                  "end_byte": 316,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 317,
                          "end_byte": 318,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 319,
              "end_byte": 320,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}