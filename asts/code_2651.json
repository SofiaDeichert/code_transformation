{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 506,
  "text": "int gcd ( int a , int b ) { int temp ; while ( b % a != 0 ) { temp = a ; a = b % a ; b = temp ; } return a ; } void main ( ) { int T , LCM [ 1000 ] , GCD [ 1000 ] , i , a , b ; do { scanf ( \"%d\" , & T ) ; } while ( T > 1000 && T < 1 ) ; for ( i = 0 ; i < T ; i ++ ) { do { scanf ( \"%d%d\" , & a , & b ) ; } while ( a < 0 && a > 1000000 && b < 0 && b > 1000000 ) ; GCD [ i ] = gcd ( a , b ) ; LCM [ i ] = ( a * b ) / GCD [ i ] ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 110,
      "text": "int gcd ( int a , int b ) { int temp ; while ( b % a != 0 ) { temp = a ; a = b % a ; b = temp ; } return a ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "gcd ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 110,
          "text": "{ int temp ; while ( b % a != 0 ) { temp = a ; a = b % a ; b = temp ; } return a ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 28,
              "end_byte": 38,
              "text": "int temp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 28,
                  "end_byte": 31,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 36,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 39,
              "end_byte": 97,
              "text": "while ( b % a != 0 ) { temp = a ; a = b % a ; b = temp ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 39,
                  "end_byte": 44,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 45,
                  "end_byte": 59,
                  "text": "( b % a != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 45,
                      "end_byte": 46,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 47,
                      "end_byte": 57,
                      "text": "b % a != 0",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 47,
                          "end_byte": 52,
                          "text": "b % a",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 47,
                              "end_byte": 48,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": "%",
                              "start_byte": 49,
                              "end_byte": 50,
                              "text": "%",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 51,
                              "end_byte": 52,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "!=",
                          "start_byte": 53,
                          "end_byte": 55,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 56,
                          "end_byte": 57,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 60,
                  "end_byte": 97,
                  "text": "{ temp = a ; a = b % a ; b = temp ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 62,
                      "end_byte": 72,
                      "text": "temp = a ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 62,
                          "end_byte": 70,
                          "text": "temp = a",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 62,
                              "end_byte": 66,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 67,
                              "end_byte": 68,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 69,
                              "end_byte": 70,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 71,
                          "end_byte": 72,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 73,
                      "end_byte": 84,
                      "text": "a = b % a ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 73,
                          "end_byte": 82,
                          "text": "a = b % a",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 73,
                              "end_byte": 74,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 75,
                              "end_byte": 76,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 77,
                              "end_byte": 82,
                              "text": "b % a",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 77,
                                  "end_byte": 78,
                                  "text": "b",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 79,
                                  "end_byte": 80,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 81,
                                  "end_byte": 82,
                                  "text": "a",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 83,
                          "end_byte": 84,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 85,
                      "end_byte": 95,
                      "text": "b = temp ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 85,
                          "end_byte": 93,
                          "text": "b = temp",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 85,
                              "end_byte": 86,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 87,
                              "end_byte": 88,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 89,
                              "end_byte": 93,
                              "text": "temp",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 96,
                      "end_byte": 97,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 98,
              "end_byte": 108,
              "text": "return a ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 98,
                  "end_byte": 104,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 105,
                  "end_byte": 106,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 107,
                  "end_byte": 108,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 109,
              "end_byte": 110,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 111,
      "end_byte": 506,
      "text": "void main ( ) { int T , LCM [ 1000 ] , GCD [ 1000 ] , i , a , b ; do { scanf ( \"%d\" , & T ) ; } while ( T > 1000 && T < 1 ) ; for ( i = 0 ; i < T ; i ++ ) { do { scanf ( \"%d%d\" , & a , & b ) ; } while ( a < 0 && a > 1000000 && b < 0 && b > 1000000 ) ; GCD [ i ] = gcd ( a , b ) ; LCM [ i ] = ( a * b ) / GCD [ i ] ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 111,
          "end_byte": 115,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 116,
          "end_byte": 124,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 116,
              "end_byte": 120,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 121,
              "end_byte": 124,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 121,
                  "end_byte": 122,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 125,
          "end_byte": 506,
          "text": "{ int T , LCM [ 1000 ] , GCD [ 1000 ] , i , a , b ; do { scanf ( \"%d\" , & T ) ; } while ( T > 1000 && T < 1 ) ; for ( i = 0 ; i < T ; i ++ ) { do { scanf ( \"%d%d\" , & a , & b ) ; } while ( a < 0 && a > 1000000 && b < 0 && b > 1000000 ) ; GCD [ i ] = gcd ( a , b ) ; LCM [ i ] = ( a * b ) / GCD [ i ] ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 125,
              "end_byte": 126,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 127,
              "end_byte": 176,
              "text": "int T , LCM [ 1000 ] , GCD [ 1000 ] , i , a , b ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 127,
                  "end_byte": 130,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 131,
                  "end_byte": 132,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 133,
                  "end_byte": 134,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 135,
                  "end_byte": 147,
                  "text": "LCM [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 135,
                      "end_byte": 138,
                      "text": "LCM",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 139,
                      "end_byte": 140,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 141,
                      "end_byte": 145,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 150,
                  "end_byte": 162,
                  "text": "GCD [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 150,
                      "end_byte": 153,
                      "text": "GCD",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 156,
                      "end_byte": 160,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 163,
                  "end_byte": 164,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 165,
                  "end_byte": 166,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 167,
                  "end_byte": 168,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 169,
                  "end_byte": 170,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 171,
                  "end_byte": 172,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 173,
                  "end_byte": 174,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 175,
                  "end_byte": 176,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "do_statement",
              "start_byte": 177,
              "end_byte": 236,
              "text": "do { scanf ( \"%d\" , & T ) ; } while ( T > 1000 && T < 1 ) ;",
              "children": [
                {
                  "type": "do",
                  "start_byte": 177,
                  "end_byte": 179,
                  "text": "do",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 180,
                  "end_byte": 206,
                  "text": "{ scanf ( \"%d\" , & T ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 180,
                      "end_byte": 181,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 182,
                      "end_byte": 204,
                      "text": "scanf ( \"%d\" , & T ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 182,
                          "end_byte": 202,
                          "text": "scanf ( \"%d\" , & T )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 182,
                              "end_byte": 187,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 188,
                              "end_byte": 202,
                              "text": "( \"%d\" , & T )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 188,
                                  "end_byte": 189,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 190,
                                  "end_byte": 194,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 190,
                                      "end_byte": 191,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 191,
                                      "end_byte": 193,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 197,
                                  "end_byte": 200,
                                  "text": "& T",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 199,
                                      "end_byte": 200,
                                      "text": "T",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 201,
                                  "end_byte": 202,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 203,
                          "end_byte": 204,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 205,
                      "end_byte": 206,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "while",
                  "start_byte": 207,
                  "end_byte": 212,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "parenthesized_expression",
                  "start_byte": 213,
                  "end_byte": 234,
                  "text": "( T > 1000 && T < 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 213,
                      "end_byte": 214,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 215,
                      "end_byte": 232,
                      "text": "T > 1000 && T < 1",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 215,
                          "end_byte": 223,
                          "text": "T > 1000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 215,
                              "end_byte": 216,
                              "text": "T",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 219,
                              "end_byte": 223,
                              "text": "1000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 224,
                          "end_byte": 226,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 227,
                          "end_byte": 232,
                          "text": "T < 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 227,
                              "end_byte": 228,
                              "text": "T",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 229,
                              "end_byte": 230,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 231,
                              "end_byte": 232,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 233,
                      "end_byte": 234,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 235,
                  "end_byte": 236,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 237,
              "end_byte": 428,
              "text": "for ( i = 0 ; i < T ; i ++ ) { do { scanf ( \"%d%d\" , & a , & b ) ; } while ( a < 0 && a > 1000000 && b < 0 && b > 1000000 ) ; GCD [ i ] = gcd ( a , b ) ; LCM [ i ] = ( a * b ) / GCD [ i ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 237,
                  "end_byte": 240,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 241,
                  "end_byte": 242,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 243,
                  "end_byte": 248,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 245,
                      "end_byte": 246,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 247,
                      "end_byte": 248,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 249,
                  "end_byte": 250,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 251,
                  "end_byte": 256,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 251,
                      "end_byte": 252,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 253,
                      "end_byte": 254,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 255,
                      "end_byte": 256,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 257,
                  "end_byte": 258,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 259,
                  "end_byte": 263,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 259,
                      "end_byte": 260,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 261,
                      "end_byte": 263,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 264,
                  "end_byte": 265,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 266,
                  "end_byte": 428,
                  "text": "{ do { scanf ( \"%d%d\" , & a , & b ) ; } while ( a < 0 && a > 1000000 && b < 0 && b > 1000000 ) ; GCD [ i ] = gcd ( a , b ) ; LCM [ i ] = ( a * b ) / GCD [ i ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 266,
                      "end_byte": 267,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "do_statement",
                      "start_byte": 268,
                      "end_byte": 362,
                      "text": "do { scanf ( \"%d%d\" , & a , & b ) ; } while ( a < 0 && a > 1000000 && b < 0 && b > 1000000 ) ;",
                      "children": [
                        {
                          "type": "do",
                          "start_byte": 268,
                          "end_byte": 270,
                          "text": "do",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 271,
                          "end_byte": 305,
                          "text": "{ scanf ( \"%d%d\" , & a , & b ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 273,
                              "end_byte": 303,
                              "text": "scanf ( \"%d%d\" , & a , & b ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 273,
                                  "end_byte": 301,
                                  "text": "scanf ( \"%d%d\" , & a , & b )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 273,
                                      "end_byte": 278,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 279,
                                      "end_byte": 301,
                                      "text": "( \"%d%d\" , & a , & b )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 279,
                                          "end_byte": 280,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 281,
                                          "end_byte": 287,
                                          "text": "\"%d%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 281,
                                              "end_byte": 282,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 282,
                                              "end_byte": 286,
                                              "text": "%d%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 286,
                                              "end_byte": 287,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 288,
                                          "end_byte": 289,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 290,
                                          "end_byte": 293,
                                          "text": "& a",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 290,
                                              "end_byte": 291,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 292,
                                              "end_byte": 293,
                                              "text": "a",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 294,
                                          "end_byte": 295,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 296,
                                          "end_byte": 299,
                                          "text": "& b",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 296,
                                              "end_byte": 297,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 298,
                                              "end_byte": 299,
                                              "text": "b",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 300,
                                          "end_byte": 301,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 302,
                                  "end_byte": 303,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 304,
                              "end_byte": 305,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "while",
                          "start_byte": 306,
                          "end_byte": 311,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 312,
                          "end_byte": 360,
                          "text": "( a < 0 && a > 1000000 && b < 0 && b > 1000000 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 312,
                              "end_byte": 313,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 314,
                              "end_byte": 358,
                              "text": "a < 0 && a > 1000000 && b < 0 && b > 1000000",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 314,
                                  "end_byte": 343,
                                  "text": "a < 0 && a > 1000000 && b < 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 314,
                                      "end_byte": 334,
                                      "text": "a < 0 && a > 1000000",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 314,
                                          "end_byte": 319,
                                          "text": "a < 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 314,
                                              "end_byte": 315,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "<",
                                              "start_byte": 316,
                                              "end_byte": 317,
                                              "text": "<",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 318,
                                              "end_byte": 319,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 320,
                                          "end_byte": 322,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 323,
                                          "end_byte": 334,
                                          "text": "a > 1000000",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 323,
                                              "end_byte": 324,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": ">",
                                              "start_byte": 325,
                                              "end_byte": 326,
                                              "text": ">",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 327,
                                              "end_byte": 334,
                                              "text": "1000000",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "&&",
                                      "start_byte": 335,
                                      "end_byte": 337,
                                      "text": "&&",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 338,
                                      "end_byte": 343,
                                      "text": "b < 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 338,
                                          "end_byte": 339,
                                          "text": "b",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 340,
                                          "end_byte": 341,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 342,
                                          "end_byte": 343,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 344,
                                  "end_byte": 346,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 347,
                                  "end_byte": 358,
                                  "text": "b > 1000000",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 347,
                                      "end_byte": 348,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 349,
                                      "end_byte": 350,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 351,
                                      "end_byte": 358,
                                      "text": "1000000",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 359,
                              "end_byte": 360,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 361,
                          "end_byte": 362,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 363,
                      "end_byte": 390,
                      "text": "GCD [ i ] = gcd ( a , b ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 363,
                          "end_byte": 388,
                          "text": "GCD [ i ] = gcd ( a , b )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 363,
                              "end_byte": 372,
                              "text": "GCD [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 363,
                                  "end_byte": 366,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 367,
                                  "end_byte": 372,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 367,
                                      "end_byte": 368,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 369,
                                      "end_byte": 370,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 371,
                                      "end_byte": 372,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 373,
                              "end_byte": 374,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 375,
                              "end_byte": 388,
                              "text": "gcd ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 375,
                                  "end_byte": 378,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 379,
                                  "end_byte": 388,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 379,
                                      "end_byte": 380,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 381,
                                      "end_byte": 382,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 383,
                                      "end_byte": 384,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 385,
                                      "end_byte": 386,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 387,
                                      "end_byte": 388,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 389,
                          "end_byte": 390,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 391,
                      "end_byte": 426,
                      "text": "LCM [ i ] = ( a * b ) / GCD [ i ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 391,
                          "end_byte": 424,
                          "text": "LCM [ i ] = ( a * b ) / GCD [ i ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 391,
                              "end_byte": 400,
                              "text": "LCM [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 391,
                                  "end_byte": 394,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 395,
                                  "end_byte": 400,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 397,
                                      "end_byte": 398,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 399,
                                      "end_byte": 400,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 401,
                              "end_byte": 402,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 403,
                              "end_byte": 424,
                              "text": "( a * b ) / GCD [ i ]",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 403,
                                  "end_byte": 412,
                                  "text": "( a * b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 403,
                                      "end_byte": 404,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 405,
                                      "end_byte": 410,
                                      "text": "a * b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 405,
                                          "end_byte": 406,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 407,
                                          "end_byte": 408,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 409,
                                          "end_byte": 410,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 413,
                                  "end_byte": 414,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 415,
                                  "end_byte": 424,
                                  "text": "GCD [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 415,
                                      "end_byte": 418,
                                      "text": "GCD",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 419,
                                      "end_byte": 424,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 419,
                                          "end_byte": 420,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 421,
                                          "end_byte": 422,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 423,
                                          "end_byte": 424,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 425,
                          "end_byte": 426,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 427,
                      "end_byte": 428,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 429,
              "end_byte": 504,
              "text": "for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 429,
                  "end_byte": 432,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 433,
                  "end_byte": 434,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 435,
                  "end_byte": 440,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 435,
                      "end_byte": 436,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 437,
                      "end_byte": 438,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 439,
                      "end_byte": 440,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 441,
                  "end_byte": 442,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 443,
                  "end_byte": 448,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 443,
                      "end_byte": 444,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 445,
                      "end_byte": 446,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 447,
                      "end_byte": 448,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 449,
                  "end_byte": 450,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 451,
                  "end_byte": 455,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 451,
                      "end_byte": 452,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 453,
                      "end_byte": 455,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 456,
                  "end_byte": 457,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 458,
                  "end_byte": 504,
                  "text": "printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 458,
                      "end_byte": 502,
                      "text": "printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 458,
                          "end_byte": 464,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 465,
                          "end_byte": 502,
                          "text": "( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 465,
                              "end_byte": 466,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 467,
                              "end_byte": 476,
                              "text": "\"%d %d\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 467,
                                  "end_byte": 468,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 468,
                                  "end_byte": 473,
                                  "text": "%d %d",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 473,
                                  "end_byte": 475,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 475,
                                  "end_byte": 476,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 477,
                              "end_byte": 478,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 479,
                              "end_byte": 488,
                              "text": "GCD [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 479,
                                  "end_byte": 482,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 483,
                                  "end_byte": 488,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 483,
                                      "end_byte": 484,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 485,
                                      "end_byte": 486,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 487,
                                      "end_byte": 488,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 489,
                              "end_byte": 490,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 491,
                              "end_byte": 500,
                              "text": "LCM [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 491,
                                  "end_byte": 494,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 495,
                                  "end_byte": 500,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 495,
                                      "end_byte": 496,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 497,
                                      "end_byte": 498,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 499,
                                      "end_byte": 500,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 501,
                              "end_byte": 502,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 503,
                      "end_byte": 504,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 505,
              "end_byte": 506,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}