{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 605,
  "text": "int tri [ 101 ] [ 101 ] ; int max ( int a , int b ) { return a > b ? a : b ; } int sumtrian ( int i , int j , int n ) { int pRight , pLeft ; if ( i == n ) { return 0 ; } else { pLeft = sumtrian ( i + 1 , j , n ) ; pRight = sumtrian ( i + 1 , j + 1 , n ) ; return tri [ i ] [ j ] + max ( pLeft , pRight ) ; } } int main ( int argc , char const * argv [ ] ) { int i , j , t , n , p ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & tri [ i ] [ j ] ) ; } } p = sumtrian ( 0 , 0 , n ) ; printf ( \"%d\\n\" , p ) ; } }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 25,
      "text": "int tri [ 101 ] [ 101 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "tri [ 101 ] [ 101 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "tri [ 101 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "tri",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "101",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "101",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 24,
          "end_byte": 25,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 26,
      "end_byte": 78,
      "text": "int max ( int a , int b ) { return a > b ? a : b ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 26,
          "end_byte": 29,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 30,
          "end_byte": 51,
          "text": "max ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 30,
              "end_byte": 33,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 34,
              "end_byte": 51,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 36,
                  "end_byte": 41,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 36,
                      "end_byte": 39,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 40,
                      "end_byte": 41,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 44,
                  "end_byte": 49,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 44,
                      "end_byte": 47,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 48,
                      "end_byte": 49,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 52,
          "end_byte": 78,
          "text": "{ return a > b ? a : b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 52,
              "end_byte": 53,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 54,
              "end_byte": 76,
              "text": "return a > b ? a : b ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 54,
                  "end_byte": 60,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "conditional_expression",
                  "start_byte": 61,
                  "end_byte": 74,
                  "text": "a > b ? a : b",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 61,
                      "end_byte": 66,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 61,
                          "end_byte": 62,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 65,
                          "end_byte": 66,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "?",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "?",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ":",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": ":",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 73,
                      "end_byte": 74,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 77,
              "end_byte": 78,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 79,
      "end_byte": 309,
      "text": "int sumtrian ( int i , int j , int n ) { int pRight , pLeft ; if ( i == n ) { return 0 ; } else { pLeft = sumtrian ( i + 1 , j , n ) ; pRight = sumtrian ( i + 1 , j + 1 , n ) ; return tri [ i ] [ j ] + max ( pLeft , pRight ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 79,
          "end_byte": 82,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 83,
          "end_byte": 117,
          "text": "sumtrian ( int i , int j , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 83,
              "end_byte": 91,
              "text": "sumtrian",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 92,
              "end_byte": 117,
              "text": "( int i , int j , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 94,
                  "end_byte": 99,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 94,
                      "end_byte": 97,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 102,
                  "end_byte": 107,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 102,
                      "end_byte": 105,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 110,
                  "end_byte": 115,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 110,
                      "end_byte": 113,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 118,
          "end_byte": 309,
          "text": "{ int pRight , pLeft ; if ( i == n ) { return 0 ; } else { pLeft = sumtrian ( i + 1 , j , n ) ; pRight = sumtrian ( i + 1 , j + 1 , n ) ; return tri [ i ] [ j ] + max ( pLeft , pRight ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 118,
              "end_byte": 119,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 120,
              "end_byte": 140,
              "text": "int pRight , pLeft ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 120,
                  "end_byte": 123,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 124,
                  "end_byte": 130,
                  "text": "pRight",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 131,
                  "end_byte": 132,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 133,
                  "end_byte": 138,
                  "text": "pLeft",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 139,
                  "end_byte": 140,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 141,
              "end_byte": 307,
              "text": "if ( i == n ) { return 0 ; } else { pLeft = sumtrian ( i + 1 , j , n ) ; pRight = sumtrian ( i + 1 , j + 1 , n ) ; return tri [ i ] [ j ] + max ( pLeft , pRight ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 141,
                  "end_byte": 143,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 144,
                  "end_byte": 154,
                  "text": "( i == n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 144,
                      "end_byte": 145,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 146,
                      "end_byte": 152,
                      "text": "i == n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 146,
                          "end_byte": 147,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 148,
                          "end_byte": 150,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 151,
                          "end_byte": 152,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 153,
                      "end_byte": 154,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 155,
                  "end_byte": 169,
                  "text": "{ return 0 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 155,
                      "end_byte": 156,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 157,
                      "end_byte": 167,
                      "text": "return 0 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 157,
                          "end_byte": 163,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 164,
                          "end_byte": 165,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 168,
                      "end_byte": 169,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 170,
                  "end_byte": 307,
                  "text": "else { pLeft = sumtrian ( i + 1 , j , n ) ; pRight = sumtrian ( i + 1 , j + 1 , n ) ; return tri [ i ] [ j ] + max ( pLeft , pRight ) ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 170,
                      "end_byte": 174,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 175,
                      "end_byte": 307,
                      "text": "{ pLeft = sumtrian ( i + 1 , j , n ) ; pRight = sumtrian ( i + 1 , j + 1 , n ) ; return tri [ i ] [ j ] + max ( pLeft , pRight ) ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 175,
                          "end_byte": 176,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 177,
                          "end_byte": 213,
                          "text": "pLeft = sumtrian ( i + 1 , j , n ) ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 177,
                              "end_byte": 211,
                              "text": "pLeft = sumtrian ( i + 1 , j , n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 177,
                                  "end_byte": 182,
                                  "text": "pLeft",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 183,
                                  "end_byte": 184,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 185,
                                  "end_byte": 211,
                                  "text": "sumtrian ( i + 1 , j , n )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 185,
                                      "end_byte": 193,
                                      "text": "sumtrian",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 194,
                                      "end_byte": 211,
                                      "text": "( i + 1 , j , n )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 194,
                                          "end_byte": 195,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 196,
                                          "end_byte": 201,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 196,
                                              "end_byte": 197,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 198,
                                              "end_byte": 199,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 200,
                                              "end_byte": 201,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 202,
                                          "end_byte": 203,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 204,
                                          "end_byte": 205,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 206,
                                          "end_byte": 207,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 208,
                                          "end_byte": 209,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 210,
                                          "end_byte": 211,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 212,
                              "end_byte": 213,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 214,
                          "end_byte": 255,
                          "text": "pRight = sumtrian ( i + 1 , j + 1 , n ) ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 214,
                              "end_byte": 253,
                              "text": "pRight = sumtrian ( i + 1 , j + 1 , n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 214,
                                  "end_byte": 220,
                                  "text": "pRight",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 221,
                                  "end_byte": 222,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 223,
                                  "end_byte": 253,
                                  "text": "sumtrian ( i + 1 , j + 1 , n )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 223,
                                      "end_byte": 231,
                                      "text": "sumtrian",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 232,
                                      "end_byte": 253,
                                      "text": "( i + 1 , j + 1 , n )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 232,
                                          "end_byte": 233,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 234,
                                          "end_byte": 239,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 234,
                                              "end_byte": 235,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 236,
                                              "end_byte": 237,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 238,
                                              "end_byte": 239,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 240,
                                          "end_byte": 241,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 242,
                                          "end_byte": 247,
                                          "text": "j + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 242,
                                              "end_byte": 243,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 244,
                                              "end_byte": 245,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 246,
                                              "end_byte": 247,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 248,
                                          "end_byte": 249,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 250,
                                          "end_byte": 251,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 252,
                                          "end_byte": 253,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 254,
                              "end_byte": 255,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 256,
                          "end_byte": 305,
                          "text": "return tri [ i ] [ j ] + max ( pLeft , pRight ) ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 256,
                              "end_byte": 262,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 263,
                              "end_byte": 303,
                              "text": "tri [ i ] [ j ] + max ( pLeft , pRight )",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 263,
                                  "end_byte": 278,
                                  "text": "tri [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 263,
                                      "end_byte": 272,
                                      "text": "tri [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 263,
                                          "end_byte": 266,
                                          "text": "tri",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 267,
                                          "end_byte": 272,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 267,
                                              "end_byte": 268,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 269,
                                              "end_byte": 270,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 271,
                                              "end_byte": 272,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 273,
                                      "end_byte": 278,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 273,
                                          "end_byte": 274,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 275,
                                          "end_byte": 276,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 277,
                                          "end_byte": 278,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 279,
                                  "end_byte": 280,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 281,
                                  "end_byte": 303,
                                  "text": "max ( pLeft , pRight )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 281,
                                      "end_byte": 284,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 285,
                                      "end_byte": 303,
                                      "text": "( pLeft , pRight )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 285,
                                          "end_byte": 286,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 287,
                                          "end_byte": 292,
                                          "text": "pLeft",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 293,
                                          "end_byte": 294,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 295,
                                          "end_byte": 301,
                                          "text": "pRight",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 302,
                                          "end_byte": 303,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 304,
                              "end_byte": 305,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 306,
                          "end_byte": 307,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 308,
              "end_byte": 309,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 310,
      "end_byte": 605,
      "text": "int main ( int argc , char const * argv [ ] ) { int i , j , t , n , p ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & tri [ i ] [ j ] ) ; } } p = sumtrian ( 0 , 0 , n ) ; printf ( \"%d\\n\" , p ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 310,
          "end_byte": 313,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 314,
          "end_byte": 355,
          "text": "main ( int argc , char const * argv [ ] )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 314,
              "end_byte": 318,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 319,
              "end_byte": 355,
              "text": "( int argc , char const * argv [ ] )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 321,
                  "end_byte": 329,
                  "text": "int argc",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 321,
                      "end_byte": 324,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 325,
                      "end_byte": 329,
                      "text": "argc",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 330,
                  "end_byte": 331,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 332,
                  "end_byte": 353,
                  "text": "char const * argv [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 332,
                      "end_byte": 336,
                      "text": "char",
                      "children": []
                    },
                    {
                      "type": "type_qualifier",
                      "start_byte": 337,
                      "end_byte": 342,
                      "text": "const",
                      "children": [
                        {
                          "type": "const",
                          "start_byte": 337,
                          "end_byte": 342,
                          "text": "const",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 343,
                      "end_byte": 353,
                      "text": "* argv [ ]",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 343,
                          "end_byte": 344,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 345,
                          "end_byte": 353,
                          "text": "argv [ ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 345,
                              "end_byte": 349,
                              "text": "argv",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 350,
                              "end_byte": 351,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 352,
                              "end_byte": 353,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 354,
                  "end_byte": 355,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 356,
          "end_byte": 605,
          "text": "{ int i , j , t , n , p ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & tri [ i ] [ j ] ) ; } } p = sumtrian ( 0 , 0 , n ) ; printf ( \"%d\\n\" , p ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 356,
              "end_byte": 357,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 358,
              "end_byte": 381,
              "text": "int i , j , t , n , p ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 358,
                  "end_byte": 361,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 362,
                  "end_byte": 363,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 364,
                  "end_byte": 365,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 366,
                  "end_byte": 367,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 368,
                  "end_byte": 369,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 372,
                  "end_byte": 373,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 374,
                  "end_byte": 375,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 376,
                  "end_byte": 377,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 378,
                  "end_byte": 379,
                  "text": "p",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 380,
                  "end_byte": 381,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 382,
              "end_byte": 404,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 382,
                  "end_byte": 402,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 382,
                      "end_byte": 387,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 388,
                      "end_byte": 402,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 388,
                          "end_byte": 389,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 390,
                          "end_byte": 394,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 390,
                              "end_byte": 391,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 391,
                              "end_byte": 393,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 393,
                              "end_byte": 394,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 395,
                          "end_byte": 396,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 397,
                          "end_byte": 400,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 397,
                              "end_byte": 398,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 399,
                              "end_byte": 400,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 401,
                          "end_byte": 402,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 403,
                  "end_byte": 404,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 405,
              "end_byte": 603,
              "text": "while ( t -- ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & tri [ i ] [ j ] ) ; } } p = sumtrian ( 0 , 0 , n ) ; printf ( \"%d\\n\" , p ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 405,
                  "end_byte": 410,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 411,
                  "end_byte": 419,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 411,
                      "end_byte": 412,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 413,
                      "end_byte": 417,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 413,
                          "end_byte": 414,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 415,
                          "end_byte": 417,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 418,
                      "end_byte": 419,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 420,
                  "end_byte": 603,
                  "text": "{ scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & tri [ i ] [ j ] ) ; } } p = sumtrian ( 0 , 0 , n ) ; printf ( \"%d\\n\" , p ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 420,
                      "end_byte": 421,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 422,
                      "end_byte": 444,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 422,
                          "end_byte": 442,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 422,
                              "end_byte": 427,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 428,
                              "end_byte": 442,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 428,
                                  "end_byte": 429,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 430,
                                  "end_byte": 434,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 430,
                                      "end_byte": 431,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 431,
                                      "end_byte": 433,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 433,
                                      "end_byte": 434,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 435,
                                  "end_byte": 436,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 437,
                                  "end_byte": 440,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 437,
                                      "end_byte": 438,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 439,
                                      "end_byte": 440,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 441,
                                  "end_byte": 442,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 443,
                          "end_byte": 444,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 445,
                      "end_byte": 548,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & tri [ i ] [ j ] ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 445,
                          "end_byte": 448,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 449,
                          "end_byte": 450,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 451,
                          "end_byte": 456,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 451,
                              "end_byte": 452,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 455,
                              "end_byte": 456,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 457,
                          "end_byte": 458,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 459,
                          "end_byte": 464,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 459,
                              "end_byte": 460,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 461,
                              "end_byte": 462,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 463,
                              "end_byte": 464,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 465,
                          "end_byte": 466,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 467,
                          "end_byte": 471,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 467,
                              "end_byte": 468,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 469,
                              "end_byte": 471,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 472,
                          "end_byte": 473,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 474,
                          "end_byte": 548,
                          "text": "{ for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & tri [ i ] [ j ] ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 474,
                              "end_byte": 475,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 476,
                              "end_byte": 546,
                              "text": "for ( j = 0 ; j <= i ; j ++ ) { scanf ( \"%d\" , & tri [ i ] [ j ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 476,
                                  "end_byte": 479,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 480,
                                  "end_byte": 481,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 482,
                                  "end_byte": 487,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 482,
                                      "end_byte": 483,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 484,
                                      "end_byte": 485,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 486,
                                      "end_byte": 487,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 488,
                                  "end_byte": 489,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 490,
                                  "end_byte": 496,
                                  "text": "j <= i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 490,
                                      "end_byte": 491,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 492,
                                      "end_byte": 494,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 495,
                                      "end_byte": 496,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 497,
                                  "end_byte": 498,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 499,
                                  "end_byte": 503,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 499,
                                      "end_byte": 500,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 501,
                                      "end_byte": 503,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 504,
                                  "end_byte": 505,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 506,
                                  "end_byte": 546,
                                  "text": "{ scanf ( \"%d\" , & tri [ i ] [ j ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 506,
                                      "end_byte": 507,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 508,
                                      "end_byte": 544,
                                      "text": "scanf ( \"%d\" , & tri [ i ] [ j ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 508,
                                          "end_byte": 542,
                                          "text": "scanf ( \"%d\" , & tri [ i ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 508,
                                              "end_byte": 513,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 514,
                                              "end_byte": 542,
                                              "text": "( \"%d\" , & tri [ i ] [ j ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 514,
                                                  "end_byte": 515,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 516,
                                                  "end_byte": 520,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 516,
                                                      "end_byte": 517,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 517,
                                                      "end_byte": 519,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 519,
                                                      "end_byte": 520,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 521,
                                                  "end_byte": 522,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 523,
                                                  "end_byte": 540,
                                                  "text": "& tri [ i ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 523,
                                                      "end_byte": 524,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 525,
                                                      "end_byte": 540,
                                                      "text": "tri [ i ] [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 525,
                                                          "end_byte": 534,
                                                          "text": "tri [ i ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 525,
                                                              "end_byte": 528,
                                                              "text": "tri",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 529,
                                                              "end_byte": 534,
                                                              "text": "[ i ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 529,
                                                                  "end_byte": 530,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 531,
                                                                  "end_byte": 532,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 533,
                                                                  "end_byte": 534,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 535,
                                                          "end_byte": 540,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 535,
                                                              "end_byte": 536,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 537,
                                                              "end_byte": 538,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 539,
                                                              "end_byte": 540,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 541,
                                                  "end_byte": 542,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 543,
                                          "end_byte": 544,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 545,
                                      "end_byte": 546,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 547,
                              "end_byte": 548,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 549,
                      "end_byte": 577,
                      "text": "p = sumtrian ( 0 , 0 , n ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 549,
                          "end_byte": 575,
                          "text": "p = sumtrian ( 0 , 0 , n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 549,
                              "end_byte": 550,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 551,
                              "end_byte": 552,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 553,
                              "end_byte": 575,
                              "text": "sumtrian ( 0 , 0 , n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 553,
                                  "end_byte": 561,
                                  "text": "sumtrian",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 562,
                                  "end_byte": 575,
                                  "text": "( 0 , 0 , n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 562,
                                      "end_byte": 563,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 564,
                                      "end_byte": 565,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 566,
                                      "end_byte": 567,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 568,
                                      "end_byte": 569,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 570,
                                      "end_byte": 571,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 572,
                                      "end_byte": 573,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 574,
                                      "end_byte": 575,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 576,
                          "end_byte": 577,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 578,
                      "end_byte": 601,
                      "text": "printf ( \"%d\\n\" , p ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 578,
                          "end_byte": 599,
                          "text": "printf ( \"%d\\n\" , p )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 578,
                              "end_byte": 584,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 585,
                              "end_byte": 599,
                              "text": "( \"%d\\n\" , p )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 585,
                                  "end_byte": 586,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 587,
                                  "end_byte": 593,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 587,
                                      "end_byte": 588,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 588,
                                      "end_byte": 590,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 590,
                                      "end_byte": 592,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 592,
                                      "end_byte": 593,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 594,
                                  "end_byte": 595,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 596,
                                  "end_byte": 597,
                                  "text": "p",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 598,
                                  "end_byte": 599,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 600,
                          "end_byte": 601,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 602,
                      "end_byte": 603,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 604,
              "end_byte": 605,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}