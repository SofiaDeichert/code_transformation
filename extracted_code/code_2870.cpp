int cache [ 100 ] [ 100 ] ; int a [ 100 ] [ 100 ] ; int l ; int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int solve ( int i , int j ) { int t1 , t2 , t ; if ( i > l - 1 ) return 0 ; if ( cache [ i ] [ j ] != - 1 ) return cache [ i ] [ j ] ; t1 = solve ( i + 1 , j ) ; t2 = solve ( i + 1 , j + 1 ) ; t = max ( t1 , t2 ) + a [ i ] [ j ] ; cache [ i ] [ j ] = t ; return t ; } int main ( ) { int t , i , j , ans ; scanf ( "%d" , & t ) ; while ( t ) { scanf ( " %d" , & l ) ; for ( i = 0 ; i <= l - 1 ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { a [ i ] [ j ] = 0 ; cache [ i ] [ j ] = - 1 ; scanf ( " %d" , & a [ i ] [ j ] ) ; } } ans = solve ( 0 , 0 ) ; printf ( "%d\n" , ans ) ; t = t - 1 ; } return 0 ; }