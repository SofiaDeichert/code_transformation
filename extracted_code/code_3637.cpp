int main ( ) { int m , j , i , h , n , t , a [ 2000000 ] , b [ 100 ] [ 100 ] , x [ 1000 ] = { 0 } , k ; scanf ( "%d" , & t ) ; for ( m = 0 ; m < t ; m ++ ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & b [ i ] [ j ] ) ; } } if ( n == 1 ) { a [ 0 ] = 0 ; a [ 1 ] = b [ 0 ] [ 0 ] ; x [ 0 ] = a [ 1 ] ; } else { a [ 0 ] = 0 ; a [ 1 ] = b [ 0 ] [ 0 ] ; a [ 2 ] = b [ 0 ] [ 0 ] + b [ 1 ] [ 0 ] ; a [ 3 ] = b [ 0 ] [ 0 ] + b [ 1 ] [ 1 ] ; k = 4 ; if ( a [ 2 ] > a [ 3 ] ) { x [ 0 ] = a [ 2 ] ; } else { x [ 0 ] = a [ 3 ] ; } } for ( i = 2 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) { a [ k ] = b [ i ] [ j ] + a [ k - ( i - 1 ) * ( i - 2 ) - 2 ] ; ++ k ; } else if ( j == i ) { a [ k ] = b [ i ] [ j ] + a [ k - ( i * ( j - 1 ) + ( i - 1 ) * ( i - j ) + 2 ) ] ; ++ k ; } else { for ( h = 1 ; h <= i ; h ++ ) { a [ k ] = b [ i ] [ j ] + a [ k - ( i * ( j - 1 ) + ( i - 1 ) * ( i - j ) + 2 ) + h ] ; ++ k ; } } } } for ( i = 0 ; i < k ; i ++ ) { if ( x [ m ] < a [ i ] ) { x [ m ] = a [ i ] ; } } } for ( i = 0 ; i < t ; i ++ ) { printf ( "%d\n" , x [ i ] ) ; } return 0 ; }