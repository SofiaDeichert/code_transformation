int ar [ 1000 ] [ 5050 ] ; long long int max ; int n [ 1000 ] ; void sumtrian ( int a , int i , int l , long long int p ) { int q ; if ( l == n [ a ] - 1 ) { q = p + ar [ a ] [ i ] ; if ( max <= 0 ) { max = q ; } if ( q > max ) { max = q ; } return ; } p += ar [ a ] [ i ] ; sumtrian ( a , i + l + 1 , l + 1 , p ) ; sumtrian ( a , i + l + 2 , l + 1 , p ) ; return ; } int main ( ) { int t ; register int i , a , k ; scanf ( "%d" , & t ) ; for ( a = 0 ; a < t ; a ++ ) { scanf ( "%d" , & n [ a ] ) ; for ( i = 0 ; i < ( ( n [ a ] * ( n [ a ] + 1 ) ) / 2 ) ; i ++ ) { scanf ( "%d" , & ar [ a ] [ i ] ) ; } } for ( a = 0 ; a < t ; a ++ ) { max = ( 0 ) ; sumtrian ( a , 0 , 0 , 0 ) ; printf ( "%lld\n" , max ) ; } }