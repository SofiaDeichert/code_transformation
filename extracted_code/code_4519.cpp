int n ; int max ( int a , int b ) { return ( a > b ) ? a : b ; } int find_ans ( int i , int j , int ( * arr1 ) [ 100 ] , int ( * table ) [ 100 ] , int n ) { if ( i == n || j == n ) return 0 ; if ( table [ i ] [ j ] != 0 ) return table [ i ] [ j ] ; return table [ i ] [ j ] = arr1 [ i ] [ j ] + max ( find_ans ( i + 1 , j , arr1 , table , n ) , find_ans ( i + 1 , j + 1 , arr1 , table , n ) ) ; } int main ( ) { int T ; scanf ( "%d" , & T ) ; while ( T -- ) { int n , i , j ; scanf ( "%d" , & n ) ; int arr1 [ 100 ] [ 100 ] ; int table [ 100 ] [ 100 ] = { 0 } ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & arr1 [ i ] [ j ] ) ; printf ( "%d\n" , find_ans ( 0 , 0 , arr1 , table , n ) ) ; } return 0 ; }