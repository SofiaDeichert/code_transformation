int findSum ( int * * array , int j , int t , int r ) ; void printArray ( int * * array , int r ) ; int main ( ) { int n ; int r ; int * * array ; int i ; int j ; int k ; int t ; int sum ; int buffer ; scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & r ) ; array = ( int * * ) malloc ( sizeof ( int * ) * r ) ; for ( j = 0 ; j < r ; j ++ ) { k = j + 1 ; array [ j ] = ( int * ) malloc ( sizeof ( int ) * k ) ; for ( t = 0 ; t < k ; t ++ ) { scanf ( "%d" , & array [ j ] [ t ] ) ; } } sum = findSum ( array , 0 , 0 , r ) ; printf ( "%d" , sum ) ; } } int findSum ( int * * array , int j , int t , int r ) { int sum1 = array [ j ] [ t ] ; int sum2 = array [ j ] [ t ] ; if ( r > 1 ) { sum1 += findSum ( array , j + 1 , t , r - 1 ) ; sum2 += findSum ( array , j + 1 , t + 1 , r - 1 ) ; if ( sum1 > sum2 ) { return sum1 ; } else { return sum2 ; } } else { if ( sum1 > sum2 ) { return sum1 ; } else { return sum2 ; } } return 0 ; } void printArray ( int * * array , int r ) { int i ; int j ; int k ; for ( i = 0 ; i < r ; i ++ ) { j = i + 1 ; for ( k = 0 ; k < j ; k ++ ) { printf ( "%d" , array [ i ] [ k ] ) ; } printf ( "\n" ) ; } }