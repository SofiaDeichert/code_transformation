int largest = 0 ; void largest_sum ( int * , int , int , int , int ) ; int main ( ) { int t , n , * m , s ; int i ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; s = ( n * ( n + 1 ) ) / 2 ; m = ( int * ) malloc ( sizeof ( int ) * s + 1 ) ; for ( i = 0 ; i < m ; i ++ ) scanf ( "%d" , m + i ) ; largest_sum ( m , 0 , 0 , 0 , n ) ; printf ( "%d\n" , largest ) ; free ( m ) ; } return 0 ; } void largest_sum ( int * m , int sum , int l , int c , int n ) { int cstart = ( l * ( l + 1 ) ) / 2 ; if ( l < n ) { largest_sum ( m + l + 1 , sum + m [ c ] , l + 1 , c , n ) ; if ( l != 0 ) largest_sum ( m + l + 1 , sum + m [ c + 1 ] , l + 1 , c + 1 , n ) ; } if ( l == n ) if ( largest < sum ) largest = sum ; }