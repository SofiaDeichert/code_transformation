{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 537,
  "text": "int main ( ) { int T , i = 0 , A , B , GCD [ 1000 ] , LCM [ 1000 ] , small , j ; scanf ( \"%d\" , & T ) ; if ( T <= 1000 && T >= 1 ) { while ( 1 ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 ) { small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; } } for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 537,
      "text": "int main ( ) { int T , i = 0 , A , B , GCD [ 1000 ] , LCM [ 1000 ] , small , j ; scanf ( \"%d\" , & T ) ; if ( T <= 1000 && T >= 1 ) { while ( 1 ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 ) { small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; } } for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 537,
          "text": "{ int T , i = 0 , A , B , GCD [ 1000 ] , LCM [ 1000 ] , small , j ; scanf ( \"%d\" , & T ) ; if ( T <= 1000 && T >= 1 ) { while ( 1 ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 ) { small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; } } for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 80,
              "text": "int T , i = 0 , A , B , GCD [ 1000 ] , LCM [ 1000 ] , small , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 23,
                  "end_byte": 28,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 23,
                      "end_byte": 24,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 25,
                      "end_byte": 26,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 27,
                      "end_byte": 28,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 39,
                  "end_byte": 51,
                  "text": "GCD [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 39,
                      "end_byte": 42,
                      "text": "GCD",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 43,
                      "end_byte": 44,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 45,
                      "end_byte": 49,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 54,
                  "end_byte": 66,
                  "text": "LCM [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 57,
                      "text": "LCM",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 60,
                      "end_byte": 64,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 69,
                  "end_byte": 74,
                  "text": "small",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 81,
              "end_byte": 103,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 81,
                  "end_byte": 101,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 81,
                      "end_byte": 86,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 87,
                      "end_byte": 101,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 89,
                          "end_byte": 93,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 89,
                              "end_byte": 90,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 90,
                              "end_byte": 92,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 96,
                          "end_byte": 99,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 96,
                              "end_byte": 97,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 102,
                  "end_byte": 103,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 104,
              "end_byte": 524,
              "text": "if ( T <= 1000 && T >= 1 ) { while ( 1 ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 ) { small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; } } for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 104,
                  "end_byte": 106,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 107,
                  "end_byte": 130,
                  "text": "( T <= 1000 && T >= 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 109,
                      "end_byte": 128,
                      "text": "T <= 1000 && T >= 1",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 109,
                          "end_byte": 118,
                          "text": "T <= 1000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "T",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 111,
                              "end_byte": 113,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 114,
                              "end_byte": 118,
                              "text": "1000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 119,
                          "end_byte": 121,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 122,
                          "end_byte": 128,
                          "text": "T >= 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 122,
                              "end_byte": 123,
                              "text": "T",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 124,
                              "end_byte": 126,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 131,
                  "end_byte": 524,
                  "text": "{ while ( 1 ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 ) { small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; } } for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 131,
                      "end_byte": 132,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 133,
                      "end_byte": 446,
                      "text": "while ( 1 ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 ) { small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; } }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 133,
                          "end_byte": 138,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 139,
                          "end_byte": 144,
                          "text": "( 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 141,
                              "end_byte": 142,
                              "text": "1",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 143,
                              "end_byte": 144,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 145,
                          "end_byte": 446,
                          "text": "{ scanf ( \"%d%d\" , & A , & B ) ; if ( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 ) { small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 147,
                              "end_byte": 177,
                              "text": "scanf ( \"%d%d\" , & A , & B ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 147,
                                  "end_byte": 175,
                                  "text": "scanf ( \"%d%d\" , & A , & B )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 147,
                                      "end_byte": 152,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 153,
                                      "end_byte": 175,
                                      "text": "( \"%d%d\" , & A , & B )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 153,
                                          "end_byte": 154,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 155,
                                          "end_byte": 161,
                                          "text": "\"%d%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 155,
                                              "end_byte": 156,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 156,
                                              "end_byte": 160,
                                              "text": "%d%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 160,
                                              "end_byte": 161,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 162,
                                          "end_byte": 163,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 164,
                                          "end_byte": 167,
                                          "text": "& A",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 164,
                                              "end_byte": 165,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 166,
                                              "end_byte": 167,
                                              "text": "A",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 168,
                                          "end_byte": 169,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 170,
                                          "end_byte": 173,
                                          "text": "& B",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 170,
                                              "end_byte": 171,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 172,
                                              "end_byte": 173,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 174,
                                          "end_byte": 175,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 176,
                                  "end_byte": 177,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 178,
                              "end_byte": 444,
                              "text": "if ( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 ) { small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 178,
                                  "end_byte": 180,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 181,
                                  "end_byte": 233,
                                  "text": "( A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 181,
                                      "end_byte": 182,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 183,
                                      "end_byte": 231,
                                      "text": "A <= 1000000 && B <= 1000000 && B >= 1 && A >= 1",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 183,
                                          "end_byte": 221,
                                          "text": "A <= 1000000 && B <= 1000000 && B >= 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 183,
                                              "end_byte": 211,
                                              "text": "A <= 1000000 && B <= 1000000",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 183,
                                                  "end_byte": 195,
                                                  "text": "A <= 1000000",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 183,
                                                      "end_byte": 184,
                                                      "text": "A",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "<=",
                                                      "start_byte": 185,
                                                      "end_byte": 187,
                                                      "text": "<=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 188,
                                                      "end_byte": 195,
                                                      "text": "1000000",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 196,
                                                  "end_byte": 198,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 199,
                                                  "end_byte": 211,
                                                  "text": "B <= 1000000",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 199,
                                                      "end_byte": 200,
                                                      "text": "B",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "<=",
                                                      "start_byte": 201,
                                                      "end_byte": 203,
                                                      "text": "<=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 204,
                                                      "end_byte": 211,
                                                      "text": "1000000",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "&&",
                                              "start_byte": 212,
                                              "end_byte": 214,
                                              "text": "&&",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 215,
                                              "end_byte": 221,
                                              "text": "B >= 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 215,
                                                  "end_byte": 216,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">=",
                                                  "start_byte": 217,
                                                  "end_byte": 219,
                                                  "text": ">=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 220,
                                                  "end_byte": 221,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 222,
                                          "end_byte": 224,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 225,
                                          "end_byte": 231,
                                          "text": "A >= 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 225,
                                              "end_byte": 226,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": ">=",
                                              "start_byte": 227,
                                              "end_byte": 229,
                                              "text": ">=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 230,
                                              "end_byte": 231,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 232,
                                      "end_byte": 233,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 234,
                                  "end_byte": 444,
                                  "text": "{ small = A < B ? A : B ; for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; } LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ; i ++ ; if ( i == T ) break ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 234,
                                      "end_byte": 235,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 236,
                                      "end_byte": 259,
                                      "text": "small = A < B ? A : B ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 236,
                                          "end_byte": 257,
                                          "text": "small = A < B ? A : B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 236,
                                              "end_byte": 241,
                                              "text": "small",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 242,
                                              "end_byte": 243,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "conditional_expression",
                                              "start_byte": 244,
                                              "end_byte": 257,
                                              "text": "A < B ? A : B",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 244,
                                                  "end_byte": 249,
                                                  "text": "A < B",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 244,
                                                      "end_byte": 245,
                                                      "text": "A",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "<",
                                                      "start_byte": 246,
                                                      "end_byte": 247,
                                                      "text": "<",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 248,
                                                      "end_byte": 249,
                                                      "text": "B",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "?",
                                                  "start_byte": 250,
                                                  "end_byte": 251,
                                                  "text": "?",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 252,
                                                  "end_byte": 253,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": ":",
                                                  "start_byte": 254,
                                                  "end_byte": 255,
                                                  "text": ":",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 256,
                                                  "end_byte": 257,
                                                  "text": "B",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 258,
                                          "end_byte": 259,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "for_statement",
                                      "start_byte": 260,
                                      "end_byte": 373,
                                      "text": "for ( j = small ; j >= 1 ; j -- ) { if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; }",
                                      "children": [
                                        {
                                          "type": "for",
                                          "start_byte": 260,
                                          "end_byte": 263,
                                          "text": "for",
                                          "children": []
                                        },
                                        {
                                          "type": "(",
                                          "start_byte": 264,
                                          "end_byte": 265,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 266,
                                          "end_byte": 275,
                                          "text": "j = small",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 266,
                                              "end_byte": 267,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 268,
                                              "end_byte": 269,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 270,
                                              "end_byte": 275,
                                              "text": "small",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 276,
                                          "end_byte": 277,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 278,
                                          "end_byte": 284,
                                          "text": "j >= 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 278,
                                              "end_byte": 279,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": ">=",
                                              "start_byte": 280,
                                              "end_byte": 282,
                                              "text": ">=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 283,
                                              "end_byte": 284,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 285,
                                          "end_byte": 286,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "update_expression",
                                          "start_byte": 287,
                                          "end_byte": 291,
                                          "text": "j --",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 287,
                                              "end_byte": 288,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "--",
                                              "start_byte": 289,
                                              "end_byte": 291,
                                              "text": "--",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 292,
                                          "end_byte": 293,
                                          "text": ")",
                                          "children": []
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 294,
                                          "end_byte": 373,
                                          "text": "{ if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 294,
                                              "end_byte": 295,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 296,
                                              "end_byte": 371,
                                              "text": "if ( A % j == 0 && B % j == 0 ) { GCD [ i ] = j ; break ; } else continue ;",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 296,
                                                  "end_byte": 298,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 299,
                                                  "end_byte": 327,
                                                  "text": "( A % j == 0 && B % j == 0 )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 299,
                                                      "end_byte": 300,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 301,
                                                      "end_byte": 325,
                                                      "text": "A % j == 0 && B % j == 0",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 301,
                                                          "end_byte": 311,
                                                          "text": "A % j == 0",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 301,
                                                              "end_byte": 306,
                                                              "text": "A % j",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 301,
                                                                  "end_byte": 302,
                                                                  "text": "A",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "%",
                                                                  "start_byte": 303,
                                                                  "end_byte": 304,
                                                                  "text": "%",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 305,
                                                                  "end_byte": 306,
                                                                  "text": "j",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "==",
                                                              "start_byte": 307,
                                                              "end_byte": 309,
                                                              "text": "==",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 310,
                                                              "end_byte": 311,
                                                              "text": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "&&",
                                                          "start_byte": 312,
                                                          "end_byte": 314,
                                                          "text": "&&",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 315,
                                                          "end_byte": 325,
                                                          "text": "B % j == 0",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 315,
                                                              "end_byte": 320,
                                                              "text": "B % j",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 315,
                                                                  "end_byte": 316,
                                                                  "text": "B",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "%",
                                                                  "start_byte": 317,
                                                                  "end_byte": 318,
                                                                  "text": "%",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 319,
                                                                  "end_byte": 320,
                                                                  "text": "j",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "==",
                                                              "start_byte": 321,
                                                              "end_byte": 323,
                                                              "text": "==",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 324,
                                                              "end_byte": 325,
                                                              "text": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 326,
                                                      "end_byte": 327,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 328,
                                                  "end_byte": 355,
                                                  "text": "{ GCD [ i ] = j ; break ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 328,
                                                      "end_byte": 329,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 330,
                                                      "end_byte": 345,
                                                      "text": "GCD [ i ] = j ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 330,
                                                          "end_byte": 343,
                                                          "text": "GCD [ i ] = j",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 330,
                                                              "end_byte": 339,
                                                              "text": "GCD [ i ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 330,
                                                                  "end_byte": 333,
                                                                  "text": "GCD",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 334,
                                                                  "end_byte": 339,
                                                                  "text": "[ i ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 334,
                                                                      "end_byte": 335,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 336,
                                                                      "end_byte": 337,
                                                                      "text": "i",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 338,
                                                                      "end_byte": 339,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 340,
                                                              "end_byte": 341,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 342,
                                                              "end_byte": 343,
                                                              "text": "j",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 344,
                                                          "end_byte": 345,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "break_statement",
                                                      "start_byte": 346,
                                                      "end_byte": 353,
                                                      "text": "break ;",
                                                      "children": [
                                                        {
                                                          "type": "break",
                                                          "start_byte": 346,
                                                          "end_byte": 351,
                                                          "text": "break",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 352,
                                                          "end_byte": 353,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 354,
                                                      "end_byte": 355,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "else_clause",
                                                  "start_byte": 356,
                                                  "end_byte": 371,
                                                  "text": "else continue ;",
                                                  "children": [
                                                    {
                                                      "type": "else",
                                                      "start_byte": 356,
                                                      "end_byte": 360,
                                                      "text": "else",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "continue_statement",
                                                      "start_byte": 361,
                                                      "end_byte": 371,
                                                      "text": "continue ;",
                                                      "children": [
                                                        {
                                                          "type": "continue",
                                                          "start_byte": 361,
                                                          "end_byte": 369,
                                                          "text": "continue",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 370,
                                                          "end_byte": 371,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 372,
                                              "end_byte": 373,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 374,
                                      "end_byte": 413,
                                      "text": "LCM [ i ] = ( A * B ) / ( GCD [ i ] ) ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 374,
                                          "end_byte": 411,
                                          "text": "LCM [ i ] = ( A * B ) / ( GCD [ i ] )",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 374,
                                              "end_byte": 383,
                                              "text": "LCM [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 374,
                                                  "end_byte": 377,
                                                  "text": "LCM",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 378,
                                                  "end_byte": 383,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 378,
                                                      "end_byte": 379,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 380,
                                                      "end_byte": 381,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 382,
                                                      "end_byte": 383,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 384,
                                              "end_byte": 385,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 386,
                                              "end_byte": 411,
                                              "text": "( A * B ) / ( GCD [ i ] )",
                                              "children": [
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start_byte": 386,
                                                  "end_byte": 395,
                                                  "text": "( A * B )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 386,
                                                      "end_byte": 387,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 388,
                                                      "end_byte": 393,
                                                      "text": "A * B",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 388,
                                                          "end_byte": 389,
                                                          "text": "A",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "*",
                                                          "start_byte": 390,
                                                          "end_byte": 391,
                                                          "text": "*",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 392,
                                                          "end_byte": 393,
                                                          "text": "B",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 394,
                                                      "end_byte": 395,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "/",
                                                  "start_byte": 396,
                                                  "end_byte": 397,
                                                  "text": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start_byte": 398,
                                                  "end_byte": 411,
                                                  "text": "( GCD [ i ] )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 398,
                                                      "end_byte": 399,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 400,
                                                      "end_byte": 409,
                                                      "text": "GCD [ i ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 400,
                                                          "end_byte": 403,
                                                          "text": "GCD",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 404,
                                                          "end_byte": 409,
                                                          "text": "[ i ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 404,
                                                              "end_byte": 405,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 406,
                                                              "end_byte": 407,
                                                              "text": "i",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 408,
                                                              "end_byte": 409,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 410,
                                                      "end_byte": 411,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 412,
                                          "end_byte": 413,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 414,
                                      "end_byte": 420,
                                      "text": "i ++ ;",
                                      "children": [
                                        {
                                          "type": "update_expression",
                                          "start_byte": 414,
                                          "end_byte": 418,
                                          "text": "i ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 414,
                                              "end_byte": 415,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 416,
                                              "end_byte": 418,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 419,
                                          "end_byte": 420,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 421,
                                      "end_byte": 442,
                                      "text": "if ( i == T ) break ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 421,
                                          "end_byte": 423,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 424,
                                          "end_byte": 434,
                                          "text": "( i == T )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 424,
                                              "end_byte": 425,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 426,
                                              "end_byte": 432,
                                              "text": "i == T",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 426,
                                                  "end_byte": 427,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 428,
                                                  "end_byte": 430,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 431,
                                                  "end_byte": 432,
                                                  "text": "T",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 433,
                                              "end_byte": 434,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "break_statement",
                                          "start_byte": 435,
                                          "end_byte": 442,
                                          "text": "break ;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start_byte": 435,
                                              "end_byte": 440,
                                              "text": "break",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 441,
                                              "end_byte": 442,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 443,
                                      "end_byte": 444,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 445,
                              "end_byte": 446,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 447,
                      "end_byte": 522,
                      "text": "for ( i = 0 ; i < T ; i ++ ) printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 447,
                          "end_byte": 450,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 451,
                          "end_byte": 452,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 453,
                          "end_byte": 458,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 455,
                              "end_byte": 456,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 457,
                              "end_byte": 458,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 459,
                          "end_byte": 460,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 461,
                          "end_byte": 466,
                          "text": "i < T",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 461,
                              "end_byte": 462,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 463,
                              "end_byte": 464,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 465,
                              "end_byte": 466,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 467,
                          "end_byte": 468,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 469,
                          "end_byte": 473,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 469,
                              "end_byte": 470,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 471,
                              "end_byte": 473,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 474,
                          "end_byte": 475,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 476,
                          "end_byte": 522,
                          "text": "printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 476,
                              "end_byte": 520,
                              "text": "printf ( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 476,
                                  "end_byte": 482,
                                  "text": "printf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 483,
                                  "end_byte": 520,
                                  "text": "( \"%d %d\\n\" , GCD [ i ] , LCM [ i ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 483,
                                      "end_byte": 484,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 485,
                                      "end_byte": 494,
                                      "text": "\"%d %d\\n\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 485,
                                          "end_byte": 486,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 486,
                                          "end_byte": 491,
                                          "text": "%d %d",
                                          "children": []
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start_byte": 491,
                                          "end_byte": 493,
                                          "text": "\\n",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 493,
                                          "end_byte": 494,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 495,
                                      "end_byte": 496,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 497,
                                      "end_byte": 506,
                                      "text": "GCD [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 497,
                                          "end_byte": 500,
                                          "text": "GCD",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 501,
                                          "end_byte": 506,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 501,
                                              "end_byte": 502,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 503,
                                              "end_byte": 504,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 505,
                                              "end_byte": 506,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 507,
                                      "end_byte": 508,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 509,
                                      "end_byte": 518,
                                      "text": "LCM [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 509,
                                          "end_byte": 512,
                                          "text": "LCM",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 513,
                                          "end_byte": 518,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 513,
                                              "end_byte": 514,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 515,
                                              "end_byte": 516,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 517,
                                              "end_byte": 518,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 519,
                                      "end_byte": 520,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 521,
                              "end_byte": 522,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 523,
                      "end_byte": 524,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 525,
              "end_byte": 535,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 525,
                  "end_byte": 531,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 532,
                  "end_byte": 533,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 534,
                  "end_byte": 535,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 536,
              "end_byte": 537,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}