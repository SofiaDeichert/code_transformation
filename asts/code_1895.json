{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 458,
  "text": "int gcd ( ) ; int main ( ) { int t , a , b , c , H [ 1000 ] , L [ 1000 ] ; scanf ( \"%d\" , & t ) ; for ( a = 0 ; a < t ; a ++ ) { scanf ( \"%d%d\" , & b , & c ) ; H [ a ] = gcd ( b , c ) ; L [ a ] = ( b * c ) / H [ a ] ; } for ( a = 0 ; a < t ; a ++ ) { printf ( \"\\n%d %d\" , H [ a ] , L [ a ] ) ; } return 0 ; } int gcd ( int b , int c ) { if ( b == 0 ) { return c ; } else { while ( c != 0 ) { if ( b > c ) { b = b - c ; } else { c = c - b ; } } return b ; } }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 13,
      "text": "int gcd ( ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 11,
          "text": "gcd ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 11,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 12,
          "end_byte": 13,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 14,
      "end_byte": 308,
      "text": "int main ( ) { int t , a , b , c , H [ 1000 ] , L [ 1000 ] ; scanf ( \"%d\" , & t ) ; for ( a = 0 ; a < t ; a ++ ) { scanf ( \"%d%d\" , & b , & c ) ; H [ a ] = gcd ( b , c ) ; L [ a ] = ( b * c ) / H [ a ] ; } for ( a = 0 ; a < t ; a ++ ) { printf ( \"\\n%d %d\" , H [ a ] , L [ a ] ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 14,
          "end_byte": 17,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 18,
          "end_byte": 26,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 18,
              "end_byte": 22,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 23,
              "end_byte": 26,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 27,
          "end_byte": 308,
          "text": "{ int t , a , b , c , H [ 1000 ] , L [ 1000 ] ; scanf ( \"%d\" , & t ) ; for ( a = 0 ; a < t ; a ++ ) { scanf ( \"%d%d\" , & b , & c ) ; H [ a ] = gcd ( b , c ) ; L [ a ] = ( b * c ) / H [ a ] ; } for ( a = 0 ; a < t ; a ++ ) { printf ( \"\\n%d %d\" , H [ a ] , L [ a ] ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 27,
              "end_byte": 28,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 29,
              "end_byte": 74,
              "text": "int t , a , b , c , H [ 1000 ] , L [ 1000 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 29,
                  "end_byte": 32,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 49,
                  "end_byte": 59,
                  "text": "H [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "H",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 53,
                      "end_byte": 57,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 62,
                  "end_byte": 72,
                  "text": "L [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 62,
                      "end_byte": 63,
                      "text": "L",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 64,
                      "end_byte": 65,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 66,
                      "end_byte": 70,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 75,
              "end_byte": 97,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 75,
                  "end_byte": 95,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 75,
                      "end_byte": 80,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 81,
                      "end_byte": 95,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 83,
                          "end_byte": 87,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 83,
                              "end_byte": 84,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 84,
                              "end_byte": 86,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 88,
                          "end_byte": 89,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 90,
                          "end_byte": 93,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 90,
                              "end_byte": 91,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 98,
              "end_byte": 219,
              "text": "for ( a = 0 ; a < t ; a ++ ) { scanf ( \"%d%d\" , & b , & c ) ; H [ a ] = gcd ( b , c ) ; L [ a ] = ( b * c ) / H [ a ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 98,
                  "end_byte": 101,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 102,
                  "end_byte": 103,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 104,
                  "end_byte": 109,
                  "text": "a = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 108,
                      "end_byte": 109,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 112,
                  "end_byte": 117,
                  "text": "a < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 112,
                      "end_byte": 113,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 118,
                  "end_byte": 119,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 120,
                  "end_byte": 124,
                  "text": "a ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 120,
                      "end_byte": 121,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 122,
                      "end_byte": 124,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 125,
                  "end_byte": 126,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 127,
                  "end_byte": 219,
                  "text": "{ scanf ( \"%d%d\" , & b , & c ) ; H [ a ] = gcd ( b , c ) ; L [ a ] = ( b * c ) / H [ a ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 127,
                      "end_byte": 128,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 129,
                      "end_byte": 159,
                      "text": "scanf ( \"%d%d\" , & b , & c ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 129,
                          "end_byte": 157,
                          "text": "scanf ( \"%d%d\" , & b , & c )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 129,
                              "end_byte": 134,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 135,
                              "end_byte": 157,
                              "text": "( \"%d%d\" , & b , & c )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 135,
                                  "end_byte": 136,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 137,
                                  "end_byte": 143,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 137,
                                      "end_byte": 138,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 138,
                                      "end_byte": 142,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 144,
                                  "end_byte": 145,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 146,
                                  "end_byte": 149,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 152,
                                  "end_byte": 155,
                                  "text": "& c",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 156,
                                  "end_byte": 157,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 158,
                          "end_byte": 159,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 160,
                      "end_byte": 185,
                      "text": "H [ a ] = gcd ( b , c ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 160,
                          "end_byte": 183,
                          "text": "H [ a ] = gcd ( b , c )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 160,
                              "end_byte": 167,
                              "text": "H [ a ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": "H",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 162,
                                  "end_byte": 167,
                                  "text": "[ a ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 164,
                                      "end_byte": 165,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 166,
                                      "end_byte": 167,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 170,
                              "end_byte": 183,
                              "text": "gcd ( b , c )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 170,
                                  "end_byte": 173,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 174,
                                  "end_byte": 183,
                                  "text": "( b , c )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 178,
                                      "end_byte": 179,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 180,
                                      "end_byte": 181,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 182,
                                      "end_byte": 183,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 184,
                          "end_byte": 185,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 186,
                      "end_byte": 217,
                      "text": "L [ a ] = ( b * c ) / H [ a ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 186,
                          "end_byte": 215,
                          "text": "L [ a ] = ( b * c ) / H [ a ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 186,
                              "end_byte": 193,
                              "text": "L [ a ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 186,
                                  "end_byte": 187,
                                  "text": "L",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 188,
                                  "end_byte": 193,
                                  "text": "[ a ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 188,
                                      "end_byte": 189,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 190,
                                      "end_byte": 191,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 194,
                              "end_byte": 195,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 196,
                              "end_byte": 215,
                              "text": "( b * c ) / H [ a ]",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 196,
                                  "end_byte": 205,
                                  "text": "( b * c )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 198,
                                      "end_byte": 203,
                                      "text": "b * c",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 198,
                                          "end_byte": 199,
                                          "text": "b",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 200,
                                          "end_byte": 201,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 202,
                                          "end_byte": 203,
                                          "text": "c",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 206,
                                  "end_byte": 207,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 208,
                                  "end_byte": 215,
                                  "text": "H [ a ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 208,
                                      "end_byte": 209,
                                      "text": "H",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 210,
                                      "end_byte": 215,
                                      "text": "[ a ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 210,
                                          "end_byte": 211,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 214,
                                          "end_byte": 215,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 216,
                          "end_byte": 217,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 218,
                      "end_byte": 219,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 220,
              "end_byte": 295,
              "text": "for ( a = 0 ; a < t ; a ++ ) { printf ( \"\\n%d %d\" , H [ a ] , L [ a ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 220,
                  "end_byte": 223,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 224,
                  "end_byte": 225,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 226,
                  "end_byte": 231,
                  "text": "a = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 228,
                      "end_byte": 229,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 230,
                      "end_byte": 231,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 232,
                  "end_byte": 233,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 234,
                  "end_byte": 239,
                  "text": "a < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 234,
                      "end_byte": 235,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 236,
                      "end_byte": 237,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 238,
                      "end_byte": 239,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 240,
                  "end_byte": 241,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 242,
                  "end_byte": 246,
                  "text": "a ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 242,
                      "end_byte": 243,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 244,
                      "end_byte": 246,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 247,
                  "end_byte": 248,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 249,
                  "end_byte": 295,
                  "text": "{ printf ( \"\\n%d %d\" , H [ a ] , L [ a ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 249,
                      "end_byte": 250,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 251,
                      "end_byte": 293,
                      "text": "printf ( \"\\n%d %d\" , H [ a ] , L [ a ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 251,
                          "end_byte": 291,
                          "text": "printf ( \"\\n%d %d\" , H [ a ] , L [ a ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 251,
                              "end_byte": 257,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 258,
                              "end_byte": 291,
                              "text": "( \"\\n%d %d\" , H [ a ] , L [ a ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 258,
                                  "end_byte": 259,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 260,
                                  "end_byte": 269,
                                  "text": "\"\\n%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 261,
                                      "end_byte": 263,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 263,
                                      "end_byte": 268,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 268,
                                      "end_byte": 269,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 270,
                                  "end_byte": 271,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 272,
                                  "end_byte": 279,
                                  "text": "H [ a ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": "H",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 274,
                                      "end_byte": 279,
                                      "text": "[ a ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 274,
                                          "end_byte": 275,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 276,
                                          "end_byte": 277,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 278,
                                          "end_byte": 279,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 282,
                                  "end_byte": 289,
                                  "text": "L [ a ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 282,
                                      "end_byte": 283,
                                      "text": "L",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 284,
                                      "end_byte": 289,
                                      "text": "[ a ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 284,
                                          "end_byte": 285,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 286,
                                          "end_byte": 287,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 288,
                                          "end_byte": 289,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 290,
                                  "end_byte": 291,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 292,
                          "end_byte": 293,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 294,
                      "end_byte": 295,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 296,
              "end_byte": 306,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 296,
                  "end_byte": 302,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 303,
                  "end_byte": 304,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 305,
                  "end_byte": 306,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 307,
              "end_byte": 308,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 309,
      "end_byte": 458,
      "text": "int gcd ( int b , int c ) { if ( b == 0 ) { return c ; } else { while ( c != 0 ) { if ( b > c ) { b = b - c ; } else { c = c - b ; } } return b ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 309,
          "end_byte": 312,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 313,
          "end_byte": 334,
          "text": "gcd ( int b , int c )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 313,
              "end_byte": 316,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 317,
              "end_byte": 334,
              "text": "( int b , int c )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 317,
                  "end_byte": 318,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 319,
                  "end_byte": 324,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 319,
                      "end_byte": 322,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 323,
                      "end_byte": 324,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 325,
                  "end_byte": 326,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 327,
                  "end_byte": 332,
                  "text": "int c",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 327,
                      "end_byte": 330,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 331,
                      "end_byte": 332,
                      "text": "c",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 333,
                  "end_byte": 334,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 335,
          "end_byte": 458,
          "text": "{ if ( b == 0 ) { return c ; } else { while ( c != 0 ) { if ( b > c ) { b = b - c ; } else { c = c - b ; } } return b ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 335,
              "end_byte": 336,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 337,
              "end_byte": 456,
              "text": "if ( b == 0 ) { return c ; } else { while ( c != 0 ) { if ( b > c ) { b = b - c ; } else { c = c - b ; } } return b ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 337,
                  "end_byte": 339,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 340,
                  "end_byte": 350,
                  "text": "( b == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 340,
                      "end_byte": 341,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 342,
                      "end_byte": 348,
                      "text": "b == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 342,
                          "end_byte": 343,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 344,
                          "end_byte": 346,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 347,
                          "end_byte": 348,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 349,
                      "end_byte": 350,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 351,
                  "end_byte": 365,
                  "text": "{ return c ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 351,
                      "end_byte": 352,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 353,
                      "end_byte": 363,
                      "text": "return c ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 353,
                          "end_byte": 359,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 360,
                          "end_byte": 361,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 362,
                          "end_byte": 363,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 364,
                      "end_byte": 365,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 366,
                  "end_byte": 456,
                  "text": "else { while ( c != 0 ) { if ( b > c ) { b = b - c ; } else { c = c - b ; } } return b ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 366,
                      "end_byte": 370,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 371,
                      "end_byte": 456,
                      "text": "{ while ( c != 0 ) { if ( b > c ) { b = b - c ; } else { c = c - b ; } } return b ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 371,
                          "end_byte": 372,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "while_statement",
                          "start_byte": 373,
                          "end_byte": 443,
                          "text": "while ( c != 0 ) { if ( b > c ) { b = b - c ; } else { c = c - b ; } }",
                          "children": [
                            {
                              "type": "while",
                              "start_byte": 373,
                              "end_byte": 378,
                              "text": "while",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 379,
                              "end_byte": 389,
                              "text": "( c != 0 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 381,
                                  "end_byte": 387,
                                  "text": "c != 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 381,
                                      "end_byte": 382,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "!=",
                                      "start_byte": 383,
                                      "end_byte": 385,
                                      "text": "!=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 386,
                                      "end_byte": 387,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 388,
                                  "end_byte": 389,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 390,
                              "end_byte": 443,
                              "text": "{ if ( b > c ) { b = b - c ; } else { c = c - b ; } }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 390,
                                  "end_byte": 391,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "if_statement",
                                  "start_byte": 392,
                                  "end_byte": 441,
                                  "text": "if ( b > c ) { b = b - c ; } else { c = c - b ; }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start_byte": 392,
                                      "end_byte": 394,
                                      "text": "if",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 395,
                                      "end_byte": 404,
                                      "text": "( b > c )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 395,
                                          "end_byte": 396,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 397,
                                          "end_byte": 402,
                                          "text": "b > c",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 397,
                                              "end_byte": 398,
                                              "text": "b",
                                              "children": []
                                            },
                                            {
                                              "type": ">",
                                              "start_byte": 399,
                                              "end_byte": 400,
                                              "text": ">",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 401,
                                              "end_byte": 402,
                                              "text": "c",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 403,
                                          "end_byte": 404,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 405,
                                      "end_byte": 420,
                                      "text": "{ b = b - c ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 405,
                                          "end_byte": 406,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 407,
                                          "end_byte": 418,
                                          "text": "b = b - c ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 407,
                                              "end_byte": 416,
                                              "text": "b = b - c",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 407,
                                                  "end_byte": 408,
                                                  "text": "b",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 409,
                                                  "end_byte": 410,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 411,
                                                  "end_byte": 416,
                                                  "text": "b - c",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 411,
                                                      "end_byte": 412,
                                                      "text": "b",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 413,
                                                      "end_byte": 414,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 415,
                                                      "end_byte": 416,
                                                      "text": "c",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 417,
                                              "end_byte": 418,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 419,
                                          "end_byte": 420,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "else_clause",
                                      "start_byte": 421,
                                      "end_byte": 441,
                                      "text": "else { c = c - b ; }",
                                      "children": [
                                        {
                                          "type": "else",
                                          "start_byte": 421,
                                          "end_byte": 425,
                                          "text": "else",
                                          "children": []
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 426,
                                          "end_byte": 441,
                                          "text": "{ c = c - b ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 426,
                                              "end_byte": 427,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 428,
                                              "end_byte": 439,
                                              "text": "c = c - b ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 428,
                                                  "end_byte": 437,
                                                  "text": "c = c - b",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 428,
                                                      "end_byte": 429,
                                                      "text": "c",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 430,
                                                      "end_byte": 431,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 432,
                                                      "end_byte": 437,
                                                      "text": "c - b",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 432,
                                                          "end_byte": 433,
                                                          "text": "c",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "-",
                                                          "start_byte": 434,
                                                          "end_byte": 435,
                                                          "text": "-",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 436,
                                                          "end_byte": 437,
                                                          "text": "b",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 438,
                                                  "end_byte": 439,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 440,
                                              "end_byte": 441,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 442,
                                  "end_byte": 443,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 444,
                          "end_byte": 454,
                          "text": "return b ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 444,
                              "end_byte": 450,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 451,
                              "end_byte": 452,
                              "text": "b",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 455,
                          "end_byte": 456,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 457,
              "end_byte": 458,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}