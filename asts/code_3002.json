{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 386,
  "text": "int main ( int argc , char const * argv [ ] ) { int tests ; scanf ( \"%d\" , & tests ) ; while ( tests -- ) { int A , B , lcm ; scanf ( \"%d %d\" , & A , & B ) ; int n1 = A , n2 = B ; if ( A > B ) A = A ^ B , B = A ^ B , A = A ^ B ; while ( B % A ) { B = B % A ; A = A ^ B ; B = A ^ B ; A = A ^ B ; } printf ( \"\\n\" ) ; lcm = ( n1 * n2 ) / A ; printf ( \"%d %d\\n\" , A , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 386,
      "text": "int main ( int argc , char const * argv [ ] ) { int tests ; scanf ( \"%d\" , & tests ) ; while ( tests -- ) { int A , B , lcm ; scanf ( \"%d %d\" , & A , & B ) ; int n1 = A , n2 = B ; if ( A > B ) A = A ^ B , B = A ^ B , A = A ^ B ; while ( B % A ) { B = B % A ; A = A ^ B ; B = A ^ B ; A = A ^ B ; } printf ( \"\\n\" ) ; lcm = ( n1 * n2 ) / A ; printf ( \"%d %d\\n\" , A , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 45,
          "text": "main ( int argc , char const * argv [ ] )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 45,
              "text": "( int argc , char const * argv [ ] )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 19,
                  "text": "int argc",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 14,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 15,
                      "end_byte": 19,
                      "text": "argc",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 22,
                  "end_byte": 43,
                  "text": "char const * argv [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 22,
                      "end_byte": 26,
                      "text": "char",
                      "children": []
                    },
                    {
                      "type": "type_qualifier",
                      "start_byte": 27,
                      "end_byte": 32,
                      "text": "const",
                      "children": [
                        {
                          "type": "const",
                          "start_byte": 27,
                          "end_byte": 32,
                          "text": "const",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 33,
                      "end_byte": 43,
                      "text": "* argv [ ]",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 35,
                          "end_byte": 43,
                          "text": "argv [ ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 35,
                              "end_byte": 39,
                              "text": "argv",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 40,
                              "end_byte": 41,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 42,
                              "end_byte": 43,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 46,
          "end_byte": 386,
          "text": "{ int tests ; scanf ( \"%d\" , & tests ) ; while ( tests -- ) { int A , B , lcm ; scanf ( \"%d %d\" , & A , & B ) ; int n1 = A , n2 = B ; if ( A > B ) A = A ^ B , B = A ^ B , A = A ^ B ; while ( B % A ) { B = B % A ; A = A ^ B ; B = A ^ B ; A = A ^ B ; } printf ( \"\\n\" ) ; lcm = ( n1 * n2 ) / A ; printf ( \"%d %d\\n\" , A , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 46,
              "end_byte": 47,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 48,
              "end_byte": 59,
              "text": "int tests ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 48,
                  "end_byte": 51,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 52,
                  "end_byte": 57,
                  "text": "tests",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 60,
              "end_byte": 86,
              "text": "scanf ( \"%d\" , & tests ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 60,
                  "end_byte": 84,
                  "text": "scanf ( \"%d\" , & tests )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 60,
                      "end_byte": 65,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 66,
                      "end_byte": 84,
                      "text": "( \"%d\" , & tests )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 68,
                          "end_byte": 72,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 68,
                              "end_byte": 69,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 69,
                              "end_byte": 71,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 71,
                              "end_byte": 72,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 73,
                          "end_byte": 74,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 75,
                          "end_byte": 82,
                          "text": "& tests",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 75,
                              "end_byte": 76,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 77,
                              "end_byte": 82,
                              "text": "tests",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 83,
                          "end_byte": 84,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 85,
                  "end_byte": 86,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 87,
              "end_byte": 373,
              "text": "while ( tests -- ) { int A , B , lcm ; scanf ( \"%d %d\" , & A , & B ) ; int n1 = A , n2 = B ; if ( A > B ) A = A ^ B , B = A ^ B , A = A ^ B ; while ( B % A ) { B = B % A ; A = A ^ B ; B = A ^ B ; A = A ^ B ; } printf ( \"\\n\" ) ; lcm = ( n1 * n2 ) / A ; printf ( \"%d %d\\n\" , A , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 87,
                  "end_byte": 92,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 93,
                  "end_byte": 105,
                  "text": "( tests -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 93,
                      "end_byte": 94,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 95,
                      "end_byte": 103,
                      "text": "tests --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 95,
                          "end_byte": 100,
                          "text": "tests",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 101,
                          "end_byte": 103,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 106,
                  "end_byte": 373,
                  "text": "{ int A , B , lcm ; scanf ( \"%d %d\" , & A , & B ) ; int n1 = A , n2 = B ; if ( A > B ) A = A ^ B , B = A ^ B , A = A ^ B ; while ( B % A ) { B = B % A ; A = A ^ B ; B = A ^ B ; A = A ^ B ; } printf ( \"\\n\" ) ; lcm = ( n1 * n2 ) / A ; printf ( \"%d %d\\n\" , A , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 108,
                      "end_byte": 125,
                      "text": "int A , B , lcm ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 108,
                          "end_byte": 111,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": "B",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 118,
                          "end_byte": 119,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 120,
                          "end_byte": 123,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 124,
                          "end_byte": 125,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 126,
                      "end_byte": 157,
                      "text": "scanf ( \"%d %d\" , & A , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 126,
                          "end_byte": 155,
                          "text": "scanf ( \"%d %d\" , & A , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 126,
                              "end_byte": 131,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 132,
                              "end_byte": 155,
                              "text": "( \"%d %d\" , & A , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 132,
                                  "end_byte": 133,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 134,
                                  "end_byte": 141,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 134,
                                      "end_byte": 135,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 135,
                                      "end_byte": 140,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 140,
                                      "end_byte": 141,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 142,
                                  "end_byte": 143,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 144,
                                  "end_byte": 147,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 144,
                                      "end_byte": 145,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 148,
                                  "end_byte": 149,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 150,
                                  "end_byte": 153,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 154,
                                  "end_byte": 155,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 156,
                          "end_byte": 157,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 158,
                      "end_byte": 179,
                      "text": "int n1 = A , n2 = B ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 158,
                          "end_byte": 161,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 162,
                          "end_byte": 168,
                          "text": "n1 = A",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 162,
                              "end_byte": 164,
                              "text": "n1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "A",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 169,
                          "end_byte": 170,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 171,
                          "end_byte": 177,
                          "text": "n2 = B",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 171,
                              "end_byte": 173,
                              "text": "n2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "B",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 178,
                          "end_byte": 179,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 180,
                      "end_byte": 228,
                      "text": "if ( A > B ) A = A ^ B , B = A ^ B , A = A ^ B ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 180,
                          "end_byte": 182,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 183,
                          "end_byte": 192,
                          "text": "( A > B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 185,
                              "end_byte": 190,
                              "text": "A > B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 187,
                                  "end_byte": 188,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 189,
                                  "end_byte": 190,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 193,
                          "end_byte": 228,
                          "text": "A = A ^ B , B = A ^ B , A = A ^ B ;",
                          "children": [
                            {
                              "type": "comma_expression",
                              "start_byte": 193,
                              "end_byte": 226,
                              "text": "A = A ^ B , B = A ^ B , A = A ^ B",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 193,
                                  "end_byte": 202,
                                  "text": "A = A ^ B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 197,
                                      "end_byte": 202,
                                      "text": "A ^ B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 197,
                                          "end_byte": 198,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "^",
                                          "start_byte": 199,
                                          "end_byte": 200,
                                          "text": "^",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 201,
                                          "end_byte": 202,
                                          "text": "B",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 203,
                                  "end_byte": 204,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "comma_expression",
                                  "start_byte": 205,
                                  "end_byte": 226,
                                  "text": "B = A ^ B , A = A ^ B",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 205,
                                      "end_byte": 214,
                                      "text": "B = A ^ B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 205,
                                          "end_byte": 206,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 207,
                                          "end_byte": 208,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 209,
                                          "end_byte": 214,
                                          "text": "A ^ B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 209,
                                              "end_byte": 210,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "^",
                                              "start_byte": 211,
                                              "end_byte": 212,
                                              "text": "^",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 213,
                                              "end_byte": 214,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 215,
                                      "end_byte": 216,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 217,
                                      "end_byte": 226,
                                      "text": "A = A ^ B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 217,
                                          "end_byte": 218,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 219,
                                          "end_byte": 220,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 221,
                                          "end_byte": 226,
                                          "text": "A ^ B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 221,
                                              "end_byte": 222,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "^",
                                              "start_byte": 223,
                                              "end_byte": 224,
                                              "text": "^",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 225,
                                              "end_byte": 226,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 227,
                              "end_byte": 228,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 229,
                      "end_byte": 296,
                      "text": "while ( B % A ) { B = B % A ; A = A ^ B ; B = A ^ B ; A = A ^ B ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 229,
                          "end_byte": 234,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 235,
                          "end_byte": 244,
                          "text": "( B % A )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 235,
                              "end_byte": 236,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 237,
                              "end_byte": 242,
                              "text": "B % A",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 237,
                                  "end_byte": 238,
                                  "text": "B",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 239,
                                  "end_byte": 240,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 241,
                                  "end_byte": 242,
                                  "text": "A",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 243,
                              "end_byte": 244,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 245,
                          "end_byte": 296,
                          "text": "{ B = B % A ; A = A ^ B ; B = A ^ B ; A = A ^ B ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 245,
                              "end_byte": 246,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 247,
                              "end_byte": 258,
                              "text": "B = B % A ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 247,
                                  "end_byte": 256,
                                  "text": "B = B % A",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 247,
                                      "end_byte": 248,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 249,
                                      "end_byte": 250,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 251,
                                      "end_byte": 256,
                                      "text": "B % A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 251,
                                          "end_byte": 252,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 253,
                                          "end_byte": 254,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 255,
                                          "end_byte": 256,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 257,
                                  "end_byte": 258,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 259,
                              "end_byte": 270,
                              "text": "A = A ^ B ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 259,
                                  "end_byte": 268,
                                  "text": "A = A ^ B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 259,
                                      "end_byte": 260,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 263,
                                      "end_byte": 268,
                                      "text": "A ^ B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 263,
                                          "end_byte": 264,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "^",
                                          "start_byte": 265,
                                          "end_byte": 266,
                                          "text": "^",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 267,
                                          "end_byte": 268,
                                          "text": "B",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 269,
                                  "end_byte": 270,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 271,
                              "end_byte": 282,
                              "text": "B = A ^ B ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 271,
                                  "end_byte": 280,
                                  "text": "B = A ^ B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 271,
                                      "end_byte": 272,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 273,
                                      "end_byte": 274,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 275,
                                      "end_byte": 280,
                                      "text": "A ^ B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 275,
                                          "end_byte": 276,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "^",
                                          "start_byte": 277,
                                          "end_byte": 278,
                                          "text": "^",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 279,
                                          "end_byte": 280,
                                          "text": "B",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 281,
                                  "end_byte": 282,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 283,
                              "end_byte": 294,
                              "text": "A = A ^ B ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 283,
                                  "end_byte": 292,
                                  "text": "A = A ^ B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 287,
                                      "end_byte": 292,
                                      "text": "A ^ B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 287,
                                          "end_byte": 288,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "^",
                                          "start_byte": 289,
                                          "end_byte": 290,
                                          "text": "^",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 291,
                                          "end_byte": 292,
                                          "text": "B",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 293,
                                  "end_byte": 294,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 297,
                      "end_byte": 314,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 297,
                          "end_byte": 312,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 297,
                              "end_byte": 303,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 304,
                              "end_byte": 312,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 304,
                                  "end_byte": 305,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 306,
                                  "end_byte": 310,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 306,
                                      "end_byte": 307,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 307,
                                      "end_byte": 309,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 309,
                                      "end_byte": 310,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 311,
                                  "end_byte": 312,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 313,
                          "end_byte": 314,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 315,
                      "end_byte": 338,
                      "text": "lcm = ( n1 * n2 ) / A ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 315,
                          "end_byte": 336,
                          "text": "lcm = ( n1 * n2 ) / A",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 315,
                              "end_byte": 318,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 319,
                              "end_byte": 320,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 321,
                              "end_byte": 336,
                              "text": "( n1 * n2 ) / A",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 321,
                                  "end_byte": 332,
                                  "text": "( n1 * n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 321,
                                      "end_byte": 322,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 323,
                                      "end_byte": 330,
                                      "text": "n1 * n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 323,
                                          "end_byte": 325,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 326,
                                          "end_byte": 327,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 328,
                                          "end_byte": 330,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 331,
                                      "end_byte": 332,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 333,
                                  "end_byte": 334,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 335,
                                  "end_byte": 336,
                                  "text": "A",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 337,
                          "end_byte": 338,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 339,
                      "end_byte": 371,
                      "text": "printf ( \"%d %d\\n\" , A , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 339,
                          "end_byte": 369,
                          "text": "printf ( \"%d %d\\n\" , A , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 339,
                              "end_byte": 345,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 346,
                              "end_byte": 369,
                              "text": "( \"%d %d\\n\" , A , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 346,
                                  "end_byte": 347,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 348,
                                  "end_byte": 357,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 348,
                                      "end_byte": 349,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 349,
                                      "end_byte": 354,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 354,
                                      "end_byte": 356,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 356,
                                      "end_byte": 357,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 358,
                                  "end_byte": 359,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 360,
                                  "end_byte": 361,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 362,
                                  "end_byte": 363,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 364,
                                  "end_byte": 367,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 368,
                                  "end_byte": 369,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 370,
                          "end_byte": 371,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 372,
                      "end_byte": 373,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 374,
              "end_byte": 384,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 374,
                  "end_byte": 380,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 381,
                  "end_byte": 382,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 383,
                  "end_byte": 384,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 385,
              "end_byte": 386,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}