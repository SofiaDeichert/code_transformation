int array [ 100 ] [ 100 ] ; int largest ( int r , int c , int n ) { int path , pth1 , pth2 ; if ( r == n - 1 ) { path = array [ r ] [ c ] ; } else { pth1 = largest ( r + 1 , c , n ) ; pth2 = largest ( r + 1 , c + 1 , n ) ; if ( pth1 > pth2 ) path = array [ r ] [ c ] + pth1 ; else path = array [ r ] [ c ] + pth2 ; } return path ; } int main ( void ) { int t , n , i , j ; int path ; scanf ( "%d" , & t ) ; while ( t > 0 ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & array [ i ] [ j ] ) ; } } path = largest ( 0 , 0 , n ) ; printf ( "%d\n" , path ) ; memset ( array , 0 , sizeof ( int ) * 100 * 100 ) ; t -- ; } return 0 ; }