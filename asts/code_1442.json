{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1617,
  "text": "inline void superFastRead ( int * a ) { char c = 0 ; while ( c < 33 ) c = fgetc_unlocked ( stdin ) ; * a = 0 ; while ( c > 33 ) { * a = * a * 10 + c - '0' ; c = fgetc_unlocked ( stdin ) ; } } static void put_i ( int n ) { char buf [ BSIZE ] ; int bn = BSIZE - 1 ; while ( 1 ) { buf [ bn -- ] = '0' + ( n ) ; n = n / 10 ; if ( n == 0 ) break ; } while ( bn < BSIZE - 1 ) putchar ( buf [ ++ bn ] ) ; putchar ( '\\n' ) ; } static char _rbuf [ 8192 * 8 ] ; static char * _rend = 0 ; static char * _rpos = 0 ; static int _getchar ( ) { int n = read ( 0 , _rbuf , sizeof _rbuf ) ; if ( n <= 0 ) { printf ( \"EOF(%d)\\n\" , n ) ; exit ( 1 ) ; } _rend = _rbuf + n ; _rpos = _rbuf + 1 ; return * _rbuf ; } static int get_i ( ) { int c ; while ( ( ( c = mygetchar ( ) ) ) < '0' ) { } int n = c - '0' ; while ( ( ( c = mygetchar ( ) ) ) >= '0' ) { n = n * 10 + c - '0' ; } return n ; } int main ( ) { int t , n , i , j , k , temp , max , finalmax ; t = get_i ( ) ; int * * arr = ( int * * ) malloc ( 100 * sizeof ( int * ) ) ; for ( i = 0 ; i < 100 ; i ++ ) arr [ i ] = ( int * ) malloc ( 100 * sizeof ( int ) ) ; for ( i = 0 ; i < t ; i ++ ) { n = get_i ( ) ; finalmax = - 1 ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; } } put_i ( finalmax ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 191,
      "text": "inline void superFastRead ( int * a ) { char c = 0 ; while ( c < 33 ) c = fgetc_unlocked ( stdin ) ; * a = 0 ; while ( c > 33 ) { * a = * a * 10 + c - '0' ; c = fgetc_unlocked ( stdin ) ; } }",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 0,
          "end_byte": 6,
          "text": "inline",
          "children": [
            {
              "type": "inline",
              "start_byte": 0,
              "end_byte": 6,
              "text": "inline",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 7,
          "end_byte": 11,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 12,
          "end_byte": 37,
          "text": "superFastRead ( int * a )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 12,
              "end_byte": 25,
              "text": "superFastRead",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 26,
              "end_byte": 37,
              "text": "( int * a )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 28,
                  "end_byte": 35,
                  "text": "int * a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 28,
                      "end_byte": 31,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 32,
                      "end_byte": 35,
                      "text": "* a",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 32,
                          "end_byte": 33,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 34,
                          "end_byte": 35,
                          "text": "a",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 38,
          "end_byte": 191,
          "text": "{ char c = 0 ; while ( c < 33 ) c = fgetc_unlocked ( stdin ) ; * a = 0 ; while ( c > 33 ) { * a = * a * 10 + c - '0' ; c = fgetc_unlocked ( stdin ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 38,
              "end_byte": 39,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 40,
              "end_byte": 52,
              "text": "char c = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 40,
                  "end_byte": 44,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 45,
                  "end_byte": 50,
                  "text": "c = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 45,
                      "end_byte": 46,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 47,
                      "end_byte": 48,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 53,
              "end_byte": 100,
              "text": "while ( c < 33 ) c = fgetc_unlocked ( stdin ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 53,
                  "end_byte": 58,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 59,
                  "end_byte": 69,
                  "text": "( c < 33 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 59,
                      "end_byte": 60,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 61,
                      "end_byte": 67,
                      "text": "c < 33",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 61,
                          "end_byte": 62,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 65,
                          "end_byte": 67,
                          "text": "33",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 68,
                      "end_byte": 69,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 70,
                  "end_byte": 100,
                  "text": "c = fgetc_unlocked ( stdin ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 70,
                      "end_byte": 98,
                      "text": "c = fgetc_unlocked ( stdin )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 70,
                          "end_byte": 71,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 74,
                          "end_byte": 98,
                          "text": "fgetc_unlocked ( stdin )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 74,
                              "end_byte": 88,
                              "text": "fgetc_unlocked",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 89,
                              "end_byte": 98,
                              "text": "( stdin )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 89,
                                  "end_byte": 90,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 91,
                                  "end_byte": 96,
                                  "text": "stdin",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 97,
                                  "end_byte": 98,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 101,
              "end_byte": 110,
              "text": "* a = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 101,
                  "end_byte": 108,
                  "text": "* a = 0",
                  "children": [
                    {
                      "type": "pointer_expression",
                      "start_byte": 101,
                      "end_byte": 104,
                      "text": "* a",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 101,
                          "end_byte": 102,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": "a",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 105,
                      "end_byte": 106,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 109,
                  "end_byte": 110,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 111,
              "end_byte": 189,
              "text": "while ( c > 33 ) { * a = * a * 10 + c - '0' ; c = fgetc_unlocked ( stdin ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 111,
                  "end_byte": 116,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 117,
                  "end_byte": 127,
                  "text": "( c > 33 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 119,
                      "end_byte": 125,
                      "text": "c > 33",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 119,
                          "end_byte": 120,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 123,
                          "end_byte": 125,
                          "text": "33",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 128,
                  "end_byte": 189,
                  "text": "{ * a = * a * 10 + c - '0' ; c = fgetc_unlocked ( stdin ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 130,
                      "end_byte": 156,
                      "text": "* a = * a * 10 + c - '0' ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 130,
                          "end_byte": 154,
                          "text": "* a = * a * 10 + c - '0'",
                          "children": [
                            {
                              "type": "pointer_expression",
                              "start_byte": 130,
                              "end_byte": 133,
                              "text": "* a",
                              "children": [
                                {
                                  "type": "*",
                                  "start_byte": 130,
                                  "end_byte": 131,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 132,
                                  "end_byte": 133,
                                  "text": "a",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 134,
                              "end_byte": 135,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 136,
                              "end_byte": 154,
                              "text": "* a * 10 + c - '0'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 136,
                                  "end_byte": 148,
                                  "text": "* a * 10 + c",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 136,
                                      "end_byte": 144,
                                      "text": "* a * 10",
                                      "children": [
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 136,
                                          "end_byte": 139,
                                          "text": "* a",
                                          "children": [
                                            {
                                              "type": "*",
                                              "start_byte": 136,
                                              "end_byte": 137,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 138,
                                              "end_byte": 139,
                                              "text": "a",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 140,
                                          "end_byte": 141,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 142,
                                          "end_byte": 144,
                                          "text": "10",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 145,
                                      "end_byte": 146,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 147,
                                      "end_byte": 148,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 149,
                                  "end_byte": 150,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 151,
                                  "end_byte": 154,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 155,
                          "end_byte": 156,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 157,
                      "end_byte": 187,
                      "text": "c = fgetc_unlocked ( stdin ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 157,
                          "end_byte": 185,
                          "text": "c = fgetc_unlocked ( stdin )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 159,
                              "end_byte": 160,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 161,
                              "end_byte": 185,
                              "text": "fgetc_unlocked ( stdin )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 161,
                                  "end_byte": 175,
                                  "text": "fgetc_unlocked",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 176,
                                  "end_byte": 185,
                                  "text": "( stdin )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 178,
                                      "end_byte": 183,
                                      "text": "stdin",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 184,
                                      "end_byte": 185,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 188,
                      "end_byte": 189,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 190,
              "end_byte": 191,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 192,
      "end_byte": 418,
      "text": "static void put_i ( int n ) { char buf [ BSIZE ] ; int bn = BSIZE - 1 ; while ( 1 ) { buf [ bn -- ] = '0' + ( n ) ; n = n / 10 ; if ( n == 0 ) break ; } while ( bn < BSIZE - 1 ) putchar ( buf [ ++ bn ] ) ; putchar ( '\\n' ) ; }",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 192,
          "end_byte": 198,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 192,
              "end_byte": 198,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 199,
          "end_byte": 203,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 204,
          "end_byte": 219,
          "text": "put_i ( int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 204,
              "end_byte": 209,
              "text": "put_i",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 210,
              "end_byte": 219,
              "text": "( int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 210,
                  "end_byte": 211,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 212,
                  "end_byte": 217,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 212,
                      "end_byte": 215,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 216,
                      "end_byte": 217,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 218,
                  "end_byte": 219,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 220,
          "end_byte": 418,
          "text": "{ char buf [ BSIZE ] ; int bn = BSIZE - 1 ; while ( 1 ) { buf [ bn -- ] = '0' + ( n ) ; n = n / 10 ; if ( n == 0 ) break ; } while ( bn < BSIZE - 1 ) putchar ( buf [ ++ bn ] ) ; putchar ( '\\n' ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 220,
              "end_byte": 221,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 222,
              "end_byte": 242,
              "text": "char buf [ BSIZE ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 222,
                  "end_byte": 226,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 227,
                  "end_byte": 240,
                  "text": "buf [ BSIZE ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 227,
                      "end_byte": 230,
                      "text": "buf",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 231,
                      "end_byte": 232,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 233,
                      "end_byte": 238,
                      "text": "BSIZE",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 239,
                      "end_byte": 240,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 241,
                  "end_byte": 242,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 243,
              "end_byte": 263,
              "text": "int bn = BSIZE - 1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 243,
                  "end_byte": 246,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 247,
                  "end_byte": 261,
                  "text": "bn = BSIZE - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 247,
                      "end_byte": 249,
                      "text": "bn",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 250,
                      "end_byte": 251,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 252,
                      "end_byte": 261,
                      "text": "BSIZE - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 252,
                          "end_byte": 257,
                          "text": "BSIZE",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 258,
                          "end_byte": 259,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 260,
                          "end_byte": 261,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 262,
                  "end_byte": 263,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 264,
              "end_byte": 344,
              "text": "while ( 1 ) { buf [ bn -- ] = '0' + ( n ) ; n = n / 10 ; if ( n == 0 ) break ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 264,
                  "end_byte": 269,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 270,
                  "end_byte": 275,
                  "text": "( 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 270,
                      "end_byte": 271,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 272,
                      "end_byte": 273,
                      "text": "1",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 274,
                      "end_byte": 275,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 276,
                  "end_byte": 344,
                  "text": "{ buf [ bn -- ] = '0' + ( n ) ; n = n / 10 ; if ( n == 0 ) break ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 276,
                      "end_byte": 277,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 278,
                      "end_byte": 307,
                      "text": "buf [ bn -- ] = '0' + ( n ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 278,
                          "end_byte": 305,
                          "text": "buf [ bn -- ] = '0' + ( n )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 278,
                              "end_byte": 291,
                              "text": "buf [ bn -- ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 278,
                                  "end_byte": 281,
                                  "text": "buf",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 282,
                                  "end_byte": 291,
                                  "text": "[ bn -- ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 282,
                                      "end_byte": 283,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 284,
                                      "end_byte": 289,
                                      "text": "bn --",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 284,
                                          "end_byte": 286,
                                          "text": "bn",
                                          "children": []
                                        },
                                        {
                                          "type": "--",
                                          "start_byte": 287,
                                          "end_byte": 289,
                                          "text": "--",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 290,
                                      "end_byte": 291,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 292,
                              "end_byte": 293,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 294,
                              "end_byte": 305,
                              "text": "'0' + ( n )",
                              "children": [
                                {
                                  "type": "char_literal",
                                  "start_byte": 294,
                                  "end_byte": 297,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 294,
                                      "end_byte": 295,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 295,
                                      "end_byte": 296,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 296,
                                      "end_byte": 297,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 298,
                                  "end_byte": 299,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 300,
                                  "end_byte": 305,
                                  "text": "( n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 304,
                                      "end_byte": 305,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 306,
                          "end_byte": 307,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 308,
                      "end_byte": 320,
                      "text": "n = n / 10 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 308,
                          "end_byte": 318,
                          "text": "n = n / 10",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 308,
                              "end_byte": 309,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 310,
                              "end_byte": 311,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 312,
                              "end_byte": 318,
                              "text": "n / 10",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 312,
                                  "end_byte": 313,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "/",
                                  "start_byte": 314,
                                  "end_byte": 315,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 316,
                                  "end_byte": 318,
                                  "text": "10",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 319,
                          "end_byte": 320,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 321,
                      "end_byte": 342,
                      "text": "if ( n == 0 ) break ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 321,
                          "end_byte": 323,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 324,
                          "end_byte": 334,
                          "text": "( n == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 324,
                              "end_byte": 325,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 326,
                              "end_byte": 332,
                              "text": "n == 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 326,
                                  "end_byte": 327,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 328,
                                  "end_byte": 330,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 331,
                                  "end_byte": 332,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 333,
                              "end_byte": 334,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "break_statement",
                          "start_byte": 335,
                          "end_byte": 342,
                          "text": "break ;",
                          "children": [
                            {
                              "type": "break",
                              "start_byte": 335,
                              "end_byte": 340,
                              "text": "break",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 341,
                              "end_byte": 342,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 343,
                      "end_byte": 344,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 345,
              "end_byte": 397,
              "text": "while ( bn < BSIZE - 1 ) putchar ( buf [ ++ bn ] ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 345,
                  "end_byte": 350,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 351,
                  "end_byte": 369,
                  "text": "( bn < BSIZE - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 351,
                      "end_byte": 352,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 353,
                      "end_byte": 367,
                      "text": "bn < BSIZE - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 353,
                          "end_byte": 355,
                          "text": "bn",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 358,
                          "end_byte": 367,
                          "text": "BSIZE - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 358,
                              "end_byte": 363,
                              "text": "BSIZE",
                              "children": []
                            },
                            {
                              "type": "-",
                              "start_byte": 364,
                              "end_byte": 365,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 366,
                              "end_byte": 367,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 368,
                      "end_byte": 369,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 370,
                  "end_byte": 397,
                  "text": "putchar ( buf [ ++ bn ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 370,
                      "end_byte": 395,
                      "text": "putchar ( buf [ ++ bn ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 370,
                          "end_byte": 377,
                          "text": "putchar",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 378,
                          "end_byte": 395,
                          "text": "( buf [ ++ bn ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 378,
                              "end_byte": 379,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 380,
                              "end_byte": 393,
                              "text": "buf [ ++ bn ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 380,
                                  "end_byte": 383,
                                  "text": "buf",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 384,
                                  "end_byte": 393,
                                  "text": "[ ++ bn ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 384,
                                      "end_byte": 385,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 386,
                                      "end_byte": 391,
                                      "text": "++ bn",
                                      "children": [
                                        {
                                          "type": "++",
                                          "start_byte": 386,
                                          "end_byte": 388,
                                          "text": "++",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 389,
                                          "end_byte": 391,
                                          "text": "bn",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 392,
                                      "end_byte": 393,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 394,
                              "end_byte": 395,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 396,
                      "end_byte": 397,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 398,
              "end_byte": 416,
              "text": "putchar ( '\\n' ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 398,
                  "end_byte": 414,
                  "text": "putchar ( '\\n' )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 398,
                      "end_byte": 405,
                      "text": "putchar",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 406,
                      "end_byte": 414,
                      "text": "( '\\n' )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 406,
                          "end_byte": 407,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "char_literal",
                          "start_byte": 408,
                          "end_byte": 412,
                          "text": "'\\n'",
                          "children": [
                            {
                              "type": "'",
                              "start_byte": 408,
                              "end_byte": 409,
                              "text": "'",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 409,
                              "end_byte": 411,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "'",
                              "start_byte": 411,
                              "end_byte": 412,
                              "text": "'",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 413,
                          "end_byte": 414,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 415,
                  "end_byte": 416,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 417,
              "end_byte": 418,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 419,
      "end_byte": 451,
      "text": "static char _rbuf [ 8192 * 8 ] ;",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 419,
          "end_byte": 425,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 419,
              "end_byte": 425,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 426,
          "end_byte": 430,
          "text": "char",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 431,
          "end_byte": 449,
          "text": "_rbuf [ 8192 * 8 ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 431,
              "end_byte": 436,
              "text": "_rbuf",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 437,
              "end_byte": 438,
              "text": "[",
              "children": []
            },
            {
              "type": "binary_expression",
              "start_byte": 439,
              "end_byte": 447,
              "text": "8192 * 8",
              "children": [
                {
                  "type": "number_literal",
                  "start_byte": 439,
                  "end_byte": 443,
                  "text": "8192",
                  "children": []
                },
                {
                  "type": "*",
                  "start_byte": 444,
                  "end_byte": 445,
                  "text": "*",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 446,
                  "end_byte": 447,
                  "text": "8",
                  "children": []
                }
              ]
            },
            {
              "type": "]",
              "start_byte": 448,
              "end_byte": 449,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 450,
          "end_byte": 451,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 452,
      "end_byte": 477,
      "text": "static char * _rend = 0 ;",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 452,
          "end_byte": 458,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 452,
              "end_byte": 458,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 459,
          "end_byte": 463,
          "text": "char",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 464,
          "end_byte": 475,
          "text": "* _rend = 0",
          "children": [
            {
              "type": "pointer_declarator",
              "start_byte": 464,
              "end_byte": 471,
              "text": "* _rend",
              "children": [
                {
                  "type": "*",
                  "start_byte": 464,
                  "end_byte": 465,
                  "text": "*",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 466,
                  "end_byte": 471,
                  "text": "_rend",
                  "children": []
                }
              ]
            },
            {
              "type": "=",
              "start_byte": 472,
              "end_byte": 473,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 474,
              "end_byte": 475,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 476,
          "end_byte": 477,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 478,
      "end_byte": 503,
      "text": "static char * _rpos = 0 ;",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 478,
          "end_byte": 484,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 478,
              "end_byte": 484,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 485,
          "end_byte": 489,
          "text": "char",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 490,
          "end_byte": 501,
          "text": "* _rpos = 0",
          "children": [
            {
              "type": "pointer_declarator",
              "start_byte": 490,
              "end_byte": 497,
              "text": "* _rpos",
              "children": [
                {
                  "type": "*",
                  "start_byte": 490,
                  "end_byte": 491,
                  "text": "*",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 492,
                  "end_byte": 497,
                  "text": "_rpos",
                  "children": []
                }
              ]
            },
            {
              "type": "=",
              "start_byte": 498,
              "end_byte": 499,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 500,
              "end_byte": 501,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 502,
          "end_byte": 503,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 504,
      "end_byte": 692,
      "text": "static int _getchar ( ) { int n = read ( 0 , _rbuf , sizeof _rbuf ) ; if ( n <= 0 ) { printf ( \"EOF(%d)\\n\" , n ) ; exit ( 1 ) ; } _rend = _rbuf + n ; _rpos = _rbuf + 1 ; return * _rbuf ; }",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 504,
          "end_byte": 510,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 504,
              "end_byte": 510,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 511,
          "end_byte": 514,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 515,
          "end_byte": 527,
          "text": "_getchar ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 515,
              "end_byte": 523,
              "text": "_getchar",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 524,
              "end_byte": 527,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 524,
                  "end_byte": 525,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 526,
                  "end_byte": 527,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 528,
          "end_byte": 692,
          "text": "{ int n = read ( 0 , _rbuf , sizeof _rbuf ) ; if ( n <= 0 ) { printf ( \"EOF(%d)\\n\" , n ) ; exit ( 1 ) ; } _rend = _rbuf + n ; _rpos = _rbuf + 1 ; return * _rbuf ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 528,
              "end_byte": 529,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 530,
              "end_byte": 573,
              "text": "int n = read ( 0 , _rbuf , sizeof _rbuf ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 530,
                  "end_byte": 533,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 534,
                  "end_byte": 571,
                  "text": "n = read ( 0 , _rbuf , sizeof _rbuf )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 534,
                      "end_byte": 535,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 536,
                      "end_byte": 537,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 538,
                      "end_byte": 571,
                      "text": "read ( 0 , _rbuf , sizeof _rbuf )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 538,
                          "end_byte": 542,
                          "text": "read",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 543,
                          "end_byte": 571,
                          "text": "( 0 , _rbuf , sizeof _rbuf )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 543,
                              "end_byte": 544,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 545,
                              "end_byte": 546,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 547,
                              "end_byte": 548,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 549,
                              "end_byte": 554,
                              "text": "_rbuf",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 555,
                              "end_byte": 556,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "sizeof_expression",
                              "start_byte": 557,
                              "end_byte": 569,
                              "text": "sizeof _rbuf",
                              "children": [
                                {
                                  "type": "sizeof",
                                  "start_byte": 557,
                                  "end_byte": 563,
                                  "text": "sizeof",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 564,
                                  "end_byte": 569,
                                  "text": "_rbuf",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 570,
                              "end_byte": 571,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 572,
                  "end_byte": 573,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 574,
              "end_byte": 633,
              "text": "if ( n <= 0 ) { printf ( \"EOF(%d)\\n\" , n ) ; exit ( 1 ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 574,
                  "end_byte": 576,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 577,
                  "end_byte": 587,
                  "text": "( n <= 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 577,
                      "end_byte": 578,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 579,
                      "end_byte": 585,
                      "text": "n <= 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 579,
                          "end_byte": 580,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 581,
                          "end_byte": 583,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 584,
                          "end_byte": 585,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 586,
                      "end_byte": 587,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 588,
                  "end_byte": 633,
                  "text": "{ printf ( \"EOF(%d)\\n\" , n ) ; exit ( 1 ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 588,
                      "end_byte": 589,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 590,
                      "end_byte": 618,
                      "text": "printf ( \"EOF(%d)\\n\" , n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 590,
                          "end_byte": 616,
                          "text": "printf ( \"EOF(%d)\\n\" , n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 590,
                              "end_byte": 596,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 597,
                              "end_byte": 616,
                              "text": "( \"EOF(%d)\\n\" , n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 597,
                                  "end_byte": 598,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 599,
                                  "end_byte": 610,
                                  "text": "\"EOF(%d)\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 599,
                                      "end_byte": 600,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 600,
                                      "end_byte": 607,
                                      "text": "EOF(%d)",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 607,
                                      "end_byte": 609,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 609,
                                      "end_byte": 610,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 611,
                                  "end_byte": 612,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 613,
                                  "end_byte": 614,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 615,
                                  "end_byte": 616,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 617,
                          "end_byte": 618,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 619,
                      "end_byte": 631,
                      "text": "exit ( 1 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 619,
                          "end_byte": 629,
                          "text": "exit ( 1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 619,
                              "end_byte": 623,
                              "text": "exit",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 624,
                              "end_byte": 629,
                              "text": "( 1 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 624,
                                  "end_byte": 625,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 626,
                                  "end_byte": 627,
                                  "text": "1",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 628,
                                  "end_byte": 629,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 630,
                          "end_byte": 631,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 632,
                      "end_byte": 633,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 634,
              "end_byte": 653,
              "text": "_rend = _rbuf + n ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 634,
                  "end_byte": 651,
                  "text": "_rend = _rbuf + n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 634,
                      "end_byte": 639,
                      "text": "_rend",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 640,
                      "end_byte": 641,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 642,
                      "end_byte": 651,
                      "text": "_rbuf + n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 642,
                          "end_byte": 647,
                          "text": "_rbuf",
                          "children": []
                        },
                        {
                          "type": "+",
                          "start_byte": 648,
                          "end_byte": 649,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 650,
                          "end_byte": 651,
                          "text": "n",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 652,
                  "end_byte": 653,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 654,
              "end_byte": 673,
              "text": "_rpos = _rbuf + 1 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 654,
                  "end_byte": 671,
                  "text": "_rpos = _rbuf + 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 654,
                      "end_byte": 659,
                      "text": "_rpos",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 660,
                      "end_byte": 661,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 662,
                      "end_byte": 671,
                      "text": "_rbuf + 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 662,
                          "end_byte": 667,
                          "text": "_rbuf",
                          "children": []
                        },
                        {
                          "type": "+",
                          "start_byte": 668,
                          "end_byte": 669,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 670,
                          "end_byte": 671,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 672,
                  "end_byte": 673,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 674,
              "end_byte": 690,
              "text": "return * _rbuf ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 674,
                  "end_byte": 680,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "pointer_expression",
                  "start_byte": 681,
                  "end_byte": 688,
                  "text": "* _rbuf",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 681,
                      "end_byte": 682,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 683,
                      "end_byte": 688,
                      "text": "_rbuf",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 689,
                  "end_byte": 690,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 691,
              "end_byte": 692,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 693,
      "end_byte": 870,
      "text": "static int get_i ( ) { int c ; while ( ( ( c = mygetchar ( ) ) ) < '0' ) { } int n = c - '0' ; while ( ( ( c = mygetchar ( ) ) ) >= '0' ) { n = n * 10 + c - '0' ; } return n ; }",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 693,
          "end_byte": 699,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 693,
              "end_byte": 699,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 700,
          "end_byte": 703,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 704,
          "end_byte": 713,
          "text": "get_i ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 704,
              "end_byte": 709,
              "text": "get_i",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 710,
              "end_byte": 713,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 710,
                  "end_byte": 711,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 712,
                  "end_byte": 713,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 714,
          "end_byte": 870,
          "text": "{ int c ; while ( ( ( c = mygetchar ( ) ) ) < '0' ) { } int n = c - '0' ; while ( ( ( c = mygetchar ( ) ) ) >= '0' ) { n = n * 10 + c - '0' ; } return n ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 714,
              "end_byte": 715,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 716,
              "end_byte": 723,
              "text": "int c ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 716,
                  "end_byte": 719,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 720,
                  "end_byte": 721,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 722,
                  "end_byte": 723,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 724,
              "end_byte": 769,
              "text": "while ( ( ( c = mygetchar ( ) ) ) < '0' ) { }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 724,
                  "end_byte": 729,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 730,
                  "end_byte": 765,
                  "text": "( ( ( c = mygetchar ( ) ) ) < '0' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 730,
                      "end_byte": 731,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 732,
                      "end_byte": 763,
                      "text": "( ( c = mygetchar ( ) ) ) < '0'",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 732,
                          "end_byte": 757,
                          "text": "( ( c = mygetchar ( ) ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 732,
                              "end_byte": 733,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "parenthesized_expression",
                              "start_byte": 734,
                              "end_byte": 755,
                              "text": "( c = mygetchar ( ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 734,
                                  "end_byte": 735,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 736,
                                  "end_byte": 753,
                                  "text": "c = mygetchar ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 736,
                                      "end_byte": 737,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 738,
                                      "end_byte": 739,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 740,
                                      "end_byte": 753,
                                      "text": "mygetchar ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 740,
                                          "end_byte": 749,
                                          "text": "mygetchar",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 750,
                                          "end_byte": 753,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 750,
                                              "end_byte": 751,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 752,
                                              "end_byte": 753,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 754,
                                  "end_byte": 755,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 756,
                              "end_byte": 757,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "<",
                          "start_byte": 758,
                          "end_byte": 759,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "char_literal",
                          "start_byte": 760,
                          "end_byte": 763,
                          "text": "'0'",
                          "children": [
                            {
                              "type": "'",
                              "start_byte": 760,
                              "end_byte": 761,
                              "text": "'",
                              "children": []
                            },
                            {
                              "type": "character",
                              "start_byte": 761,
                              "end_byte": 762,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "'",
                              "start_byte": 762,
                              "end_byte": 763,
                              "text": "'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 764,
                      "end_byte": 765,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 766,
                  "end_byte": 769,
                  "text": "{ }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 766,
                      "end_byte": 767,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "}",
                      "start_byte": 768,
                      "end_byte": 769,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 770,
              "end_byte": 787,
              "text": "int n = c - '0' ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 770,
                  "end_byte": 773,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 774,
                  "end_byte": 785,
                  "text": "n = c - '0'",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 774,
                      "end_byte": 775,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 776,
                      "end_byte": 777,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 778,
                      "end_byte": 785,
                      "text": "c - '0'",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 778,
                          "end_byte": 779,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 780,
                          "end_byte": 781,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "char_literal",
                          "start_byte": 782,
                          "end_byte": 785,
                          "text": "'0'",
                          "children": [
                            {
                              "type": "'",
                              "start_byte": 782,
                              "end_byte": 783,
                              "text": "'",
                              "children": []
                            },
                            {
                              "type": "character",
                              "start_byte": 783,
                              "end_byte": 784,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "'",
                              "start_byte": 784,
                              "end_byte": 785,
                              "text": "'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 786,
                  "end_byte": 787,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 788,
              "end_byte": 857,
              "text": "while ( ( ( c = mygetchar ( ) ) ) >= '0' ) { n = n * 10 + c - '0' ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 788,
                  "end_byte": 793,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 794,
                  "end_byte": 830,
                  "text": "( ( ( c = mygetchar ( ) ) ) >= '0' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 794,
                      "end_byte": 795,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 796,
                      "end_byte": 828,
                      "text": "( ( c = mygetchar ( ) ) ) >= '0'",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 796,
                          "end_byte": 821,
                          "text": "( ( c = mygetchar ( ) ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 796,
                              "end_byte": 797,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "parenthesized_expression",
                              "start_byte": 798,
                              "end_byte": 819,
                              "text": "( c = mygetchar ( ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 798,
                                  "end_byte": 799,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 800,
                                  "end_byte": 817,
                                  "text": "c = mygetchar ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 800,
                                      "end_byte": 801,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 802,
                                      "end_byte": 803,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 804,
                                      "end_byte": 817,
                                      "text": "mygetchar ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 804,
                                          "end_byte": 813,
                                          "text": "mygetchar",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 814,
                                          "end_byte": 817,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 814,
                                              "end_byte": 815,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 816,
                                              "end_byte": 817,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 818,
                                  "end_byte": 819,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 820,
                              "end_byte": 821,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ">=",
                          "start_byte": 822,
                          "end_byte": 824,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "char_literal",
                          "start_byte": 825,
                          "end_byte": 828,
                          "text": "'0'",
                          "children": [
                            {
                              "type": "'",
                              "start_byte": 825,
                              "end_byte": 826,
                              "text": "'",
                              "children": []
                            },
                            {
                              "type": "character",
                              "start_byte": 826,
                              "end_byte": 827,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "'",
                              "start_byte": 827,
                              "end_byte": 828,
                              "text": "'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 829,
                      "end_byte": 830,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 831,
                  "end_byte": 857,
                  "text": "{ n = n * 10 + c - '0' ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 831,
                      "end_byte": 832,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 833,
                      "end_byte": 855,
                      "text": "n = n * 10 + c - '0' ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 833,
                          "end_byte": 853,
                          "text": "n = n * 10 + c - '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 833,
                              "end_byte": 834,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 835,
                              "end_byte": 836,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 837,
                              "end_byte": 853,
                              "text": "n * 10 + c - '0'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 837,
                                  "end_byte": 847,
                                  "text": "n * 10 + c",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 837,
                                      "end_byte": 843,
                                      "text": "n * 10",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 837,
                                          "end_byte": 838,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 839,
                                          "end_byte": 840,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 841,
                                          "end_byte": 843,
                                          "text": "10",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 844,
                                      "end_byte": 845,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 846,
                                      "end_byte": 847,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 848,
                                  "end_byte": 849,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 850,
                                  "end_byte": 853,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 850,
                                      "end_byte": 851,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 851,
                                      "end_byte": 852,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 852,
                                      "end_byte": 853,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 854,
                          "end_byte": 855,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 856,
                      "end_byte": 857,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 858,
              "end_byte": 868,
              "text": "return n ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 858,
                  "end_byte": 864,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 865,
                  "end_byte": 866,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 867,
                  "end_byte": 868,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 869,
              "end_byte": 870,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 871,
      "end_byte": 1617,
      "text": "int main ( ) { int t , n , i , j , k , temp , max , finalmax ; t = get_i ( ) ; int * * arr = ( int * * ) malloc ( 100 * sizeof ( int * ) ) ; for ( i = 0 ; i < 100 ; i ++ ) arr [ i ] = ( int * ) malloc ( 100 * sizeof ( int ) ) ; for ( i = 0 ; i < t ; i ++ ) { n = get_i ( ) ; finalmax = - 1 ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; } } put_i ( finalmax ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 871,
          "end_byte": 874,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 875,
          "end_byte": 883,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 875,
              "end_byte": 879,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 880,
              "end_byte": 883,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 880,
                  "end_byte": 881,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 882,
                  "end_byte": 883,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 884,
          "end_byte": 1617,
          "text": "{ int t , n , i , j , k , temp , max , finalmax ; t = get_i ( ) ; int * * arr = ( int * * ) malloc ( 100 * sizeof ( int * ) ) ; for ( i = 0 ; i < 100 ; i ++ ) arr [ i ] = ( int * ) malloc ( 100 * sizeof ( int ) ) ; for ( i = 0 ; i < t ; i ++ ) { n = get_i ( ) ; finalmax = - 1 ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; } } put_i ( finalmax ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 884,
              "end_byte": 885,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 886,
              "end_byte": 933,
              "text": "int t , n , i , j , k , temp , max , finalmax ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 886,
                  "end_byte": 889,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 890,
                  "end_byte": 891,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 892,
                  "end_byte": 893,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 894,
                  "end_byte": 895,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 896,
                  "end_byte": 897,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 898,
                  "end_byte": 899,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 900,
                  "end_byte": 901,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 902,
                  "end_byte": 903,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 904,
                  "end_byte": 905,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 906,
                  "end_byte": 907,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 908,
                  "end_byte": 909,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 910,
                  "end_byte": 914,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 915,
                  "end_byte": 916,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 917,
                  "end_byte": 920,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 921,
                  "end_byte": 922,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 923,
                  "end_byte": 931,
                  "text": "finalmax",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 932,
                  "end_byte": 933,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 934,
              "end_byte": 949,
              "text": "t = get_i ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 934,
                  "end_byte": 947,
                  "text": "t = get_i ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 934,
                      "end_byte": 935,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 936,
                      "end_byte": 937,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 938,
                      "end_byte": 947,
                      "text": "get_i ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 938,
                          "end_byte": 943,
                          "text": "get_i",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 944,
                          "end_byte": 947,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 944,
                              "end_byte": 945,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 946,
                              "end_byte": 947,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 948,
                  "end_byte": 949,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 950,
              "end_byte": 1011,
              "text": "int * * arr = ( int * * ) malloc ( 100 * sizeof ( int * ) ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 950,
                  "end_byte": 953,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 954,
                  "end_byte": 1009,
                  "text": "* * arr = ( int * * ) malloc ( 100 * sizeof ( int * ) )",
                  "children": [
                    {
                      "type": "pointer_declarator",
                      "start_byte": 954,
                      "end_byte": 961,
                      "text": "* * arr",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 954,
                          "end_byte": 955,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "pointer_declarator",
                          "start_byte": 956,
                          "end_byte": 961,
                          "text": "* arr",
                          "children": [
                            {
                              "type": "*",
                              "start_byte": 956,
                              "end_byte": 957,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 958,
                              "end_byte": 961,
                              "text": "arr",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 962,
                      "end_byte": 963,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "cast_expression",
                      "start_byte": 964,
                      "end_byte": 1009,
                      "text": "( int * * ) malloc ( 100 * sizeof ( int * ) )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 964,
                          "end_byte": 965,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "type_descriptor",
                          "start_byte": 966,
                          "end_byte": 973,
                          "text": "int * *",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 966,
                              "end_byte": 969,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "abstract_pointer_declarator",
                              "start_byte": 970,
                              "end_byte": 973,
                              "text": "* *",
                              "children": [
                                {
                                  "type": "*",
                                  "start_byte": 970,
                                  "end_byte": 971,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "abstract_pointer_declarator",
                                  "start_byte": 972,
                                  "end_byte": 973,
                                  "text": "*",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start_byte": 972,
                                      "end_byte": 973,
                                      "text": "*",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 974,
                          "end_byte": 975,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 976,
                          "end_byte": 1009,
                          "text": "malloc ( 100 * sizeof ( int * ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 976,
                              "end_byte": 982,
                              "text": "malloc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 983,
                              "end_byte": 1009,
                              "text": "( 100 * sizeof ( int * ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 983,
                                  "end_byte": 984,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 985,
                                  "end_byte": 1007,
                                  "text": "100 * sizeof ( int * )",
                                  "children": [
                                    {
                                      "type": "number_literal",
                                      "start_byte": 985,
                                      "end_byte": 988,
                                      "text": "100",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 989,
                                      "end_byte": 990,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "sizeof_expression",
                                      "start_byte": 991,
                                      "end_byte": 1007,
                                      "text": "sizeof ( int * )",
                                      "children": [
                                        {
                                          "type": "sizeof",
                                          "start_byte": 991,
                                          "end_byte": 997,
                                          "text": "sizeof",
                                          "children": []
                                        },
                                        {
                                          "type": "(",
                                          "start_byte": 998,
                                          "end_byte": 999,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "type_descriptor",
                                          "start_byte": 1000,
                                          "end_byte": 1005,
                                          "text": "int *",
                                          "children": [
                                            {
                                              "type": "primitive_type",
                                              "start_byte": 1000,
                                              "end_byte": 1003,
                                              "text": "int",
                                              "children": []
                                            },
                                            {
                                              "type": "abstract_pointer_declarator",
                                              "start_byte": 1004,
                                              "end_byte": 1005,
                                              "text": "*",
                                              "children": [
                                                {
                                                  "type": "*",
                                                  "start_byte": 1004,
                                                  "end_byte": 1005,
                                                  "text": "*",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 1006,
                                          "end_byte": 1007,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1008,
                                  "end_byte": 1009,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1010,
                  "end_byte": 1011,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 1012,
              "end_byte": 1098,
              "text": "for ( i = 0 ; i < 100 ; i ++ ) arr [ i ] = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 1012,
                  "end_byte": 1015,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 1016,
                  "end_byte": 1017,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 1018,
                  "end_byte": 1023,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1018,
                      "end_byte": 1019,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1020,
                      "end_byte": 1021,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1022,
                      "end_byte": 1023,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1024,
                  "end_byte": 1025,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1026,
                  "end_byte": 1033,
                  "text": "i < 100",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1026,
                      "end_byte": 1027,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 1028,
                      "end_byte": 1029,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1030,
                      "end_byte": 1033,
                      "text": "100",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1034,
                  "end_byte": 1035,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1036,
                  "end_byte": 1040,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1036,
                      "end_byte": 1037,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 1038,
                      "end_byte": 1040,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1041,
                  "end_byte": 1042,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 1043,
                  "end_byte": 1098,
                  "text": "arr [ i ] = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 1043,
                      "end_byte": 1096,
                      "text": "arr [ i ] = ( int * ) malloc ( 100 * sizeof ( int ) )",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 1043,
                          "end_byte": 1052,
                          "text": "arr [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1043,
                              "end_byte": 1046,
                              "text": "arr",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 1047,
                              "end_byte": 1052,
                              "text": "[ i ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 1047,
                                  "end_byte": 1048,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1049,
                                  "end_byte": 1050,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 1051,
                                  "end_byte": 1052,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start_byte": 1053,
                          "end_byte": 1054,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "cast_expression",
                          "start_byte": 1055,
                          "end_byte": 1096,
                          "text": "( int * ) malloc ( 100 * sizeof ( int ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1055,
                              "end_byte": 1056,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "type_descriptor",
                              "start_byte": 1057,
                              "end_byte": 1062,
                              "text": "int *",
                              "children": [
                                {
                                  "type": "primitive_type",
                                  "start_byte": 1057,
                                  "end_byte": 1060,
                                  "text": "int",
                                  "children": []
                                },
                                {
                                  "type": "abstract_pointer_declarator",
                                  "start_byte": 1061,
                                  "end_byte": 1062,
                                  "text": "*",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start_byte": 1061,
                                      "end_byte": 1062,
                                      "text": "*",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1063,
                              "end_byte": 1064,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1065,
                              "end_byte": 1096,
                              "text": "malloc ( 100 * sizeof ( int ) )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1065,
                                  "end_byte": 1071,
                                  "text": "malloc",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1072,
                                  "end_byte": 1096,
                                  "text": "( 100 * sizeof ( int ) )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1072,
                                      "end_byte": 1073,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1074,
                                      "end_byte": 1094,
                                      "text": "100 * sizeof ( int )",
                                      "children": [
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1074,
                                          "end_byte": 1077,
                                          "text": "100",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 1078,
                                          "end_byte": 1079,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "sizeof_expression",
                                          "start_byte": 1080,
                                          "end_byte": 1094,
                                          "text": "sizeof ( int )",
                                          "children": [
                                            {
                                              "type": "sizeof",
                                              "start_byte": 1080,
                                              "end_byte": 1086,
                                              "text": "sizeof",
                                              "children": []
                                            },
                                            {
                                              "type": "(",
                                              "start_byte": 1087,
                                              "end_byte": 1088,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "type_descriptor",
                                              "start_byte": 1089,
                                              "end_byte": 1092,
                                              "text": "int",
                                              "children": [
                                                {
                                                  "type": "primitive_type",
                                                  "start_byte": 1089,
                                                  "end_byte": 1092,
                                                  "text": "int",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1093,
                                              "end_byte": 1094,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1095,
                                      "end_byte": 1096,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 1097,
                      "end_byte": 1098,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 1099,
              "end_byte": 1604,
              "text": "for ( i = 0 ; i < t ; i ++ ) { n = get_i ( ) ; finalmax = - 1 ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; } } put_i ( finalmax ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 1099,
                  "end_byte": 1102,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 1103,
                  "end_byte": 1104,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 1105,
                  "end_byte": 1110,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1105,
                      "end_byte": 1106,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1107,
                      "end_byte": 1108,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1109,
                      "end_byte": 1110,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1111,
                  "end_byte": 1112,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1113,
                  "end_byte": 1118,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1113,
                      "end_byte": 1114,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 1115,
                      "end_byte": 1116,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1117,
                      "end_byte": 1118,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1119,
                  "end_byte": 1120,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1121,
                  "end_byte": 1125,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1121,
                      "end_byte": 1122,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 1123,
                      "end_byte": 1125,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1126,
                  "end_byte": 1127,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1128,
                  "end_byte": 1604,
                  "text": "{ n = get_i ( ) ; finalmax = - 1 ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; } } put_i ( finalmax ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1128,
                      "end_byte": 1129,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1130,
                      "end_byte": 1145,
                      "text": "n = get_i ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1130,
                          "end_byte": 1143,
                          "text": "n = get_i ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1130,
                              "end_byte": 1131,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1132,
                              "end_byte": 1133,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1134,
                              "end_byte": 1143,
                              "text": "get_i ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1134,
                                  "end_byte": 1139,
                                  "text": "get_i",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1140,
                                  "end_byte": 1143,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1140,
                                      "end_byte": 1141,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1142,
                                      "end_byte": 1143,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1144,
                          "end_byte": 1145,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1146,
                      "end_byte": 1162,
                      "text": "finalmax = - 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1146,
                          "end_byte": 1160,
                          "text": "finalmax = - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1146,
                              "end_byte": 1154,
                              "text": "finalmax",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1155,
                              "end_byte": 1156,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "unary_expression",
                              "start_byte": 1157,
                              "end_byte": 1160,
                              "text": "- 1",
                              "children": [
                                {
                                  "type": "-",
                                  "start_byte": 1157,
                                  "end_byte": 1158,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 1159,
                                  "end_byte": 1160,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1161,
                          "end_byte": 1162,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1163,
                      "end_byte": 1581,
                      "text": "for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1163,
                          "end_byte": 1166,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1167,
                          "end_byte": 1168,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1169,
                          "end_byte": 1174,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1169,
                              "end_byte": 1170,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1171,
                              "end_byte": 1172,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1173,
                              "end_byte": 1174,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1175,
                          "end_byte": 1176,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1177,
                          "end_byte": 1182,
                          "text": "j < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1177,
                              "end_byte": 1178,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1179,
                              "end_byte": 1180,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1181,
                              "end_byte": 1182,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1183,
                          "end_byte": 1184,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1185,
                          "end_byte": 1189,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1185,
                              "end_byte": 1186,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1187,
                              "end_byte": 1189,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1190,
                          "end_byte": 1191,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1192,
                          "end_byte": 1581,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) { max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1192,
                              "end_byte": 1193,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 1194,
                              "end_byte": 1579,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 1194,
                                  "end_byte": 1197,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 1198,
                                  "end_byte": 1199,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1200,
                                  "end_byte": 1205,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1200,
                                      "end_byte": 1201,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1202,
                                      "end_byte": 1203,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1204,
                                      "end_byte": 1205,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1206,
                                  "end_byte": 1207,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1208,
                                  "end_byte": 1214,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1208,
                                      "end_byte": 1209,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 1210,
                                      "end_byte": 1212,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1213,
                                      "end_byte": 1214,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1215,
                                  "end_byte": 1216,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 1217,
                                  "end_byte": 1221,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1217,
                                      "end_byte": 1218,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 1219,
                                      "end_byte": 1221,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1222,
                                  "end_byte": 1223,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 1224,
                                  "end_byte": 1579,
                                  "text": "{ max = - 1 ; temp = get_i ( ) ; if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ; if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ; if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ; if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 1224,
                                      "end_byte": 1225,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1226,
                                      "end_byte": 1237,
                                      "text": "max = - 1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1226,
                                          "end_byte": 1235,
                                          "text": "max = - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1226,
                                              "end_byte": 1229,
                                              "text": "max",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 1230,
                                              "end_byte": 1231,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "unary_expression",
                                              "start_byte": 1232,
                                              "end_byte": 1235,
                                              "text": "- 1",
                                              "children": [
                                                {
                                                  "type": "-",
                                                  "start_byte": 1232,
                                                  "end_byte": 1233,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 1234,
                                                  "end_byte": 1235,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1236,
                                          "end_byte": 1237,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1238,
                                      "end_byte": 1256,
                                      "text": "temp = get_i ( ) ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1238,
                                          "end_byte": 1254,
                                          "text": "temp = get_i ( )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1238,
                                              "end_byte": 1242,
                                              "text": "temp",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 1243,
                                              "end_byte": 1244,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "call_expression",
                                              "start_byte": 1245,
                                              "end_byte": 1254,
                                              "text": "get_i ( )",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1245,
                                                  "end_byte": 1250,
                                                  "text": "get_i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start_byte": 1251,
                                                  "end_byte": 1254,
                                                  "text": "( )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 1251,
                                                      "end_byte": 1252,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 1253,
                                                      "end_byte": 1254,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1255,
                                          "end_byte": 1256,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 1257,
                                      "end_byte": 1315,
                                      "text": "if ( ( j - 1 ) >= 0 && k < j ) max = arr [ j - 1 ] [ k ] ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 1257,
                                          "end_byte": 1259,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 1260,
                                          "end_byte": 1287,
                                          "text": "( ( j - 1 ) >= 0 && k < j )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1260,
                                              "end_byte": 1261,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1262,
                                              "end_byte": 1285,
                                              "text": "( j - 1 ) >= 0 && k < j",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1262,
                                                  "end_byte": 1276,
                                                  "text": "( j - 1 ) >= 0",
                                                  "children": [
                                                    {
                                                      "type": "parenthesized_expression",
                                                      "start_byte": 1262,
                                                      "end_byte": 1271,
                                                      "text": "( j - 1 )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 1262,
                                                          "end_byte": 1263,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1264,
                                                          "end_byte": 1269,
                                                          "text": "j - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1264,
                                                              "end_byte": 1265,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 1266,
                                                              "end_byte": 1267,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 1268,
                                                              "end_byte": 1269,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 1270,
                                                          "end_byte": 1271,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ">=",
                                                      "start_byte": 1272,
                                                      "end_byte": 1274,
                                                      "text": ">=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 1275,
                                                      "end_byte": 1276,
                                                      "text": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 1277,
                                                  "end_byte": 1279,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1280,
                                                  "end_byte": 1285,
                                                  "text": "k < j",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1280,
                                                      "end_byte": 1281,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "<",
                                                      "start_byte": 1282,
                                                      "end_byte": 1283,
                                                      "text": "<",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1284,
                                                      "end_byte": 1285,
                                                      "text": "j",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1286,
                                              "end_byte": 1287,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 1288,
                                          "end_byte": 1315,
                                          "text": "max = arr [ j - 1 ] [ k ] ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 1288,
                                              "end_byte": 1313,
                                              "text": "max = arr [ j - 1 ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1288,
                                                  "end_byte": 1291,
                                                  "text": "max",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 1292,
                                                  "end_byte": 1293,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1294,
                                                  "end_byte": 1313,
                                                  "text": "arr [ j - 1 ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1294,
                                                      "end_byte": 1307,
                                                      "text": "arr [ j - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1294,
                                                          "end_byte": 1297,
                                                          "text": "arr",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1298,
                                                          "end_byte": 1307,
                                                          "text": "[ j - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1298,
                                                              "end_byte": 1299,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1300,
                                                              "end_byte": 1305,
                                                              "text": "j - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1300,
                                                                  "end_byte": 1301,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1302,
                                                                  "end_byte": 1303,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1304,
                                                                  "end_byte": 1305,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1306,
                                                              "end_byte": 1307,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1308,
                                                      "end_byte": 1313,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1308,
                                                          "end_byte": 1309,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1310,
                                                          "end_byte": 1311,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1312,
                                                          "end_byte": 1313,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 1314,
                                              "end_byte": 1315,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 1316,
                                      "end_byte": 1420,
                                      "text": "if ( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max ) max = arr [ j - 1 ] [ k - 1 ] ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 1316,
                                          "end_byte": 1318,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 1319,
                                          "end_byte": 1388,
                                          "text": "( ( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1319,
                                              "end_byte": 1320,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1321,
                                              "end_byte": 1386,
                                              "text": "( j - 1 ) >= 0 && ( k - 1 ) >= 0 && arr [ j - 1 ] [ k - 1 ] > max",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1321,
                                                  "end_byte": 1353,
                                                  "text": "( j - 1 ) >= 0 && ( k - 1 ) >= 0",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 1321,
                                                      "end_byte": 1335,
                                                      "text": "( j - 1 ) >= 0",
                                                      "children": [
                                                        {
                                                          "type": "parenthesized_expression",
                                                          "start_byte": 1321,
                                                          "end_byte": 1330,
                                                          "text": "( j - 1 )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 1321,
                                                              "end_byte": 1322,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1323,
                                                              "end_byte": 1328,
                                                              "text": "j - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1323,
                                                                  "end_byte": 1324,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1325,
                                                                  "end_byte": 1326,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1327,
                                                                  "end_byte": 1328,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 1329,
                                                              "end_byte": 1330,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ">=",
                                                          "start_byte": 1331,
                                                          "end_byte": 1333,
                                                          "text": ">=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 1334,
                                                          "end_byte": 1335,
                                                          "text": "0",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "&&",
                                                      "start_byte": 1336,
                                                      "end_byte": 1338,
                                                      "text": "&&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 1339,
                                                      "end_byte": 1353,
                                                      "text": "( k - 1 ) >= 0",
                                                      "children": [
                                                        {
                                                          "type": "parenthesized_expression",
                                                          "start_byte": 1339,
                                                          "end_byte": 1348,
                                                          "text": "( k - 1 )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 1339,
                                                              "end_byte": 1340,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1341,
                                                              "end_byte": 1346,
                                                              "text": "k - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1341,
                                                                  "end_byte": 1342,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1343,
                                                                  "end_byte": 1344,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1345,
                                                                  "end_byte": 1346,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 1347,
                                                              "end_byte": 1348,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ">=",
                                                          "start_byte": 1349,
                                                          "end_byte": 1351,
                                                          "text": ">=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 1352,
                                                          "end_byte": 1353,
                                                          "text": "0",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 1354,
                                                  "end_byte": 1356,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1357,
                                                  "end_byte": 1386,
                                                  "text": "arr [ j - 1 ] [ k - 1 ] > max",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1357,
                                                      "end_byte": 1380,
                                                      "text": "arr [ j - 1 ] [ k - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 1357,
                                                          "end_byte": 1370,
                                                          "text": "arr [ j - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1357,
                                                              "end_byte": 1360,
                                                              "text": "arr",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 1361,
                                                              "end_byte": 1370,
                                                              "text": "[ j - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 1361,
                                                                  "end_byte": 1362,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 1363,
                                                                  "end_byte": 1368,
                                                                  "text": "j - 1",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 1363,
                                                                      "end_byte": 1364,
                                                                      "text": "j",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "-",
                                                                      "start_byte": 1365,
                                                                      "end_byte": 1366,
                                                                      "text": "-",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 1367,
                                                                      "end_byte": 1368,
                                                                      "text": "1",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 1369,
                                                                  "end_byte": 1370,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1371,
                                                          "end_byte": 1380,
                                                          "text": "[ k - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1371,
                                                              "end_byte": 1372,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1373,
                                                              "end_byte": 1378,
                                                              "text": "k - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1373,
                                                                  "end_byte": 1374,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1375,
                                                                  "end_byte": 1376,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1377,
                                                                  "end_byte": 1378,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1379,
                                                              "end_byte": 1380,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ">",
                                                      "start_byte": 1381,
                                                      "end_byte": 1382,
                                                      "text": ">",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1383,
                                                      "end_byte": 1386,
                                                      "text": "max",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1387,
                                              "end_byte": 1388,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 1389,
                                          "end_byte": 1420,
                                          "text": "max = arr [ j - 1 ] [ k - 1 ] ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 1389,
                                              "end_byte": 1418,
                                              "text": "max = arr [ j - 1 ] [ k - 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1389,
                                                  "end_byte": 1392,
                                                  "text": "max",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 1393,
                                                  "end_byte": 1394,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1395,
                                                  "end_byte": 1418,
                                                  "text": "arr [ j - 1 ] [ k - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1395,
                                                      "end_byte": 1408,
                                                      "text": "arr [ j - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1395,
                                                          "end_byte": 1398,
                                                          "text": "arr",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1399,
                                                          "end_byte": 1408,
                                                          "text": "[ j - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1399,
                                                              "end_byte": 1400,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 1401,
                                                              "end_byte": 1406,
                                                              "text": "j - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1401,
                                                                  "end_byte": 1402,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 1403,
                                                                  "end_byte": 1404,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 1405,
                                                                  "end_byte": 1406,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1407,
                                                              "end_byte": 1408,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1409,
                                                      "end_byte": 1418,
                                                      "text": "[ k - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1409,
                                                          "end_byte": 1410,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1411,
                                                          "end_byte": 1416,
                                                          "text": "k - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1411,
                                                              "end_byte": 1412,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 1413,
                                                              "end_byte": 1414,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 1415,
                                                              "end_byte": 1416,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1417,
                                                          "end_byte": 1418,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 1419,
                                              "end_byte": 1420,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 1421,
                                      "end_byte": 1496,
                                      "text": "if ( max > 0 ) arr [ j ] [ k ] = max + temp ; else arr [ j ] [ k ] = temp ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 1421,
                                          "end_byte": 1423,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 1424,
                                          "end_byte": 1435,
                                          "text": "( max > 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1424,
                                              "end_byte": 1425,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1426,
                                              "end_byte": 1433,
                                              "text": "max > 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1426,
                                                  "end_byte": 1429,
                                                  "text": "max",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 1430,
                                                  "end_byte": 1431,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 1432,
                                                  "end_byte": 1433,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1434,
                                              "end_byte": 1435,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 1436,
                                          "end_byte": 1466,
                                          "text": "arr [ j ] [ k ] = max + temp ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 1436,
                                              "end_byte": 1464,
                                              "text": "arr [ j ] [ k ] = max + temp",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1436,
                                                  "end_byte": 1451,
                                                  "text": "arr [ j ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1436,
                                                      "end_byte": 1445,
                                                      "text": "arr [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1436,
                                                          "end_byte": 1439,
                                                          "text": "arr",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1440,
                                                          "end_byte": 1445,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1440,
                                                              "end_byte": 1441,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1442,
                                                              "end_byte": 1443,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1444,
                                                              "end_byte": 1445,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1446,
                                                      "end_byte": 1451,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1446,
                                                          "end_byte": 1447,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1448,
                                                          "end_byte": 1449,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1450,
                                                          "end_byte": 1451,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 1452,
                                                  "end_byte": 1453,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1454,
                                                  "end_byte": 1464,
                                                  "text": "max + temp",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1454,
                                                      "end_byte": 1457,
                                                      "text": "max",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 1458,
                                                      "end_byte": 1459,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1460,
                                                      "end_byte": 1464,
                                                      "text": "temp",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 1465,
                                              "end_byte": 1466,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 1467,
                                          "end_byte": 1496,
                                          "text": "else arr [ j ] [ k ] = temp ;",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 1467,
                                              "end_byte": 1471,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 1472,
                                              "end_byte": 1496,
                                              "text": "arr [ j ] [ k ] = temp ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 1472,
                                                  "end_byte": 1494,
                                                  "text": "arr [ j ] [ k ] = temp",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1472,
                                                      "end_byte": 1487,
                                                      "text": "arr [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 1472,
                                                          "end_byte": 1481,
                                                          "text": "arr [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1472,
                                                              "end_byte": 1475,
                                                              "text": "arr",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 1476,
                                                              "end_byte": 1481,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 1476,
                                                                  "end_byte": 1477,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1478,
                                                                  "end_byte": 1479,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 1480,
                                                                  "end_byte": 1481,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1482,
                                                          "end_byte": 1487,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1482,
                                                              "end_byte": 1483,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1484,
                                                              "end_byte": 1485,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1486,
                                                              "end_byte": 1487,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 1488,
                                                      "end_byte": 1489,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1490,
                                                      "end_byte": 1494,
                                                      "text": "temp",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 1495,
                                                  "end_byte": 1496,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 1497,
                                      "end_byte": 1577,
                                      "text": "if ( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax ) finalmax = arr [ j ] [ k ] ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 1497,
                                          "end_byte": 1499,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 1500,
                                          "end_byte": 1548,
                                          "text": "( j == ( n - 1 ) && arr [ j ] [ k ] > finalmax )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1500,
                                              "end_byte": 1501,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1502,
                                              "end_byte": 1546,
                                              "text": "j == ( n - 1 ) && arr [ j ] [ k ] > finalmax",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1502,
                                                  "end_byte": 1516,
                                                  "text": "j == ( n - 1 )",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1502,
                                                      "end_byte": 1503,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "==",
                                                      "start_byte": 1504,
                                                      "end_byte": 1506,
                                                      "text": "==",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "parenthesized_expression",
                                                      "start_byte": 1507,
                                                      "end_byte": 1516,
                                                      "text": "( n - 1 )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 1507,
                                                          "end_byte": 1508,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 1509,
                                                          "end_byte": 1514,
                                                          "text": "n - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1509,
                                                              "end_byte": 1510,
                                                              "text": "n",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 1511,
                                                              "end_byte": 1512,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 1513,
                                                              "end_byte": 1514,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 1515,
                                                          "end_byte": 1516,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 1517,
                                                  "end_byte": 1519,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1520,
                                                  "end_byte": 1546,
                                                  "text": "arr [ j ] [ k ] > finalmax",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1520,
                                                      "end_byte": 1535,
                                                      "text": "arr [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 1520,
                                                          "end_byte": 1529,
                                                          "text": "arr [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1520,
                                                              "end_byte": 1523,
                                                              "text": "arr",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 1524,
                                                              "end_byte": 1529,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 1524,
                                                                  "end_byte": 1525,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 1526,
                                                                  "end_byte": 1527,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 1528,
                                                                  "end_byte": 1529,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1530,
                                                          "end_byte": 1535,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1530,
                                                              "end_byte": 1531,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1532,
                                                              "end_byte": 1533,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1534,
                                                              "end_byte": 1535,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ">",
                                                      "start_byte": 1536,
                                                      "end_byte": 1537,
                                                      "text": ">",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1538,
                                                      "end_byte": 1546,
                                                      "text": "finalmax",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1547,
                                              "end_byte": 1548,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 1549,
                                          "end_byte": 1577,
                                          "text": "finalmax = arr [ j ] [ k ] ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 1549,
                                              "end_byte": 1575,
                                              "text": "finalmax = arr [ j ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1549,
                                                  "end_byte": 1557,
                                                  "text": "finalmax",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 1558,
                                                  "end_byte": 1559,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1560,
                                                  "end_byte": 1575,
                                                  "text": "arr [ j ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 1560,
                                                      "end_byte": 1569,
                                                      "text": "arr [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1560,
                                                          "end_byte": 1563,
                                                          "text": "arr",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 1564,
                                                          "end_byte": 1569,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 1564,
                                                              "end_byte": 1565,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1566,
                                                              "end_byte": 1567,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 1568,
                                                              "end_byte": 1569,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1570,
                                                      "end_byte": 1575,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1570,
                                                          "end_byte": 1571,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1572,
                                                          "end_byte": 1573,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1574,
                                                          "end_byte": 1575,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 1576,
                                              "end_byte": 1577,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1578,
                                      "end_byte": 1579,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1580,
                              "end_byte": 1581,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1582,
                      "end_byte": 1602,
                      "text": "put_i ( finalmax ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1582,
                          "end_byte": 1600,
                          "text": "put_i ( finalmax )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1582,
                              "end_byte": 1587,
                              "text": "put_i",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1588,
                              "end_byte": 1600,
                              "text": "( finalmax )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1588,
                                  "end_byte": 1589,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1590,
                                  "end_byte": 1598,
                                  "text": "finalmax",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1599,
                                  "end_byte": 1600,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1601,
                          "end_byte": 1602,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1603,
                      "end_byte": 1604,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1605,
              "end_byte": 1615,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1605,
                  "end_byte": 1611,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1612,
                  "end_byte": 1613,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1614,
                  "end_byte": 1615,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1616,
              "end_byte": 1617,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}