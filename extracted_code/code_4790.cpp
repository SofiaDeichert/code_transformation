int main ( ) { int T ; int ans [ 102 ] ; int sums [ 102 ] ; int i , j ; int Tc ; int n ; int num [ 102 ] ; scanf ( "%d" , & T ) ; Tc = T ; while ( Tc -- ) { scanf ( "%d" , & n ) ; memset ( ( void * ) sums , 0 , n * sizeof ( sums [ 0 ] ) ) ; if ( n > sizeof ( sums ) / sizeof ( sums [ 0 ] ) ) { return 0 ; } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < ( i + 1 ) ; j ++ ) { scanf ( "%d" , & num [ j ] ) ; } for ( j = i ; j >= 1 ; j -- ) { sums [ j ] = MAX ( sums [ j ] + num [ j ] , sums [ j - 1 ] + num [ j ] ) ; } sums [ 0 ] += num [ 0 ] ; } ans [ Tc ] = 0 ; for ( i = 0 ; i < n ; i ++ ) { ans [ Tc ] = MAX ( sums [ i ] , ans [ Tc ] ) ; } } while ( T -- ) { printf ( "%ld\n" , ans [ T ] ) ; } return 0 ; }