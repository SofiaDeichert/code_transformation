int max ( int a , int b ) { return ( a > b ) ? a : b ; } int cmp ( const void * a , const void * b ) { return ( * ( ( int * ) a ) - * ( ( int * ) b ) ) ; } int main ( ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int n ; scanf ( "%d" , & n ) ; int arr [ 105 ] [ 105 ] ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 0 ; j < i ; j ++ ) scanf ( "%d" , & arr [ i - 1 ] [ j ] ) ; for ( int i = 1 ; i < n ; i ++ ) { for ( int j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) arr [ i ] [ 0 ] += arr [ i - 1 ] [ 0 ] ; else if ( j == i ) arr [ i ] [ j ] += arr [ i - 1 ] [ j - 1 ] ; else arr [ i ] [ j ] += max ( arr [ i - 1 ] [ j ] , arr [ i - 1 ] [ j - 1 ] ) ; } } qsort ( arr [ n - 1 ] , n , sizeof ( int ) , cmp ) ; printf ( "%d\n" , arr [ n - 1 ] [ n - 1 ] ) ; } return 0 ; }