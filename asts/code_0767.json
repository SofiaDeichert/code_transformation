{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1608,
  "text": "void str_reverse ( char * str ) { int i = 0 , j = strlen ( str ) - 1 ; char temp ; while ( i < j ) { temp = str [ i ] ; str [ i ++ ] = str [ j ] ; str [ j -- ] = temp ; } } void int_to_str ( int num , char * str ) { int i = 0 ; while ( num ) { str [ i ++ ] = ( num ) + '0' ; num /= 10 ; } str [ i ] = '\\0' ; str_reverse ( str ) ; } char * mul_array ( char * num1 , char * num2 ) { char * result ; int i , j , k = 0 , carry , temp , temp1 , length1 = strlen ( num1 ) , length2 = strlen ( num2 ) ; result = ( char * ) malloc ( ( length1 + length2 + 1 ) * sizeof ( char ) ) ; for ( i = 0 ; i < length1 + length2 + 1 ; i ++ ) result [ i ] = '0' ; for ( i = length1 - 1 ; i >= 0 ; i -- ) { k = length1 - 1 - i ; carry = 0 ; for ( j = length2 - 1 ; j >= 0 ; j -- ) { temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' ) ; temp += carry ; temp1 = temp ; temp /= 10 ; carry = temp ; temp = result [ k ] - '0' + temp1 ; result [ k ++ ] = ( temp ) + '0' ; temp /= 10 ; carry += temp ; } while ( carry != 0 ) { temp = carry % 10 ; carry /= 10 ; temp1 = result [ k ] - '0' + temp ; result [ k ++ ] = temp1 + '0' ; carry += temp1 / 10 ; } } result [ k ] = '\\0' ; str_reverse ( result ) ; return result ; } int main ( void ) { int t , n , i , num , min ; char nStr [ 7 ] , minStr [ 7 ] , * result ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; min = 100001 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & num ) ; if ( num < min ) min = num ; } int_to_str ( n - 1 , nStr ) ; int_to_str ( min , minStr ) ; result = mul_array ( nStr , minStr ) ; printf ( \"%s\\n\" , result ) ; free ( result ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 172,
      "text": "void str_reverse ( char * str ) { int i = 0 , j = strlen ( str ) - 1 ; char temp ; while ( i < j ) { temp = str [ i ] ; str [ i ++ ] = str [ j ] ; str [ j -- ] = temp ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 31,
          "text": "str_reverse ( char * str )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 16,
              "text": "str_reverse",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 17,
              "end_byte": 31,
              "text": "( char * str )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 19,
                  "end_byte": 29,
                  "text": "char * str",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 19,
                      "end_byte": 23,
                      "text": "char",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 24,
                      "end_byte": 29,
                      "text": "* str",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 24,
                          "end_byte": 25,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 26,
                          "end_byte": 29,
                          "text": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 32,
          "end_byte": 172,
          "text": "{ int i = 0 , j = strlen ( str ) - 1 ; char temp ; while ( i < j ) { temp = str [ i ] ; str [ i ++ ] = str [ j ] ; str [ j -- ] = temp ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 32,
              "end_byte": 33,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 34,
              "end_byte": 70,
              "text": "int i = 0 , j = strlen ( str ) - 1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 38,
                  "end_byte": 43,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 38,
                      "end_byte": 39,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 40,
                      "end_byte": 41,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 42,
                      "end_byte": 43,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 46,
                  "end_byte": 68,
                  "text": "j = strlen ( str ) - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 46,
                      "end_byte": 47,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 48,
                      "end_byte": 49,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 50,
                      "end_byte": 68,
                      "text": "strlen ( str ) - 1",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 50,
                          "end_byte": 64,
                          "text": "strlen ( str )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 50,
                              "end_byte": 56,
                              "text": "strlen",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 57,
                              "end_byte": 64,
                              "text": "( str )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 57,
                                  "end_byte": 58,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 59,
                                  "end_byte": 62,
                                  "text": "str",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 63,
                                  "end_byte": 64,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "-",
                          "start_byte": 65,
                          "end_byte": 66,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 71,
              "end_byte": 82,
              "text": "char temp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 71,
                  "end_byte": 75,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 76,
                  "end_byte": 80,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 83,
              "end_byte": 170,
              "text": "while ( i < j ) { temp = str [ i ] ; str [ i ++ ] = str [ j ] ; str [ j -- ] = temp ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 83,
                  "end_byte": 88,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 89,
                  "end_byte": 98,
                  "text": "( i < j )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 89,
                      "end_byte": 90,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 91,
                      "end_byte": 96,
                      "text": "i < j",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 91,
                          "end_byte": 92,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 93,
                          "end_byte": 94,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": "j",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 97,
                      "end_byte": 98,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 99,
                  "end_byte": 170,
                  "text": "{ temp = str [ i ] ; str [ i ++ ] = str [ j ] ; str [ j -- ] = temp ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 101,
                      "end_byte": 119,
                      "text": "temp = str [ i ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 101,
                          "end_byte": 117,
                          "text": "temp = str [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 101,
                              "end_byte": 105,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 106,
                              "end_byte": 107,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 108,
                              "end_byte": 117,
                              "text": "str [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 108,
                                  "end_byte": 111,
                                  "text": "str",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 112,
                                  "end_byte": 117,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 112,
                                      "end_byte": 113,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 114,
                                      "end_byte": 115,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 116,
                                      "end_byte": 117,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 118,
                          "end_byte": 119,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 120,
                      "end_byte": 146,
                      "text": "str [ i ++ ] = str [ j ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 120,
                          "end_byte": 144,
                          "text": "str [ i ++ ] = str [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 120,
                              "end_byte": 132,
                              "text": "str [ i ++ ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 120,
                                  "end_byte": 123,
                                  "text": "str",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 124,
                                  "end_byte": 132,
                                  "text": "[ i ++ ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 126,
                                      "end_byte": 130,
                                      "text": "i ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 126,
                                          "end_byte": 127,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 128,
                                          "end_byte": 130,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 131,
                                      "end_byte": 132,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 133,
                              "end_byte": 134,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 135,
                              "end_byte": 144,
                              "text": "str [ j ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 135,
                                  "end_byte": 138,
                                  "text": "str",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 139,
                                  "end_byte": 144,
                                  "text": "[ j ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 139,
                                      "end_byte": 140,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 141,
                                      "end_byte": 142,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 143,
                                      "end_byte": 144,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 145,
                          "end_byte": 146,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 147,
                      "end_byte": 168,
                      "text": "str [ j -- ] = temp ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 147,
                          "end_byte": 166,
                          "text": "str [ j -- ] = temp",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 147,
                              "end_byte": 159,
                              "text": "str [ j -- ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 147,
                                  "end_byte": 150,
                                  "text": "str",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 151,
                                  "end_byte": 159,
                                  "text": "[ j -- ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 153,
                                      "end_byte": 157,
                                      "text": "j --",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 153,
                                          "end_byte": 154,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "--",
                                          "start_byte": 155,
                                          "end_byte": 157,
                                          "text": "--",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 162,
                              "end_byte": 166,
                              "text": "temp",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 167,
                          "end_byte": 168,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 169,
                      "end_byte": 170,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 171,
              "end_byte": 172,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 173,
      "end_byte": 331,
      "text": "void int_to_str ( int num , char * str ) { int i = 0 ; while ( num ) { str [ i ++ ] = ( num ) + '0' ; num /= 10 ; } str [ i ] = '\\0' ; str_reverse ( str ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 173,
          "end_byte": 177,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 178,
          "end_byte": 213,
          "text": "int_to_str ( int num , char * str )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 178,
              "end_byte": 188,
              "text": "int_to_str",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 189,
              "end_byte": 213,
              "text": "( int num , char * str )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 189,
                  "end_byte": 190,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 191,
                  "end_byte": 198,
                  "text": "int num",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 191,
                      "end_byte": 194,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 195,
                      "end_byte": 198,
                      "text": "num",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 199,
                  "end_byte": 200,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 201,
                  "end_byte": 211,
                  "text": "char * str",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 201,
                      "end_byte": 205,
                      "text": "char",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 206,
                      "end_byte": 211,
                      "text": "* str",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 206,
                          "end_byte": 207,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 208,
                          "end_byte": 211,
                          "text": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 212,
                  "end_byte": 213,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 214,
          "end_byte": 331,
          "text": "{ int i = 0 ; while ( num ) { str [ i ++ ] = ( num ) + '0' ; num /= 10 ; } str [ i ] = '\\0' ; str_reverse ( str ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 214,
              "end_byte": 215,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 216,
              "end_byte": 227,
              "text": "int i = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 216,
                  "end_byte": 219,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 220,
                  "end_byte": 225,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 222,
                      "end_byte": 223,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 224,
                      "end_byte": 225,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 226,
                  "end_byte": 227,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 228,
              "end_byte": 288,
              "text": "while ( num ) { str [ i ++ ] = ( num ) + '0' ; num /= 10 ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 228,
                  "end_byte": 233,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 234,
                  "end_byte": 241,
                  "text": "( num )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 234,
                      "end_byte": 235,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 236,
                      "end_byte": 239,
                      "text": "num",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 240,
                      "end_byte": 241,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 242,
                  "end_byte": 288,
                  "text": "{ str [ i ++ ] = ( num ) + '0' ; num /= 10 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 242,
                      "end_byte": 243,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 244,
                      "end_byte": 274,
                      "text": "str [ i ++ ] = ( num ) + '0' ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 244,
                          "end_byte": 272,
                          "text": "str [ i ++ ] = ( num ) + '0'",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 244,
                              "end_byte": 256,
                              "text": "str [ i ++ ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 244,
                                  "end_byte": 247,
                                  "text": "str",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 248,
                                  "end_byte": 256,
                                  "text": "[ i ++ ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 248,
                                      "end_byte": 249,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 250,
                                      "end_byte": 254,
                                      "text": "i ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 250,
                                          "end_byte": 251,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 252,
                                          "end_byte": 254,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 255,
                                      "end_byte": 256,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 259,
                              "end_byte": 272,
                              "text": "( num ) + '0'",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 259,
                                  "end_byte": 266,
                                  "text": "( num )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 259,
                                      "end_byte": 260,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 261,
                                      "end_byte": 264,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 267,
                                  "end_byte": 268,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 269,
                                  "end_byte": 272,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 270,
                                      "end_byte": 271,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 271,
                                      "end_byte": 272,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 273,
                          "end_byte": 274,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 275,
                      "end_byte": 286,
                      "text": "num /= 10 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 275,
                          "end_byte": 284,
                          "text": "num /= 10",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 275,
                              "end_byte": 278,
                              "text": "num",
                              "children": []
                            },
                            {
                              "type": "/=",
                              "start_byte": 279,
                              "end_byte": 281,
                              "text": "/=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 282,
                              "end_byte": 284,
                              "text": "10",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 285,
                          "end_byte": 286,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 287,
                      "end_byte": 288,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 289,
              "end_byte": 307,
              "text": "str [ i ] = '\\0' ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 289,
                  "end_byte": 305,
                  "text": "str [ i ] = '\\0'",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 289,
                      "end_byte": 298,
                      "text": "str [ i ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 289,
                          "end_byte": 292,
                          "text": "str",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 293,
                          "end_byte": 298,
                          "text": "[ i ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 293,
                              "end_byte": 294,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 297,
                              "end_byte": 298,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 299,
                      "end_byte": 300,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "char_literal",
                      "start_byte": 301,
                      "end_byte": 305,
                      "text": "'\\0'",
                      "children": [
                        {
                          "type": "'",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": "'",
                          "children": []
                        },
                        {
                          "type": "escape_sequence",
                          "start_byte": 302,
                          "end_byte": 304,
                          "text": "\\0",
                          "children": []
                        },
                        {
                          "type": "'",
                          "start_byte": 304,
                          "end_byte": 305,
                          "text": "'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 306,
                  "end_byte": 307,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 308,
              "end_byte": 329,
              "text": "str_reverse ( str ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 308,
                  "end_byte": 327,
                  "text": "str_reverse ( str )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 308,
                      "end_byte": 319,
                      "text": "str_reverse",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 320,
                      "end_byte": 327,
                      "text": "( str )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 322,
                          "end_byte": 325,
                          "text": "str",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 326,
                          "end_byte": 327,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 328,
                  "end_byte": 329,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 330,
              "end_byte": 331,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 332,
      "end_byte": 1190,
      "text": "char * mul_array ( char * num1 , char * num2 ) { char * result ; int i , j , k = 0 , carry , temp , temp1 , length1 = strlen ( num1 ) , length2 = strlen ( num2 ) ; result = ( char * ) malloc ( ( length1 + length2 + 1 ) * sizeof ( char ) ) ; for ( i = 0 ; i < length1 + length2 + 1 ; i ++ ) result [ i ] = '0' ; for ( i = length1 - 1 ; i >= 0 ; i -- ) { k = length1 - 1 - i ; carry = 0 ; for ( j = length2 - 1 ; j >= 0 ; j -- ) { temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' ) ; temp += carry ; temp1 = temp ; temp /= 10 ; carry = temp ; temp = result [ k ] - '0' + temp1 ; result [ k ++ ] = ( temp ) + '0' ; temp /= 10 ; carry += temp ; } while ( carry != 0 ) { temp = carry % 10 ; carry /= 10 ; temp1 = result [ k ] - '0' + temp ; result [ k ++ ] = temp1 + '0' ; carry += temp1 / 10 ; } } result [ k ] = '\\0' ; str_reverse ( result ) ; return result ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 332,
          "end_byte": 336,
          "text": "char",
          "children": []
        },
        {
          "type": "pointer_declarator",
          "start_byte": 337,
          "end_byte": 378,
          "text": "* mul_array ( char * num1 , char * num2 )",
          "children": [
            {
              "type": "*",
              "start_byte": 337,
              "end_byte": 338,
              "text": "*",
              "children": []
            },
            {
              "type": "function_declarator",
              "start_byte": 339,
              "end_byte": 378,
              "text": "mul_array ( char * num1 , char * num2 )",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 339,
                  "end_byte": 348,
                  "text": "mul_array",
                  "children": []
                },
                {
                  "type": "parameter_list",
                  "start_byte": 349,
                  "end_byte": 378,
                  "text": "( char * num1 , char * num2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 349,
                      "end_byte": 350,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "parameter_declaration",
                      "start_byte": 351,
                      "end_byte": 362,
                      "text": "char * num1",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 351,
                          "end_byte": 355,
                          "text": "char",
                          "children": []
                        },
                        {
                          "type": "pointer_declarator",
                          "start_byte": 356,
                          "end_byte": 362,
                          "text": "* num1",
                          "children": [
                            {
                              "type": "*",
                              "start_byte": 356,
                              "end_byte": 357,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 358,
                              "end_byte": 362,
                              "text": "num1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start_byte": 363,
                      "end_byte": 364,
                      "text": ",",
                      "children": []
                    },
                    {
                      "type": "parameter_declaration",
                      "start_byte": 365,
                      "end_byte": 376,
                      "text": "char * num2",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 365,
                          "end_byte": 369,
                          "text": "char",
                          "children": []
                        },
                        {
                          "type": "pointer_declarator",
                          "start_byte": 370,
                          "end_byte": 376,
                          "text": "* num2",
                          "children": [
                            {
                              "type": "*",
                              "start_byte": 370,
                              "end_byte": 371,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 372,
                              "end_byte": 376,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 377,
                      "end_byte": 378,
                      "text": ")",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 379,
          "end_byte": 1190,
          "text": "{ char * result ; int i , j , k = 0 , carry , temp , temp1 , length1 = strlen ( num1 ) , length2 = strlen ( num2 ) ; result = ( char * ) malloc ( ( length1 + length2 + 1 ) * sizeof ( char ) ) ; for ( i = 0 ; i < length1 + length2 + 1 ; i ++ ) result [ i ] = '0' ; for ( i = length1 - 1 ; i >= 0 ; i -- ) { k = length1 - 1 - i ; carry = 0 ; for ( j = length2 - 1 ; j >= 0 ; j -- ) { temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' ) ; temp += carry ; temp1 = temp ; temp /= 10 ; carry = temp ; temp = result [ k ] - '0' + temp1 ; result [ k ++ ] = ( temp ) + '0' ; temp /= 10 ; carry += temp ; } while ( carry != 0 ) { temp = carry % 10 ; carry /= 10 ; temp1 = result [ k ] - '0' + temp ; result [ k ++ ] = temp1 + '0' ; carry += temp1 / 10 ; } } result [ k ] = '\\0' ; str_reverse ( result ) ; return result ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 379,
              "end_byte": 380,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 381,
              "end_byte": 396,
              "text": "char * result ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 381,
                  "end_byte": 385,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 386,
                  "end_byte": 394,
                  "text": "* result",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 386,
                      "end_byte": 387,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 388,
                      "end_byte": 394,
                      "text": "result",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 395,
                  "end_byte": 396,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 397,
              "end_byte": 495,
              "text": "int i , j , k = 0 , carry , temp , temp1 , length1 = strlen ( num1 ) , length2 = strlen ( num2 ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 397,
                  "end_byte": 400,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 401,
                  "end_byte": 402,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 403,
                  "end_byte": 404,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 405,
                  "end_byte": 406,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 407,
                  "end_byte": 408,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 409,
                  "end_byte": 414,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 409,
                      "end_byte": 410,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 411,
                      "end_byte": 412,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 413,
                      "end_byte": 414,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 415,
                  "end_byte": 416,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 417,
                  "end_byte": 422,
                  "text": "carry",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 423,
                  "end_byte": 424,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 425,
                  "end_byte": 429,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 430,
                  "end_byte": 431,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 432,
                  "end_byte": 437,
                  "text": "temp1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 438,
                  "end_byte": 439,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 440,
                  "end_byte": 465,
                  "text": "length1 = strlen ( num1 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 440,
                      "end_byte": 447,
                      "text": "length1",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 448,
                      "end_byte": 449,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 450,
                      "end_byte": 465,
                      "text": "strlen ( num1 )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 450,
                          "end_byte": 456,
                          "text": "strlen",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 457,
                          "end_byte": 465,
                          "text": "( num1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 457,
                              "end_byte": 458,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 459,
                              "end_byte": 463,
                              "text": "num1",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 464,
                              "end_byte": 465,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 466,
                  "end_byte": 467,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 468,
                  "end_byte": 493,
                  "text": "length2 = strlen ( num2 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 468,
                      "end_byte": 475,
                      "text": "length2",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 476,
                      "end_byte": 477,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 478,
                      "end_byte": 493,
                      "text": "strlen ( num2 )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 478,
                          "end_byte": 484,
                          "text": "strlen",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 485,
                          "end_byte": 493,
                          "text": "( num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 485,
                              "end_byte": 486,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 487,
                              "end_byte": 491,
                              "text": "num2",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 492,
                              "end_byte": 493,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 494,
                  "end_byte": 495,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 496,
              "end_byte": 572,
              "text": "result = ( char * ) malloc ( ( length1 + length2 + 1 ) * sizeof ( char ) ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 496,
                  "end_byte": 570,
                  "text": "result = ( char * ) malloc ( ( length1 + length2 + 1 ) * sizeof ( char ) )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 496,
                      "end_byte": 502,
                      "text": "result",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 503,
                      "end_byte": 504,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "cast_expression",
                      "start_byte": 505,
                      "end_byte": 570,
                      "text": "( char * ) malloc ( ( length1 + length2 + 1 ) * sizeof ( char ) )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 505,
                          "end_byte": 506,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "type_descriptor",
                          "start_byte": 507,
                          "end_byte": 513,
                          "text": "char *",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 507,
                              "end_byte": 511,
                              "text": "char",
                              "children": []
                            },
                            {
                              "type": "abstract_pointer_declarator",
                              "start_byte": 512,
                              "end_byte": 513,
                              "text": "*",
                              "children": [
                                {
                                  "type": "*",
                                  "start_byte": 512,
                                  "end_byte": 513,
                                  "text": "*",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 514,
                          "end_byte": 515,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 516,
                          "end_byte": 570,
                          "text": "malloc ( ( length1 + length2 + 1 ) * sizeof ( char ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 516,
                              "end_byte": 522,
                              "text": "malloc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 523,
                              "end_byte": 570,
                              "text": "( ( length1 + length2 + 1 ) * sizeof ( char ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 523,
                                  "end_byte": 524,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 525,
                                  "end_byte": 568,
                                  "text": "( length1 + length2 + 1 ) * sizeof ( char )",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 525,
                                      "end_byte": 550,
                                      "text": "( length1 + length2 + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 525,
                                          "end_byte": 526,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 527,
                                          "end_byte": 548,
                                          "text": "length1 + length2 + 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 527,
                                              "end_byte": 544,
                                              "text": "length1 + length2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 527,
                                                  "end_byte": 534,
                                                  "text": "length1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 535,
                                                  "end_byte": 536,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 537,
                                                  "end_byte": 544,
                                                  "text": "length2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 545,
                                              "end_byte": 546,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 547,
                                              "end_byte": 548,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 549,
                                          "end_byte": 550,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 551,
                                      "end_byte": 552,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "sizeof_expression",
                                      "start_byte": 553,
                                      "end_byte": 568,
                                      "text": "sizeof ( char )",
                                      "children": [
                                        {
                                          "type": "sizeof",
                                          "start_byte": 553,
                                          "end_byte": 559,
                                          "text": "sizeof",
                                          "children": []
                                        },
                                        {
                                          "type": "(",
                                          "start_byte": 560,
                                          "end_byte": 561,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "type_descriptor",
                                          "start_byte": 562,
                                          "end_byte": 566,
                                          "text": "char",
                                          "children": [
                                            {
                                              "type": "primitive_type",
                                              "start_byte": 562,
                                              "end_byte": 566,
                                              "text": "char",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 567,
                                          "end_byte": 568,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 569,
                                  "end_byte": 570,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 571,
                  "end_byte": 572,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 573,
              "end_byte": 642,
              "text": "for ( i = 0 ; i < length1 + length2 + 1 ; i ++ ) result [ i ] = '0' ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 573,
                  "end_byte": 576,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 577,
                  "end_byte": 578,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 579,
                  "end_byte": 584,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 579,
                      "end_byte": 580,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 581,
                      "end_byte": 582,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 583,
                      "end_byte": 584,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 585,
                  "end_byte": 586,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 587,
                  "end_byte": 612,
                  "text": "i < length1 + length2 + 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 587,
                      "end_byte": 588,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 589,
                      "end_byte": 590,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 591,
                      "end_byte": 612,
                      "text": "length1 + length2 + 1",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 591,
                          "end_byte": 608,
                          "text": "length1 + length2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 591,
                              "end_byte": 598,
                              "text": "length1",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 599,
                              "end_byte": 600,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 601,
                              "end_byte": 608,
                              "text": "length2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start_byte": 609,
                          "end_byte": 610,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 611,
                          "end_byte": 612,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 613,
                  "end_byte": 614,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 615,
                  "end_byte": 619,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 615,
                      "end_byte": 616,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 617,
                      "end_byte": 619,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 620,
                  "end_byte": 621,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 622,
                  "end_byte": 642,
                  "text": "result [ i ] = '0' ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 622,
                      "end_byte": 640,
                      "text": "result [ i ] = '0'",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 622,
                          "end_byte": 634,
                          "text": "result [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 622,
                              "end_byte": 628,
                              "text": "result",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 629,
                              "end_byte": 634,
                              "text": "[ i ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 629,
                                  "end_byte": 630,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 631,
                                  "end_byte": 632,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 633,
                                  "end_byte": 634,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start_byte": 635,
                          "end_byte": 636,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "char_literal",
                          "start_byte": 637,
                          "end_byte": 640,
                          "text": "'0'",
                          "children": [
                            {
                              "type": "'",
                              "start_byte": 637,
                              "end_byte": 638,
                              "text": "'",
                              "children": []
                            },
                            {
                              "type": "character",
                              "start_byte": 638,
                              "end_byte": 639,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "'",
                              "start_byte": 639,
                              "end_byte": 640,
                              "text": "'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 641,
                      "end_byte": 642,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 643,
              "end_byte": 1125,
              "text": "for ( i = length1 - 1 ; i >= 0 ; i -- ) { k = length1 - 1 - i ; carry = 0 ; for ( j = length2 - 1 ; j >= 0 ; j -- ) { temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' ) ; temp += carry ; temp1 = temp ; temp /= 10 ; carry = temp ; temp = result [ k ] - '0' + temp1 ; result [ k ++ ] = ( temp ) + '0' ; temp /= 10 ; carry += temp ; } while ( carry != 0 ) { temp = carry % 10 ; carry /= 10 ; temp1 = result [ k ] - '0' + temp ; result [ k ++ ] = temp1 + '0' ; carry += temp1 / 10 ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 643,
                  "end_byte": 646,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 647,
                  "end_byte": 648,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 649,
                  "end_byte": 664,
                  "text": "i = length1 - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 649,
                      "end_byte": 650,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 651,
                      "end_byte": 652,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 653,
                      "end_byte": 664,
                      "text": "length1 - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 653,
                          "end_byte": 660,
                          "text": "length1",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 661,
                          "end_byte": 662,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 663,
                          "end_byte": 664,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 665,
                  "end_byte": 666,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 667,
                  "end_byte": 673,
                  "text": "i >= 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 667,
                      "end_byte": 668,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 669,
                      "end_byte": 671,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 672,
                      "end_byte": 673,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 674,
                  "end_byte": 675,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 676,
                  "end_byte": 680,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 676,
                      "end_byte": 677,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 678,
                      "end_byte": 680,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 681,
                  "end_byte": 682,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 683,
                  "end_byte": 1125,
                  "text": "{ k = length1 - 1 - i ; carry = 0 ; for ( j = length2 - 1 ; j >= 0 ; j -- ) { temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' ) ; temp += carry ; temp1 = temp ; temp /= 10 ; carry = temp ; temp = result [ k ] - '0' + temp1 ; result [ k ++ ] = ( temp ) + '0' ; temp /= 10 ; carry += temp ; } while ( carry != 0 ) { temp = carry % 10 ; carry /= 10 ; temp1 = result [ k ] - '0' + temp ; result [ k ++ ] = temp1 + '0' ; carry += temp1 / 10 ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 683,
                      "end_byte": 684,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 685,
                      "end_byte": 706,
                      "text": "k = length1 - 1 - i ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 685,
                          "end_byte": 704,
                          "text": "k = length1 - 1 - i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 685,
                              "end_byte": 686,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 687,
                              "end_byte": 688,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 689,
                              "end_byte": 704,
                              "text": "length1 - 1 - i",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 689,
                                  "end_byte": 700,
                                  "text": "length1 - 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 689,
                                      "end_byte": 696,
                                      "text": "length1",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 697,
                                      "end_byte": 698,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 699,
                                      "end_byte": 700,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 701,
                                  "end_byte": 702,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 703,
                                  "end_byte": 704,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 705,
                          "end_byte": 706,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 707,
                      "end_byte": 718,
                      "text": "carry = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 707,
                          "end_byte": 716,
                          "text": "carry = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 707,
                              "end_byte": 712,
                              "text": "carry",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 713,
                              "end_byte": 714,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 715,
                              "end_byte": 716,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 717,
                          "end_byte": 718,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 719,
                      "end_byte": 974,
                      "text": "for ( j = length2 - 1 ; j >= 0 ; j -- ) { temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' ) ; temp += carry ; temp1 = temp ; temp /= 10 ; carry = temp ; temp = result [ k ] - '0' + temp1 ; result [ k ++ ] = ( temp ) + '0' ; temp /= 10 ; carry += temp ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 719,
                          "end_byte": 722,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 723,
                          "end_byte": 724,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 725,
                          "end_byte": 740,
                          "text": "j = length2 - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 725,
                              "end_byte": 726,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 727,
                              "end_byte": 728,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 729,
                              "end_byte": 740,
                              "text": "length2 - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 729,
                                  "end_byte": 736,
                                  "text": "length2",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 737,
                                  "end_byte": 738,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 739,
                                  "end_byte": 740,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 741,
                          "end_byte": 742,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 743,
                          "end_byte": 749,
                          "text": "j >= 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 743,
                              "end_byte": 744,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 745,
                              "end_byte": 747,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 748,
                              "end_byte": 749,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 750,
                          "end_byte": 751,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 752,
                          "end_byte": 756,
                          "text": "j --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 752,
                              "end_byte": 753,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 754,
                              "end_byte": 756,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 757,
                          "end_byte": 758,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 759,
                          "end_byte": 974,
                          "text": "{ temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' ) ; temp += carry ; temp1 = temp ; temp /= 10 ; carry = temp ; temp = result [ k ] - '0' + temp1 ; result [ k ++ ] = ( temp ) + '0' ; temp /= 10 ; carry += temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 759,
                              "end_byte": 760,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 761,
                              "end_byte": 813,
                              "text": "temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 761,
                                  "end_byte": 811,
                                  "text": "temp = ( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 761,
                                      "end_byte": 765,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 766,
                                      "end_byte": 767,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 768,
                                      "end_byte": 811,
                                      "text": "( num2 [ j ] - '0' ) * ( num1 [ i ] - '0' )",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 768,
                                          "end_byte": 788,
                                          "text": "( num2 [ j ] - '0' )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 768,
                                              "end_byte": 769,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 770,
                                              "end_byte": 786,
                                              "text": "num2 [ j ] - '0'",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 770,
                                                  "end_byte": 780,
                                                  "text": "num2 [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 770,
                                                      "end_byte": 774,
                                                      "text": "num2",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 775,
                                                      "end_byte": 780,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 775,
                                                          "end_byte": 776,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 777,
                                                          "end_byte": 778,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 779,
                                                          "end_byte": 780,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 781,
                                                  "end_byte": 782,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "char_literal",
                                                  "start_byte": 783,
                                                  "end_byte": 786,
                                                  "text": "'0'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start_byte": 783,
                                                      "end_byte": 784,
                                                      "text": "'",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "character",
                                                      "start_byte": 784,
                                                      "end_byte": 785,
                                                      "text": "0",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start_byte": 785,
                                                      "end_byte": 786,
                                                      "text": "'",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 787,
                                              "end_byte": 788,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 789,
                                          "end_byte": 790,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 791,
                                          "end_byte": 811,
                                          "text": "( num1 [ i ] - '0' )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 791,
                                              "end_byte": 792,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 793,
                                              "end_byte": 809,
                                              "text": "num1 [ i ] - '0'",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 793,
                                                  "end_byte": 803,
                                                  "text": "num1 [ i ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 793,
                                                      "end_byte": 797,
                                                      "text": "num1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 798,
                                                      "end_byte": 803,
                                                      "text": "[ i ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 798,
                                                          "end_byte": 799,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 800,
                                                          "end_byte": 801,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 802,
                                                          "end_byte": 803,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 804,
                                                  "end_byte": 805,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "char_literal",
                                                  "start_byte": 806,
                                                  "end_byte": 809,
                                                  "text": "'0'",
                                                  "children": [
                                                    {
                                                      "type": "'",
                                                      "start_byte": 806,
                                                      "end_byte": 807,
                                                      "text": "'",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "character",
                                                      "start_byte": 807,
                                                      "end_byte": 808,
                                                      "text": "0",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "'",
                                                      "start_byte": 808,
                                                      "end_byte": 809,
                                                      "text": "'",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 810,
                                              "end_byte": 811,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 812,
                                  "end_byte": 813,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 814,
                              "end_byte": 829,
                              "text": "temp += carry ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 814,
                                  "end_byte": 827,
                                  "text": "temp += carry",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 814,
                                      "end_byte": 818,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 819,
                                      "end_byte": 821,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 822,
                                      "end_byte": 827,
                                      "text": "carry",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 828,
                                  "end_byte": 829,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 830,
                              "end_byte": 844,
                              "text": "temp1 = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 830,
                                  "end_byte": 842,
                                  "text": "temp1 = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 830,
                                      "end_byte": 835,
                                      "text": "temp1",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 836,
                                      "end_byte": 837,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 838,
                                      "end_byte": 842,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 843,
                                  "end_byte": 844,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 845,
                              "end_byte": 857,
                              "text": "temp /= 10 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 845,
                                  "end_byte": 855,
                                  "text": "temp /= 10",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 845,
                                      "end_byte": 849,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "/=",
                                      "start_byte": 850,
                                      "end_byte": 852,
                                      "text": "/=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 853,
                                      "end_byte": 855,
                                      "text": "10",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 856,
                                  "end_byte": 857,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 858,
                              "end_byte": 872,
                              "text": "carry = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 858,
                                  "end_byte": 870,
                                  "text": "carry = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 858,
                                      "end_byte": 863,
                                      "text": "carry",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 864,
                                      "end_byte": 865,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 866,
                                      "end_byte": 870,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 871,
                                  "end_byte": 872,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 873,
                              "end_byte": 908,
                              "text": "temp = result [ k ] - '0' + temp1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 873,
                                  "end_byte": 906,
                                  "text": "temp = result [ k ] - '0' + temp1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 873,
                                      "end_byte": 877,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 878,
                                      "end_byte": 879,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 880,
                                      "end_byte": 906,
                                      "text": "result [ k ] - '0' + temp1",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 880,
                                          "end_byte": 898,
                                          "text": "result [ k ] - '0'",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 880,
                                              "end_byte": 892,
                                              "text": "result [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 880,
                                                  "end_byte": 886,
                                                  "text": "result",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 887,
                                                  "end_byte": 892,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 887,
                                                      "end_byte": 888,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 889,
                                                      "end_byte": 890,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 891,
                                                      "end_byte": 892,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 893,
                                              "end_byte": 894,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "char_literal",
                                              "start_byte": 895,
                                              "end_byte": 898,
                                              "text": "'0'",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start_byte": 895,
                                                  "end_byte": 896,
                                                  "text": "'",
                                                  "children": []
                                                },
                                                {
                                                  "type": "character",
                                                  "start_byte": 896,
                                                  "end_byte": 897,
                                                  "text": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": "'",
                                                  "start_byte": 897,
                                                  "end_byte": 898,
                                                  "text": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 899,
                                          "end_byte": 900,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 901,
                                          "end_byte": 906,
                                          "text": "temp1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 907,
                                  "end_byte": 908,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 909,
                              "end_byte": 943,
                              "text": "result [ k ++ ] = ( temp ) + '0' ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 909,
                                  "end_byte": 941,
                                  "text": "result [ k ++ ] = ( temp ) + '0'",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 909,
                                      "end_byte": 924,
                                      "text": "result [ k ++ ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 909,
                                          "end_byte": 915,
                                          "text": "result",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 916,
                                          "end_byte": 924,
                                          "text": "[ k ++ ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 916,
                                              "end_byte": 917,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "update_expression",
                                              "start_byte": 918,
                                              "end_byte": 922,
                                              "text": "k ++",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 918,
                                                  "end_byte": 919,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "++",
                                                  "start_byte": 920,
                                                  "end_byte": 922,
                                                  "text": "++",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 923,
                                              "end_byte": 924,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 925,
                                      "end_byte": 926,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 927,
                                      "end_byte": 941,
                                      "text": "( temp ) + '0'",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 927,
                                          "end_byte": 935,
                                          "text": "( temp )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 927,
                                              "end_byte": 928,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 929,
                                              "end_byte": 933,
                                              "text": "temp",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 934,
                                              "end_byte": 935,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 936,
                                          "end_byte": 937,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "char_literal",
                                          "start_byte": 938,
                                          "end_byte": 941,
                                          "text": "'0'",
                                          "children": [
                                            {
                                              "type": "'",
                                              "start_byte": 938,
                                              "end_byte": 939,
                                              "text": "'",
                                              "children": []
                                            },
                                            {
                                              "type": "character",
                                              "start_byte": 939,
                                              "end_byte": 940,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "'",
                                              "start_byte": 940,
                                              "end_byte": 941,
                                              "text": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 942,
                                  "end_byte": 943,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 944,
                              "end_byte": 956,
                              "text": "temp /= 10 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 944,
                                  "end_byte": 954,
                                  "text": "temp /= 10",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 944,
                                      "end_byte": 948,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "/=",
                                      "start_byte": 949,
                                      "end_byte": 951,
                                      "text": "/=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 952,
                                      "end_byte": 954,
                                      "text": "10",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 955,
                                  "end_byte": 956,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 957,
                              "end_byte": 972,
                              "text": "carry += temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 957,
                                  "end_byte": 970,
                                  "text": "carry += temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 957,
                                      "end_byte": 962,
                                      "text": "carry",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 963,
                                      "end_byte": 965,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 966,
                                      "end_byte": 970,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 971,
                                  "end_byte": 972,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 973,
                              "end_byte": 974,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 975,
                      "end_byte": 1123,
                      "text": "while ( carry != 0 ) { temp = carry % 10 ; carry /= 10 ; temp1 = result [ k ] - '0' + temp ; result [ k ++ ] = temp1 + '0' ; carry += temp1 / 10 ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 975,
                          "end_byte": 980,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 981,
                          "end_byte": 995,
                          "text": "( carry != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 981,
                              "end_byte": 982,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 983,
                              "end_byte": 993,
                              "text": "carry != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 983,
                                  "end_byte": 988,
                                  "text": "carry",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 989,
                                  "end_byte": 991,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 992,
                                  "end_byte": 993,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 994,
                              "end_byte": 995,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 996,
                          "end_byte": 1123,
                          "text": "{ temp = carry % 10 ; carry /= 10 ; temp1 = result [ k ] - '0' + temp ; result [ k ++ ] = temp1 + '0' ; carry += temp1 / 10 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 996,
                              "end_byte": 997,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 998,
                              "end_byte": 1017,
                              "text": "temp = carry % 10 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 998,
                                  "end_byte": 1015,
                                  "text": "temp = carry % 10",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 998,
                                      "end_byte": 1002,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1003,
                                      "end_byte": 1004,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1005,
                                      "end_byte": 1015,
                                      "text": "carry % 10",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1005,
                                          "end_byte": 1010,
                                          "text": "carry",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 1011,
                                          "end_byte": 1012,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1013,
                                          "end_byte": 1015,
                                          "text": "10",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1016,
                                  "end_byte": 1017,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1018,
                              "end_byte": 1031,
                              "text": "carry /= 10 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1018,
                                  "end_byte": 1029,
                                  "text": "carry /= 10",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1018,
                                      "end_byte": 1023,
                                      "text": "carry",
                                      "children": []
                                    },
                                    {
                                      "type": "/=",
                                      "start_byte": 1024,
                                      "end_byte": 1026,
                                      "text": "/=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1027,
                                      "end_byte": 1029,
                                      "text": "10",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1030,
                                  "end_byte": 1031,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1032,
                              "end_byte": 1067,
                              "text": "temp1 = result [ k ] - '0' + temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1032,
                                  "end_byte": 1065,
                                  "text": "temp1 = result [ k ] - '0' + temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1032,
                                      "end_byte": 1037,
                                      "text": "temp1",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1038,
                                      "end_byte": 1039,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1040,
                                      "end_byte": 1065,
                                      "text": "result [ k ] - '0' + temp",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 1040,
                                          "end_byte": 1058,
                                          "text": "result [ k ] - '0'",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1040,
                                              "end_byte": 1052,
                                              "text": "result [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1040,
                                                  "end_byte": 1046,
                                                  "text": "result",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1047,
                                                  "end_byte": 1052,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1047,
                                                      "end_byte": 1048,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1049,
                                                      "end_byte": 1050,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1051,
                                                      "end_byte": 1052,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 1053,
                                              "end_byte": 1054,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "char_literal",
                                              "start_byte": 1055,
                                              "end_byte": 1058,
                                              "text": "'0'",
                                              "children": [
                                                {
                                                  "type": "'",
                                                  "start_byte": 1055,
                                                  "end_byte": 1056,
                                                  "text": "'",
                                                  "children": []
                                                },
                                                {
                                                  "type": "character",
                                                  "start_byte": 1056,
                                                  "end_byte": 1057,
                                                  "text": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": "'",
                                                  "start_byte": 1057,
                                                  "end_byte": 1058,
                                                  "text": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 1059,
                                          "end_byte": 1060,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1061,
                                          "end_byte": 1065,
                                          "text": "temp",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1066,
                                  "end_byte": 1067,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1068,
                              "end_byte": 1099,
                              "text": "result [ k ++ ] = temp1 + '0' ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1068,
                                  "end_byte": 1097,
                                  "text": "result [ k ++ ] = temp1 + '0'",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1068,
                                      "end_byte": 1083,
                                      "text": "result [ k ++ ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1068,
                                          "end_byte": 1074,
                                          "text": "result",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1075,
                                          "end_byte": 1083,
                                          "text": "[ k ++ ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1075,
                                              "end_byte": 1076,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "update_expression",
                                              "start_byte": 1077,
                                              "end_byte": 1081,
                                              "text": "k ++",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1077,
                                                  "end_byte": 1078,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "++",
                                                  "start_byte": 1079,
                                                  "end_byte": 1081,
                                                  "text": "++",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1082,
                                              "end_byte": 1083,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1084,
                                      "end_byte": 1085,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1086,
                                      "end_byte": 1097,
                                      "text": "temp1 + '0'",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1086,
                                          "end_byte": 1091,
                                          "text": "temp1",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 1092,
                                          "end_byte": 1093,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "char_literal",
                                          "start_byte": 1094,
                                          "end_byte": 1097,
                                          "text": "'0'",
                                          "children": [
                                            {
                                              "type": "'",
                                              "start_byte": 1094,
                                              "end_byte": 1095,
                                              "text": "'",
                                              "children": []
                                            },
                                            {
                                              "type": "character",
                                              "start_byte": 1095,
                                              "end_byte": 1096,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "'",
                                              "start_byte": 1096,
                                              "end_byte": 1097,
                                              "text": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1098,
                                  "end_byte": 1099,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1100,
                              "end_byte": 1121,
                              "text": "carry += temp1 / 10 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1100,
                                  "end_byte": 1119,
                                  "text": "carry += temp1 / 10",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1100,
                                      "end_byte": 1105,
                                      "text": "carry",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 1106,
                                      "end_byte": 1108,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1109,
                                      "end_byte": 1119,
                                      "text": "temp1 / 10",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1109,
                                          "end_byte": 1114,
                                          "text": "temp1",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 1115,
                                          "end_byte": 1116,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1117,
                                          "end_byte": 1119,
                                          "text": "10",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1120,
                                  "end_byte": 1121,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1122,
                              "end_byte": 1123,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1124,
                      "end_byte": 1125,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1126,
              "end_byte": 1147,
              "text": "result [ k ] = '\\0' ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 1126,
                  "end_byte": 1145,
                  "text": "result [ k ] = '\\0'",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 1126,
                      "end_byte": 1138,
                      "text": "result [ k ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1126,
                          "end_byte": 1132,
                          "text": "result",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 1133,
                          "end_byte": 1138,
                          "text": "[ k ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 1133,
                              "end_byte": 1134,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1135,
                              "end_byte": 1136,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 1137,
                              "end_byte": 1138,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 1139,
                      "end_byte": 1140,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "char_literal",
                      "start_byte": 1141,
                      "end_byte": 1145,
                      "text": "'\\0'",
                      "children": [
                        {
                          "type": "'",
                          "start_byte": 1141,
                          "end_byte": 1142,
                          "text": "'",
                          "children": []
                        },
                        {
                          "type": "escape_sequence",
                          "start_byte": 1142,
                          "end_byte": 1144,
                          "text": "\\0",
                          "children": []
                        },
                        {
                          "type": "'",
                          "start_byte": 1144,
                          "end_byte": 1145,
                          "text": "'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1146,
                  "end_byte": 1147,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1148,
              "end_byte": 1172,
              "text": "str_reverse ( result ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 1148,
                  "end_byte": 1170,
                  "text": "str_reverse ( result )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1148,
                      "end_byte": 1159,
                      "text": "str_reverse",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 1160,
                      "end_byte": 1170,
                      "text": "( result )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 1160,
                          "end_byte": 1161,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 1162,
                          "end_byte": 1168,
                          "text": "result",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 1169,
                          "end_byte": 1170,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1171,
                  "end_byte": 1172,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1173,
              "end_byte": 1188,
              "text": "return result ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1173,
                  "end_byte": 1179,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1180,
                  "end_byte": 1186,
                  "text": "result",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1187,
                  "end_byte": 1188,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1189,
              "end_byte": 1190,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 1191,
      "end_byte": 1608,
      "text": "int main ( void ) { int t , n , i , num , min ; char nStr [ 7 ] , minStr [ 7 ] , * result ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; min = 100001 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & num ) ; if ( num < min ) min = num ; } int_to_str ( n - 1 , nStr ) ; int_to_str ( min , minStr ) ; result = mul_array ( nStr , minStr ) ; printf ( \"%s\\n\" , result ) ; free ( result ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 1191,
          "end_byte": 1194,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 1195,
          "end_byte": 1208,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 1195,
              "end_byte": 1199,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 1200,
              "end_byte": 1208,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 1200,
                  "end_byte": 1201,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 1202,
                  "end_byte": 1206,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 1202,
                      "end_byte": 1206,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1207,
                  "end_byte": 1208,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 1209,
          "end_byte": 1608,
          "text": "{ int t , n , i , num , min ; char nStr [ 7 ] , minStr [ 7 ] , * result ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; min = 100001 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & num ) ; if ( num < min ) min = num ; } int_to_str ( n - 1 , nStr ) ; int_to_str ( min , minStr ) ; result = mul_array ( nStr , minStr ) ; printf ( \"%s\\n\" , result ) ; free ( result ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 1209,
              "end_byte": 1210,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 1211,
              "end_byte": 1238,
              "text": "int t , n , i , num , min ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 1211,
                  "end_byte": 1214,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1215,
                  "end_byte": 1216,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 1217,
                  "end_byte": 1218,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1219,
                  "end_byte": 1220,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 1221,
                  "end_byte": 1222,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1223,
                  "end_byte": 1224,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 1225,
                  "end_byte": 1226,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1227,
                  "end_byte": 1230,
                  "text": "num",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 1231,
                  "end_byte": 1232,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1233,
                  "end_byte": 1236,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1237,
                  "end_byte": 1238,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 1239,
              "end_byte": 1282,
              "text": "char nStr [ 7 ] , minStr [ 7 ] , * result ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 1239,
                  "end_byte": 1243,
                  "text": "char",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 1244,
                  "end_byte": 1254,
                  "text": "nStr [ 7 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1244,
                      "end_byte": 1248,
                      "text": "nStr",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 1249,
                      "end_byte": 1250,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1251,
                      "end_byte": 1252,
                      "text": "7",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 1253,
                      "end_byte": 1254,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 1255,
                  "end_byte": 1256,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 1257,
                  "end_byte": 1269,
                  "text": "minStr [ 7 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1257,
                      "end_byte": 1263,
                      "text": "minStr",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 1264,
                      "end_byte": 1265,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1266,
                      "end_byte": 1267,
                      "text": "7",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 1268,
                      "end_byte": 1269,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 1270,
                  "end_byte": 1271,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 1272,
                  "end_byte": 1280,
                  "text": "* result",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 1272,
                      "end_byte": 1273,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1274,
                      "end_byte": 1280,
                      "text": "result",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1281,
                  "end_byte": 1282,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1283,
              "end_byte": 1305,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 1283,
                  "end_byte": 1303,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1283,
                      "end_byte": 1288,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 1289,
                      "end_byte": 1303,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 1289,
                          "end_byte": 1290,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 1291,
                          "end_byte": 1295,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 1291,
                              "end_byte": 1292,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 1292,
                              "end_byte": 1294,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 1294,
                              "end_byte": 1295,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 1296,
                          "end_byte": 1297,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 1298,
                          "end_byte": 1301,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 1298,
                              "end_byte": 1299,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1300,
                              "end_byte": 1301,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1302,
                          "end_byte": 1303,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1304,
                  "end_byte": 1305,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 1306,
              "end_byte": 1595,
              "text": "while ( t -- ) { scanf ( \"%d\" , & n ) ; min = 100001 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & num ) ; if ( num < min ) min = num ; } int_to_str ( n - 1 , nStr ) ; int_to_str ( min , minStr ) ; result = mul_array ( nStr , minStr ) ; printf ( \"%s\\n\" , result ) ; free ( result ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 1306,
                  "end_byte": 1311,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 1312,
                  "end_byte": 1320,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 1312,
                      "end_byte": 1313,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 1314,
                      "end_byte": 1318,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1314,
                          "end_byte": 1315,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 1316,
                          "end_byte": 1318,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 1319,
                      "end_byte": 1320,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1321,
                  "end_byte": 1595,
                  "text": "{ scanf ( \"%d\" , & n ) ; min = 100001 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & num ) ; if ( num < min ) min = num ; } int_to_str ( n - 1 , nStr ) ; int_to_str ( min , minStr ) ; result = mul_array ( nStr , minStr ) ; printf ( \"%s\\n\" , result ) ; free ( result ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1321,
                      "end_byte": 1322,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1323,
                      "end_byte": 1345,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1323,
                          "end_byte": 1343,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1323,
                              "end_byte": 1328,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1329,
                              "end_byte": 1343,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1329,
                                  "end_byte": 1330,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1331,
                                  "end_byte": 1335,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1331,
                                      "end_byte": 1332,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1332,
                                      "end_byte": 1334,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1334,
                                      "end_byte": 1335,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1336,
                                  "end_byte": 1337,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 1338,
                                  "end_byte": 1341,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 1338,
                                      "end_byte": 1339,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1340,
                                      "end_byte": 1341,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1342,
                                  "end_byte": 1343,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1344,
                          "end_byte": 1345,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1346,
                      "end_byte": 1360,
                      "text": "min = 100001 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1346,
                          "end_byte": 1358,
                          "text": "min = 100001",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1346,
                              "end_byte": 1349,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1350,
                              "end_byte": 1351,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1352,
                              "end_byte": 1358,
                              "text": "100001",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1359,
                          "end_byte": 1360,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1361,
                      "end_byte": 1447,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & num ) ; if ( num < min ) min = num ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1361,
                          "end_byte": 1364,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1365,
                          "end_byte": 1366,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1367,
                          "end_byte": 1372,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1367,
                              "end_byte": 1368,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1369,
                              "end_byte": 1370,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 1371,
                              "end_byte": 1372,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1373,
                          "end_byte": 1374,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1375,
                          "end_byte": 1380,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1375,
                              "end_byte": 1376,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1377,
                              "end_byte": 1378,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1379,
                              "end_byte": 1380,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1381,
                          "end_byte": 1382,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1383,
                          "end_byte": 1387,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1383,
                              "end_byte": 1384,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1385,
                              "end_byte": 1387,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1388,
                          "end_byte": 1389,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1390,
                          "end_byte": 1447,
                          "text": "{ scanf ( \"%d\" , & num ) ; if ( num < min ) min = num ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1390,
                              "end_byte": 1391,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1392,
                              "end_byte": 1416,
                              "text": "scanf ( \"%d\" , & num ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 1392,
                                  "end_byte": 1414,
                                  "text": "scanf ( \"%d\" , & num )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1392,
                                      "end_byte": 1397,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 1398,
                                      "end_byte": 1414,
                                      "text": "( \"%d\" , & num )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 1398,
                                          "end_byte": 1399,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 1400,
                                          "end_byte": 1404,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 1400,
                                              "end_byte": 1401,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 1401,
                                              "end_byte": 1403,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 1403,
                                              "end_byte": 1404,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 1405,
                                          "end_byte": 1406,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 1407,
                                          "end_byte": 1412,
                                          "text": "& num",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 1407,
                                              "end_byte": 1408,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1409,
                                              "end_byte": 1412,
                                              "text": "num",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 1413,
                                          "end_byte": 1414,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1415,
                                  "end_byte": 1416,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 1417,
                              "end_byte": 1445,
                              "text": "if ( num < min ) min = num ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 1417,
                                  "end_byte": 1419,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 1420,
                                  "end_byte": 1433,
                                  "text": "( num < min )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1420,
                                      "end_byte": 1421,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1422,
                                      "end_byte": 1431,
                                      "text": "num < min",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1422,
                                          "end_byte": 1425,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 1426,
                                          "end_byte": 1427,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1428,
                                          "end_byte": 1431,
                                          "text": "min",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1432,
                                      "end_byte": 1433,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1434,
                                  "end_byte": 1445,
                                  "text": "min = num ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1434,
                                      "end_byte": 1443,
                                      "text": "min = num",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1434,
                                          "end_byte": 1437,
                                          "text": "min",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1438,
                                          "end_byte": 1439,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1440,
                                          "end_byte": 1443,
                                          "text": "num",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1444,
                                      "end_byte": 1445,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1446,
                              "end_byte": 1447,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1448,
                      "end_byte": 1477,
                      "text": "int_to_str ( n - 1 , nStr ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1448,
                          "end_byte": 1475,
                          "text": "int_to_str ( n - 1 , nStr )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1448,
                              "end_byte": 1458,
                              "text": "int_to_str",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1459,
                              "end_byte": 1475,
                              "text": "( n - 1 , nStr )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1459,
                                  "end_byte": 1460,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1461,
                                  "end_byte": 1466,
                                  "text": "n - 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1461,
                                      "end_byte": 1462,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 1463,
                                      "end_byte": 1464,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1465,
                                      "end_byte": 1466,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1467,
                                  "end_byte": 1468,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1469,
                                  "end_byte": 1473,
                                  "text": "nStr",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1474,
                                  "end_byte": 1475,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1476,
                          "end_byte": 1477,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1478,
                      "end_byte": 1507,
                      "text": "int_to_str ( min , minStr ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1478,
                          "end_byte": 1505,
                          "text": "int_to_str ( min , minStr )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1478,
                              "end_byte": 1488,
                              "text": "int_to_str",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1489,
                              "end_byte": 1505,
                              "text": "( min , minStr )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1489,
                                  "end_byte": 1490,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1491,
                                  "end_byte": 1494,
                                  "text": "min",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1495,
                                  "end_byte": 1496,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1497,
                                  "end_byte": 1503,
                                  "text": "minStr",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1504,
                                  "end_byte": 1505,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1506,
                          "end_byte": 1507,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1508,
                      "end_byte": 1546,
                      "text": "result = mul_array ( nStr , minStr ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1508,
                          "end_byte": 1544,
                          "text": "result = mul_array ( nStr , minStr )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1508,
                              "end_byte": 1514,
                              "text": "result",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1515,
                              "end_byte": 1516,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1517,
                              "end_byte": 1544,
                              "text": "mul_array ( nStr , minStr )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1517,
                                  "end_byte": 1526,
                                  "text": "mul_array",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1527,
                                  "end_byte": 1544,
                                  "text": "( nStr , minStr )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1527,
                                      "end_byte": 1528,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1529,
                                      "end_byte": 1533,
                                      "text": "nStr",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 1534,
                                      "end_byte": 1535,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1536,
                                      "end_byte": 1542,
                                      "text": "minStr",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1543,
                                      "end_byte": 1544,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1545,
                          "end_byte": 1546,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1547,
                      "end_byte": 1575,
                      "text": "printf ( \"%s\\n\" , result ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1547,
                          "end_byte": 1573,
                          "text": "printf ( \"%s\\n\" , result )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1547,
                              "end_byte": 1553,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1554,
                              "end_byte": 1573,
                              "text": "( \"%s\\n\" , result )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1554,
                                  "end_byte": 1555,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1556,
                                  "end_byte": 1562,
                                  "text": "\"%s\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1556,
                                      "end_byte": 1557,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1557,
                                      "end_byte": 1559,
                                      "text": "%s",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1559,
                                      "end_byte": 1561,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1561,
                                      "end_byte": 1562,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1563,
                                  "end_byte": 1564,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1565,
                                  "end_byte": 1571,
                                  "text": "result",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1572,
                                  "end_byte": 1573,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1574,
                          "end_byte": 1575,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1576,
                      "end_byte": 1593,
                      "text": "free ( result ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1576,
                          "end_byte": 1591,
                          "text": "free ( result )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1576,
                              "end_byte": 1580,
                              "text": "free",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1581,
                              "end_byte": 1591,
                              "text": "( result )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1581,
                                  "end_byte": 1582,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1583,
                                  "end_byte": 1589,
                                  "text": "result",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1590,
                                  "end_byte": 1591,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1592,
                          "end_byte": 1593,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1594,
                      "end_byte": 1595,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1596,
              "end_byte": 1606,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1596,
                  "end_byte": 1602,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1603,
                  "end_byte": 1604,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1605,
                  "end_byte": 1606,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1607,
              "end_byte": 1608,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}