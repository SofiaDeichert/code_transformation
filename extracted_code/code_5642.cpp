int matrix [ 100 ] [ 100 ] , lines ; int sample [ 100 ] [ 100 ] ; void function ( int , int , int ) ; int main ( int argc , char * argv [ ] ) { int test , i , j , count , temp , k , x , max ; matrix [ 0 ] [ 0 ] = 0 ; scanf ( "%d" , & test ) ; while ( test > 0 ) { max = 0 ; scanf ( "%d" , & lines ) ; for ( i = 0 ; i < lines ; ++ i ) { for ( j = 0 ; j <= i ; ++ j ) { scanf ( "%d" , & temp ) ; matrix [ i ] [ j ] = temp ; } } for ( i = 0 ; i < lines ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( ! i ) sample [ i ] [ j ] = matrix [ i ] [ j ] ; else if ( j == i ) sample [ i ] [ j ] = matrix [ i ] [ j ] + sample [ i - 1 ] [ j - 1 ] ; else { if ( ! j ) sample [ i ] [ j ] = sample [ i - 1 ] [ j ] + matrix [ i ] [ j ] ; else { x = ( sample [ i - 1 ] [ j - 1 ] > sample [ i - 1 ] [ j ] ? sample [ i - 1 ] [ j - 1 ] : sample [ i - 1 ] [ j ] ) ; sample [ i ] [ j ] = x + matrix [ i ] [ j ] ; } } if ( sample [ i ] [ j ] > max ) max = sample [ i ] [ j ] ; } } printf ( "%d\n" , max ) ; test -- ; } return 0 ; } void function ( int n , int row , int col ) { if ( row == lines ) { printf ( "\n" ) ; return ; } printf ( "%d " , matrix [ row ] [ col ] ) ; function ( n , row + 1 , col ) ; if ( col == lines ) { printf ( "\n" ) ; return ; } printf ( "%d " , matrix [ row ] [ col ] ) ; function ( n , row , col + 1 ) ; }