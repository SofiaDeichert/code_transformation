{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 808,
  "text": "long int GCD ( long int x , long int y ) { if ( y == 0 ) return x ; else return GCD ( y , x % y ) ; } int main ( ) { long int n1 , n2 , i , LCM , gcd ; int T , I ; scanf ( \" %d\" , & T ) ; if ( T < 1 || T > 1000 ) return 0 ; long int ans [ T ] [ 2 ] ; for ( I = 0 ; I < T ; I ++ ) { LCM = 1 ; scanf ( \" %ld %ld\" , & n1 , & n2 ) ; if ( n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000 ) return 0 ; gcd = GCD ( n1 , n2 ) ; while ( n1 > 1 || n2 > 1 ) { for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } } LCM *= i ; } ans [ I ] [ 0 ] = gcd ; ans [ I ] [ 1 ] = LCM ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%ld %ld\\n\" , ans [ i ] [ 0 ] , ans [ i ] [ 1 ] ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 101,
      "text": "long int GCD ( long int x , long int y ) { if ( y == 0 ) return x ; else return GCD ( y , x % y ) ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 8,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 5,
              "end_byte": 8,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 9,
          "end_byte": 40,
          "text": "GCD ( long int x , long int y )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 9,
              "end_byte": 12,
              "text": "GCD",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 13,
              "end_byte": 40,
              "text": "( long int x , long int y )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 15,
                  "end_byte": 25,
                  "text": "long int x",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 15,
                      "end_byte": 23,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 15,
                          "end_byte": 19,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 20,
                          "end_byte": 23,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 24,
                      "end_byte": 25,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 28,
                  "end_byte": 38,
                  "text": "long int y",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 28,
                      "end_byte": 36,
                      "text": "long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 28,
                          "end_byte": 32,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 33,
                          "end_byte": 36,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 37,
                      "end_byte": 38,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 41,
          "end_byte": 101,
          "text": "{ if ( y == 0 ) return x ; else return GCD ( y , x % y ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 41,
              "end_byte": 42,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 43,
              "end_byte": 99,
              "text": "if ( y == 0 ) return x ; else return GCD ( y , x % y ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 43,
                  "end_byte": 45,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 46,
                  "end_byte": 56,
                  "text": "( y == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 46,
                      "end_byte": 47,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 48,
                      "end_byte": 54,
                      "text": "y == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 48,
                          "end_byte": 49,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 50,
                          "end_byte": 52,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 53,
                          "end_byte": 54,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 55,
                      "end_byte": 56,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 57,
                  "end_byte": 67,
                  "text": "return x ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 57,
                      "end_byte": 63,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 64,
                      "end_byte": 65,
                      "text": "x",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 66,
                      "end_byte": 67,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 68,
                  "end_byte": 99,
                  "text": "else return GCD ( y , x % y ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 68,
                      "end_byte": 72,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 73,
                      "end_byte": 99,
                      "text": "return GCD ( y , x % y ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 73,
                          "end_byte": 79,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 80,
                          "end_byte": 97,
                          "text": "GCD ( y , x % y )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 80,
                              "end_byte": 83,
                              "text": "GCD",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 84,
                              "end_byte": 97,
                              "text": "( y , x % y )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 84,
                                  "end_byte": 85,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 86,
                                  "end_byte": 87,
                                  "text": "y",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 88,
                                  "end_byte": 89,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 90,
                                  "end_byte": 95,
                                  "text": "x % y",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 90,
                                      "end_byte": 91,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 92,
                                      "end_byte": 93,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 94,
                                      "end_byte": 95,
                                      "text": "y",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 96,
                                  "end_byte": 97,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 100,
              "end_byte": 101,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 102,
      "end_byte": 808,
      "text": "int main ( ) { long int n1 , n2 , i , LCM , gcd ; int T , I ; scanf ( \" %d\" , & T ) ; if ( T < 1 || T > 1000 ) return 0 ; long int ans [ T ] [ 2 ] ; for ( I = 0 ; I < T ; I ++ ) { LCM = 1 ; scanf ( \" %ld %ld\" , & n1 , & n2 ) ; if ( n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000 ) return 0 ; gcd = GCD ( n1 , n2 ) ; while ( n1 > 1 || n2 > 1 ) { for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } } LCM *= i ; } ans [ I ] [ 0 ] = gcd ; ans [ I ] [ 1 ] = LCM ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%ld %ld\\n\" , ans [ i ] [ 0 ] , ans [ i ] [ 1 ] ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 102,
          "end_byte": 105,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 106,
          "end_byte": 114,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 106,
              "end_byte": 110,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 111,
              "end_byte": 114,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 115,
          "end_byte": 808,
          "text": "{ long int n1 , n2 , i , LCM , gcd ; int T , I ; scanf ( \" %d\" , & T ) ; if ( T < 1 || T > 1000 ) return 0 ; long int ans [ T ] [ 2 ] ; for ( I = 0 ; I < T ; I ++ ) { LCM = 1 ; scanf ( \" %ld %ld\" , & n1 , & n2 ) ; if ( n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000 ) return 0 ; gcd = GCD ( n1 , n2 ) ; while ( n1 > 1 || n2 > 1 ) { for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } } LCM *= i ; } ans [ I ] [ 0 ] = gcd ; ans [ I ] [ 1 ] = LCM ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%ld %ld\\n\" , ans [ i ] [ 0 ] , ans [ i ] [ 1 ] ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 115,
              "end_byte": 116,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 117,
              "end_byte": 151,
              "text": "long int n1 , n2 , i , LCM , gcd ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 117,
                  "end_byte": 125,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 117,
                      "end_byte": 121,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 122,
                      "end_byte": 125,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 126,
                  "end_byte": 128,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 129,
                  "end_byte": 130,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 131,
                  "end_byte": 133,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 134,
                  "end_byte": 135,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 136,
                  "end_byte": 137,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 138,
                  "end_byte": 139,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 140,
                  "end_byte": 143,
                  "text": "LCM",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 144,
                  "end_byte": 145,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 146,
                  "end_byte": 149,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 150,
                  "end_byte": 151,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 152,
              "end_byte": 163,
              "text": "int T , I ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 152,
                  "end_byte": 155,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 156,
                  "end_byte": 157,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 158,
                  "end_byte": 159,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 160,
                  "end_byte": 161,
                  "text": "I",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 162,
                  "end_byte": 163,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 164,
              "end_byte": 187,
              "text": "scanf ( \" %d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 164,
                  "end_byte": 185,
                  "text": "scanf ( \" %d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 164,
                      "end_byte": 169,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 170,
                      "end_byte": 185,
                      "text": "( \" %d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 170,
                          "end_byte": 171,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 172,
                          "end_byte": 177,
                          "text": "\" %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 173,
                              "end_byte": 176,
                              "text": " %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 178,
                          "end_byte": 179,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 180,
                          "end_byte": 183,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 184,
                          "end_byte": 185,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 186,
                  "end_byte": 187,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 188,
              "end_byte": 223,
              "text": "if ( T < 1 || T > 1000 ) return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 188,
                  "end_byte": 190,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 191,
                  "end_byte": 212,
                  "text": "( T < 1 || T > 1000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 191,
                      "end_byte": 192,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 193,
                      "end_byte": 210,
                      "text": "T < 1 || T > 1000",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 193,
                          "end_byte": 198,
                          "text": "T < 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": "T",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 195,
                              "end_byte": 196,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 197,
                              "end_byte": 198,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start_byte": 199,
                          "end_byte": 201,
                          "text": "||",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 202,
                          "end_byte": 210,
                          "text": "T > 1000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": "T",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 206,
                              "end_byte": 210,
                              "text": "1000",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 211,
                      "end_byte": 212,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 213,
                  "end_byte": 223,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 213,
                      "end_byte": 219,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 222,
                      "end_byte": 223,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 224,
              "end_byte": 250,
              "text": "long int ans [ T ] [ 2 ] ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 224,
                  "end_byte": 232,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 224,
                      "end_byte": 228,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 229,
                      "end_byte": 232,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 233,
                  "end_byte": 248,
                  "text": "ans [ T ] [ 2 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 233,
                      "end_byte": 242,
                      "text": "ans [ T ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 233,
                          "end_byte": 236,
                          "text": "ans",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 237,
                          "end_byte": 238,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 239,
                          "end_byte": 240,
                          "text": "T",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 241,
                          "end_byte": 242,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 245,
                      "end_byte": 246,
                      "text": "2",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 247,
                      "end_byte": 248,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 249,
                  "end_byte": 250,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 251,
              "end_byte": 705,
              "text": "for ( I = 0 ; I < T ; I ++ ) { LCM = 1 ; scanf ( \" %ld %ld\" , & n1 , & n2 ) ; if ( n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000 ) return 0 ; gcd = GCD ( n1 , n2 ) ; while ( n1 > 1 || n2 > 1 ) { for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } } LCM *= i ; } ans [ I ] [ 0 ] = gcd ; ans [ I ] [ 1 ] = LCM ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 251,
                  "end_byte": 254,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 255,
                  "end_byte": 256,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 257,
                  "end_byte": 262,
                  "text": "I = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 257,
                      "end_byte": 258,
                      "text": "I",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 259,
                      "end_byte": 260,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 261,
                      "end_byte": 262,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 263,
                  "end_byte": 264,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 265,
                  "end_byte": 270,
                  "text": "I < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 265,
                      "end_byte": 266,
                      "text": "I",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 267,
                      "end_byte": 268,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 269,
                      "end_byte": 270,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 273,
                  "end_byte": 277,
                  "text": "I ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 273,
                      "end_byte": 274,
                      "text": "I",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 275,
                      "end_byte": 277,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 278,
                  "end_byte": 279,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 280,
                  "end_byte": 705,
                  "text": "{ LCM = 1 ; scanf ( \" %ld %ld\" , & n1 , & n2 ) ; if ( n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000 ) return 0 ; gcd = GCD ( n1 , n2 ) ; while ( n1 > 1 || n2 > 1 ) { for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } } LCM *= i ; } ans [ I ] [ 0 ] = gcd ; ans [ I ] [ 1 ] = LCM ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 280,
                      "end_byte": 281,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 282,
                      "end_byte": 291,
                      "text": "LCM = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 282,
                          "end_byte": 289,
                          "text": "LCM = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 282,
                              "end_byte": 285,
                              "text": "LCM",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 286,
                              "end_byte": 287,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 288,
                              "end_byte": 289,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 290,
                          "end_byte": 291,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 292,
                      "end_byte": 328,
                      "text": "scanf ( \" %ld %ld\" , & n1 , & n2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 292,
                          "end_byte": 326,
                          "text": "scanf ( \" %ld %ld\" , & n1 , & n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 292,
                              "end_byte": 297,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 298,
                              "end_byte": 326,
                              "text": "( \" %ld %ld\" , & n1 , & n2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 298,
                                  "end_byte": 299,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 300,
                                  "end_byte": 310,
                                  "text": "\" %ld %ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 301,
                                      "end_byte": 309,
                                      "text": " %ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 309,
                                      "end_byte": 310,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 311,
                                  "end_byte": 312,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 313,
                                  "end_byte": 317,
                                  "text": "& n1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 313,
                                      "end_byte": 314,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 315,
                                      "end_byte": 317,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 318,
                                  "end_byte": 319,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 320,
                                  "end_byte": 324,
                                  "text": "& n2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 322,
                                      "end_byte": 324,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 325,
                                  "end_byte": 326,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 327,
                          "end_byte": 328,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 329,
                      "end_byte": 395,
                      "text": "if ( n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000 ) return 0 ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 329,
                          "end_byte": 331,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 332,
                          "end_byte": 384,
                          "text": "( n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 332,
                              "end_byte": 333,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 334,
                              "end_byte": 382,
                              "text": "n1 < 1 || n2 < 1 || n1 > 1000000 || n2 > 1000000",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 334,
                                  "end_byte": 366,
                                  "text": "n1 < 1 || n2 < 1 || n1 > 1000000",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 334,
                                      "end_byte": 350,
                                      "text": "n1 < 1 || n2 < 1",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 334,
                                          "end_byte": 340,
                                          "text": "n1 < 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 334,
                                              "end_byte": 336,
                                              "text": "n1",
                                              "children": []
                                            },
                                            {
                                              "type": "<",
                                              "start_byte": 337,
                                              "end_byte": 338,
                                              "text": "<",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 339,
                                              "end_byte": 340,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "||",
                                          "start_byte": 341,
                                          "end_byte": 343,
                                          "text": "||",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 344,
                                          "end_byte": 350,
                                          "text": "n2 < 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 344,
                                              "end_byte": 346,
                                              "text": "n2",
                                              "children": []
                                            },
                                            {
                                              "type": "<",
                                              "start_byte": 347,
                                              "end_byte": 348,
                                              "text": "<",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 349,
                                              "end_byte": 350,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "||",
                                      "start_byte": 351,
                                      "end_byte": 353,
                                      "text": "||",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 354,
                                      "end_byte": 366,
                                      "text": "n1 > 1000000",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 354,
                                          "end_byte": 356,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 357,
                                          "end_byte": 358,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 359,
                                          "end_byte": 366,
                                          "text": "1000000",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "||",
                                  "start_byte": 367,
                                  "end_byte": 369,
                                  "text": "||",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 370,
                                  "end_byte": 382,
                                  "text": "n2 > 1000000",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 370,
                                      "end_byte": 372,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 373,
                                      "end_byte": 374,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 375,
                                      "end_byte": 382,
                                      "text": "1000000",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 383,
                              "end_byte": 384,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 385,
                          "end_byte": 395,
                          "text": "return 0 ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 385,
                              "end_byte": 391,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 392,
                              "end_byte": 393,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 394,
                              "end_byte": 395,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 396,
                      "end_byte": 419,
                      "text": "gcd = GCD ( n1 , n2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 396,
                          "end_byte": 417,
                          "text": "gcd = GCD ( n1 , n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 396,
                              "end_byte": 399,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 400,
                              "end_byte": 401,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 402,
                              "end_byte": 417,
                              "text": "GCD ( n1 , n2 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 402,
                                  "end_byte": 405,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 406,
                                  "end_byte": 417,
                                  "text": "( n1 , n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 406,
                                      "end_byte": 407,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 408,
                                      "end_byte": 410,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 413,
                                      "end_byte": 415,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 416,
                                      "end_byte": 417,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 418,
                          "end_byte": 419,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 420,
                      "end_byte": 655,
                      "text": "while ( n1 > 1 || n2 > 1 ) { for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } } LCM *= i ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 420,
                          "end_byte": 425,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 426,
                          "end_byte": 446,
                          "text": "( n1 > 1 || n2 > 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 426,
                              "end_byte": 427,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 428,
                              "end_byte": 444,
                              "text": "n1 > 1 || n2 > 1",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 428,
                                  "end_byte": 434,
                                  "text": "n1 > 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 428,
                                      "end_byte": 430,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 431,
                                      "end_byte": 432,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 433,
                                      "end_byte": 434,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "||",
                                  "start_byte": 435,
                                  "end_byte": 437,
                                  "text": "||",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 438,
                                  "end_byte": 444,
                                  "text": "n2 > 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 438,
                                      "end_byte": 440,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 441,
                                      "end_byte": 442,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 443,
                                      "end_byte": 444,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 445,
                              "end_byte": 446,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 447,
                          "end_byte": 655,
                          "text": "{ for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } } LCM *= i ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 447,
                              "end_byte": 448,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 449,
                              "end_byte": 642,
                              "text": "for ( i = 2 ; i <= n1 || i <= n2 ; i ++ ) { if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 449,
                                  "end_byte": 452,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 453,
                                  "end_byte": 454,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 455,
                                  "end_byte": 460,
                                  "text": "i = 2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 455,
                                      "end_byte": 456,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 457,
                                      "end_byte": 458,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 459,
                                      "end_byte": 460,
                                      "text": "2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 461,
                                  "end_byte": 462,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 463,
                                  "end_byte": 481,
                                  "text": "i <= n1 || i <= n2",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 463,
                                      "end_byte": 470,
                                      "text": "i <= n1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 463,
                                          "end_byte": 464,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "<=",
                                          "start_byte": 465,
                                          "end_byte": 467,
                                          "text": "<=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 468,
                                          "end_byte": 470,
                                          "text": "n1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "||",
                                      "start_byte": 471,
                                      "end_byte": 473,
                                      "text": "||",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 474,
                                      "end_byte": 481,
                                      "text": "i <= n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 474,
                                          "end_byte": 475,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "<=",
                                          "start_byte": 476,
                                          "end_byte": 478,
                                          "text": "<=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 479,
                                          "end_byte": 481,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 482,
                                  "end_byte": 483,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 484,
                                  "end_byte": 488,
                                  "text": "i ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 484,
                                      "end_byte": 485,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 486,
                                      "end_byte": 488,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 489,
                                  "end_byte": 490,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 491,
                                  "end_byte": 642,
                                  "text": "{ if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; } if ( n1 % i == 0 ) { n1 /= i ; break ; } if ( n2 % i == 0 ) { n2 /= i ; break ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 491,
                                      "end_byte": 492,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 493,
                                      "end_byte": 558,
                                      "text": "if ( n1 % i == 0 && n2 % i == 0 ) { n1 /= i ; n2 /= i ; break ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 493,
                                          "end_byte": 495,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 496,
                                          "end_byte": 526,
                                          "text": "( n1 % i == 0 && n2 % i == 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 496,
                                              "end_byte": 497,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 498,
                                              "end_byte": 524,
                                              "text": "n1 % i == 0 && n2 % i == 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 498,
                                                  "end_byte": 509,
                                                  "text": "n1 % i == 0",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 498,
                                                      "end_byte": 504,
                                                      "text": "n1 % i",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 498,
                                                          "end_byte": 500,
                                                          "text": "n1",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "%",
                                                          "start_byte": 501,
                                                          "end_byte": 502,
                                                          "text": "%",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 503,
                                                          "end_byte": 504,
                                                          "text": "i",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "==",
                                                      "start_byte": 505,
                                                      "end_byte": 507,
                                                      "text": "==",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 508,
                                                      "end_byte": 509,
                                                      "text": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 510,
                                                  "end_byte": 512,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 513,
                                                  "end_byte": 524,
                                                  "text": "n2 % i == 0",
                                                  "children": [
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 513,
                                                      "end_byte": 519,
                                                      "text": "n2 % i",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 513,
                                                          "end_byte": 515,
                                                          "text": "n2",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "%",
                                                          "start_byte": 516,
                                                          "end_byte": 517,
                                                          "text": "%",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 518,
                                                          "end_byte": 519,
                                                          "text": "i",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "==",
                                                      "start_byte": 520,
                                                      "end_byte": 522,
                                                      "text": "==",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 523,
                                                      "end_byte": 524,
                                                      "text": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 525,
                                              "end_byte": 526,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 527,
                                          "end_byte": 558,
                                          "text": "{ n1 /= i ; n2 /= i ; break ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 527,
                                              "end_byte": 528,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 529,
                                              "end_byte": 538,
                                              "text": "n1 /= i ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 529,
                                                  "end_byte": 536,
                                                  "text": "n1 /= i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 529,
                                                      "end_byte": 531,
                                                      "text": "n1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "/=",
                                                      "start_byte": 532,
                                                      "end_byte": 534,
                                                      "text": "/=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 535,
                                                      "end_byte": 536,
                                                      "text": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 537,
                                                  "end_byte": 538,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 539,
                                              "end_byte": 548,
                                              "text": "n2 /= i ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 539,
                                                  "end_byte": 546,
                                                  "text": "n2 /= i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 539,
                                                      "end_byte": 541,
                                                      "text": "n2",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "/=",
                                                      "start_byte": 542,
                                                      "end_byte": 544,
                                                      "text": "/=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 545,
                                                      "end_byte": 546,
                                                      "text": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 547,
                                                  "end_byte": 548,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "break_statement",
                                              "start_byte": 549,
                                              "end_byte": 556,
                                              "text": "break ;",
                                              "children": [
                                                {
                                                  "type": "break",
                                                  "start_byte": 549,
                                                  "end_byte": 554,
                                                  "text": "break",
                                                  "children": []
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 555,
                                                  "end_byte": 556,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 557,
                                              "end_byte": 558,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 559,
                                      "end_byte": 599,
                                      "text": "if ( n1 % i == 0 ) { n1 /= i ; break ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 559,
                                          "end_byte": 561,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 562,
                                          "end_byte": 577,
                                          "text": "( n1 % i == 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 562,
                                              "end_byte": 563,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 564,
                                              "end_byte": 575,
                                              "text": "n1 % i == 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 564,
                                                  "end_byte": 570,
                                                  "text": "n1 % i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 564,
                                                      "end_byte": 566,
                                                      "text": "n1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 567,
                                                      "end_byte": 568,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 569,
                                                      "end_byte": 570,
                                                      "text": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 571,
                                                  "end_byte": 573,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 574,
                                                  "end_byte": 575,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 576,
                                              "end_byte": 577,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 578,
                                          "end_byte": 599,
                                          "text": "{ n1 /= i ; break ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 578,
                                              "end_byte": 579,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 580,
                                              "end_byte": 589,
                                              "text": "n1 /= i ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 580,
                                                  "end_byte": 587,
                                                  "text": "n1 /= i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 580,
                                                      "end_byte": 582,
                                                      "text": "n1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "/=",
                                                      "start_byte": 583,
                                                      "end_byte": 585,
                                                      "text": "/=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 586,
                                                      "end_byte": 587,
                                                      "text": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 588,
                                                  "end_byte": 589,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "break_statement",
                                              "start_byte": 590,
                                              "end_byte": 597,
                                              "text": "break ;",
                                              "children": [
                                                {
                                                  "type": "break",
                                                  "start_byte": 590,
                                                  "end_byte": 595,
                                                  "text": "break",
                                                  "children": []
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 596,
                                                  "end_byte": 597,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 598,
                                              "end_byte": 599,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 600,
                                      "end_byte": 640,
                                      "text": "if ( n2 % i == 0 ) { n2 /= i ; break ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 600,
                                          "end_byte": 602,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 603,
                                          "end_byte": 618,
                                          "text": "( n2 % i == 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 603,
                                              "end_byte": 604,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 605,
                                              "end_byte": 616,
                                              "text": "n2 % i == 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 605,
                                                  "end_byte": 611,
                                                  "text": "n2 % i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 605,
                                                      "end_byte": 607,
                                                      "text": "n2",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 608,
                                                      "end_byte": 609,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 610,
                                                      "end_byte": 611,
                                                      "text": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 612,
                                                  "end_byte": 614,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 615,
                                                  "end_byte": 616,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 617,
                                              "end_byte": 618,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 619,
                                          "end_byte": 640,
                                          "text": "{ n2 /= i ; break ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 619,
                                              "end_byte": 620,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 621,
                                              "end_byte": 630,
                                              "text": "n2 /= i ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 621,
                                                  "end_byte": 628,
                                                  "text": "n2 /= i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 621,
                                                      "end_byte": 623,
                                                      "text": "n2",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "/=",
                                                      "start_byte": 624,
                                                      "end_byte": 626,
                                                      "text": "/=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 627,
                                                      "end_byte": 628,
                                                      "text": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 629,
                                                  "end_byte": 630,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "break_statement",
                                              "start_byte": 631,
                                              "end_byte": 638,
                                              "text": "break ;",
                                              "children": [
                                                {
                                                  "type": "break",
                                                  "start_byte": 631,
                                                  "end_byte": 636,
                                                  "text": "break",
                                                  "children": []
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 637,
                                                  "end_byte": 638,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 639,
                                              "end_byte": 640,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 641,
                                      "end_byte": 642,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 643,
                              "end_byte": 653,
                              "text": "LCM *= i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 643,
                                  "end_byte": 651,
                                  "text": "LCM *= i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 643,
                                      "end_byte": 646,
                                      "text": "LCM",
                                      "children": []
                                    },
                                    {
                                      "type": "*=",
                                      "start_byte": 647,
                                      "end_byte": 649,
                                      "text": "*=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 650,
                                      "end_byte": 651,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 652,
                                  "end_byte": 653,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 654,
                              "end_byte": 655,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 656,
                      "end_byte": 679,
                      "text": "ans [ I ] [ 0 ] = gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 656,
                          "end_byte": 677,
                          "text": "ans [ I ] [ 0 ] = gcd",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 656,
                              "end_byte": 671,
                              "text": "ans [ I ] [ 0 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 656,
                                  "end_byte": 665,
                                  "text": "ans [ I ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 656,
                                      "end_byte": 659,
                                      "text": "ans",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 660,
                                      "end_byte": 665,
                                      "text": "[ I ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 660,
                                          "end_byte": 661,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 662,
                                          "end_byte": 663,
                                          "text": "I",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 664,
                                          "end_byte": 665,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 666,
                                  "end_byte": 671,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 666,
                                      "end_byte": 667,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 668,
                                      "end_byte": 669,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 670,
                                      "end_byte": 671,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 672,
                              "end_byte": 673,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 674,
                              "end_byte": 677,
                              "text": "gcd",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 678,
                          "end_byte": 679,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 680,
                      "end_byte": 703,
                      "text": "ans [ I ] [ 1 ] = LCM ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 680,
                          "end_byte": 701,
                          "text": "ans [ I ] [ 1 ] = LCM",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 680,
                              "end_byte": 695,
                              "text": "ans [ I ] [ 1 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 680,
                                  "end_byte": 689,
                                  "text": "ans [ I ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 680,
                                      "end_byte": 683,
                                      "text": "ans",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 684,
                                      "end_byte": 689,
                                      "text": "[ I ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 684,
                                          "end_byte": 685,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 686,
                                          "end_byte": 687,
                                          "text": "I",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 688,
                                          "end_byte": 689,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 690,
                                  "end_byte": 695,
                                  "text": "[ 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 690,
                                      "end_byte": 691,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 692,
                                      "end_byte": 693,
                                      "text": "1",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 694,
                                      "end_byte": 695,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 696,
                              "end_byte": 697,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 698,
                              "end_byte": 701,
                              "text": "LCM",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 702,
                          "end_byte": 703,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 704,
                      "end_byte": 705,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 706,
              "end_byte": 795,
              "text": "for ( i = 0 ; i < T ; i ++ ) printf ( \"%ld %ld\\n\" , ans [ i ] [ 0 ] , ans [ i ] [ 1 ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 706,
                  "end_byte": 709,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 710,
                  "end_byte": 711,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 712,
                  "end_byte": 717,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 712,
                      "end_byte": 713,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 714,
                      "end_byte": 715,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 716,
                      "end_byte": 717,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 718,
                  "end_byte": 719,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 720,
                  "end_byte": 725,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 720,
                      "end_byte": 721,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 722,
                      "end_byte": 723,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 724,
                      "end_byte": 725,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 726,
                  "end_byte": 727,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 728,
                  "end_byte": 732,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 728,
                      "end_byte": 729,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 730,
                      "end_byte": 732,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 733,
                  "end_byte": 734,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 735,
                  "end_byte": 795,
                  "text": "printf ( \"%ld %ld\\n\" , ans [ i ] [ 0 ] , ans [ i ] [ 1 ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 735,
                      "end_byte": 793,
                      "text": "printf ( \"%ld %ld\\n\" , ans [ i ] [ 0 ] , ans [ i ] [ 1 ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 735,
                          "end_byte": 741,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 742,
                          "end_byte": 793,
                          "text": "( \"%ld %ld\\n\" , ans [ i ] [ 0 ] , ans [ i ] [ 1 ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 742,
                              "end_byte": 743,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 744,
                              "end_byte": 755,
                              "text": "\"%ld %ld\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 744,
                                  "end_byte": 745,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 745,
                                  "end_byte": 752,
                                  "text": "%ld %ld",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 752,
                                  "end_byte": 754,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 754,
                                  "end_byte": 755,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 756,
                              "end_byte": 757,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 758,
                              "end_byte": 773,
                              "text": "ans [ i ] [ 0 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 758,
                                  "end_byte": 767,
                                  "text": "ans [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 758,
                                      "end_byte": 761,
                                      "text": "ans",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 762,
                                      "end_byte": 767,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 762,
                                          "end_byte": 763,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 764,
                                          "end_byte": 765,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 766,
                                          "end_byte": 767,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 768,
                                  "end_byte": 773,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 768,
                                      "end_byte": 769,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 770,
                                      "end_byte": 771,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 772,
                                      "end_byte": 773,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 774,
                              "end_byte": 775,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 776,
                              "end_byte": 791,
                              "text": "ans [ i ] [ 1 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 776,
                                  "end_byte": 785,
                                  "text": "ans [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 776,
                                      "end_byte": 779,
                                      "text": "ans",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 780,
                                      "end_byte": 785,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 780,
                                          "end_byte": 781,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 782,
                                          "end_byte": 783,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 784,
                                          "end_byte": 785,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 786,
                                  "end_byte": 791,
                                  "text": "[ 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 786,
                                      "end_byte": 787,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 788,
                                      "end_byte": 789,
                                      "text": "1",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 790,
                                      "end_byte": 791,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 792,
                              "end_byte": 793,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 794,
                      "end_byte": 795,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 796,
              "end_byte": 806,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 796,
                  "end_byte": 802,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 803,
                  "end_byte": 804,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 805,
                  "end_byte": 806,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 807,
              "end_byte": 808,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}