{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 527,
  "text": "int main ( ) { int N , T ; long int A , B ; long int count , tempC ; int flag ; scanf ( \"%d\" , & T ) ; while ( T -- ) { scanf ( \"%d\" , & N ) ; count = N ; tempC = 1 ; flag = 0 ; if ( N > 1 ) { scanf ( \"%ld %ld\" , & A , & B ) ; N -- ; N -- ; if ( B > A ) { tempC ++ ; } while ( N -- ) { A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } } } else { scanf ( \"%ld\" , & A ) ; } printf ( \"%ld\\n\" , count ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 527,
      "text": "int main ( ) { int N , T ; long int A , B ; long int count , tempC ; int flag ; scanf ( \"%d\" , & T ) ; while ( T -- ) { scanf ( \"%d\" , & N ) ; count = N ; tempC = 1 ; flag = 0 ; if ( N > 1 ) { scanf ( \"%ld %ld\" , & A , & B ) ; N -- ; N -- ; if ( B > A ) { tempC ++ ; } while ( N -- ) { A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } } } else { scanf ( \"%ld\" , & A ) ; } printf ( \"%ld\\n\" , count ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 527,
          "text": "{ int N , T ; long int A , B ; long int count , tempC ; int flag ; scanf ( \"%d\" , & T ) ; while ( T -- ) { scanf ( \"%d\" , & N ) ; count = N ; tempC = 1 ; flag = 0 ; if ( N > 1 ) { scanf ( \"%ld %ld\" , & A , & B ) ; N -- ; N -- ; if ( B > A ) { tempC ++ ; } while ( N -- ) { A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } } } else { scanf ( \"%ld\" , & A ) ; } printf ( \"%ld\\n\" , count ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 26,
              "text": "int N , T ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 27,
              "end_byte": 43,
              "text": "long int A , B ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 27,
                  "end_byte": 35,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 27,
                      "end_byte": 31,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 32,
                      "end_byte": 35,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 44,
              "end_byte": 68,
              "text": "long int count , tempC ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 44,
                  "end_byte": 52,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 44,
                      "end_byte": 48,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 49,
                      "end_byte": 52,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 53,
                  "end_byte": 58,
                  "text": "count",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 61,
                  "end_byte": 66,
                  "text": "tempC",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 69,
              "end_byte": 79,
              "text": "int flag ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 69,
                  "end_byte": 72,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 73,
                  "end_byte": 77,
                  "text": "flag",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 80,
              "end_byte": 102,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 80,
                  "end_byte": 100,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 80,
                      "end_byte": 85,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 86,
                      "end_byte": 100,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 86,
                          "end_byte": 87,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 88,
                          "end_byte": 92,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 89,
                              "end_byte": 91,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 93,
                          "end_byte": 94,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 95,
                          "end_byte": 98,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 97,
                              "end_byte": 98,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 99,
                          "end_byte": 100,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 101,
                  "end_byte": 102,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 103,
              "end_byte": 514,
              "text": "while ( T -- ) { scanf ( \"%d\" , & N ) ; count = N ; tempC = 1 ; flag = 0 ; if ( N > 1 ) { scanf ( \"%ld %ld\" , & A , & B ) ; N -- ; N -- ; if ( B > A ) { tempC ++ ; } while ( N -- ) { A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } } } else { scanf ( \"%ld\" , & A ) ; } printf ( \"%ld\\n\" , count ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 103,
                  "end_byte": 108,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 109,
                  "end_byte": 117,
                  "text": "( T -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 111,
                      "end_byte": 115,
                      "text": "T --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": "T",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 113,
                          "end_byte": 115,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 118,
                  "end_byte": 514,
                  "text": "{ scanf ( \"%d\" , & N ) ; count = N ; tempC = 1 ; flag = 0 ; if ( N > 1 ) { scanf ( \"%ld %ld\" , & A , & B ) ; N -- ; N -- ; if ( B > A ) { tempC ++ ; } while ( N -- ) { A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } } } else { scanf ( \"%ld\" , & A ) ; } printf ( \"%ld\\n\" , count ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 120,
                      "end_byte": 142,
                      "text": "scanf ( \"%d\" , & N ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 120,
                          "end_byte": 140,
                          "text": "scanf ( \"%d\" , & N )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 120,
                              "end_byte": 125,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 126,
                              "end_byte": 140,
                              "text": "( \"%d\" , & N )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 126,
                                  "end_byte": 127,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 128,
                                  "end_byte": 132,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 128,
                                      "end_byte": 129,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 129,
                                      "end_byte": 131,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 131,
                                      "end_byte": 132,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 133,
                                  "end_byte": 134,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 135,
                                  "end_byte": 138,
                                  "text": "& N",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 135,
                                      "end_byte": 136,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 137,
                                      "end_byte": 138,
                                      "text": "N",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 139,
                                  "end_byte": 140,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 141,
                          "end_byte": 142,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 143,
                      "end_byte": 154,
                      "text": "count = N ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 143,
                          "end_byte": 152,
                          "text": "count = N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 143,
                              "end_byte": 148,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 152,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 155,
                      "end_byte": 166,
                      "text": "tempC = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 155,
                          "end_byte": 164,
                          "text": "tempC = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 155,
                              "end_byte": 160,
                              "text": "tempC",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 161,
                              "end_byte": 162,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 165,
                          "end_byte": 166,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 167,
                      "end_byte": 177,
                      "text": "flag = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 167,
                          "end_byte": 175,
                          "text": "flag = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 167,
                              "end_byte": 171,
                              "text": "flag",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 176,
                          "end_byte": 177,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 178,
                      "end_byte": 483,
                      "text": "if ( N > 1 ) { scanf ( \"%ld %ld\" , & A , & B ) ; N -- ; N -- ; if ( B > A ) { tempC ++ ; } while ( N -- ) { A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } } } else { scanf ( \"%ld\" , & A ) ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 178,
                          "end_byte": 180,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 181,
                          "end_byte": 190,
                          "text": "( N > 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 183,
                              "end_byte": 188,
                              "text": "N > 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 183,
                                  "end_byte": 184,
                                  "text": "N",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 187,
                                  "end_byte": 188,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 189,
                              "end_byte": 190,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 191,
                          "end_byte": 450,
                          "text": "{ scanf ( \"%ld %ld\" , & A , & B ) ; N -- ; N -- ; if ( B > A ) { tempC ++ ; } while ( N -- ) { A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 193,
                              "end_byte": 226,
                              "text": "scanf ( \"%ld %ld\" , & A , & B ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 193,
                                  "end_byte": 224,
                                  "text": "scanf ( \"%ld %ld\" , & A , & B )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 193,
                                      "end_byte": 198,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 199,
                                      "end_byte": 224,
                                      "text": "( \"%ld %ld\" , & A , & B )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 199,
                                          "end_byte": 200,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 201,
                                          "end_byte": 210,
                                          "text": "\"%ld %ld\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 201,
                                              "end_byte": 202,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 202,
                                              "end_byte": 209,
                                              "text": "%ld %ld",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 209,
                                              "end_byte": 210,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 211,
                                          "end_byte": 212,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 213,
                                          "end_byte": 216,
                                          "text": "& A",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 213,
                                              "end_byte": 214,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 215,
                                              "end_byte": 216,
                                              "text": "A",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 217,
                                          "end_byte": 218,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 219,
                                          "end_byte": 222,
                                          "text": "& B",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 219,
                                              "end_byte": 220,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 221,
                                              "end_byte": 222,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 223,
                                          "end_byte": 224,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 225,
                                  "end_byte": 226,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 227,
                              "end_byte": 233,
                              "text": "N -- ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 227,
                                  "end_byte": 231,
                                  "text": "N --",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 227,
                                      "end_byte": 228,
                                      "text": "N",
                                      "children": []
                                    },
                                    {
                                      "type": "--",
                                      "start_byte": 229,
                                      "end_byte": 231,
                                      "text": "--",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 232,
                                  "end_byte": 233,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 234,
                              "end_byte": 240,
                              "text": "N -- ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 234,
                                  "end_byte": 238,
                                  "text": "N --",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 234,
                                      "end_byte": 235,
                                      "text": "N",
                                      "children": []
                                    },
                                    {
                                      "type": "--",
                                      "start_byte": 236,
                                      "end_byte": 238,
                                      "text": "--",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 239,
                                  "end_byte": 240,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 241,
                              "end_byte": 268,
                              "text": "if ( B > A ) { tempC ++ ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 241,
                                  "end_byte": 243,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 244,
                                  "end_byte": 253,
                                  "text": "( B > A )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 244,
                                      "end_byte": 245,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 246,
                                      "end_byte": 251,
                                      "text": "B > A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 246,
                                          "end_byte": 247,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 248,
                                          "end_byte": 249,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 250,
                                          "end_byte": 251,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 252,
                                      "end_byte": 253,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 254,
                                  "end_byte": 268,
                                  "text": "{ tempC ++ ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 254,
                                      "end_byte": 255,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 256,
                                      "end_byte": 266,
                                      "text": "tempC ++ ;",
                                      "children": [
                                        {
                                          "type": "update_expression",
                                          "start_byte": 256,
                                          "end_byte": 264,
                                          "text": "tempC ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 256,
                                              "end_byte": 261,
                                              "text": "tempC",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 262,
                                              "end_byte": 264,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 265,
                                          "end_byte": 266,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 267,
                                      "end_byte": 268,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "while_statement",
                              "start_byte": 269,
                              "end_byte": 448,
                              "text": "while ( N -- ) { A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } }",
                              "children": [
                                {
                                  "type": "while",
                                  "start_byte": 269,
                                  "end_byte": 274,
                                  "text": "while",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 275,
                                  "end_byte": 283,
                                  "text": "( N -- )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 275,
                                      "end_byte": 276,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 277,
                                      "end_byte": 281,
                                      "text": "N --",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 277,
                                          "end_byte": 278,
                                          "text": "N",
                                          "children": []
                                        },
                                        {
                                          "type": "--",
                                          "start_byte": 279,
                                          "end_byte": 281,
                                          "text": "--",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 282,
                                      "end_byte": 283,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 284,
                                  "end_byte": 448,
                                  "text": "{ A = B ; scanf ( \"%ld\" , & B ) ; if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 286,
                                      "end_byte": 293,
                                      "text": "A = B ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 286,
                                          "end_byte": 291,
                                          "text": "A = B",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 286,
                                              "end_byte": 287,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 288,
                                              "end_byte": 289,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 290,
                                              "end_byte": 291,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 292,
                                          "end_byte": 293,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 294,
                                      "end_byte": 317,
                                      "text": "scanf ( \"%ld\" , & B ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 294,
                                          "end_byte": 315,
                                          "text": "scanf ( \"%ld\" , & B )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 294,
                                              "end_byte": 299,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 300,
                                              "end_byte": 315,
                                              "text": "( \"%ld\" , & B )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 300,
                                                  "end_byte": 301,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 302,
                                                  "end_byte": 307,
                                                  "text": "\"%ld\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 302,
                                                      "end_byte": 303,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 303,
                                                      "end_byte": 306,
                                                      "text": "%ld",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 306,
                                                      "end_byte": 307,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 308,
                                                  "end_byte": 309,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 310,
                                                  "end_byte": 313,
                                                  "text": "& B",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 310,
                                                      "end_byte": 311,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 312,
                                                      "end_byte": 313,
                                                      "text": "B",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 314,
                                                  "end_byte": 315,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 316,
                                          "end_byte": 317,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 318,
                                      "end_byte": 446,
                                      "text": "if ( B > A ) { tempC ++ ; } else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 318,
                                          "end_byte": 320,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 321,
                                          "end_byte": 330,
                                          "text": "( B > A )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 321,
                                              "end_byte": 322,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 323,
                                              "end_byte": 328,
                                              "text": "B > A",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 323,
                                                  "end_byte": 324,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 325,
                                                  "end_byte": 326,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 327,
                                                  "end_byte": 328,
                                                  "text": "A",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 329,
                                              "end_byte": 330,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 331,
                                          "end_byte": 345,
                                          "text": "{ tempC ++ ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 331,
                                              "end_byte": 332,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 333,
                                              "end_byte": 343,
                                              "text": "tempC ++ ;",
                                              "children": [
                                                {
                                                  "type": "update_expression",
                                                  "start_byte": 333,
                                                  "end_byte": 341,
                                                  "text": "tempC ++",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 333,
                                                      "end_byte": 338,
                                                      "text": "tempC",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "++",
                                                      "start_byte": 339,
                                                      "end_byte": 341,
                                                      "text": "++",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 342,
                                                  "end_byte": 343,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 344,
                                              "end_byte": 345,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 346,
                                          "end_byte": 446,
                                          "text": "else { count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 346,
                                              "end_byte": 350,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 351,
                                              "end_byte": 446,
                                              "text": "{ count = count + ( tempC - 1 ) ; count = count + ( tempC * ( tempC - 1 ) / 2 ) ; tempC = 1 ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 351,
                                                  "end_byte": 352,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 353,
                                                  "end_byte": 384,
                                                  "text": "count = count + ( tempC - 1 ) ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 353,
                                                      "end_byte": 382,
                                                      "text": "count = count + ( tempC - 1 )",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 353,
                                                          "end_byte": 358,
                                                          "text": "count",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 359,
                                                          "end_byte": 360,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 361,
                                                          "end_byte": 382,
                                                          "text": "count + ( tempC - 1 )",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 361,
                                                              "end_byte": 366,
                                                              "text": "count",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 367,
                                                              "end_byte": 368,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "parenthesized_expression",
                                                              "start_byte": 369,
                                                              "end_byte": 382,
                                                              "text": "( tempC - 1 )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 369,
                                                                  "end_byte": 370,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 371,
                                                                  "end_byte": 380,
                                                                  "text": "tempC - 1",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 371,
                                                                      "end_byte": 376,
                                                                      "text": "tempC",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "-",
                                                                      "start_byte": 377,
                                                                      "end_byte": 378,
                                                                      "text": "-",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 379,
                                                                      "end_byte": 380,
                                                                      "text": "1",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 381,
                                                                  "end_byte": 382,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 383,
                                                      "end_byte": 384,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 385,
                                                  "end_byte": 432,
                                                  "text": "count = count + ( tempC * ( tempC - 1 ) / 2 ) ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 385,
                                                      "end_byte": 430,
                                                      "text": "count = count + ( tempC * ( tempC - 1 ) / 2 )",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 385,
                                                          "end_byte": 390,
                                                          "text": "count",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 391,
                                                          "end_byte": 392,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 393,
                                                          "end_byte": 430,
                                                          "text": "count + ( tempC * ( tempC - 1 ) / 2 )",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 393,
                                                              "end_byte": 398,
                                                              "text": "count",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 399,
                                                              "end_byte": 400,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "parenthesized_expression",
                                                              "start_byte": 401,
                                                              "end_byte": 430,
                                                              "text": "( tempC * ( tempC - 1 ) / 2 )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 401,
                                                                  "end_byte": 402,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 403,
                                                                  "end_byte": 428,
                                                                  "text": "tempC * ( tempC - 1 ) / 2",
                                                                  "children": [
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 403,
                                                                      "end_byte": 424,
                                                                      "text": "tempC * ( tempC - 1 )",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 403,
                                                                          "end_byte": 408,
                                                                          "text": "tempC",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "*",
                                                                          "start_byte": 409,
                                                                          "end_byte": 410,
                                                                          "text": "*",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "parenthesized_expression",
                                                                          "start_byte": 411,
                                                                          "end_byte": 424,
                                                                          "text": "( tempC - 1 )",
                                                                          "children": [
                                                                            {
                                                                              "type": "(",
                                                                              "start_byte": 411,
                                                                              "end_byte": 412,
                                                                              "text": "(",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "binary_expression",
                                                                              "start_byte": 413,
                                                                              "end_byte": 422,
                                                                              "text": "tempC - 1",
                                                                              "children": [
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 413,
                                                                                  "end_byte": 418,
                                                                                  "text": "tempC",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "-",
                                                                                  "start_byte": 419,
                                                                                  "end_byte": 420,
                                                                                  "text": "-",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "number_literal",
                                                                                  "start_byte": 421,
                                                                                  "end_byte": 422,
                                                                                  "text": "1",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": ")",
                                                                              "start_byte": 423,
                                                                              "end_byte": 424,
                                                                              "text": ")",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "/",
                                                                      "start_byte": 425,
                                                                      "end_byte": 426,
                                                                      "text": "/",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 427,
                                                                      "end_byte": 428,
                                                                      "text": "2",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 429,
                                                                  "end_byte": 430,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 431,
                                                      "end_byte": 432,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 433,
                                                  "end_byte": 444,
                                                  "text": "tempC = 1 ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 433,
                                                      "end_byte": 442,
                                                      "text": "tempC = 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 433,
                                                          "end_byte": 438,
                                                          "text": "tempC",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 439,
                                                          "end_byte": 440,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 441,
                                                          "end_byte": 442,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 443,
                                                      "end_byte": 444,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 445,
                                                  "end_byte": 446,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 447,
                                      "end_byte": 448,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 449,
                              "end_byte": 450,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 451,
                          "end_byte": 483,
                          "text": "else { scanf ( \"%ld\" , & A ) ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 451,
                              "end_byte": 455,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 456,
                              "end_byte": 483,
                              "text": "{ scanf ( \"%ld\" , & A ) ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 456,
                                  "end_byte": 457,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 458,
                                  "end_byte": 481,
                                  "text": "scanf ( \"%ld\" , & A ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 458,
                                      "end_byte": 479,
                                      "text": "scanf ( \"%ld\" , & A )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 458,
                                          "end_byte": 463,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 464,
                                          "end_byte": 479,
                                          "text": "( \"%ld\" , & A )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 464,
                                              "end_byte": 465,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 466,
                                              "end_byte": 471,
                                              "text": "\"%ld\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 466,
                                                  "end_byte": 467,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 467,
                                                  "end_byte": 470,
                                                  "text": "%ld",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 470,
                                                  "end_byte": 471,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 472,
                                              "end_byte": 473,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 474,
                                              "end_byte": 477,
                                              "text": "& A",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 474,
                                                  "end_byte": 475,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 476,
                                                  "end_byte": 477,
                                                  "text": "A",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 478,
                                              "end_byte": 479,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 480,
                                      "end_byte": 481,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 482,
                                  "end_byte": 483,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 484,
                      "end_byte": 512,
                      "text": "printf ( \"%ld\\n\" , count ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 484,
                          "end_byte": 510,
                          "text": "printf ( \"%ld\\n\" , count )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 484,
                              "end_byte": 490,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 491,
                              "end_byte": 510,
                              "text": "( \"%ld\\n\" , count )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 491,
                                  "end_byte": 492,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 493,
                                  "end_byte": 500,
                                  "text": "\"%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 493,
                                      "end_byte": 494,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 494,
                                      "end_byte": 497,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 497,
                                      "end_byte": 499,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 499,
                                      "end_byte": 500,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 501,
                                  "end_byte": 502,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 503,
                                  "end_byte": 508,
                                  "text": "count",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 509,
                                  "end_byte": 510,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 511,
                          "end_byte": 512,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 513,
                      "end_byte": 514,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 515,
              "end_byte": 525,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 515,
                  "end_byte": 521,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 522,
                  "end_byte": 523,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 524,
                  "end_byte": 525,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 526,
              "end_byte": 527,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}