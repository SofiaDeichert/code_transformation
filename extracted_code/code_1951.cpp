int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int dp ( int a [ 10 ] [ 10 ] , int cp [ 10 ] [ 10 ] , int n , int i , int j ) { if ( i >= n ) return a [ i ] [ j ] ; else if ( cp [ i ] [ j ] == - 1 ) { cp [ i ] [ j ] = ( a [ i ] [ j ] + max ( dp ( a , cp , n , i + 1 , j + 1 ) , dp ( a , cp , n , i + 1 , j ) ) ) ; return cp [ i ] [ j ] ; } else return cp [ i ] [ j ] ; } int main ( ) { int cp [ 105 ] [ 105 ] ; int a [ 105 ] [ 105 ] ; int n , t ; int i ; int j ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; for ( i = 0 ; i < 105 ; i ++ ) for ( j = 0 ; j < 105 ; j ++ ) cp [ i ] [ j ] = - 1 ; printf ( "%d\n" , dp ( a , cp , n - 1 , 0 , 0 ) ) ; } return 0 ; }