long int in ( ) { char c ; long int t = 0 ; c = gc ; while ( c < 48 || c > 57 ) c = gc ; while ( c >= 48 && c <= 57 ) { t = ( t << 1 ) + ( t << 3 ) + c - 48 ; c = gc ; } return t ; } int main ( ) { int T , N , i , j , ans ; T = in ( ) ; while ( T -- ) { ans = 0 ; N = in ( ) ; int A [ N + 2 ] [ N + 2 ] , dp [ N + 2 ] [ N + 2 ] ; for ( i = 1 ; i <= N ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) A [ i ] [ j ] = in ( ) ; } dp [ 1 ] [ 1 ] = A [ 1 ] [ 1 ] ; for ( i = 2 ; i <= N ; i ++ ) dp [ i ] [ 1 ] = A [ i ] [ 1 ] + dp [ i - 1 ] [ 1 ] ; for ( i = 2 ; i <= N ; i ++ ) dp [ i ] [ i ] = A [ i ] [ i ] + dp [ i - 1 ] [ i - 1 ] ; dp [ 2 ] [ 2 ] = A [ 1 ] [ 1 ] + A [ 2 ] [ 2 ] ; for ( i = 3 ; i <= N ; i ++ ) { for ( j = 2 ; j < i ; j ++ ) { if ( dp [ i - 1 ] [ j ] > dp [ i - 1 ] [ j - 1 ] ) dp [ i ] [ j ] = A [ i ] [ j ] + dp [ i - 1 ] [ j ] ; else dp [ i ] [ j ] = A [ i ] [ j ] + dp [ i - 1 ] [ j - 1 ] ; } } for ( i = 1 ; i <= N ; i ++ ) { if ( dp [ N ] [ i ] > ans ) ans = dp [ N ] [ i ] ; } printf ( "%d\n" , ans ) ; } return 0 ; }