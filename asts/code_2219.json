{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 419,
  "text": "int main ( ) { int n , i ; long int a , b , num , denom , gcd , lcm , rem ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { num = a ; denom = b ; } else { num = b ; denom = a ; } rem = num % denom ; while ( rem != 0 ) { num = denom ; denom = rem ; rem = num % denom ; } gcd = denom ; lcm = ( a * b ) / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 419,
      "text": "int main ( ) { int n , i ; long int a , b , num , denom , gcd , lcm , rem ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { num = a ; denom = b ; } else { num = b ; denom = a ; } rem = num % denom ; while ( rem != 0 ) { num = denom ; denom = rem ; rem = num % denom ; } gcd = denom ; lcm = ( a * b ) / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 419,
          "text": "{ int n , i ; long int a , b , num , denom , gcd , lcm , rem ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { num = a ; denom = b ; } else { num = b ; denom = a ; } rem = num % denom ; while ( rem != 0 ) { num = denom ; denom = rem ; rem = num % denom ; } gcd = denom ; lcm = ( a * b ) / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 26,
              "text": "int n , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 27,
              "end_byte": 75,
              "text": "long int a , b , num , denom , gcd , lcm , rem ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 27,
                  "end_byte": 35,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 27,
                      "end_byte": 31,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 32,
                      "end_byte": 35,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 47,
                  "text": "num",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 55,
                  "text": "denom",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 61,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 64,
                  "end_byte": 67,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 70,
                  "end_byte": 73,
                  "text": "rem",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 76,
              "end_byte": 98,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 76,
                  "end_byte": 96,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 81,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 82,
                      "end_byte": 96,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 82,
                          "end_byte": 83,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 84,
                          "end_byte": 88,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 85,
                              "end_byte": 87,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 87,
                              "end_byte": 88,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 91,
                          "end_byte": 94,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 93,
                              "end_byte": 94,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 99,
              "end_byte": 417,
              "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { num = a ; denom = b ; } else { num = b ; denom = a ; } rem = num % denom ; while ( rem != 0 ) { num = denom ; denom = rem ; rem = num % denom ; } gcd = denom ; lcm = ( a * b ) / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 99,
                  "end_byte": 102,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 103,
                  "end_byte": 104,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 105,
                  "end_byte": 110,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 105,
                      "end_byte": 106,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 113,
                  "end_byte": 118,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 121,
                  "end_byte": 125,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 123,
                      "end_byte": 125,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 126,
                  "end_byte": 127,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 128,
                  "end_byte": 417,
                  "text": "{ scanf ( \"%ld %ld\" , & a , & b ) ; if ( a > b ) { num = a ; denom = b ; } else { num = b ; denom = a ; } rem = num % denom ; while ( rem != 0 ) { num = denom ; denom = rem ; rem = num % denom ; } gcd = denom ; lcm = ( a * b ) / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 130,
                      "end_byte": 163,
                      "text": "scanf ( \"%ld %ld\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 130,
                          "end_byte": 161,
                          "text": "scanf ( \"%ld %ld\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 130,
                              "end_byte": 135,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 136,
                              "end_byte": 161,
                              "text": "( \"%ld %ld\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 136,
                                  "end_byte": 137,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 138,
                                  "end_byte": 147,
                                  "text": "\"%ld %ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 138,
                                      "end_byte": 139,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 139,
                                      "end_byte": 146,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 148,
                                  "end_byte": 149,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 150,
                                  "end_byte": 153,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 154,
                                  "end_byte": 155,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 156,
                                  "end_byte": 159,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 156,
                                      "end_byte": 157,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 164,
                      "end_byte": 233,
                      "text": "if ( a > b ) { num = a ; denom = b ; } else { num = b ; denom = a ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 164,
                          "end_byte": 166,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 167,
                          "end_byte": 176,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 169,
                              "end_byte": 174,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 169,
                                  "end_byte": 170,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 171,
                                  "end_byte": 172,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 177,
                          "end_byte": 202,
                          "text": "{ num = a ; denom = b ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 177,
                              "end_byte": 178,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 179,
                              "end_byte": 188,
                              "text": "num = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 179,
                                  "end_byte": 186,
                                  "text": "num = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 179,
                                      "end_byte": 182,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 185,
                                      "end_byte": 186,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 187,
                                  "end_byte": 188,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 189,
                              "end_byte": 200,
                              "text": "denom = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 189,
                                  "end_byte": 198,
                                  "text": "denom = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 189,
                                      "end_byte": 194,
                                      "text": "denom",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 199,
                                  "end_byte": 200,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 201,
                              "end_byte": 202,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 203,
                          "end_byte": 233,
                          "text": "else { num = b ; denom = a ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 203,
                              "end_byte": 207,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 208,
                              "end_byte": 233,
                              "text": "{ num = b ; denom = a ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 210,
                                  "end_byte": 219,
                                  "text": "num = b ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 210,
                                      "end_byte": 217,
                                      "text": "num = b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 210,
                                          "end_byte": 213,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 214,
                                          "end_byte": 215,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 216,
                                          "end_byte": 217,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 218,
                                      "end_byte": 219,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 220,
                                  "end_byte": 231,
                                  "text": "denom = a ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 220,
                                      "end_byte": 229,
                                      "text": "denom = a",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 220,
                                          "end_byte": 225,
                                          "text": "denom",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 226,
                                          "end_byte": 227,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 228,
                                          "end_byte": 229,
                                          "text": "a",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 230,
                                      "end_byte": 231,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 232,
                                  "end_byte": 233,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 234,
                      "end_byte": 253,
                      "text": "rem = num % denom ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 234,
                          "end_byte": 251,
                          "text": "rem = num % denom",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 234,
                              "end_byte": 237,
                              "text": "rem",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 238,
                              "end_byte": 239,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 240,
                              "end_byte": 251,
                              "text": "num % denom",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 240,
                                  "end_byte": 243,
                                  "text": "num",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 244,
                                  "end_byte": 245,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 246,
                                  "end_byte": 251,
                                  "text": "denom",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 252,
                          "end_byte": 253,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 254,
                      "end_byte": 324,
                      "text": "while ( rem != 0 ) { num = denom ; denom = rem ; rem = num % denom ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 254,
                          "end_byte": 259,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 260,
                          "end_byte": 272,
                          "text": "( rem != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 260,
                              "end_byte": 261,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 262,
                              "end_byte": 270,
                              "text": "rem != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 262,
                                  "end_byte": 265,
                                  "text": "rem",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 266,
                                  "end_byte": 268,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 269,
                                  "end_byte": 270,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 273,
                          "end_byte": 324,
                          "text": "{ num = denom ; denom = rem ; rem = num % denom ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 273,
                              "end_byte": 274,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 275,
                              "end_byte": 288,
                              "text": "num = denom ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 275,
                                  "end_byte": 286,
                                  "text": "num = denom",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 275,
                                      "end_byte": 278,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 281,
                                      "end_byte": 286,
                                      "text": "denom",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 289,
                              "end_byte": 302,
                              "text": "denom = rem ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 289,
                                  "end_byte": 300,
                                  "text": "denom = rem",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 289,
                                      "end_byte": 294,
                                      "text": "denom",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 295,
                                      "end_byte": 296,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 297,
                                      "end_byte": 300,
                                      "text": "rem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 301,
                                  "end_byte": 302,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 303,
                              "end_byte": 322,
                              "text": "rem = num % denom ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 303,
                                  "end_byte": 320,
                                  "text": "rem = num % denom",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 303,
                                      "end_byte": 306,
                                      "text": "rem",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 307,
                                      "end_byte": 308,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 309,
                                      "end_byte": 320,
                                      "text": "num % denom",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 309,
                                          "end_byte": 312,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 313,
                                          "end_byte": 314,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 315,
                                          "end_byte": 320,
                                          "text": "denom",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 321,
                                  "end_byte": 322,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 323,
                              "end_byte": 324,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 325,
                      "end_byte": 338,
                      "text": "gcd = denom ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 325,
                          "end_byte": 336,
                          "text": "gcd = denom",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 328,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 329,
                              "end_byte": 330,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 331,
                              "end_byte": 336,
                              "text": "denom",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 337,
                          "end_byte": 338,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 339,
                      "end_byte": 362,
                      "text": "lcm = ( a * b ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 339,
                          "end_byte": 360,
                          "text": "lcm = ( a * b ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 339,
                              "end_byte": 342,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 343,
                              "end_byte": 344,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 345,
                              "end_byte": 360,
                              "text": "( a * b ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 345,
                                  "end_byte": 354,
                                  "text": "( a * b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 345,
                                      "end_byte": 346,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 347,
                                      "end_byte": 352,
                                      "text": "a * b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 347,
                                          "end_byte": 348,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 349,
                                          "end_byte": 350,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 351,
                                          "end_byte": 352,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 353,
                                      "end_byte": 354,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 355,
                                  "end_byte": 356,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 357,
                                  "end_byte": 360,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 361,
                          "end_byte": 362,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 363,
                      "end_byte": 388,
                      "text": "printf ( \"%ld \" , gcd ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 363,
                          "end_byte": 386,
                          "text": "printf ( \"%ld \" , gcd )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 363,
                              "end_byte": 369,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 370,
                              "end_byte": 386,
                              "text": "( \"%ld \" , gcd )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 370,
                                  "end_byte": 371,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 372,
                                  "end_byte": 378,
                                  "text": "\"%ld \"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 372,
                                      "end_byte": 373,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 373,
                                      "end_byte": 377,
                                      "text": "%ld ",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 377,
                                      "end_byte": 378,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 381,
                                  "end_byte": 384,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 385,
                                  "end_byte": 386,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 387,
                          "end_byte": 388,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 389,
                      "end_byte": 415,
                      "text": "printf ( \"%ld\\n\" , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 389,
                          "end_byte": 413,
                          "text": "printf ( \"%ld\\n\" , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 389,
                              "end_byte": 395,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 396,
                              "end_byte": 413,
                              "text": "( \"%ld\\n\" , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 396,
                                  "end_byte": 397,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 398,
                                  "end_byte": 405,
                                  "text": "\"%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 398,
                                      "end_byte": 399,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 399,
                                      "end_byte": 402,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 402,
                                      "end_byte": 404,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 404,
                                      "end_byte": 405,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 406,
                                  "end_byte": 407,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 408,
                                  "end_byte": 411,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 412,
                                  "end_byte": 413,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 414,
                          "end_byte": 415,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 416,
                      "end_byte": 417,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 418,
              "end_byte": 419,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}