int tree [ 5050 ] ; int n ; int find_sum ( int root ) { int l , r ; if ( root >= n ) { return 0 ; } l = root * 2 + 1 ; r = l + 1 ; if ( root * 2 + 1 < n ) { l = tree [ l ] + find_sum ( l ) ; r = tree [ r ] + find_sum ( r ) ; return l > r ? l : r ; } return 0 ; } int main ( int argc , char const * argv [ ] ) { int i , j , T ; scanf ( "%d" , & T ) ; for ( j = 0 ; j < T ; ++ j ) { scanf ( "%d" , & n ) ; n = n * ( ( 1 + n ) / 2 ) ; for ( i = 0 ; i < n ; ++ i ) scanf ( "%d" , & tree [ i ] ) ; printf ( "%d\n" , tree [ 0 ] + find_sum ( 0 ) ) ; } return 0 ; }