int main ( ) { int rows , test_cases , max , i , j , k , c , t , a [ 100 ] [ 100 ] , d [ 100 ] [ 100 ] ; scanf ( "%d" , & test_cases ) ; for ( k = 1 ; k <= test_cases ; k ++ ) { scanf ( "%d" , & rows ) ; for ( j = 0 ; j < rows ; j ++ ) { for ( i = 0 ; i <= j ; i ++ ) { scanf ( "%d" , & a [ j ] [ i ] ) ; } } max = 0 ; d [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < rows ; i ++ ) { d [ i ] [ 0 ] = d [ i - 1 ] [ 0 ] + a [ i ] [ 0 ] ; for ( j = 1 ; j < i ; j ++ ) { d [ i ] [ j ] = a [ i ] [ j ] + ( ( d [ i - 1 ] [ j ] > d [ i - 1 ] [ j - 1 ] ) ? d [ i - 1 ] [ j ] : d [ i - 1 ] [ j - 1 ] ) ; } d [ i ] [ i ] = a [ i ] [ i ] + d [ i - 1 ] [ i - 1 ] ; } for ( i = 0 ; i < rows ; i ++ ) { if ( d [ rows - 1 ] [ i ] > max ) max = d [ rows - 1 ] [ i ] ; } printf ( "%d\n" , max ) ; } return 0 ; }