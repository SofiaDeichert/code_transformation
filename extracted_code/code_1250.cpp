int cal ( int arr [ ] [ 101 ] , int ) ; int max ( int , int , int ) ; void calll ( int ) ; int main ( ) { int t ; scanf ( "%d" , & t ) ; calll ( t ) ; return 0 ; } void calll ( int t ) { int i , j , k , n , sum [ 101 ] ; int arr [ 101 ] [ 101 ] ; for ( i = 0 ; i < t ; i ++ ) { scanf ( "%d" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%d" , & arr [ j ] [ k ] ) ; } } sum [ i ] = cal ( arr , n ) ; } for ( i = 0 ; i < t ; i ++ ) { printf ( "%d\n" , sum [ i ] ) ; } } int cal ( int arr [ ] [ 101 ] , int n ) { int i , j ; for ( i = n - 2 ; i >= 0 ; i -- ) { for ( j = 0 ; j <= i ; j ++ ) { arr [ i ] [ j ] = max ( arr [ i ] [ j ] , arr [ i + 1 ] [ j ] , arr [ i + 1 ] [ j + 1 ] ) ; } } return arr [ 0 ] [ 0 ] ; } int max ( int x , int y , int z ) { if ( x + y >= x + z ) return x + y ; else return x + z ; }