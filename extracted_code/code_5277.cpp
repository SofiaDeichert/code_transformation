int count_subarray ( int a [ ] , int l , int r ) { int mid , count = 0 ; if ( l < r ) { mid = ( l + r ) / 2 ; count += count_subarray ( a , l , mid ) ; count = count + count_subarray ( a , mid + 1 , r ) ; if ( a [ mid ] <= a [ mid + 1 ] ) count ++ ; } return count ; } int main ( ) { int t , n , i , j , count ; scanf ( "%d" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { scanf ( "%d" , & n ) ; int a [ n ] ; for ( j = 0 ; j < n ; j ++ ) scanf ( "%d" , & a [ j ] ) ; count = n + count_subarray ( a , 0 , n - 1 ) ; printf ( "%d\n" , count ) ; } return 0 ; }