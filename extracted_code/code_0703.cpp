int size = 0 , j = 0 ; void compare_and_delete ( int arr [ ] , int index ) { int i = 0 ; if ( index == 0 ) { for ( i = index + 1 ; i < size && i + 1 <= size ; i ++ ) { arr [ i ] = arr [ i + 1 ] ; } } else if ( index == size - 1 ) { arr [ index - 1 ] = arr [ index ] ; } else { if ( arr [ index - 1 ] > arr [ index + 1 ] ) { for ( i = index ; i < size ; i ++ ) { arr [ i - 1 ] = arr [ i ] ; } } else { for ( i = index + 1 ; i < size && i + 1 <= size ; i ++ ) { arr [ i ] = arr [ i + 1 ] ; } } } -- size ; } void find_min_cost ( int arr [ ] , int sum [ ] ) { int minimum = arr [ 0 ] , i = 0 , index = 0 , sm = 0 ; if ( size == 1 ) { return ; } for ( i = 1 ; i < size ; i ++ ) { if ( minimum > arr [ i ] ) { minimum = arr [ i ] ; index = i ; } } while ( size > 1 ) { compare_and_delete ( arr , index ) ; sm = sm + minimum ; } sum [ j ++ ] = sm ; } void input_array ( int sum [ ] ) { int i = 0 ; scanf ( "%d" , & size ) ; int arr [ size ] ; for ( i = 0 ; i < size ; i ++ ) { scanf ( "%d" , & arr [ i ] ) ; } find_min_cost ( arr , sum ) ; } int main ( ) { int test_cases = 0 , i = 0 ; scanf ( "%d" , & test_cases ) ; int sum [ test_cases ] ; for ( i = 0 ; i < test_cases ; i ++ ) { input_array ( sum ) ; } for ( i = 0 ; i < test_cases ; i ++ ) { printf ( "\n%d\n" , sum [ i ] ) ; } }