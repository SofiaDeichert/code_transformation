{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 991,
  "text": "int main ( ) { unsigned int noTest = 0 ; unsigned int inputArray [ 100 ] = { 0 } ; unsigned int computeArray [ 100 ] = { 0 } ; unsigned int largest = 0 , i = 0 , k = 0 , j = 0 , x = 0 , y = 0 , noRow = 0 ; unsigned int temp = 0 , temp1 = 0 ; scanf ( \"%d\" , & noTest ) ; while ( i < noTest ) { scanf ( \"%d\" , & noRow ) ; for ( j = 0 ; j < noRow ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & inputArray [ k ] ) ; } for ( k = 1 ; k <= j ; k ++ ) { if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; } computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ] ; } k = 0 ; largest = 0 ; while ( k < noRow ) { if ( computeArray [ k ] > largest ) { largest = computeArray [ k ] ; } computeArray [ k ] = 0 ; k ++ ; } printf ( \"%d\\n\" , largest ) ; i ++ ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 991,
      "text": "int main ( ) { unsigned int noTest = 0 ; unsigned int inputArray [ 100 ] = { 0 } ; unsigned int computeArray [ 100 ] = { 0 } ; unsigned int largest = 0 , i = 0 , k = 0 , j = 0 , x = 0 , y = 0 , noRow = 0 ; unsigned int temp = 0 , temp1 = 0 ; scanf ( \"%d\" , & noTest ) ; while ( i < noTest ) { scanf ( \"%d\" , & noRow ) ; for ( j = 0 ; j < noRow ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & inputArray [ k ] ) ; } for ( k = 1 ; k <= j ; k ++ ) { if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; } computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ] ; } k = 0 ; largest = 0 ; while ( k < noRow ) { if ( computeArray [ k ] > largest ) { largest = computeArray [ k ] ; } computeArray [ k ] = 0 ; k ++ ; } printf ( \"%d\\n\" , largest ) ; i ++ ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 991,
          "text": "{ unsigned int noTest = 0 ; unsigned int inputArray [ 100 ] = { 0 } ; unsigned int computeArray [ 100 ] = { 0 } ; unsigned int largest = 0 , i = 0 , k = 0 , j = 0 , x = 0 , y = 0 , noRow = 0 ; unsigned int temp = 0 , temp1 = 0 ; scanf ( \"%d\" , & noTest ) ; while ( i < noTest ) { scanf ( \"%d\" , & noRow ) ; for ( j = 0 ; j < noRow ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & inputArray [ k ] ) ; } for ( k = 1 ; k <= j ; k ++ ) { if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; } computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ] ; } k = 0 ; largest = 0 ; while ( k < noRow ) { if ( computeArray [ k ] > largest ) { largest = computeArray [ k ] ; } computeArray [ k ] = 0 ; k ++ ; } printf ( \"%d\\n\" , largest ) ; i ++ ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 40,
              "text": "unsigned int noTest = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 15,
                  "end_byte": 27,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 15,
                      "end_byte": 23,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 24,
                      "end_byte": 27,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 28,
                  "end_byte": 38,
                  "text": "noTest = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 28,
                      "end_byte": 34,
                      "text": "noTest",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 35,
                      "end_byte": 36,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 37,
                      "end_byte": 38,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 41,
              "end_byte": 82,
              "text": "unsigned int inputArray [ 100 ] = { 0 } ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 41,
                  "end_byte": 53,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 41,
                      "end_byte": 49,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 50,
                      "end_byte": 53,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 54,
                  "end_byte": 80,
                  "text": "inputArray [ 100 ] = { 0 }",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 54,
                      "end_byte": 72,
                      "text": "inputArray [ 100 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 54,
                          "end_byte": 64,
                          "text": "inputArray",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 65,
                          "end_byte": 66,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 67,
                          "end_byte": 70,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 71,
                          "end_byte": 72,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 73,
                      "end_byte": 74,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "initializer_list",
                      "start_byte": 75,
                      "end_byte": 80,
                      "text": "{ 0 }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 75,
                          "end_byte": 76,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 77,
                          "end_byte": 78,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": "}",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 83,
              "end_byte": 126,
              "text": "unsigned int computeArray [ 100 ] = { 0 } ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 83,
                  "end_byte": 95,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 83,
                      "end_byte": 91,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 92,
                      "end_byte": 95,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 96,
                  "end_byte": 124,
                  "text": "computeArray [ 100 ] = { 0 }",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 96,
                      "end_byte": 116,
                      "text": "computeArray [ 100 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 96,
                          "end_byte": 108,
                          "text": "computeArray",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 109,
                          "end_byte": 110,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 111,
                          "end_byte": 114,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 115,
                          "end_byte": 116,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "initializer_list",
                      "start_byte": 119,
                      "end_byte": 124,
                      "text": "{ 0 }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 119,
                          "end_byte": 120,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": "}",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 125,
                  "end_byte": 126,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 127,
              "end_byte": 205,
              "text": "unsigned int largest = 0 , i = 0 , k = 0 , j = 0 , x = 0 , y = 0 , noRow = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 127,
                  "end_byte": 139,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 127,
                      "end_byte": 135,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 136,
                      "end_byte": 139,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 140,
                  "end_byte": 151,
                  "text": "largest = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 140,
                      "end_byte": 147,
                      "text": "largest",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 148,
                      "end_byte": 149,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 150,
                      "end_byte": 151,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 152,
                  "end_byte": 153,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 154,
                  "end_byte": 159,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 160,
                  "end_byte": 161,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 162,
                  "end_byte": 167,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 162,
                      "end_byte": 163,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 164,
                      "end_byte": 165,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 168,
                  "end_byte": 169,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 170,
                  "end_byte": 175,
                  "text": "j = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 170,
                      "end_byte": 171,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 172,
                      "end_byte": 173,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 174,
                      "end_byte": 175,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 176,
                  "end_byte": 177,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 178,
                  "end_byte": 183,
                  "text": "x = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 178,
                      "end_byte": 179,
                      "text": "x",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 180,
                      "end_byte": 181,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 184,
                  "end_byte": 185,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 186,
                  "end_byte": 191,
                  "text": "y = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 186,
                      "end_byte": 187,
                      "text": "y",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 188,
                      "end_byte": 189,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 190,
                      "end_byte": 191,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 192,
                  "end_byte": 193,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 194,
                  "end_byte": 203,
                  "text": "noRow = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 194,
                      "end_byte": 199,
                      "text": "noRow",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 200,
                      "end_byte": 201,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 202,
                      "end_byte": 203,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 204,
                  "end_byte": 205,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 206,
              "end_byte": 241,
              "text": "unsigned int temp = 0 , temp1 = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 206,
                  "end_byte": 218,
                  "text": "unsigned int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 206,
                      "end_byte": 214,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 215,
                      "end_byte": 218,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 219,
                  "end_byte": 227,
                  "text": "temp = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 219,
                      "end_byte": 223,
                      "text": "temp",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 224,
                      "end_byte": 225,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 228,
                  "end_byte": 229,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 230,
                  "end_byte": 239,
                  "text": "temp1 = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 230,
                      "end_byte": 235,
                      "text": "temp1",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 236,
                      "end_byte": 237,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 238,
                      "end_byte": 239,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 240,
                  "end_byte": 241,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 242,
              "end_byte": 269,
              "text": "scanf ( \"%d\" , & noTest ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 242,
                  "end_byte": 267,
                  "text": "scanf ( \"%d\" , & noTest )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 242,
                      "end_byte": 247,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 248,
                      "end_byte": 267,
                      "text": "( \"%d\" , & noTest )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 248,
                          "end_byte": 249,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 250,
                          "end_byte": 254,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 250,
                              "end_byte": 251,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 251,
                              "end_byte": 253,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 253,
                              "end_byte": 254,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 255,
                          "end_byte": 256,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 257,
                          "end_byte": 265,
                          "text": "& noTest",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 259,
                              "end_byte": 265,
                              "text": "noTest",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 266,
                          "end_byte": 267,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 268,
                  "end_byte": 269,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 270,
              "end_byte": 989,
              "text": "while ( i < noTest ) { scanf ( \"%d\" , & noRow ) ; for ( j = 0 ; j < noRow ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & inputArray [ k ] ) ; } for ( k = 1 ; k <= j ; k ++ ) { if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; } computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ] ; } k = 0 ; largest = 0 ; while ( k < noRow ) { if ( computeArray [ k ] > largest ) { largest = computeArray [ k ] ; } computeArray [ k ] = 0 ; k ++ ; } printf ( \"%d\\n\" , largest ) ; i ++ ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 270,
                  "end_byte": 275,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 276,
                  "end_byte": 290,
                  "text": "( i < noTest )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 276,
                      "end_byte": 277,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 278,
                      "end_byte": 288,
                      "text": "i < noTest",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 278,
                          "end_byte": 279,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 280,
                          "end_byte": 281,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 282,
                          "end_byte": 288,
                          "text": "noTest",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 289,
                      "end_byte": 290,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 291,
                  "end_byte": 989,
                  "text": "{ scanf ( \"%d\" , & noRow ) ; for ( j = 0 ; j < noRow ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & inputArray [ k ] ) ; } for ( k = 1 ; k <= j ; k ++ ) { if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; } computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ] ; } k = 0 ; largest = 0 ; while ( k < noRow ) { if ( computeArray [ k ] > largest ) { largest = computeArray [ k ] ; } computeArray [ k ] = 0 ; k ++ ; } printf ( \"%d\\n\" , largest ) ; i ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 291,
                      "end_byte": 292,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 293,
                      "end_byte": 319,
                      "text": "scanf ( \"%d\" , & noRow ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 293,
                          "end_byte": 317,
                          "text": "scanf ( \"%d\" , & noRow )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 293,
                              "end_byte": 298,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 299,
                              "end_byte": 317,
                              "text": "( \"%d\" , & noRow )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 299,
                                  "end_byte": 300,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 301,
                                  "end_byte": 305,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 301,
                                      "end_byte": 302,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 302,
                                      "end_byte": 304,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 304,
                                      "end_byte": 305,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 306,
                                  "end_byte": 307,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 308,
                                  "end_byte": 315,
                                  "text": "& noRow",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 308,
                                      "end_byte": 309,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 310,
                                      "end_byte": 315,
                                      "text": "noRow",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 316,
                                  "end_byte": 317,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 318,
                          "end_byte": 319,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 320,
                      "end_byte": 801,
                      "text": "for ( j = 0 ; j < noRow ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & inputArray [ k ] ) ; } for ( k = 1 ; k <= j ; k ++ ) { if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; } computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 320,
                          "end_byte": 323,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 324,
                          "end_byte": 325,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 326,
                          "end_byte": 331,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 330,
                              "end_byte": 331,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 332,
                          "end_byte": 333,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 334,
                          "end_byte": 343,
                          "text": "j < noRow",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 334,
                              "end_byte": 335,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 336,
                              "end_byte": 337,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 338,
                              "end_byte": 343,
                              "text": "noRow",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 344,
                          "end_byte": 345,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 346,
                          "end_byte": 350,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 346,
                              "end_byte": 347,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 348,
                              "end_byte": 350,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 351,
                          "end_byte": 352,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 353,
                          "end_byte": 801,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & inputArray [ k ] ) ; } for ( k = 1 ; k <= j ; k ++ ) { if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; } computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 353,
                              "end_byte": 354,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 355,
                              "end_byte": 426,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & inputArray [ k ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 355,
                                  "end_byte": 358,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 359,
                                  "end_byte": 360,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 361,
                                  "end_byte": 366,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 361,
                                      "end_byte": 362,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 363,
                                      "end_byte": 364,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 367,
                                  "end_byte": 368,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 369,
                                  "end_byte": 375,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 369,
                                      "end_byte": 370,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 371,
                                      "end_byte": 373,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 374,
                                      "end_byte": 375,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 376,
                                  "end_byte": 377,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 378,
                                  "end_byte": 382,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 378,
                                      "end_byte": 379,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 380,
                                      "end_byte": 382,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 383,
                                  "end_byte": 384,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 385,
                                  "end_byte": 426,
                                  "text": "{ scanf ( \"%d\" , & inputArray [ k ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 385,
                                      "end_byte": 386,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 387,
                                      "end_byte": 424,
                                      "text": "scanf ( \"%d\" , & inputArray [ k ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 387,
                                          "end_byte": 422,
                                          "text": "scanf ( \"%d\" , & inputArray [ k ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 387,
                                              "end_byte": 392,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 393,
                                              "end_byte": 422,
                                              "text": "( \"%d\" , & inputArray [ k ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 393,
                                                  "end_byte": 394,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 395,
                                                  "end_byte": 399,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 395,
                                                      "end_byte": 396,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 396,
                                                      "end_byte": 398,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 398,
                                                      "end_byte": 399,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 400,
                                                  "end_byte": 401,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 402,
                                                  "end_byte": 420,
                                                  "text": "& inputArray [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 402,
                                                      "end_byte": 403,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 404,
                                                      "end_byte": 420,
                                                      "text": "inputArray [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 404,
                                                          "end_byte": 414,
                                                          "text": "inputArray",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 415,
                                                          "end_byte": 420,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 415,
                                                              "end_byte": 416,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 417,
                                                              "end_byte": 418,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 419,
                                                              "end_byte": 420,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 421,
                                                  "end_byte": 422,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 423,
                                          "end_byte": 424,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 425,
                                      "end_byte": 426,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 427,
                              "end_byte": 676,
                              "text": "for ( k = 1 ; k <= j ; k ++ ) { if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 427,
                                  "end_byte": 430,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 431,
                                  "end_byte": 432,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 433,
                                  "end_byte": 438,
                                  "text": "k = 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 433,
                                      "end_byte": 434,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 435,
                                      "end_byte": 436,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 437,
                                      "end_byte": 438,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 439,
                                  "end_byte": 440,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 441,
                                  "end_byte": 447,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 441,
                                      "end_byte": 442,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 443,
                                      "end_byte": 445,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 446,
                                      "end_byte": 447,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 448,
                                  "end_byte": 449,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 450,
                                  "end_byte": 454,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 450,
                                      "end_byte": 451,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 452,
                                      "end_byte": 454,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 455,
                                  "end_byte": 456,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 457,
                                  "end_byte": 676,
                                  "text": "{ if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; } if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; } temp1 = temp ; temp = 0 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 457,
                                      "end_byte": 458,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 459,
                                      "end_byte": 598,
                                      "text": "if ( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) ) { temp = x ; } else { temp = y ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 459,
                                          "end_byte": 461,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 462,
                                          "end_byte": 563,
                                          "text": "( ( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] ) )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 462,
                                              "end_byte": 463,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 464,
                                              "end_byte": 561,
                                              "text": "( x = inputArray [ k ] + computeArray [ k - 1 ] ) > ( y = inputArray [ k ] + computeArray [ k ] )",
                                              "children": [
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start_byte": 464,
                                                  "end_byte": 513,
                                                  "text": "( x = inputArray [ k ] + computeArray [ k - 1 ] )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 464,
                                                      "end_byte": 465,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 466,
                                                      "end_byte": 511,
                                                      "text": "x = inputArray [ k ] + computeArray [ k - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 466,
                                                          "end_byte": 467,
                                                          "text": "x",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 468,
                                                          "end_byte": 469,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 470,
                                                          "end_byte": 511,
                                                          "text": "inputArray [ k ] + computeArray [ k - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 470,
                                                              "end_byte": 486,
                                                              "text": "inputArray [ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 470,
                                                                  "end_byte": 480,
                                                                  "text": "inputArray",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 481,
                                                                  "end_byte": 486,
                                                                  "text": "[ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 481,
                                                                      "end_byte": 482,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 483,
                                                                      "end_byte": 484,
                                                                      "text": "k",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 485,
                                                                      "end_byte": 486,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 487,
                                                              "end_byte": 488,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 489,
                                                              "end_byte": 511,
                                                              "text": "computeArray [ k - 1 ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 489,
                                                                  "end_byte": 501,
                                                                  "text": "computeArray",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 502,
                                                                  "end_byte": 511,
                                                                  "text": "[ k - 1 ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 502,
                                                                      "end_byte": 503,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 504,
                                                                      "end_byte": 509,
                                                                      "text": "k - 1",
                                                                      "children": [
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 504,
                                                                          "end_byte": 505,
                                                                          "text": "k",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "-",
                                                                          "start_byte": 506,
                                                                          "end_byte": 507,
                                                                          "text": "-",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "number_literal",
                                                                          "start_byte": 508,
                                                                          "end_byte": 509,
                                                                          "text": "1",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 510,
                                                                      "end_byte": 511,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 512,
                                                      "end_byte": 513,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 514,
                                                  "end_byte": 515,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "parenthesized_expression",
                                                  "start_byte": 516,
                                                  "end_byte": 561,
                                                  "text": "( y = inputArray [ k ] + computeArray [ k ] )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 516,
                                                      "end_byte": 517,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 518,
                                                      "end_byte": 559,
                                                      "text": "y = inputArray [ k ] + computeArray [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 518,
                                                          "end_byte": 519,
                                                          "text": "y",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 520,
                                                          "end_byte": 521,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 522,
                                                          "end_byte": 559,
                                                          "text": "inputArray [ k ] + computeArray [ k ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 522,
                                                              "end_byte": 538,
                                                              "text": "inputArray [ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 522,
                                                                  "end_byte": 532,
                                                                  "text": "inputArray",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 533,
                                                                  "end_byte": 538,
                                                                  "text": "[ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 533,
                                                                      "end_byte": 534,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 535,
                                                                      "end_byte": 536,
                                                                      "text": "k",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 537,
                                                                      "end_byte": 538,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "+",
                                                              "start_byte": 539,
                                                              "end_byte": 540,
                                                              "text": "+",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 541,
                                                              "end_byte": 559,
                                                              "text": "computeArray [ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 541,
                                                                  "end_byte": 553,
                                                                  "text": "computeArray",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 554,
                                                                  "end_byte": 559,
                                                                  "text": "[ k ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 554,
                                                                      "end_byte": 555,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 556,
                                                                      "end_byte": 557,
                                                                      "text": "k",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 558,
                                                                      "end_byte": 559,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 560,
                                                      "end_byte": 561,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 562,
                                              "end_byte": 563,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 564,
                                          "end_byte": 578,
                                          "text": "{ temp = x ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 564,
                                              "end_byte": 565,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 566,
                                              "end_byte": 576,
                                              "text": "temp = x ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 566,
                                                  "end_byte": 574,
                                                  "text": "temp = x",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 566,
                                                      "end_byte": 570,
                                                      "text": "temp",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 571,
                                                      "end_byte": 572,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 573,
                                                      "end_byte": 574,
                                                      "text": "x",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 575,
                                                  "end_byte": 576,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 577,
                                              "end_byte": 578,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 579,
                                          "end_byte": 598,
                                          "text": "else { temp = y ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 579,
                                              "end_byte": 583,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 584,
                                              "end_byte": 598,
                                              "text": "{ temp = y ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 584,
                                                  "end_byte": 585,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 586,
                                                  "end_byte": 596,
                                                  "text": "temp = y ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 586,
                                                      "end_byte": 594,
                                                      "text": "temp = y",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 586,
                                                          "end_byte": 590,
                                                          "text": "temp",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 591,
                                                          "end_byte": 592,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 593,
                                                          "end_byte": 594,
                                                          "text": "y",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 595,
                                                      "end_byte": 596,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 597,
                                                  "end_byte": 598,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 599,
                                      "end_byte": 648,
                                      "text": "if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 599,
                                          "end_byte": 601,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 602,
                                          "end_byte": 611,
                                          "text": "( k > 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 602,
                                              "end_byte": 603,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 604,
                                              "end_byte": 609,
                                              "text": "k > 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 604,
                                                  "end_byte": 605,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 606,
                                                  "end_byte": 607,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 608,
                                                  "end_byte": 609,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 610,
                                              "end_byte": 611,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 612,
                                          "end_byte": 648,
                                          "text": "{ computeArray [ k - 1 ] = temp1 ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 612,
                                              "end_byte": 613,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 614,
                                              "end_byte": 646,
                                              "text": "computeArray [ k - 1 ] = temp1 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 614,
                                                  "end_byte": 644,
                                                  "text": "computeArray [ k - 1 ] = temp1",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 614,
                                                      "end_byte": 636,
                                                      "text": "computeArray [ k - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 614,
                                                          "end_byte": 626,
                                                          "text": "computeArray",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 627,
                                                          "end_byte": 636,
                                                          "text": "[ k - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 627,
                                                              "end_byte": 628,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 629,
                                                              "end_byte": 634,
                                                              "text": "k - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 629,
                                                                  "end_byte": 630,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 631,
                                                                  "end_byte": 632,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 633,
                                                                  "end_byte": 634,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 635,
                                                              "end_byte": 636,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 637,
                                                      "end_byte": 638,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 639,
                                                      "end_byte": 644,
                                                      "text": "temp1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 645,
                                                  "end_byte": 646,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 647,
                                              "end_byte": 648,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 649,
                                      "end_byte": 663,
                                      "text": "temp1 = temp ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 649,
                                          "end_byte": 661,
                                          "text": "temp1 = temp",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 649,
                                              "end_byte": 654,
                                              "text": "temp1",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 655,
                                              "end_byte": 656,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 657,
                                              "end_byte": 661,
                                              "text": "temp",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 662,
                                          "end_byte": 663,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 664,
                                      "end_byte": 674,
                                      "text": "temp = 0 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 664,
                                          "end_byte": 672,
                                          "text": "temp = 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 664,
                                              "end_byte": 668,
                                              "text": "temp",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 669,
                                              "end_byte": 670,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 671,
                                              "end_byte": 672,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 673,
                                          "end_byte": 674,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 675,
                                      "end_byte": 676,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 677,
                              "end_byte": 738,
                              "text": "if ( k > 1 ) { computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 677,
                                  "end_byte": 679,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 680,
                                  "end_byte": 689,
                                  "text": "( k > 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 680,
                                      "end_byte": 681,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 682,
                                      "end_byte": 687,
                                      "text": "k > 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 682,
                                          "end_byte": 683,
                                          "text": "k",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 684,
                                          "end_byte": 685,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 686,
                                          "end_byte": 687,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 688,
                                      "end_byte": 689,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 690,
                                  "end_byte": 738,
                                  "text": "{ computeArray [ k - 1 ] = temp1 ; temp1 = 0 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 690,
                                      "end_byte": 691,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 692,
                                      "end_byte": 724,
                                      "text": "computeArray [ k - 1 ] = temp1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 692,
                                          "end_byte": 722,
                                          "text": "computeArray [ k - 1 ] = temp1",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 692,
                                              "end_byte": 714,
                                              "text": "computeArray [ k - 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 692,
                                                  "end_byte": 704,
                                                  "text": "computeArray",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 705,
                                                  "end_byte": 714,
                                                  "text": "[ k - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 705,
                                                      "end_byte": 706,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 707,
                                                      "end_byte": 712,
                                                      "text": "k - 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 707,
                                                          "end_byte": 708,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "-",
                                                          "start_byte": 709,
                                                          "end_byte": 710,
                                                          "text": "-",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 711,
                                                          "end_byte": 712,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 713,
                                                      "end_byte": 714,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 715,
                                              "end_byte": 716,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 717,
                                              "end_byte": 722,
                                              "text": "temp1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 723,
                                          "end_byte": 724,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 725,
                                      "end_byte": 736,
                                      "text": "temp1 = 0 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 725,
                                          "end_byte": 734,
                                          "text": "temp1 = 0",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 725,
                                              "end_byte": 730,
                                              "text": "temp1",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 731,
                                              "end_byte": 732,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 733,
                                              "end_byte": 734,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 735,
                                          "end_byte": 736,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 737,
                                      "end_byte": 738,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 739,
                              "end_byte": 799,
                              "text": "computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 739,
                                  "end_byte": 797,
                                  "text": "computeArray [ 0 ] = computeArray [ 0 ] + inputArray [ 0 ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 739,
                                      "end_byte": 757,
                                      "text": "computeArray [ 0 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 739,
                                          "end_byte": 751,
                                          "text": "computeArray",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 752,
                                          "end_byte": 757,
                                          "text": "[ 0 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 752,
                                              "end_byte": 753,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 754,
                                              "end_byte": 755,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 756,
                                              "end_byte": 757,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 758,
                                      "end_byte": 759,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 760,
                                      "end_byte": 797,
                                      "text": "computeArray [ 0 ] + inputArray [ 0 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 760,
                                          "end_byte": 778,
                                          "text": "computeArray [ 0 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 760,
                                              "end_byte": 772,
                                              "text": "computeArray",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 773,
                                              "end_byte": 778,
                                              "text": "[ 0 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 773,
                                                  "end_byte": 774,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 775,
                                                  "end_byte": 776,
                                                  "text": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 777,
                                                  "end_byte": 778,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 779,
                                          "end_byte": 780,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 781,
                                          "end_byte": 797,
                                          "text": "inputArray [ 0 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 781,
                                              "end_byte": 791,
                                              "text": "inputArray",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 792,
                                              "end_byte": 797,
                                              "text": "[ 0 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 792,
                                                  "end_byte": 793,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 794,
                                                  "end_byte": 795,
                                                  "text": "0",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 796,
                                                  "end_byte": 797,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 798,
                                  "end_byte": 799,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 800,
                              "end_byte": 801,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 802,
                      "end_byte": 809,
                      "text": "k = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 802,
                          "end_byte": 807,
                          "text": "k = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 802,
                              "end_byte": 803,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 804,
                              "end_byte": 805,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 806,
                              "end_byte": 807,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 808,
                          "end_byte": 809,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 810,
                      "end_byte": 823,
                      "text": "largest = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 810,
                          "end_byte": 821,
                          "text": "largest = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 810,
                              "end_byte": 817,
                              "text": "largest",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 818,
                              "end_byte": 819,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 820,
                              "end_byte": 821,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 822,
                          "end_byte": 823,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 824,
                      "end_byte": 950,
                      "text": "while ( k < noRow ) { if ( computeArray [ k ] > largest ) { largest = computeArray [ k ] ; } computeArray [ k ] = 0 ; k ++ ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 824,
                          "end_byte": 829,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 830,
                          "end_byte": 843,
                          "text": "( k < noRow )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 830,
                              "end_byte": 831,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 832,
                              "end_byte": 841,
                              "text": "k < noRow",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 832,
                                  "end_byte": 833,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 834,
                                  "end_byte": 835,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 836,
                                  "end_byte": 841,
                                  "text": "noRow",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 842,
                              "end_byte": 843,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 844,
                          "end_byte": 950,
                          "text": "{ if ( computeArray [ k ] > largest ) { largest = computeArray [ k ] ; } computeArray [ k ] = 0 ; k ++ ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 844,
                              "end_byte": 845,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 846,
                              "end_byte": 916,
                              "text": "if ( computeArray [ k ] > largest ) { largest = computeArray [ k ] ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 846,
                                  "end_byte": 848,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 849,
                                  "end_byte": 881,
                                  "text": "( computeArray [ k ] > largest )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 849,
                                      "end_byte": 850,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 851,
                                      "end_byte": 879,
                                      "text": "computeArray [ k ] > largest",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 851,
                                          "end_byte": 869,
                                          "text": "computeArray [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 851,
                                              "end_byte": 863,
                                              "text": "computeArray",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 864,
                                              "end_byte": 869,
                                              "text": "[ k ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 864,
                                                  "end_byte": 865,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 866,
                                                  "end_byte": 867,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 868,
                                                  "end_byte": 869,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 870,
                                          "end_byte": 871,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 872,
                                          "end_byte": 879,
                                          "text": "largest",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 880,
                                      "end_byte": 881,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 882,
                                  "end_byte": 916,
                                  "text": "{ largest = computeArray [ k ] ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 882,
                                      "end_byte": 883,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 884,
                                      "end_byte": 914,
                                      "text": "largest = computeArray [ k ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 884,
                                          "end_byte": 912,
                                          "text": "largest = computeArray [ k ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 884,
                                              "end_byte": 891,
                                              "text": "largest",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 892,
                                              "end_byte": 893,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 894,
                                              "end_byte": 912,
                                              "text": "computeArray [ k ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 894,
                                                  "end_byte": 906,
                                                  "text": "computeArray",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 907,
                                                  "end_byte": 912,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 907,
                                                      "end_byte": 908,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 909,
                                                      "end_byte": 910,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 911,
                                                      "end_byte": 912,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 913,
                                          "end_byte": 914,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 915,
                                      "end_byte": 916,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 917,
                              "end_byte": 941,
                              "text": "computeArray [ k ] = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 917,
                                  "end_byte": 939,
                                  "text": "computeArray [ k ] = 0",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 917,
                                      "end_byte": 935,
                                      "text": "computeArray [ k ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 917,
                                          "end_byte": 929,
                                          "text": "computeArray",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 930,
                                          "end_byte": 935,
                                          "text": "[ k ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 930,
                                              "end_byte": 931,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 932,
                                              "end_byte": 933,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 934,
                                              "end_byte": 935,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 936,
                                      "end_byte": 937,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 938,
                                      "end_byte": 939,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 940,
                                  "end_byte": 941,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 942,
                              "end_byte": 948,
                              "text": "k ++ ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 942,
                                  "end_byte": 946,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 942,
                                      "end_byte": 943,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 944,
                                      "end_byte": 946,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 947,
                                  "end_byte": 948,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 949,
                              "end_byte": 950,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 951,
                      "end_byte": 980,
                      "text": "printf ( \"%d\\n\" , largest ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 951,
                          "end_byte": 978,
                          "text": "printf ( \"%d\\n\" , largest )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 951,
                              "end_byte": 957,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 958,
                              "end_byte": 978,
                              "text": "( \"%d\\n\" , largest )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 958,
                                  "end_byte": 959,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 960,
                                  "end_byte": 966,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 960,
                                      "end_byte": 961,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 961,
                                      "end_byte": 963,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 963,
                                      "end_byte": 965,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 965,
                                      "end_byte": 966,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 967,
                                  "end_byte": 968,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 969,
                                  "end_byte": 976,
                                  "text": "largest",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 977,
                                  "end_byte": 978,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 979,
                          "end_byte": 980,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 981,
                      "end_byte": 987,
                      "text": "i ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 981,
                          "end_byte": 985,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 981,
                              "end_byte": 982,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 983,
                              "end_byte": 985,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 986,
                          "end_byte": 987,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 988,
                      "end_byte": 989,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 990,
              "end_byte": 991,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}