int max ( int a , int b ) { return a > b ? a : b ; } int maxProfit ( int arr [ 100 ] [ 100 ] , int lines ) { int i = 0 , j = 0 ; int profit [ 100 ] [ 100 ] = { { 0 , } , } ; int rmax = 0 ; for ( i = 0 ; i < lines ; i ++ ) { profit [ 0 ] [ i ] = arr [ 0 ] [ i ] ; profit [ i ] [ 0 ] = i > 0 ? ( profit [ i - 1 ] [ 0 ] + arr [ i ] [ 0 ] ) : arr [ i ] [ 0 ] ; } for ( i = 1 ; i < lines ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { profit [ i ] [ j ] = max ( profit [ i - 1 ] [ j - 1 ] , profit [ i - 1 ] [ j ] ) + arr [ i ] [ j ] ; rmax = max ( rmax , profit [ i ] [ j ] ) ; } } return rmax ; } int main ( void ) { int n , i = 0 , lines = 0 , j = 0 , k = 0 ; scanf ( "%d\n" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d\n" , & lines ) ; int arr [ 100 ] [ 100 ] = { { 0 , } , } ; for ( j = 0 ; j < lines ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%d" , & arr [ j ] [ k ] ) ; } } printf ( "%d" , maxProfit ( arr , lines ) ) ; if ( i != n - 1 ) printf ( "\n" ) ; } return 0 ; }