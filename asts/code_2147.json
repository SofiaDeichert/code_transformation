{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 604,
  "text": "int main ( void ) { int i , j , k , A , B , T , gcd , lcm = 0 , min , max ; scanf ( \"%d\" , & T ) ; if ( T >= 1 && T <= 1000 ) { for ( i = 1 ; i <= T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 ) { if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; } } } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 604,
      "text": "int main ( void ) { int i , j , k , A , B , T , gcd , lcm = 0 , min , max ; scanf ( \"%d\" , & T ) ; if ( T >= 1 && T <= 1000 ) { for ( i = 1 ; i <= T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 ) { if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; } } } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 17,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 15,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 604,
          "text": "{ int i , j , k , A , B , T , gcd , lcm = 0 , min , max ; scanf ( \"%d\" , & T ) ; if ( T >= 1 && T <= 1000 ) { for ( i = 1 ; i <= T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 ) { if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; } } } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 75,
              "text": "int i , j , k , A , B , T , gcd , lcm = 0 , min , max ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 20,
                  "end_byte": 23,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 48,
                  "end_byte": 51,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 54,
                  "end_byte": 61,
                  "text": "lcm = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 57,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 64,
                  "end_byte": 67,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 70,
                  "end_byte": 73,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 76,
              "end_byte": 98,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 76,
                  "end_byte": 96,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 81,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 82,
                      "end_byte": 96,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 82,
                          "end_byte": 83,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 84,
                          "end_byte": 88,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 85,
                              "end_byte": 87,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 87,
                              "end_byte": 88,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 91,
                          "end_byte": 94,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 93,
                              "end_byte": 94,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 99,
              "end_byte": 591,
              "text": "if ( T >= 1 && T <= 1000 ) { for ( i = 1 ; i <= T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 ) { if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; } } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 99,
                  "end_byte": 101,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 102,
                  "end_byte": 125,
                  "text": "( T >= 1 && T <= 1000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 104,
                      "end_byte": 123,
                      "text": "T >= 1 && T <= 1000",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 104,
                          "end_byte": 110,
                          "text": "T >= 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "T",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 106,
                              "end_byte": 108,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 111,
                          "end_byte": 113,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 114,
                          "end_byte": 123,
                          "text": "T <= 1000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 114,
                              "end_byte": 115,
                              "text": "T",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 116,
                              "end_byte": 118,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 119,
                              "end_byte": 123,
                              "text": "1000",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 126,
                  "end_byte": 591,
                  "text": "{ for ( i = 1 ; i <= T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 ) { if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 128,
                      "end_byte": 589,
                      "text": "for ( i = 1 ; i <= T ; i ++ ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 ) { if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 128,
                          "end_byte": 131,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 134,
                          "end_byte": 139,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 134,
                              "end_byte": 135,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 136,
                              "end_byte": 137,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 138,
                              "end_byte": 139,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 140,
                          "end_byte": 141,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 142,
                          "end_byte": 148,
                          "text": "i <= T",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 144,
                              "end_byte": 146,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 149,
                          "end_byte": 150,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 151,
                          "end_byte": 155,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 152,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 153,
                              "end_byte": 155,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 156,
                          "end_byte": 157,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 158,
                          "end_byte": 589,
                          "text": "{ scanf ( \"%d%d\" , & A , & B ) ; if ( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 ) { if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 158,
                              "end_byte": 159,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 160,
                              "end_byte": 190,
                              "text": "scanf ( \"%d%d\" , & A , & B ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 160,
                                  "end_byte": 188,
                                  "text": "scanf ( \"%d%d\" , & A , & B )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 160,
                                      "end_byte": 165,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 166,
                                      "end_byte": 188,
                                      "text": "( \"%d%d\" , & A , & B )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 166,
                                          "end_byte": 167,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 168,
                                          "end_byte": 174,
                                          "text": "\"%d%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 168,
                                              "end_byte": 169,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 169,
                                              "end_byte": 173,
                                              "text": "%d%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 173,
                                              "end_byte": 174,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 175,
                                          "end_byte": 176,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 177,
                                          "end_byte": 180,
                                          "text": "& A",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 177,
                                              "end_byte": 178,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 179,
                                              "end_byte": 180,
                                              "text": "A",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 181,
                                          "end_byte": 182,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 183,
                                          "end_byte": 186,
                                          "text": "& B",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 183,
                                              "end_byte": 184,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 185,
                                              "end_byte": 186,
                                              "text": "B",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 187,
                                          "end_byte": 188,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 189,
                                  "end_byte": 190,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 191,
                              "end_byte": 587,
                              "text": "if ( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 ) { if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 191,
                                  "end_byte": 193,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 194,
                                  "end_byte": 246,
                                  "text": "( A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 196,
                                      "end_byte": 244,
                                      "text": "A >= 1 && A <= 1000000 && B >= 1 && B <= 1000000",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 196,
                                          "end_byte": 228,
                                          "text": "A >= 1 && A <= 1000000 && B >= 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 196,
                                              "end_byte": 218,
                                              "text": "A >= 1 && A <= 1000000",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 196,
                                                  "end_byte": 202,
                                                  "text": "A >= 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 196,
                                                      "end_byte": 197,
                                                      "text": "A",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": ">=",
                                                      "start_byte": 198,
                                                      "end_byte": 200,
                                                      "text": ">=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 201,
                                                      "end_byte": 202,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 203,
                                                  "end_byte": 205,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 206,
                                                  "end_byte": 218,
                                                  "text": "A <= 1000000",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 206,
                                                      "end_byte": 207,
                                                      "text": "A",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "<=",
                                                      "start_byte": 208,
                                                      "end_byte": 210,
                                                      "text": "<=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 211,
                                                      "end_byte": 218,
                                                      "text": "1000000",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "&&",
                                              "start_byte": 219,
                                              "end_byte": 221,
                                              "text": "&&",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 222,
                                              "end_byte": 228,
                                              "text": "B >= 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 222,
                                                  "end_byte": 223,
                                                  "text": "B",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">=",
                                                  "start_byte": 224,
                                                  "end_byte": 226,
                                                  "text": ">=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 227,
                                                  "end_byte": 228,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 229,
                                          "end_byte": 231,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 232,
                                          "end_byte": 244,
                                          "text": "B <= 1000000",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 232,
                                              "end_byte": 233,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": "<=",
                                              "start_byte": 234,
                                              "end_byte": 236,
                                              "text": "<=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 237,
                                              "end_byte": 244,
                                              "text": "1000000",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 245,
                                      "end_byte": 246,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 247,
                                  "end_byte": 587,
                                  "text": "{ if ( A < B ) min = A ; else min = B ; for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } } if ( A > B ) max = A ; else max = B ; for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } } printf ( \"%d     %d\\n\" , gcd , lcm ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 247,
                                      "end_byte": 248,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 249,
                                      "end_byte": 286,
                                      "text": "if ( A < B ) min = A ; else min = B ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 249,
                                          "end_byte": 251,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 252,
                                          "end_byte": 261,
                                          "text": "( A < B )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 252,
                                              "end_byte": 253,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 254,
                                              "end_byte": 259,
                                              "text": "A < B",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 254,
                                                  "end_byte": 255,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<",
                                                  "start_byte": 256,
                                                  "end_byte": 257,
                                                  "text": "<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 258,
                                                  "end_byte": 259,
                                                  "text": "B",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 260,
                                              "end_byte": 261,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 262,
                                          "end_byte": 271,
                                          "text": "min = A ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 262,
                                              "end_byte": 269,
                                              "text": "min = A",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 262,
                                                  "end_byte": 265,
                                                  "text": "min",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 266,
                                                  "end_byte": 267,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 268,
                                                  "end_byte": 269,
                                                  "text": "A",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 270,
                                              "end_byte": 271,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 272,
                                          "end_byte": 286,
                                          "text": "else min = B ;",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 272,
                                              "end_byte": 276,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 277,
                                              "end_byte": 286,
                                              "text": "min = B ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 277,
                                                  "end_byte": 284,
                                                  "text": "min = B",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 277,
                                                      "end_byte": 280,
                                                      "text": "min",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 281,
                                                      "end_byte": 282,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 283,
                                                      "end_byte": 284,
                                                      "text": "B",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 285,
                                                  "end_byte": 286,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "for_statement",
                                      "start_byte": 287,
                                      "end_byte": 410,
                                      "text": "for ( j = 1 , gcd = 0 ; j <= min ; j ++ ) { if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } }",
                                      "children": [
                                        {
                                          "type": "for",
                                          "start_byte": 287,
                                          "end_byte": 290,
                                          "text": "for",
                                          "children": []
                                        },
                                        {
                                          "type": "(",
                                          "start_byte": 291,
                                          "end_byte": 292,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "comma_expression",
                                          "start_byte": 293,
                                          "end_byte": 308,
                                          "text": "j = 1 , gcd = 0",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 293,
                                              "end_byte": 298,
                                              "text": "j = 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 293,
                                                  "end_byte": 294,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 295,
                                                  "end_byte": 296,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 297,
                                                  "end_byte": 298,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 299,
                                              "end_byte": 300,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 301,
                                              "end_byte": 308,
                                              "text": "gcd = 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 301,
                                                  "end_byte": 304,
                                                  "text": "gcd",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 305,
                                                  "end_byte": 306,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 307,
                                                  "end_byte": 308,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 309,
                                          "end_byte": 310,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 311,
                                          "end_byte": 319,
                                          "text": "j <= min",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 311,
                                              "end_byte": 312,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "<=",
                                              "start_byte": 313,
                                              "end_byte": 315,
                                              "text": "<=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 316,
                                              "end_byte": 319,
                                              "text": "min",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 320,
                                          "end_byte": 321,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "update_expression",
                                          "start_byte": 322,
                                          "end_byte": 326,
                                          "text": "j ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 322,
                                              "end_byte": 323,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 324,
                                              "end_byte": 326,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 327,
                                          "end_byte": 328,
                                          "text": ")",
                                          "children": []
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 329,
                                          "end_byte": 410,
                                          "text": "{ if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; } }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 329,
                                              "end_byte": 330,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 331,
                                              "end_byte": 408,
                                              "text": "if ( A % j == 0 && B % j == 0 ) { if ( j > gcd ) gcd = j ; else gcd = gcd ; }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 331,
                                                  "end_byte": 333,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 334,
                                                  "end_byte": 362,
                                                  "text": "( A % j == 0 && B % j == 0 )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 334,
                                                      "end_byte": 335,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 336,
                                                      "end_byte": 360,
                                                      "text": "A % j == 0 && B % j == 0",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 336,
                                                          "end_byte": 346,
                                                          "text": "A % j == 0",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 336,
                                                              "end_byte": 341,
                                                              "text": "A % j",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 336,
                                                                  "end_byte": 337,
                                                                  "text": "A",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "%",
                                                                  "start_byte": 338,
                                                                  "end_byte": 339,
                                                                  "text": "%",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 340,
                                                                  "end_byte": 341,
                                                                  "text": "j",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "==",
                                                              "start_byte": 342,
                                                              "end_byte": 344,
                                                              "text": "==",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 345,
                                                              "end_byte": 346,
                                                              "text": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "&&",
                                                          "start_byte": 347,
                                                          "end_byte": 349,
                                                          "text": "&&",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 350,
                                                          "end_byte": 360,
                                                          "text": "B % j == 0",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 350,
                                                              "end_byte": 355,
                                                              "text": "B % j",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 350,
                                                                  "end_byte": 351,
                                                                  "text": "B",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "%",
                                                                  "start_byte": 352,
                                                                  "end_byte": 353,
                                                                  "text": "%",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 354,
                                                                  "end_byte": 355,
                                                                  "text": "j",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "==",
                                                              "start_byte": 356,
                                                              "end_byte": 358,
                                                              "text": "==",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 359,
                                                              "end_byte": 360,
                                                              "text": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 361,
                                                      "end_byte": 362,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 363,
                                                  "end_byte": 408,
                                                  "text": "{ if ( j > gcd ) gcd = j ; else gcd = gcd ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 363,
                                                      "end_byte": 364,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "if_statement",
                                                      "start_byte": 365,
                                                      "end_byte": 406,
                                                      "text": "if ( j > gcd ) gcd = j ; else gcd = gcd ;",
                                                      "children": [
                                                        {
                                                          "type": "if",
                                                          "start_byte": 365,
                                                          "end_byte": 367,
                                                          "text": "if",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "condition_clause",
                                                          "start_byte": 368,
                                                          "end_byte": 379,
                                                          "text": "( j > gcd )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 368,
                                                              "end_byte": 369,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 370,
                                                              "end_byte": 377,
                                                              "text": "j > gcd",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 370,
                                                                  "end_byte": 371,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": ">",
                                                                  "start_byte": 372,
                                                                  "end_byte": 373,
                                                                  "text": ">",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 374,
                                                                  "end_byte": 377,
                                                                  "text": "gcd",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 378,
                                                              "end_byte": 379,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "expression_statement",
                                                          "start_byte": 380,
                                                          "end_byte": 389,
                                                          "text": "gcd = j ;",
                                                          "children": [
                                                            {
                                                              "type": "assignment_expression",
                                                              "start_byte": 380,
                                                              "end_byte": 387,
                                                              "text": "gcd = j",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 380,
                                                                  "end_byte": 383,
                                                                  "text": "gcd",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "=",
                                                                  "start_byte": 384,
                                                                  "end_byte": 385,
                                                                  "text": "=",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 386,
                                                                  "end_byte": 387,
                                                                  "text": "j",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ";",
                                                              "start_byte": 388,
                                                              "end_byte": 389,
                                                              "text": ";",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "else_clause",
                                                          "start_byte": 390,
                                                          "end_byte": 406,
                                                          "text": "else gcd = gcd ;",
                                                          "children": [
                                                            {
                                                              "type": "else",
                                                              "start_byte": 390,
                                                              "end_byte": 394,
                                                              "text": "else",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "expression_statement",
                                                              "start_byte": 395,
                                                              "end_byte": 406,
                                                              "text": "gcd = gcd ;",
                                                              "children": [
                                                                {
                                                                  "type": "assignment_expression",
                                                                  "start_byte": 395,
                                                                  "end_byte": 404,
                                                                  "text": "gcd = gcd",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 395,
                                                                      "end_byte": 398,
                                                                      "text": "gcd",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "=",
                                                                      "start_byte": 399,
                                                                      "end_byte": 400,
                                                                      "text": "=",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 401,
                                                                      "end_byte": 404,
                                                                      "text": "gcd",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ";",
                                                                  "start_byte": 405,
                                                                  "end_byte": 406,
                                                                  "text": ";",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 407,
                                                      "end_byte": 408,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 409,
                                              "end_byte": 410,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 411,
                                      "end_byte": 448,
                                      "text": "if ( A > B ) max = A ; else max = B ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 411,
                                          "end_byte": 413,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 414,
                                          "end_byte": 423,
                                          "text": "( A > B )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 414,
                                              "end_byte": 415,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 416,
                                              "end_byte": 421,
                                              "text": "A > B",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 416,
                                                  "end_byte": 417,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 418,
                                                  "end_byte": 419,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 420,
                                                  "end_byte": 421,
                                                  "text": "B",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 422,
                                              "end_byte": 423,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 424,
                                          "end_byte": 433,
                                          "text": "max = A ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 424,
                                              "end_byte": 431,
                                              "text": "max = A",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 424,
                                                  "end_byte": 427,
                                                  "text": "max",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 428,
                                                  "end_byte": 429,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 430,
                                                  "end_byte": 431,
                                                  "text": "A",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 432,
                                              "end_byte": 433,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 434,
                                          "end_byte": 448,
                                          "text": "else max = B ;",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 434,
                                              "end_byte": 438,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 439,
                                              "end_byte": 448,
                                              "text": "max = B ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 439,
                                                  "end_byte": 446,
                                                  "text": "max = B",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 439,
                                                      "end_byte": 442,
                                                      "text": "max",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 443,
                                                      "end_byte": 444,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 445,
                                                      "end_byte": 446,
                                                      "text": "B",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 447,
                                                  "end_byte": 448,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "for_statement",
                                      "start_byte": 449,
                                      "end_byte": 546,
                                      "text": "for ( k = max ; k <= ( A * B ) ; k ++ ) { if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } }",
                                      "children": [
                                        {
                                          "type": "for",
                                          "start_byte": 449,
                                          "end_byte": 452,
                                          "text": "for",
                                          "children": []
                                        },
                                        {
                                          "type": "(",
                                          "start_byte": 453,
                                          "end_byte": 454,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 455,
                                          "end_byte": 462,
                                          "text": "k = max",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 455,
                                              "end_byte": 456,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 457,
                                              "end_byte": 458,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 459,
                                              "end_byte": 462,
                                              "text": "max",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 463,
                                          "end_byte": 464,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 465,
                                          "end_byte": 479,
                                          "text": "k <= ( A * B )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 465,
                                              "end_byte": 466,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "<=",
                                              "start_byte": 467,
                                              "end_byte": 469,
                                              "text": "<=",
                                              "children": []
                                            },
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 470,
                                              "end_byte": 479,
                                              "text": "( A * B )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 470,
                                                  "end_byte": 471,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 472,
                                                  "end_byte": 477,
                                                  "text": "A * B",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 472,
                                                      "end_byte": 473,
                                                      "text": "A",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 474,
                                                      "end_byte": 475,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 476,
                                                      "end_byte": 477,
                                                      "text": "B",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 478,
                                                  "end_byte": 479,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 480,
                                          "end_byte": 481,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "update_expression",
                                          "start_byte": 482,
                                          "end_byte": 486,
                                          "text": "k ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 482,
                                              "end_byte": 483,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 484,
                                              "end_byte": 486,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 487,
                                          "end_byte": 488,
                                          "text": ")",
                                          "children": []
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 489,
                                          "end_byte": 546,
                                          "text": "{ if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; } }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 489,
                                              "end_byte": 490,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 491,
                                              "end_byte": 544,
                                              "text": "if ( k % A == 0 && k % B == 0 ) { lcm = k ; break ; }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 491,
                                                  "end_byte": 493,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 494,
                                                  "end_byte": 522,
                                                  "text": "( k % A == 0 && k % B == 0 )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 494,
                                                      "end_byte": 495,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 496,
                                                      "end_byte": 520,
                                                      "text": "k % A == 0 && k % B == 0",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 496,
                                                          "end_byte": 506,
                                                          "text": "k % A == 0",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 496,
                                                              "end_byte": 501,
                                                              "text": "k % A",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 496,
                                                                  "end_byte": 497,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "%",
                                                                  "start_byte": 498,
                                                                  "end_byte": 499,
                                                                  "text": "%",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 500,
                                                                  "end_byte": 501,
                                                                  "text": "A",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "==",
                                                              "start_byte": 502,
                                                              "end_byte": 504,
                                                              "text": "==",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 505,
                                                              "end_byte": 506,
                                                              "text": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "&&",
                                                          "start_byte": 507,
                                                          "end_byte": 509,
                                                          "text": "&&",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 510,
                                                          "end_byte": 520,
                                                          "text": "k % B == 0",
                                                          "children": [
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 510,
                                                              "end_byte": 515,
                                                              "text": "k % B",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 510,
                                                                  "end_byte": 511,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "%",
                                                                  "start_byte": 512,
                                                                  "end_byte": 513,
                                                                  "text": "%",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 514,
                                                                  "end_byte": 515,
                                                                  "text": "B",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "==",
                                                              "start_byte": 516,
                                                              "end_byte": 518,
                                                              "text": "==",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 519,
                                                              "end_byte": 520,
                                                              "text": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 521,
                                                      "end_byte": 522,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 523,
                                                  "end_byte": 544,
                                                  "text": "{ lcm = k ; break ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 523,
                                                      "end_byte": 524,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 525,
                                                      "end_byte": 534,
                                                      "text": "lcm = k ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 525,
                                                          "end_byte": 532,
                                                          "text": "lcm = k",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 525,
                                                              "end_byte": 528,
                                                              "text": "lcm",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 529,
                                                              "end_byte": 530,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 531,
                                                              "end_byte": 532,
                                                              "text": "k",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 533,
                                                          "end_byte": 534,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "break_statement",
                                                      "start_byte": 535,
                                                      "end_byte": 542,
                                                      "text": "break ;",
                                                      "children": [
                                                        {
                                                          "type": "break",
                                                          "start_byte": 535,
                                                          "end_byte": 540,
                                                          "text": "break",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 541,
                                                          "end_byte": 542,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 543,
                                                      "end_byte": 544,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 545,
                                              "end_byte": 546,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 547,
                                      "end_byte": 585,
                                      "text": "printf ( \"%d     %d\\n\" , gcd , lcm ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 547,
                                          "end_byte": 583,
                                          "text": "printf ( \"%d     %d\\n\" , gcd , lcm )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 547,
                                              "end_byte": 553,
                                              "text": "printf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 554,
                                              "end_byte": 583,
                                              "text": "( \"%d     %d\\n\" , gcd , lcm )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 554,
                                                  "end_byte": 555,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 556,
                                                  "end_byte": 569,
                                                  "text": "\"%d     %d\\n\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 556,
                                                      "end_byte": 557,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 557,
                                                      "end_byte": 566,
                                                      "text": "%d     %d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "escape_sequence",
                                                      "start_byte": 566,
                                                      "end_byte": 568,
                                                      "text": "\\n",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 568,
                                                      "end_byte": 569,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 570,
                                                  "end_byte": 571,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 572,
                                                  "end_byte": 575,
                                                  "text": "gcd",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 576,
                                                  "end_byte": 577,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 578,
                                                  "end_byte": 581,
                                                  "text": "lcm",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 582,
                                                  "end_byte": 583,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 584,
                                          "end_byte": 585,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 586,
                                      "end_byte": 587,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 588,
                              "end_byte": 589,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 590,
                      "end_byte": 591,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 592,
              "end_byte": 602,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 592,
                  "end_byte": 598,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 599,
                  "end_byte": 600,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 601,
                  "end_byte": 602,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 603,
              "end_byte": 604,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}