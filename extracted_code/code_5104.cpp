int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int main ( ) { int t , i , j ; scanf ( "%d" , & t ) ; while ( t -- > 0 ) { int l ; scanf ( "%d" , & l ) ; int tri [ l ] [ l ] ; for ( i = 0 ; i < l ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & tri [ i ] [ j ] ) ; } } int dp [ l ] [ l ] ; dp [ 0 ] [ 0 ] = tri [ 0 ] [ 0 ] ; for ( i = 1 ; i < l ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) { dp [ i ] [ j ] = tri [ i ] [ j ] + dp [ i - 1 ] [ j ] ; } else if ( j == i ) { dp [ i ] [ j ] = tri [ i ] [ j ] + dp [ i - 1 ] [ j - 1 ] ; } else { dp [ i ] [ j ] = max ( tri [ i ] [ j ] + dp [ i - 1 ] [ j ] , tri [ i ] [ j ] + dp [ i - 1 ] [ j - 1 ] ) ; } } } int m = dp [ l - 1 ] [ 0 ] ; for ( i = 0 ; i < l ; i ++ ) { if ( dp [ l - 1 ] [ i ] > m ) { m = dp [ l - 1 ] [ i ] ; } } printf ( "%d\n" , m ) ; } return 0 ; }