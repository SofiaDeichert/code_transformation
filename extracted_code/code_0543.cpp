int store [ MAXSIZE ] [ MAXSIZE ] ; int finds ( int , int , int ) ; int main ( ) { int n , rows , count , sum , i , j ; int result [ MAXSIZE ] , store [ MAXSIZE ] [ MAXSIZE ] ; for ( i = 0 ; i < MAXSIZE ; i ++ ) for ( j = 0 ; j < MAXSIZE ; store [ i ] [ j ++ ] = 0 ) ; scanf ( "%d" , & n ) ; for ( count = 1 ; count <= n ; count ++ ) { scanf ( "%d" , & rows ) ; for ( i = 0 ; i < rows ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & store [ i ] [ j ] ) ; } } sum = finds ( 0 , 0 , rows ) ; result [ count - 1 ] = sum ; } for ( i = 0 ; i < n ; i ++ ) printf ( "%d\n" , result [ i ] ) ; return 0 ; } int finds ( int i , int j , int row ) { int sum1 = 0 , sum2 = 0 ; if ( i == row - 1 ) return store [ i ] [ j ] ; else { sum1 = finds ( i + 1 , j , row ) ; if ( j + 1 < row ) sum2 = finds ( i + 1 , j + 1 , row ) ; return store [ i ] [ j ] + ( sum2 > sum1 ? sum2 : sum1 ) ; } }