{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 431,
  "text": "int main ( ) { int T , i ; scanf ( \"%d\" , & T ) ; unsigned long int out [ T ] ; for ( i = 0 ; i < T ; i ++ ) { int N , j , smlst ; scanf ( \"%d\" , & N ) ; int ar [ N ] ; for ( j = 0 ; j < N ; j ++ ) scanf ( \"%d\" , & ar [ j ] ) ; smlst = ar [ 0 ] ; for ( j = 0 ; j < N ; j ++ ) { if ( ar [ j ] < smlst ) smlst = ar [ j ] ; } out [ i ] = smlst * ( N - 1 ) ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%lu\\n\" , out [ i ] ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 431,
      "text": "int main ( ) { int T , i ; scanf ( \"%d\" , & T ) ; unsigned long int out [ T ] ; for ( i = 0 ; i < T ; i ++ ) { int N , j , smlst ; scanf ( \"%d\" , & N ) ; int ar [ N ] ; for ( j = 0 ; j < N ; j ++ ) scanf ( \"%d\" , & ar [ j ] ) ; smlst = ar [ 0 ] ; for ( j = 0 ; j < N ; j ++ ) { if ( ar [ j ] < smlst ) smlst = ar [ j ] ; } out [ i ] = smlst * ( N - 1 ) ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%lu\\n\" , out [ i ] ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 431,
          "text": "{ int T , i ; scanf ( \"%d\" , & T ) ; unsigned long int out [ T ] ; for ( i = 0 ; i < T ; i ++ ) { int N , j , smlst ; scanf ( \"%d\" , & N ) ; int ar [ N ] ; for ( j = 0 ; j < N ; j ++ ) scanf ( \"%d\" , & ar [ j ] ) ; smlst = ar [ 0 ] ; for ( j = 0 ; j < N ; j ++ ) { if ( ar [ j ] < smlst ) smlst = ar [ j ] ; } out [ i ] = smlst * ( N - 1 ) ; } for ( i = 0 ; i < T ; i ++ ) printf ( \"%lu\\n\" , out [ i ] ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 26,
              "text": "int T , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 27,
              "end_byte": 49,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 27,
                  "end_byte": 47,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 27,
                      "end_byte": 32,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 33,
                      "end_byte": 47,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 35,
                          "end_byte": 39,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 35,
                              "end_byte": 36,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 36,
                              "end_byte": 38,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 38,
                              "end_byte": 39,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 40,
                          "end_byte": 41,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 42,
                          "end_byte": 45,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 42,
                              "end_byte": 43,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 44,
                              "end_byte": 45,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 46,
                          "end_byte": 47,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 50,
              "end_byte": 79,
              "text": "unsigned long int out [ T ] ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 50,
                  "end_byte": 67,
                  "text": "unsigned long int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 50,
                      "end_byte": 58,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 59,
                      "end_byte": 63,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 64,
                      "end_byte": 67,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 68,
                  "end_byte": 77,
                  "text": "out [ T ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 68,
                      "end_byte": 71,
                      "text": "out",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 72,
                      "end_byte": 73,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 74,
                      "end_byte": 75,
                      "text": "T",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 76,
                      "end_byte": 77,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 80,
              "end_byte": 356,
              "text": "for ( i = 0 ; i < T ; i ++ ) { int N , j , smlst ; scanf ( \"%d\" , & N ) ; int ar [ N ] ; for ( j = 0 ; j < N ; j ++ ) scanf ( \"%d\" , & ar [ j ] ) ; smlst = ar [ 0 ] ; for ( j = 0 ; j < N ; j ++ ) { if ( ar [ j ] < smlst ) smlst = ar [ j ] ; } out [ i ] = smlst * ( N - 1 ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 80,
                  "end_byte": 83,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 84,
                  "end_byte": 85,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 86,
                  "end_byte": 91,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 86,
                      "end_byte": 87,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 88,
                      "end_byte": 89,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 94,
                  "end_byte": 99,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 96,
                      "end_byte": 97,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 102,
                  "end_byte": 106,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 104,
                      "end_byte": 106,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 107,
                  "end_byte": 108,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 109,
                  "end_byte": 356,
                  "text": "{ int N , j , smlst ; scanf ( \"%d\" , & N ) ; int ar [ N ] ; for ( j = 0 ; j < N ; j ++ ) scanf ( \"%d\" , & ar [ j ] ) ; smlst = ar [ 0 ] ; for ( j = 0 ; j < N ; j ++ ) { if ( ar [ j ] < smlst ) smlst = ar [ j ] ; } out [ i ] = smlst * ( N - 1 ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 111,
                      "end_byte": 130,
                      "text": "int N , j , smlst ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 111,
                          "end_byte": 114,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 115,
                          "end_byte": 116,
                          "text": "N",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 119,
                          "end_byte": 120,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 123,
                          "end_byte": 128,
                          "text": "smlst",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 131,
                      "end_byte": 153,
                      "text": "scanf ( \"%d\" , & N ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 131,
                          "end_byte": 151,
                          "text": "scanf ( \"%d\" , & N )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 131,
                              "end_byte": 136,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 137,
                              "end_byte": 151,
                              "text": "( \"%d\" , & N )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 137,
                                  "end_byte": 138,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 139,
                                  "end_byte": 143,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 139,
                                      "end_byte": 140,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 140,
                                      "end_byte": 142,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 144,
                                  "end_byte": 145,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 146,
                                  "end_byte": 149,
                                  "text": "& N",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "N",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 154,
                      "end_byte": 168,
                      "text": "int ar [ N ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 154,
                          "end_byte": 157,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 158,
                          "end_byte": 166,
                          "text": "ar [ N ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 158,
                              "end_byte": 160,
                              "text": "ar",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 161,
                              "end_byte": 162,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": "N",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 167,
                          "end_byte": 168,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 169,
                      "end_byte": 227,
                      "text": "for ( j = 0 ; j < N ; j ++ ) scanf ( \"%d\" , & ar [ j ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 169,
                          "end_byte": 172,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 173,
                          "end_byte": 174,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 175,
                          "end_byte": 180,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 177,
                              "end_byte": 178,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 181,
                          "end_byte": 182,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 183,
                          "end_byte": 188,
                          "text": "j < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 187,
                              "end_byte": 188,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 189,
                          "end_byte": 190,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 191,
                          "end_byte": 195,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 193,
                              "end_byte": 195,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 196,
                          "end_byte": 197,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 198,
                          "end_byte": 227,
                          "text": "scanf ( \"%d\" , & ar [ j ] ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 198,
                              "end_byte": 225,
                              "text": "scanf ( \"%d\" , & ar [ j ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 198,
                                  "end_byte": 203,
                                  "text": "scanf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 204,
                                  "end_byte": 225,
                                  "text": "( \"%d\" , & ar [ j ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 206,
                                      "end_byte": 210,
                                      "text": "\"%d\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 206,
                                          "end_byte": 207,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 207,
                                          "end_byte": 209,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 209,
                                          "end_byte": 210,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "pointer_expression",
                                      "start_byte": 213,
                                      "end_byte": 223,
                                      "text": "& ar [ j ]",
                                      "children": [
                                        {
                                          "type": "&",
                                          "start_byte": 213,
                                          "end_byte": 214,
                                          "text": "&",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 215,
                                          "end_byte": 223,
                                          "text": "ar [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 215,
                                              "end_byte": 217,
                                              "text": "ar",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 218,
                                              "end_byte": 223,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 218,
                                                  "end_byte": 219,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 220,
                                                  "end_byte": 221,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 222,
                                                  "end_byte": 223,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 224,
                                      "end_byte": 225,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 226,
                              "end_byte": 227,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 228,
                      "end_byte": 246,
                      "text": "smlst = ar [ 0 ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 228,
                          "end_byte": 244,
                          "text": "smlst = ar [ 0 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 228,
                              "end_byte": 233,
                              "text": "smlst",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 234,
                              "end_byte": 235,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 236,
                              "end_byte": 244,
                              "text": "ar [ 0 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 236,
                                  "end_byte": 238,
                                  "text": "ar",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 239,
                                  "end_byte": 244,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 241,
                                      "end_byte": 242,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 243,
                                      "end_byte": 244,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 245,
                          "end_byte": 246,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 247,
                      "end_byte": 322,
                      "text": "for ( j = 0 ; j < N ; j ++ ) { if ( ar [ j ] < smlst ) smlst = ar [ j ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 247,
                          "end_byte": 250,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 251,
                          "end_byte": 252,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 253,
                          "end_byte": 258,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 253,
                              "end_byte": 254,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 255,
                              "end_byte": 256,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 259,
                          "end_byte": 260,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 261,
                          "end_byte": 266,
                          "text": "j < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 263,
                              "end_byte": 264,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 265,
                              "end_byte": 266,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 267,
                          "end_byte": 268,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 269,
                          "end_byte": 273,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 269,
                              "end_byte": 270,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 271,
                              "end_byte": 273,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 274,
                          "end_byte": 275,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 276,
                          "end_byte": 322,
                          "text": "{ if ( ar [ j ] < smlst ) smlst = ar [ j ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 276,
                              "end_byte": 277,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 278,
                              "end_byte": 320,
                              "text": "if ( ar [ j ] < smlst ) smlst = ar [ j ] ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 278,
                                  "end_byte": 280,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 281,
                                  "end_byte": 301,
                                  "text": "( ar [ j ] < smlst )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 281,
                                      "end_byte": 282,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 283,
                                      "end_byte": 299,
                                      "text": "ar [ j ] < smlst",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 283,
                                          "end_byte": 291,
                                          "text": "ar [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 283,
                                              "end_byte": 285,
                                              "text": "ar",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 286,
                                              "end_byte": 291,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 286,
                                                  "end_byte": 287,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 288,
                                                  "end_byte": 289,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 290,
                                                  "end_byte": 291,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 292,
                                          "end_byte": 293,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 294,
                                          "end_byte": 299,
                                          "text": "smlst",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 302,
                                  "end_byte": 320,
                                  "text": "smlst = ar [ j ] ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 302,
                                      "end_byte": 318,
                                      "text": "smlst = ar [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 302,
                                          "end_byte": 307,
                                          "text": "smlst",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 308,
                                          "end_byte": 309,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 310,
                                          "end_byte": 318,
                                          "text": "ar [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 310,
                                              "end_byte": 312,
                                              "text": "ar",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 313,
                                              "end_byte": 318,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 313,
                                                  "end_byte": 314,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 315,
                                                  "end_byte": 316,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 317,
                                                  "end_byte": 318,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 319,
                                      "end_byte": 320,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 321,
                              "end_byte": 322,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 323,
                      "end_byte": 354,
                      "text": "out [ i ] = smlst * ( N - 1 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 323,
                          "end_byte": 352,
                          "text": "out [ i ] = smlst * ( N - 1 )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 323,
                              "end_byte": 332,
                              "text": "out [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 323,
                                  "end_byte": 326,
                                  "text": "out",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 327,
                                  "end_byte": 332,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 327,
                                      "end_byte": 328,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 329,
                                      "end_byte": 330,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 331,
                                      "end_byte": 332,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 333,
                              "end_byte": 334,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 335,
                              "end_byte": 352,
                              "text": "smlst * ( N - 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 335,
                                  "end_byte": 340,
                                  "text": "smlst",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 341,
                                  "end_byte": 342,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 343,
                                  "end_byte": 352,
                                  "text": "( N - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 343,
                                      "end_byte": 344,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 345,
                                      "end_byte": 350,
                                      "text": "N - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 345,
                                          "end_byte": 346,
                                          "text": "N",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 347,
                                          "end_byte": 348,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 349,
                                          "end_byte": 350,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 351,
                                      "end_byte": 352,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 357,
              "end_byte": 418,
              "text": "for ( i = 0 ; i < T ; i ++ ) printf ( \"%lu\\n\" , out [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 357,
                  "end_byte": 360,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 361,
                  "end_byte": 362,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 363,
                  "end_byte": 368,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 363,
                      "end_byte": 364,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 365,
                      "end_byte": 366,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 367,
                      "end_byte": 368,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 369,
                  "end_byte": 370,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 371,
                  "end_byte": 376,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 371,
                      "end_byte": 372,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 373,
                      "end_byte": 374,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 375,
                      "end_byte": 376,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 379,
                  "end_byte": 383,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 379,
                      "end_byte": 380,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 381,
                      "end_byte": 383,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 384,
                  "end_byte": 385,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 386,
                  "end_byte": 418,
                  "text": "printf ( \"%lu\\n\" , out [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 386,
                      "end_byte": 416,
                      "text": "printf ( \"%lu\\n\" , out [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 386,
                          "end_byte": 392,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 393,
                          "end_byte": 416,
                          "text": "( \"%lu\\n\" , out [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 393,
                              "end_byte": 394,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 395,
                              "end_byte": 402,
                              "text": "\"%lu\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 395,
                                  "end_byte": 396,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 396,
                                  "end_byte": 399,
                                  "text": "%lu",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 399,
                                  "end_byte": 401,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 401,
                                  "end_byte": 402,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 403,
                              "end_byte": 404,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 405,
                              "end_byte": 414,
                              "text": "out [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 405,
                                  "end_byte": 408,
                                  "text": "out",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 409,
                                  "end_byte": 414,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 409,
                                      "end_byte": 410,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 413,
                                      "end_byte": 414,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 415,
                              "end_byte": 416,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 417,
                      "end_byte": 418,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 419,
              "end_byte": 429,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 419,
                  "end_byte": 425,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 426,
                  "end_byte": 427,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 428,
                  "end_byte": 429,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 430,
              "end_byte": 431,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}