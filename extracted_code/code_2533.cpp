int max_sum ( int i , int j ) ; int max ( int a , int b ) ; int A [ 101 ] [ 101 ] , n , visi [ 100 ] = { 0 } , visj [ 100 ] = { 0 } ; int path [ 100 ] [ 100 ] ; int main ( ) { int t , i , j , k , sum ; scanf ( "%d" , & t ) ; for ( k = 1 ; k <= t ; k ++ ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & A [ i ] [ j ] ) ; sum = max_sum ( 0 , 0 ) ; printf ( "%d\n" , sum ) ; for ( i = 0 ; i < 100 ; i ++ ) { visi [ i ] = 0 ; visj [ i ] = 0 ; } } return 0 ; } int max_sum ( int i , int j ) { if ( i + 1 == n ) { visi [ i ] = 1 ; visj [ j ] = 1 ; return A [ i ] [ j ] ; } else if ( visi [ i ] == 1 && visi [ j ] == 1 ) return path [ i ] [ j ] ; else { path [ i ] [ j ] = max ( max_sum ( i + 1 , j ) , max_sum ( i + 1 , j + 1 ) ) ; visi [ i ] = 1 ; visj [ j ] = 1 ; return ( A [ i ] [ j ] + path [ i ] [ j ] ) ; } } max ( int a , int b ) { if ( a > b ) return a ; else return b ; }