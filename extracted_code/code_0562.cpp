int h = 0 , * tr ; int main ( ) { int nt , * res ; int * i , j , k , l ; scanf ( "%d" , & nt ) ; res = ( int * ) malloc ( sizeof ( int ) * nt ) ; for ( l = 0 ; l < nt ; l ++ ) { scanf ( "%d" , & h ) ; int n = ( h * ( h + 1 ) ) / 2 ; tr = ( int * ) malloc ( n * sizeof ( int ) ) ; i = tr ; for ( j = 0 ; j < n ; j ++ , i ++ ) { scanf ( "%d" , i ) ; } res [ l ] = sum ( 0 , 0 ) ; free ( tr ) ; } for ( l = 0 ; l < nt ; l ++ ) printf ( "%d\n" , res [ l ] ) ; printf ( "\n" ) ; return 0 ; } int sum ( int i , int j ) { int down , right ; if ( i == h - 1 ) return tr [ ( ( i * ( i + 1 ) ) / 2 ) + j ] ; down = sum ( i + 1 , j ) ; right = sum ( i + 1 , j + 1 ) ; if ( right > down ) return right + tr [ ( ( i * ( i + 1 ) ) / 2 ) + j ] ; else return down + tr [ ( ( i * ( i + 1 ) ) / 2 ) + j ] ; }