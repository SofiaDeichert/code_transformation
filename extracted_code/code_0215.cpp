int f1 ( int a [ ] [ 100 ] , int i , int j ) { int n_i , n_j ; if ( i == - 1 || j == - 1 ) { return ( 0 ) ; } else if ( j == 0 ) { return ( a [ i ] [ j ] + f1 ( a , i - 1 , j ) ) ; } else { n_i = i - 1 ; if ( a [ i - 1 ] [ j - 1 ] > a [ i - 1 ] [ j ] ) { n_j = j - 1 ; } else { n_j = j ; } return ( a [ i ] [ j ] + f1 ( a , n_i , n_j ) ) ; } } void m ( int a [ ] [ 100 ] , int l ) { int i , j ; for ( i = 0 ; i <= l - 1 ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { a [ i ] [ j ] = 0 ; } } } int main ( ) { int a [ 100 ] [ 100 ] ; int i , j , max = - 1 ; int i1 = 0 ; int l ; int t ; scanf ( "%d" , & t ) ; while ( t ) { scanf ( "%d" , & l ) ; for ( i = 0 ; i <= l - 1 ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } for ( i = 0 ; i <= l - 1 ; i ++ ) { if ( a [ l - 1 ] [ i ] > max ) { max = a [ l - 1 ] [ i ] ; i1 = i ; } } max = f1 ( a , l - 1 , i1 ) ; printf ( "%d\n" , max ) ; max = 0 ; m ( a , l ) ; t -- ; } return 0 ; }