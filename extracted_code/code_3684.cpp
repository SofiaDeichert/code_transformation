int cache [ 100 ] [ 100 ] , a [ 100 ] [ 100 ] , n ; int solve ( int i , int j ) { int t1 , t2 , t , max ; if ( i > n ) return ( 0 ) ; if ( cache [ i ] [ j ] != - 1 ) return cache [ i ] [ j ] ; t1 = solve ( i + 1 , j ) ; t2 = solve ( i + 1 , j + 1 ) ; if ( t1 >= t2 ) max = t1 ; else max = t2 ; t = max + a [ i ] [ j ] ; cache [ i ] [ j ] = t ; return t ; } int main ( ) { int tst , i , j ; scanf ( "%d" , & tst ) ; for ( i = 0 ; i < 100 ; i ++ ) { for ( j = 0 ; j < 100 ; j ++ ) cache [ i ] [ j ] = - 1 ; a [ i ] [ j ] = 0 ; } while ( tst -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } printf ( "%d" , solve ( 0 , 0 ) ) ; } return ( 0 ) ; }