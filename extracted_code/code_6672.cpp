int noele ( int a [ ] , int n ) { int i , nod = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( a [ i ] != 0 ) nod ++ ; } return nod ; } int main ( ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int n , i , j ; scanf ( "%d" , & n ) ; int a [ n ] , cost = 0 ; for ( i = 0 ; i < n ; i ++ ) scanf ( "%d" , & a [ i ] ) ; while ( noele ( a , n ) > 1 ) { for ( i = 0 , j = 1 ; i < n && j < n ; i ++ ) { if ( a [ i ] == 0 && a [ j ] == 0 ) { j ++ ; continue ; } else if ( a [ i ] == 0 ) continue ; else if ( a [ j ] == 0 ) { i -- ; j ++ ; continue ; } else { if ( a [ i ] > a [ j ] ) { a [ i ] = 0 ; cost = cost + a [ j ] ; j ++ ; } else { a [ j ] = 0 ; cost = cost + a [ i ] ; j ++ ; } } } } printf ( "%d\n" , cost ) ; } return 0 ; }