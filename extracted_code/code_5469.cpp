int maxSum ( int * * a , int rows ) { int i , j , k , max = 0 ; int * * sumArray ; sumArray = ( int * * ) malloc ( rows * sizeof ( int ) ) ; for ( i = 0 ; i < rows ; i ++ ) sumArray [ i ] = malloc ( ( i + 1 ) * sizeof ( int ) ) ; for ( i = 0 ; i < rows ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) sumArray [ i ] [ j ] = 0 ; sumArray [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < rows ; i ++ ) { for ( k = 0 ; k < i ; k ++ ) for ( j = 0 ; j <= 1 ; j ++ ) { if ( j + k <= i && sumArray [ i ] [ j + k ] < ( a [ i ] [ j + k ] + sumArray [ i - 1 ] [ k ] ) ) sumArray [ i ] [ j + k ] = a [ i ] [ j + k ] + sumArray [ i - 1 ] [ k ] ; } } for ( i = 0 ; i < rows ; i ++ ) max = ( max > sumArray [ rows - 1 ] [ i ] ) ? max : sumArray [ rows - 1 ] [ i ] ; for ( i = 0 ; i < rows ; i ++ ) free ( sumArray [ i ] ) ; free ( sumArray ) ; return max ; } int main ( ) { int n , i , j , k ; int * rows ; int * * * arr ; scanf ( "%d" , & n ) ; arr = ( int * * * ) malloc ( n * sizeof ( int * * * ) ) ; rows = malloc ( n * sizeof ( int ) ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & rows [ i ] ) ; arr [ i ] = ( int * * ) malloc ( rows [ i ] * sizeof ( int * * ) ) ; for ( j = 0 ; j < rows [ i ] ; j ++ ) arr [ i ] [ j ] = malloc ( ( j + 1 ) * sizeof ( int * ) ) ; for ( j = 0 ; j < rows [ i ] ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) scanf ( "%d" , & arr [ i ] [ j ] [ k ] ) ; } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < rows [ i ] ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) printf ( "     %d" , arr [ i ] [ j ] [ k ] ) ; printf ( "\n" ) ; } printf ( "\n" ) ; } for ( i = 0 ; i < n ; i ++ ) printf ( "%d\n" , maxSum ( arr [ i ] , rows [ i ] ) ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < rows [ i ] ; j ++ ) free ( arr [ i ] [ j ] ) ; free ( arr [ i ] ) ; } free ( arr ) ; free ( rows ) ; return 0 ; }