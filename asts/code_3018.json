{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 819,
  "text": "int maxValue = 0 ; int maxPath ( int * input , int row , int pos , int n , int curMax ) { int r = row * ( row - 1 ) / 2 ; if ( row > n ) { if ( curMax > maxValue ) maxValue = curMax ; return 0 ; } int v1 = * ( input + r + pos - 1 ) , v2 = * ( input + r + pos ) ; maxPath ( input , row + 1 , pos + 1 , n , v2 + curMax ) ; maxPath ( input , row + 1 , pos , n , v1 + curMax ) ; } int main ( ) { int tests , n , i , k ; scanf ( \"%d\" , & tests ) ; int out [ tests ] ; for ( k = 0 ; k < tests ; k ++ ) { maxValue = 0 ; scanf ( \"%d\" , & n ) ; int lenght = n * ( n + 1 ) / 2 ; int input [ lenght ] ; for ( i = 0 ; i < lenght ; i ++ ) { scanf ( \"%d\" , input + i ) ; } maxPath ( input , 2 , 1 , n , 0 ) ; * ( out + k ) = * input + maxValue ; } for ( k = 0 ; k < tests ; k ++ ) { printf ( \"%d\\n\" , * ( out + k ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 18,
      "text": "int maxValue = 0 ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 4,
          "end_byte": 16,
          "text": "maxValue = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 12,
              "text": "maxValue",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 13,
              "end_byte": 14,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 15,
              "end_byte": 16,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 17,
          "end_byte": 18,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 19,
      "end_byte": 376,
      "text": "int maxPath ( int * input , int row , int pos , int n , int curMax ) { int r = row * ( row - 1 ) / 2 ; if ( row > n ) { if ( curMax > maxValue ) maxValue = curMax ; return 0 ; } int v1 = * ( input + r + pos - 1 ) , v2 = * ( input + r + pos ) ; maxPath ( input , row + 1 , pos + 1 , n , v2 + curMax ) ; maxPath ( input , row + 1 , pos , n , v1 + curMax ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 19,
          "end_byte": 22,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 23,
          "end_byte": 87,
          "text": "maxPath ( int * input , int row , int pos , int n , int curMax )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 23,
              "end_byte": 30,
              "text": "maxPath",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 31,
              "end_byte": 87,
              "text": "( int * input , int row , int pos , int n , int curMax )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 33,
                  "end_byte": 44,
                  "text": "int * input",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 33,
                      "end_byte": 36,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 37,
                      "end_byte": 44,
                      "text": "* input",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 37,
                          "end_byte": 38,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 39,
                          "end_byte": 44,
                          "text": "input",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 47,
                  "end_byte": 54,
                  "text": "int row",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 47,
                      "end_byte": 50,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 51,
                      "end_byte": 54,
                      "text": "row",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 57,
                  "end_byte": 64,
                  "text": "int pos",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 57,
                      "end_byte": 60,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 61,
                      "end_byte": 64,
                      "text": "pos",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 67,
                  "end_byte": 72,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 67,
                      "end_byte": 70,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 75,
                  "end_byte": 85,
                  "text": "int curMax",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 75,
                      "end_byte": 78,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 79,
                      "end_byte": 85,
                      "text": "curMax",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 86,
                  "end_byte": 87,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 88,
          "end_byte": 376,
          "text": "{ int r = row * ( row - 1 ) / 2 ; if ( row > n ) { if ( curMax > maxValue ) maxValue = curMax ; return 0 ; } int v1 = * ( input + r + pos - 1 ) , v2 = * ( input + r + pos ) ; maxPath ( input , row + 1 , pos + 1 , n , v2 + curMax ) ; maxPath ( input , row + 1 , pos , n , v1 + curMax ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 88,
              "end_byte": 89,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 90,
              "end_byte": 121,
              "text": "int r = row * ( row - 1 ) / 2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 90,
                  "end_byte": 93,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 94,
                  "end_byte": 119,
                  "text": "r = row * ( row - 1 ) / 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "r",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 96,
                      "end_byte": 97,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 98,
                      "end_byte": 119,
                      "text": "row * ( row - 1 ) / 2",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 98,
                          "end_byte": 115,
                          "text": "row * ( row - 1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 98,
                              "end_byte": 101,
                              "text": "row",
                              "children": []
                            },
                            {
                              "type": "*",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "parenthesized_expression",
                              "start_byte": 104,
                              "end_byte": 115,
                              "text": "( row - 1 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 104,
                                  "end_byte": 105,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 106,
                                  "end_byte": 113,
                                  "text": "row - 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 106,
                                      "end_byte": 109,
                                      "text": "row",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 110,
                                      "end_byte": 111,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 112,
                                      "end_byte": 113,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 114,
                                  "end_byte": 115,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 118,
                          "end_byte": 119,
                          "text": "2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 122,
              "end_byte": 196,
              "text": "if ( row > n ) { if ( curMax > maxValue ) maxValue = curMax ; return 0 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 122,
                  "end_byte": 124,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 125,
                  "end_byte": 136,
                  "text": "( row > n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 127,
                      "end_byte": 134,
                      "text": "row > n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 127,
                          "end_byte": 130,
                          "text": "row",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 131,
                          "end_byte": 132,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 133,
                          "end_byte": 134,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 135,
                      "end_byte": 136,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 137,
                  "end_byte": 196,
                  "text": "{ if ( curMax > maxValue ) maxValue = curMax ; return 0 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 137,
                      "end_byte": 138,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 139,
                      "end_byte": 183,
                      "text": "if ( curMax > maxValue ) maxValue = curMax ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 139,
                          "end_byte": 141,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 142,
                          "end_byte": 163,
                          "text": "( curMax > maxValue )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 144,
                              "end_byte": 161,
                              "text": "curMax > maxValue",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 144,
                                  "end_byte": 150,
                                  "text": "curMax",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 151,
                                  "end_byte": 152,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 153,
                                  "end_byte": 161,
                                  "text": "maxValue",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 164,
                          "end_byte": 183,
                          "text": "maxValue = curMax ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 164,
                              "end_byte": 181,
                              "text": "maxValue = curMax",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 164,
                                  "end_byte": 172,
                                  "text": "maxValue",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 175,
                                  "end_byte": 181,
                                  "text": "curMax",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 184,
                      "end_byte": 194,
                      "text": "return 0 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 184,
                          "end_byte": 190,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 191,
                          "end_byte": 192,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 193,
                          "end_byte": 194,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 195,
                      "end_byte": 196,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 197,
              "end_byte": 262,
              "text": "int v1 = * ( input + r + pos - 1 ) , v2 = * ( input + r + pos ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 197,
                  "end_byte": 200,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 201,
                  "end_byte": 231,
                  "text": "v1 = * ( input + r + pos - 1 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 201,
                      "end_byte": 203,
                      "text": "v1",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 204,
                      "end_byte": 205,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "pointer_expression",
                      "start_byte": 206,
                      "end_byte": 231,
                      "text": "* ( input + r + pos - 1 )",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 206,
                          "end_byte": 207,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 208,
                          "end_byte": 231,
                          "text": "( input + r + pos - 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 208,
                              "end_byte": 209,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 210,
                              "end_byte": 229,
                              "text": "input + r + pos - 1",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 210,
                                  "end_byte": 225,
                                  "text": "input + r + pos",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 210,
                                      "end_byte": 219,
                                      "text": "input + r",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 210,
                                          "end_byte": 215,
                                          "text": "input",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 216,
                                          "end_byte": 217,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 218,
                                          "end_byte": 219,
                                          "text": "r",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 222,
                                      "end_byte": 225,
                                      "text": "pos",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 228,
                                  "end_byte": 229,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 230,
                              "end_byte": 231,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 232,
                  "end_byte": 233,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 234,
                  "end_byte": 260,
                  "text": "v2 = * ( input + r + pos )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 234,
                      "end_byte": 236,
                      "text": "v2",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 237,
                      "end_byte": 238,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "pointer_expression",
                      "start_byte": 239,
                      "end_byte": 260,
                      "text": "* ( input + r + pos )",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 239,
                          "end_byte": 240,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 241,
                          "end_byte": 260,
                          "text": "( input + r + pos )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 241,
                              "end_byte": 242,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 243,
                              "end_byte": 258,
                              "text": "input + r + pos",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 243,
                                  "end_byte": 252,
                                  "text": "input + r",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 243,
                                      "end_byte": 248,
                                      "text": "input",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 249,
                                      "end_byte": 250,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 251,
                                      "end_byte": 252,
                                      "text": "r",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 253,
                                  "end_byte": 254,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 255,
                                  "end_byte": 258,
                                  "text": "pos",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 259,
                              "end_byte": 260,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 261,
                  "end_byte": 262,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 263,
              "end_byte": 320,
              "text": "maxPath ( input , row + 1 , pos + 1 , n , v2 + curMax ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 263,
                  "end_byte": 318,
                  "text": "maxPath ( input , row + 1 , pos + 1 , n , v2 + curMax )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 263,
                      "end_byte": 270,
                      "text": "maxPath",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 271,
                      "end_byte": 318,
                      "text": "( input , row + 1 , pos + 1 , n , v2 + curMax )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 271,
                          "end_byte": 272,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 273,
                          "end_byte": 278,
                          "text": "input",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 279,
                          "end_byte": 280,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 281,
                          "end_byte": 288,
                          "text": "row + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 281,
                              "end_byte": 284,
                              "text": "row",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 285,
                              "end_byte": 286,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 287,
                              "end_byte": 288,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 289,
                          "end_byte": 290,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 291,
                          "end_byte": 298,
                          "text": "pos + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 291,
                              "end_byte": 294,
                              "text": "pos",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 297,
                              "end_byte": 298,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 299,
                          "end_byte": 300,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 303,
                          "end_byte": 304,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 305,
                          "end_byte": 316,
                          "text": "v2 + curMax",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 305,
                              "end_byte": 307,
                              "text": "v2",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 308,
                              "end_byte": 309,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 310,
                              "end_byte": 316,
                              "text": "curMax",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 317,
                          "end_byte": 318,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 321,
              "end_byte": 374,
              "text": "maxPath ( input , row + 1 , pos , n , v1 + curMax ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 321,
                  "end_byte": 372,
                  "text": "maxPath ( input , row + 1 , pos , n , v1 + curMax )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 321,
                      "end_byte": 328,
                      "text": "maxPath",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 329,
                      "end_byte": 372,
                      "text": "( input , row + 1 , pos , n , v1 + curMax )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 329,
                          "end_byte": 330,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 331,
                          "end_byte": 336,
                          "text": "input",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 337,
                          "end_byte": 338,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 339,
                          "end_byte": 346,
                          "text": "row + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 339,
                              "end_byte": 342,
                              "text": "row",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 343,
                              "end_byte": 344,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 345,
                              "end_byte": 346,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 347,
                          "end_byte": 348,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 349,
                          "end_byte": 352,
                          "text": "pos",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 355,
                          "end_byte": 356,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 357,
                          "end_byte": 358,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 359,
                          "end_byte": 370,
                          "text": "v1 + curMax",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 359,
                              "end_byte": 361,
                              "text": "v1",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 362,
                              "end_byte": 363,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 364,
                              "end_byte": 370,
                              "text": "curMax",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 371,
                          "end_byte": 372,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 373,
                  "end_byte": 374,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 375,
              "end_byte": 376,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 377,
      "end_byte": 819,
      "text": "int main ( ) { int tests , n , i , k ; scanf ( \"%d\" , & tests ) ; int out [ tests ] ; for ( k = 0 ; k < tests ; k ++ ) { maxValue = 0 ; scanf ( \"%d\" , & n ) ; int lenght = n * ( n + 1 ) / 2 ; int input [ lenght ] ; for ( i = 0 ; i < lenght ; i ++ ) { scanf ( \"%d\" , input + i ) ; } maxPath ( input , 2 , 1 , n , 0 ) ; * ( out + k ) = * input + maxValue ; } for ( k = 0 ; k < tests ; k ++ ) { printf ( \"%d\\n\" , * ( out + k ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 377,
          "end_byte": 380,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 381,
          "end_byte": 389,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 381,
              "end_byte": 385,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 386,
              "end_byte": 389,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 386,
                  "end_byte": 387,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 388,
                  "end_byte": 389,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 390,
          "end_byte": 819,
          "text": "{ int tests , n , i , k ; scanf ( \"%d\" , & tests ) ; int out [ tests ] ; for ( k = 0 ; k < tests ; k ++ ) { maxValue = 0 ; scanf ( \"%d\" , & n ) ; int lenght = n * ( n + 1 ) / 2 ; int input [ lenght ] ; for ( i = 0 ; i < lenght ; i ++ ) { scanf ( \"%d\" , input + i ) ; } maxPath ( input , 2 , 1 , n , 0 ) ; * ( out + k ) = * input + maxValue ; } for ( k = 0 ; k < tests ; k ++ ) { printf ( \"%d\\n\" , * ( out + k ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 390,
              "end_byte": 391,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 392,
              "end_byte": 415,
              "text": "int tests , n , i , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 392,
                  "end_byte": 395,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 396,
                  "end_byte": 401,
                  "text": "tests",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 404,
                  "end_byte": 405,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 406,
                  "end_byte": 407,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 408,
                  "end_byte": 409,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 410,
                  "end_byte": 411,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 412,
                  "end_byte": 413,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 414,
                  "end_byte": 415,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 416,
              "end_byte": 442,
              "text": "scanf ( \"%d\" , & tests ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 416,
                  "end_byte": 440,
                  "text": "scanf ( \"%d\" , & tests )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 416,
                      "end_byte": 421,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 422,
                      "end_byte": 440,
                      "text": "( \"%d\" , & tests )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 422,
                          "end_byte": 423,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 424,
                          "end_byte": 428,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 425,
                              "end_byte": 427,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 427,
                              "end_byte": 428,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 429,
                          "end_byte": 430,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 431,
                          "end_byte": 438,
                          "text": "& tests",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 431,
                              "end_byte": 432,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 433,
                              "end_byte": 438,
                              "text": "tests",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 439,
                          "end_byte": 440,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 441,
                  "end_byte": 442,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 443,
              "end_byte": 462,
              "text": "int out [ tests ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 443,
                  "end_byte": 446,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 447,
                  "end_byte": 460,
                  "text": "out [ tests ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 447,
                      "end_byte": 450,
                      "text": "out",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 451,
                      "end_byte": 452,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 453,
                      "end_byte": 458,
                      "text": "tests",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 459,
                      "end_byte": 460,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 461,
                  "end_byte": 462,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 463,
              "end_byte": 733,
              "text": "for ( k = 0 ; k < tests ; k ++ ) { maxValue = 0 ; scanf ( \"%d\" , & n ) ; int lenght = n * ( n + 1 ) / 2 ; int input [ lenght ] ; for ( i = 0 ; i < lenght ; i ++ ) { scanf ( \"%d\" , input + i ) ; } maxPath ( input , 2 , 1 , n , 0 ) ; * ( out + k ) = * input + maxValue ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 463,
                  "end_byte": 466,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 467,
                  "end_byte": 468,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 469,
                  "end_byte": 474,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 469,
                      "end_byte": 470,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 471,
                      "end_byte": 472,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 473,
                      "end_byte": 474,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 475,
                  "end_byte": 476,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 477,
                  "end_byte": 486,
                  "text": "k < tests",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 477,
                      "end_byte": 478,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 479,
                      "end_byte": 480,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 481,
                      "end_byte": 486,
                      "text": "tests",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 487,
                  "end_byte": 488,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 489,
                  "end_byte": 493,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 489,
                      "end_byte": 490,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 491,
                      "end_byte": 493,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 494,
                  "end_byte": 495,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 496,
                  "end_byte": 733,
                  "text": "{ maxValue = 0 ; scanf ( \"%d\" , & n ) ; int lenght = n * ( n + 1 ) / 2 ; int input [ lenght ] ; for ( i = 0 ; i < lenght ; i ++ ) { scanf ( \"%d\" , input + i ) ; } maxPath ( input , 2 , 1 , n , 0 ) ; * ( out + k ) = * input + maxValue ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 496,
                      "end_byte": 497,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 498,
                      "end_byte": 512,
                      "text": "maxValue = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 498,
                          "end_byte": 510,
                          "text": "maxValue = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 498,
                              "end_byte": 506,
                              "text": "maxValue",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 507,
                              "end_byte": 508,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 509,
                              "end_byte": 510,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 511,
                          "end_byte": 512,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 513,
                      "end_byte": 535,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 513,
                          "end_byte": 533,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 513,
                              "end_byte": 518,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 519,
                              "end_byte": 533,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 519,
                                  "end_byte": 520,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 521,
                                  "end_byte": 525,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 521,
                                      "end_byte": 522,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 522,
                                      "end_byte": 524,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 524,
                                      "end_byte": 525,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 526,
                                  "end_byte": 527,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 528,
                                  "end_byte": 531,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 528,
                                      "end_byte": 529,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 530,
                                      "end_byte": 531,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 532,
                                  "end_byte": 533,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 534,
                          "end_byte": 535,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 536,
                      "end_byte": 568,
                      "text": "int lenght = n * ( n + 1 ) / 2 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 536,
                          "end_byte": 539,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 540,
                          "end_byte": 566,
                          "text": "lenght = n * ( n + 1 ) / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 540,
                              "end_byte": 546,
                              "text": "lenght",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 547,
                              "end_byte": 548,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 549,
                              "end_byte": 566,
                              "text": "n * ( n + 1 ) / 2",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 549,
                                  "end_byte": 562,
                                  "text": "n * ( n + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 549,
                                      "end_byte": 550,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 551,
                                      "end_byte": 552,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 553,
                                      "end_byte": 562,
                                      "text": "( n + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 553,
                                          "end_byte": 554,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 555,
                                          "end_byte": 560,
                                          "text": "n + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 555,
                                              "end_byte": 556,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 557,
                                              "end_byte": 558,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 559,
                                              "end_byte": 560,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 561,
                                          "end_byte": 562,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 563,
                                  "end_byte": 564,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 565,
                                  "end_byte": 566,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 567,
                          "end_byte": 568,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 569,
                      "end_byte": 591,
                      "text": "int input [ lenght ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 569,
                          "end_byte": 572,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 573,
                          "end_byte": 589,
                          "text": "input [ lenght ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 573,
                              "end_byte": 578,
                              "text": "input",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 579,
                              "end_byte": 580,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 581,
                              "end_byte": 587,
                              "text": "lenght",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 588,
                              "end_byte": 589,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 590,
                          "end_byte": 591,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 592,
                      "end_byte": 658,
                      "text": "for ( i = 0 ; i < lenght ; i ++ ) { scanf ( \"%d\" , input + i ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 592,
                          "end_byte": 595,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 596,
                          "end_byte": 597,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 598,
                          "end_byte": 603,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 598,
                              "end_byte": 599,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 600,
                              "end_byte": 601,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 602,
                              "end_byte": 603,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 604,
                          "end_byte": 605,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 606,
                          "end_byte": 616,
                          "text": "i < lenght",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 606,
                              "end_byte": 607,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 608,
                              "end_byte": 609,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 610,
                              "end_byte": 616,
                              "text": "lenght",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 617,
                          "end_byte": 618,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 619,
                          "end_byte": 623,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 619,
                              "end_byte": 620,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 621,
                              "end_byte": 623,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 624,
                          "end_byte": 625,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 626,
                          "end_byte": 658,
                          "text": "{ scanf ( \"%d\" , input + i ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 626,
                              "end_byte": 627,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 628,
                              "end_byte": 656,
                              "text": "scanf ( \"%d\" , input + i ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 628,
                                  "end_byte": 654,
                                  "text": "scanf ( \"%d\" , input + i )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 628,
                                      "end_byte": 633,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 634,
                                      "end_byte": 654,
                                      "text": "( \"%d\" , input + i )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 634,
                                          "end_byte": 635,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 636,
                                          "end_byte": 640,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 636,
                                              "end_byte": 637,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 637,
                                              "end_byte": 639,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 639,
                                              "end_byte": 640,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 641,
                                          "end_byte": 642,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 643,
                                          "end_byte": 652,
                                          "text": "input + i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 643,
                                              "end_byte": 648,
                                              "text": "input",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 649,
                                              "end_byte": 650,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 651,
                                              "end_byte": 652,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 653,
                                          "end_byte": 654,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 655,
                                  "end_byte": 656,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 657,
                              "end_byte": 658,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 659,
                      "end_byte": 694,
                      "text": "maxPath ( input , 2 , 1 , n , 0 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 659,
                          "end_byte": 692,
                          "text": "maxPath ( input , 2 , 1 , n , 0 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 659,
                              "end_byte": 666,
                              "text": "maxPath",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 667,
                              "end_byte": 692,
                              "text": "( input , 2 , 1 , n , 0 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 667,
                                  "end_byte": 668,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 669,
                                  "end_byte": 674,
                                  "text": "input",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 675,
                                  "end_byte": 676,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 677,
                                  "end_byte": 678,
                                  "text": "2",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 679,
                                  "end_byte": 680,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 681,
                                  "end_byte": 682,
                                  "text": "1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 683,
                                  "end_byte": 684,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 685,
                                  "end_byte": 686,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 687,
                                  "end_byte": 688,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 689,
                                  "end_byte": 690,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 691,
                                  "end_byte": 692,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 693,
                          "end_byte": 694,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 695,
                      "end_byte": 731,
                      "text": "* ( out + k ) = * input + maxValue ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 695,
                          "end_byte": 729,
                          "text": "* ( out + k ) = * input + maxValue",
                          "children": [
                            {
                              "type": "pointer_expression",
                              "start_byte": 695,
                              "end_byte": 708,
                              "text": "* ( out + k )",
                              "children": [
                                {
                                  "type": "*",
                                  "start_byte": 695,
                                  "end_byte": 696,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 697,
                                  "end_byte": 708,
                                  "text": "( out + k )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 697,
                                      "end_byte": 698,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 699,
                                      "end_byte": 706,
                                      "text": "out + k",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 699,
                                          "end_byte": 702,
                                          "text": "out",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 703,
                                          "end_byte": 704,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 705,
                                          "end_byte": 706,
                                          "text": "k",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 707,
                                      "end_byte": 708,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 709,
                              "end_byte": 710,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 711,
                              "end_byte": 729,
                              "text": "* input + maxValue",
                              "children": [
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 711,
                                  "end_byte": 718,
                                  "text": "* input",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start_byte": 711,
                                      "end_byte": 712,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 713,
                                      "end_byte": 718,
                                      "text": "input",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 719,
                                  "end_byte": 720,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 721,
                                  "end_byte": 729,
                                  "text": "maxValue",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 730,
                          "end_byte": 731,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 732,
                      "end_byte": 733,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 734,
              "end_byte": 806,
              "text": "for ( k = 0 ; k < tests ; k ++ ) { printf ( \"%d\\n\" , * ( out + k ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 734,
                  "end_byte": 737,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 738,
                  "end_byte": 739,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 740,
                  "end_byte": 745,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 740,
                      "end_byte": 741,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 742,
                      "end_byte": 743,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 744,
                      "end_byte": 745,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 746,
                  "end_byte": 747,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 748,
                  "end_byte": 757,
                  "text": "k < tests",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 748,
                      "end_byte": 749,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 750,
                      "end_byte": 751,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 752,
                      "end_byte": 757,
                      "text": "tests",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 758,
                  "end_byte": 759,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 760,
                  "end_byte": 764,
                  "text": "k ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 760,
                      "end_byte": 761,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 762,
                      "end_byte": 764,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 765,
                  "end_byte": 766,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 767,
                  "end_byte": 806,
                  "text": "{ printf ( \"%d\\n\" , * ( out + k ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 767,
                      "end_byte": 768,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 769,
                      "end_byte": 804,
                      "text": "printf ( \"%d\\n\" , * ( out + k ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 769,
                          "end_byte": 802,
                          "text": "printf ( \"%d\\n\" , * ( out + k ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 769,
                              "end_byte": 775,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 776,
                              "end_byte": 802,
                              "text": "( \"%d\\n\" , * ( out + k ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 776,
                                  "end_byte": 777,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 778,
                                  "end_byte": 784,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 778,
                                      "end_byte": 779,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 779,
                                      "end_byte": 781,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 781,
                                      "end_byte": 783,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 783,
                                      "end_byte": 784,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 785,
                                  "end_byte": 786,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 787,
                                  "end_byte": 800,
                                  "text": "* ( out + k )",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start_byte": 787,
                                      "end_byte": 788,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 789,
                                      "end_byte": 800,
                                      "text": "( out + k )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 789,
                                          "end_byte": 790,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 791,
                                          "end_byte": 798,
                                          "text": "out + k",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 791,
                                              "end_byte": 794,
                                              "text": "out",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 795,
                                              "end_byte": 796,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 797,
                                              "end_byte": 798,
                                              "text": "k",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 799,
                                          "end_byte": 800,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 801,
                                  "end_byte": 802,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 803,
                          "end_byte": 804,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 805,
                      "end_byte": 806,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 807,
              "end_byte": 817,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 807,
                  "end_byte": 813,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 814,
                  "end_byte": 815,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 816,
                  "end_byte": 817,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 818,
              "end_byte": 819,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}