{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 685,
  "text": "int Arr [ 100 ] [ 100 ] ; long Sum ; int Size ; void Add ( int posR , int posC , long current_sum ) { long newSum = current_sum + Arr [ posR ] [ posC ] ; if ( posR == Size - 1 ) { if ( newSum > Sum ) Sum = newSum ; } else { Add ( posR + 1 , posC , newSum ) ; Add ( posR + 1 , posC + 1 , newSum ) ; } } void Fill ( int size ) { int rupto , cupto ; Size = size ; for ( rupto = 0 ; rupto < Size ; rupto ++ ) for ( cupto = 0 ; cupto <= rupto ; cupto ++ ) scanf ( \"%d\" , & Arr [ rupto ] [ cupto ] ) ; } int main ( ) { int size , TC ; scanf ( \"%d\" , & TC ) ; while ( TC -- > 0 ) { Sum = 0 ; scanf ( \"%d\" , & Size ) ; Fill ( Size ) ; Add ( 0 , 0 , 0 ) ; printf ( \"%d\" , Sum ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 25,
      "text": "int Arr [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "Arr [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "Arr [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "Arr",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 24,
          "end_byte": 25,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 26,
      "end_byte": 36,
      "text": "long Sum ;",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 26,
          "end_byte": 30,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 26,
              "end_byte": 30,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "identifier",
          "start_byte": 31,
          "end_byte": 34,
          "text": "Sum",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 35,
          "end_byte": 36,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 37,
      "end_byte": 47,
      "text": "int Size ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 37,
          "end_byte": 40,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 41,
          "end_byte": 45,
          "text": "Size",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 46,
          "end_byte": 47,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 48,
      "end_byte": 301,
      "text": "void Add ( int posR , int posC , long current_sum ) { long newSum = current_sum + Arr [ posR ] [ posC ] ; if ( posR == Size - 1 ) { if ( newSum > Sum ) Sum = newSum ; } else { Add ( posR + 1 , posC , newSum ) ; Add ( posR + 1 , posC + 1 , newSum ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 48,
          "end_byte": 52,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 53,
          "end_byte": 99,
          "text": "Add ( int posR , int posC , long current_sum )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 53,
              "end_byte": 56,
              "text": "Add",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 57,
              "end_byte": 99,
              "text": "( int posR , int posC , long current_sum )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 59,
                  "end_byte": 67,
                  "text": "int posR",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 59,
                      "end_byte": 62,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 63,
                      "end_byte": 67,
                      "text": "posR",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 70,
                  "end_byte": 78,
                  "text": "int posC",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 70,
                      "end_byte": 73,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 74,
                      "end_byte": 78,
                      "text": "posC",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 81,
                  "end_byte": 97,
                  "text": "long current_sum",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 81,
                      "end_byte": 85,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 81,
                          "end_byte": 85,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 86,
                      "end_byte": 97,
                      "text": "current_sum",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 100,
          "end_byte": 301,
          "text": "{ long newSum = current_sum + Arr [ posR ] [ posC ] ; if ( posR == Size - 1 ) { if ( newSum > Sum ) Sum = newSum ; } else { Add ( posR + 1 , posC , newSum ) ; Add ( posR + 1 , posC + 1 , newSum ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 100,
              "end_byte": 101,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 102,
              "end_byte": 153,
              "text": "long newSum = current_sum + Arr [ posR ] [ posC ] ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 102,
                  "end_byte": 106,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 102,
                      "end_byte": 106,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 107,
                  "end_byte": 151,
                  "text": "newSum = current_sum + Arr [ posR ] [ posC ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 107,
                      "end_byte": 113,
                      "text": "newSum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 116,
                      "end_byte": 151,
                      "text": "current_sum + Arr [ posR ] [ posC ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 116,
                          "end_byte": 127,
                          "text": "current_sum",
                          "children": []
                        },
                        {
                          "type": "+",
                          "start_byte": 128,
                          "end_byte": 129,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 130,
                          "end_byte": 151,
                          "text": "Arr [ posR ] [ posC ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 130,
                              "end_byte": 142,
                              "text": "Arr [ posR ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 130,
                                  "end_byte": 133,
                                  "text": "Arr",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 134,
                                  "end_byte": 142,
                                  "text": "[ posR ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 134,
                                      "end_byte": 135,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 136,
                                      "end_byte": 140,
                                      "text": "posR",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 141,
                                      "end_byte": 142,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 143,
                              "end_byte": 151,
                              "text": "[ posC ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 143,
                                  "end_byte": 144,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 145,
                                  "end_byte": 149,
                                  "text": "posC",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 152,
                  "end_byte": 153,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 154,
              "end_byte": 299,
              "text": "if ( posR == Size - 1 ) { if ( newSum > Sum ) Sum = newSum ; } else { Add ( posR + 1 , posC , newSum ) ; Add ( posR + 1 , posC + 1 , newSum ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 154,
                  "end_byte": 156,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 157,
                  "end_byte": 177,
                  "text": "( posR == Size - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 157,
                      "end_byte": 158,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 159,
                      "end_byte": 175,
                      "text": "posR == Size - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 159,
                          "end_byte": 163,
                          "text": "posR",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 164,
                          "end_byte": 166,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 167,
                          "end_byte": 175,
                          "text": "Size - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 167,
                              "end_byte": 171,
                              "text": "Size",
                              "children": []
                            },
                            {
                              "type": "-",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 178,
                  "end_byte": 216,
                  "text": "{ if ( newSum > Sum ) Sum = newSum ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 178,
                      "end_byte": 179,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 180,
                      "end_byte": 214,
                      "text": "if ( newSum > Sum ) Sum = newSum ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 180,
                          "end_byte": 182,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 183,
                          "end_byte": 199,
                          "text": "( newSum > Sum )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 185,
                              "end_byte": 197,
                              "text": "newSum > Sum",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 185,
                                  "end_byte": 191,
                                  "text": "newSum",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 194,
                                  "end_byte": 197,
                                  "text": "Sum",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 198,
                              "end_byte": 199,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 200,
                          "end_byte": 214,
                          "text": "Sum = newSum ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 200,
                              "end_byte": 212,
                              "text": "Sum = newSum",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 200,
                                  "end_byte": 203,
                                  "text": "Sum",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 206,
                                  "end_byte": 212,
                                  "text": "newSum",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 215,
                      "end_byte": 216,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 217,
                  "end_byte": 299,
                  "text": "else { Add ( posR + 1 , posC , newSum ) ; Add ( posR + 1 , posC + 1 , newSum ) ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 217,
                      "end_byte": 221,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 222,
                      "end_byte": 299,
                      "text": "{ Add ( posR + 1 , posC , newSum ) ; Add ( posR + 1 , posC + 1 , newSum ) ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 222,
                          "end_byte": 223,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 224,
                          "end_byte": 258,
                          "text": "Add ( posR + 1 , posC , newSum ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 224,
                              "end_byte": 256,
                              "text": "Add ( posR + 1 , posC , newSum )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 224,
                                  "end_byte": 227,
                                  "text": "Add",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 228,
                                  "end_byte": 256,
                                  "text": "( posR + 1 , posC , newSum )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 230,
                                      "end_byte": 238,
                                      "text": "posR + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 230,
                                          "end_byte": 234,
                                          "text": "posR",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 235,
                                          "end_byte": 236,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 237,
                                          "end_byte": 238,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 241,
                                      "end_byte": 245,
                                      "text": "posC",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 246,
                                      "end_byte": 247,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 248,
                                      "end_byte": 254,
                                      "text": "newSum",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 255,
                                      "end_byte": 256,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 259,
                          "end_byte": 297,
                          "text": "Add ( posR + 1 , posC + 1 , newSum ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 259,
                              "end_byte": 295,
                              "text": "Add ( posR + 1 , posC + 1 , newSum )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 259,
                                  "end_byte": 262,
                                  "text": "Add",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 263,
                                  "end_byte": 295,
                                  "text": "( posR + 1 , posC + 1 , newSum )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 265,
                                      "end_byte": 273,
                                      "text": "posR + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 265,
                                          "end_byte": 269,
                                          "text": "posR",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 270,
                                          "end_byte": 271,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 272,
                                          "end_byte": 273,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 276,
                                      "end_byte": 284,
                                      "text": "posC + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 276,
                                          "end_byte": 280,
                                          "text": "posC",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 281,
                                          "end_byte": 282,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 283,
                                          "end_byte": 284,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 287,
                                      "end_byte": 293,
                                      "text": "newSum",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 294,
                                      "end_byte": 295,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 296,
                              "end_byte": 297,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 298,
                          "end_byte": 299,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 300,
              "end_byte": 301,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 302,
      "end_byte": 497,
      "text": "void Fill ( int size ) { int rupto , cupto ; Size = size ; for ( rupto = 0 ; rupto < Size ; rupto ++ ) for ( cupto = 0 ; cupto <= rupto ; cupto ++ ) scanf ( \"%d\" , & Arr [ rupto ] [ cupto ] ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 302,
          "end_byte": 306,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 307,
          "end_byte": 324,
          "text": "Fill ( int size )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 307,
              "end_byte": 311,
              "text": "Fill",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 312,
              "end_byte": 324,
              "text": "( int size )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 312,
                  "end_byte": 313,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 314,
                  "end_byte": 322,
                  "text": "int size",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 314,
                      "end_byte": 317,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 318,
                      "end_byte": 322,
                      "text": "size",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 323,
                  "end_byte": 324,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 325,
          "end_byte": 497,
          "text": "{ int rupto , cupto ; Size = size ; for ( rupto = 0 ; rupto < Size ; rupto ++ ) for ( cupto = 0 ; cupto <= rupto ; cupto ++ ) scanf ( \"%d\" , & Arr [ rupto ] [ cupto ] ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 325,
              "end_byte": 326,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 327,
              "end_byte": 346,
              "text": "int rupto , cupto ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 327,
                  "end_byte": 330,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 331,
                  "end_byte": 336,
                  "text": "rupto",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 337,
                  "end_byte": 338,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 339,
                  "end_byte": 344,
                  "text": "cupto",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 345,
                  "end_byte": 346,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 347,
              "end_byte": 360,
              "text": "Size = size ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 347,
                  "end_byte": 358,
                  "text": "Size = size",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 347,
                      "end_byte": 351,
                      "text": "Size",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 352,
                      "end_byte": 353,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 354,
                      "end_byte": 358,
                      "text": "size",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 359,
                  "end_byte": 360,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 361,
              "end_byte": 495,
              "text": "for ( rupto = 0 ; rupto < Size ; rupto ++ ) for ( cupto = 0 ; cupto <= rupto ; cupto ++ ) scanf ( \"%d\" , & Arr [ rupto ] [ cupto ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 361,
                  "end_byte": 364,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 365,
                  "end_byte": 366,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 367,
                  "end_byte": 376,
                  "text": "rupto = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 367,
                      "end_byte": 372,
                      "text": "rupto",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 373,
                      "end_byte": 374,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 375,
                      "end_byte": 376,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 379,
                  "end_byte": 391,
                  "text": "rupto < Size",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 379,
                      "end_byte": 384,
                      "text": "rupto",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 385,
                      "end_byte": 386,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 387,
                      "end_byte": 391,
                      "text": "Size",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 392,
                  "end_byte": 393,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 394,
                  "end_byte": 402,
                  "text": "rupto ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 394,
                      "end_byte": 399,
                      "text": "rupto",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 400,
                      "end_byte": 402,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 403,
                  "end_byte": 404,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "for_statement",
                  "start_byte": 405,
                  "end_byte": 495,
                  "text": "for ( cupto = 0 ; cupto <= rupto ; cupto ++ ) scanf ( \"%d\" , & Arr [ rupto ] [ cupto ] ) ;",
                  "children": [
                    {
                      "type": "for",
                      "start_byte": 405,
                      "end_byte": 408,
                      "text": "for",
                      "children": []
                    },
                    {
                      "type": "(",
                      "start_byte": 409,
                      "end_byte": 410,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 411,
                      "end_byte": 420,
                      "text": "cupto = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 411,
                          "end_byte": 416,
                          "text": "cupto",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 417,
                          "end_byte": 418,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 419,
                          "end_byte": 420,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 421,
                      "end_byte": 422,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 423,
                      "end_byte": 437,
                      "text": "cupto <= rupto",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 423,
                          "end_byte": 428,
                          "text": "cupto",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 429,
                          "end_byte": 431,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 432,
                          "end_byte": 437,
                          "text": "rupto",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 438,
                      "end_byte": 439,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 440,
                      "end_byte": 448,
                      "text": "cupto ++",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 440,
                          "end_byte": 445,
                          "text": "cupto",
                          "children": []
                        },
                        {
                          "type": "++",
                          "start_byte": 446,
                          "end_byte": 448,
                          "text": "++",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 449,
                      "end_byte": 450,
                      "text": ")",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 451,
                      "end_byte": 495,
                      "text": "scanf ( \"%d\" , & Arr [ rupto ] [ cupto ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 451,
                          "end_byte": 493,
                          "text": "scanf ( \"%d\" , & Arr [ rupto ] [ cupto ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 451,
                              "end_byte": 456,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 457,
                              "end_byte": 493,
                              "text": "( \"%d\" , & Arr [ rupto ] [ cupto ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 457,
                                  "end_byte": 458,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 459,
                                  "end_byte": 463,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 459,
                                      "end_byte": 460,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 460,
                                      "end_byte": 462,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 462,
                                      "end_byte": 463,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 464,
                                  "end_byte": 465,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 466,
                                  "end_byte": 491,
                                  "text": "& Arr [ rupto ] [ cupto ]",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 466,
                                      "end_byte": 467,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 468,
                                      "end_byte": 491,
                                      "text": "Arr [ rupto ] [ cupto ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 468,
                                          "end_byte": 481,
                                          "text": "Arr [ rupto ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 468,
                                              "end_byte": 471,
                                              "text": "Arr",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 472,
                                              "end_byte": 481,
                                              "text": "[ rupto ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 472,
                                                  "end_byte": 473,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 474,
                                                  "end_byte": 479,
                                                  "text": "rupto",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 480,
                                                  "end_byte": 481,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 482,
                                          "end_byte": 491,
                                          "text": "[ cupto ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 482,
                                              "end_byte": 483,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 484,
                                              "end_byte": 489,
                                              "text": "cupto",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 490,
                                              "end_byte": 491,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 492,
                                  "end_byte": 493,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 494,
                          "end_byte": 495,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 496,
              "end_byte": 497,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 498,
      "end_byte": 685,
      "text": "int main ( ) { int size , TC ; scanf ( \"%d\" , & TC ) ; while ( TC -- > 0 ) { Sum = 0 ; scanf ( \"%d\" , & Size ) ; Fill ( Size ) ; Add ( 0 , 0 , 0 ) ; printf ( \"%d\" , Sum ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 498,
          "end_byte": 501,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 502,
          "end_byte": 510,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 502,
              "end_byte": 506,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 507,
              "end_byte": 510,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 507,
                  "end_byte": 508,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 509,
                  "end_byte": 510,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 511,
          "end_byte": 685,
          "text": "{ int size , TC ; scanf ( \"%d\" , & TC ) ; while ( TC -- > 0 ) { Sum = 0 ; scanf ( \"%d\" , & Size ) ; Fill ( Size ) ; Add ( 0 , 0 , 0 ) ; printf ( \"%d\" , Sum ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 511,
              "end_byte": 512,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 513,
              "end_byte": 528,
              "text": "int size , TC ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 513,
                  "end_byte": 516,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 517,
                  "end_byte": 521,
                  "text": "size",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 522,
                  "end_byte": 523,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 524,
                  "end_byte": 526,
                  "text": "TC",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 527,
                  "end_byte": 528,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 529,
              "end_byte": 552,
              "text": "scanf ( \"%d\" , & TC ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 529,
                  "end_byte": 550,
                  "text": "scanf ( \"%d\" , & TC )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 529,
                      "end_byte": 534,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 535,
                      "end_byte": 550,
                      "text": "( \"%d\" , & TC )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 535,
                          "end_byte": 536,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 537,
                          "end_byte": 541,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 537,
                              "end_byte": 538,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 538,
                              "end_byte": 540,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 540,
                              "end_byte": 541,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 542,
                          "end_byte": 543,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 544,
                          "end_byte": 548,
                          "text": "& TC",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 544,
                              "end_byte": 545,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 546,
                              "end_byte": 548,
                              "text": "TC",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 549,
                          "end_byte": 550,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 551,
                  "end_byte": 552,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 553,
              "end_byte": 672,
              "text": "while ( TC -- > 0 ) { Sum = 0 ; scanf ( \"%d\" , & Size ) ; Fill ( Size ) ; Add ( 0 , 0 , 0 ) ; printf ( \"%d\" , Sum ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 553,
                  "end_byte": 558,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 559,
                  "end_byte": 572,
                  "text": "( TC -- > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 559,
                      "end_byte": 560,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 561,
                      "end_byte": 570,
                      "text": "TC -- > 0",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 561,
                          "end_byte": 566,
                          "text": "TC --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 561,
                              "end_byte": 563,
                              "text": "TC",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 564,
                              "end_byte": 566,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start_byte": 567,
                          "end_byte": 568,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 569,
                          "end_byte": 570,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 571,
                      "end_byte": 572,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 573,
                  "end_byte": 672,
                  "text": "{ Sum = 0 ; scanf ( \"%d\" , & Size ) ; Fill ( Size ) ; Add ( 0 , 0 , 0 ) ; printf ( \"%d\" , Sum ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 573,
                      "end_byte": 574,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 575,
                      "end_byte": 584,
                      "text": "Sum = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 575,
                          "end_byte": 582,
                          "text": "Sum = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 575,
                              "end_byte": 578,
                              "text": "Sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 579,
                              "end_byte": 580,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 581,
                              "end_byte": 582,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 583,
                          "end_byte": 584,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 585,
                      "end_byte": 610,
                      "text": "scanf ( \"%d\" , & Size ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 585,
                          "end_byte": 608,
                          "text": "scanf ( \"%d\" , & Size )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 585,
                              "end_byte": 590,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 591,
                              "end_byte": 608,
                              "text": "( \"%d\" , & Size )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 591,
                                  "end_byte": 592,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 593,
                                  "end_byte": 597,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 593,
                                      "end_byte": 594,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 594,
                                      "end_byte": 596,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 596,
                                      "end_byte": 597,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 598,
                                  "end_byte": 599,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 600,
                                  "end_byte": 606,
                                  "text": "& Size",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 600,
                                      "end_byte": 601,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 602,
                                      "end_byte": 606,
                                      "text": "Size",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 607,
                                  "end_byte": 608,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 609,
                          "end_byte": 610,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 611,
                      "end_byte": 626,
                      "text": "Fill ( Size ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 611,
                          "end_byte": 624,
                          "text": "Fill ( Size )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 611,
                              "end_byte": 615,
                              "text": "Fill",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 616,
                              "end_byte": 624,
                              "text": "( Size )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 616,
                                  "end_byte": 617,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 618,
                                  "end_byte": 622,
                                  "text": "Size",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 623,
                                  "end_byte": 624,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 625,
                          "end_byte": 626,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 627,
                      "end_byte": 646,
                      "text": "Add ( 0 , 0 , 0 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 627,
                          "end_byte": 644,
                          "text": "Add ( 0 , 0 , 0 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 627,
                              "end_byte": 630,
                              "text": "Add",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 631,
                              "end_byte": 644,
                              "text": "( 0 , 0 , 0 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 631,
                                  "end_byte": 632,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 633,
                                  "end_byte": 634,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 635,
                                  "end_byte": 636,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 637,
                                  "end_byte": 638,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 639,
                                  "end_byte": 640,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 641,
                                  "end_byte": 642,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 643,
                                  "end_byte": 644,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 645,
                          "end_byte": 646,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 647,
                      "end_byte": 670,
                      "text": "printf ( \"%d\" , Sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 647,
                          "end_byte": 668,
                          "text": "printf ( \"%d\" , Sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 647,
                              "end_byte": 653,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 654,
                              "end_byte": 668,
                              "text": "( \"%d\" , Sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 654,
                                  "end_byte": 655,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 656,
                                  "end_byte": 660,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 656,
                                      "end_byte": 657,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 657,
                                      "end_byte": 659,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 659,
                                      "end_byte": 660,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 661,
                                  "end_byte": 662,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 663,
                                  "end_byte": 666,
                                  "text": "Sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 667,
                                  "end_byte": 668,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 669,
                          "end_byte": 670,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 671,
                      "end_byte": 672,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 673,
              "end_byte": 683,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 673,
                  "end_byte": 679,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 680,
                  "end_byte": 681,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 682,
                  "end_byte": 683,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 684,
              "end_byte": 685,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}