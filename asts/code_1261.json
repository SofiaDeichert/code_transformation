{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 548,
  "text": "long long int hcf ( long long int i , long long int j ) { long long int m , k ; if ( i < j ) { for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } } else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } } return m ; } int main ( ) { long long int t ; scanf ( \"%lld\" , & t ) ; while ( t -- ) { long long int i , j ; scanf ( \"%lld%lld\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 290,
      "text": "long long int hcf ( long long int i , long long int j ) { long long int m , k ; if ( i < j ) { for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } } else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } } return m ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 13,
          "text": "long long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 5,
              "end_byte": 9,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 10,
              "end_byte": 13,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 14,
          "end_byte": 55,
          "text": "hcf ( long long int i , long long int j )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 14,
              "end_byte": 17,
              "text": "hcf",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 18,
              "end_byte": 55,
              "text": "( long long int i , long long int j )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 18,
                  "end_byte": 19,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 20,
                  "end_byte": 35,
                  "text": "long long int i",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 20,
                      "end_byte": 33,
                      "text": "long long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 20,
                          "end_byte": 24,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 25,
                          "end_byte": 29,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 30,
                          "end_byte": 33,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 34,
                      "end_byte": 35,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 38,
                  "end_byte": 53,
                  "text": "long long int j",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 38,
                      "end_byte": 51,
                      "text": "long long int",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 38,
                          "end_byte": 42,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 43,
                          "end_byte": 47,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "primitive_type",
                          "start_byte": 48,
                          "end_byte": 51,
                          "text": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 52,
                      "end_byte": 53,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 56,
          "end_byte": 290,
          "text": "{ long long int m , k ; if ( i < j ) { for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } } else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } } return m ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 56,
              "end_byte": 57,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 58,
              "end_byte": 79,
              "text": "long long int m , k ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 58,
                  "end_byte": 71,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 58,
                      "end_byte": 62,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 63,
                      "end_byte": 67,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 68,
                      "end_byte": 71,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 72,
                  "end_byte": 73,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 80,
              "end_byte": 277,
              "text": "if ( i < j ) { for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } } else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 80,
                  "end_byte": 82,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 83,
                  "end_byte": 92,
                  "text": "( i < j )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 85,
                      "end_byte": 90,
                      "text": "i < j",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 85,
                          "end_byte": 86,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": "j",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 91,
                      "end_byte": 92,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 93,
                  "end_byte": 182,
                  "text": "{ for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 93,
                      "end_byte": 94,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 95,
                      "end_byte": 180,
                      "text": "for ( k = i ; k >= 1 ; k -- ) { if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 95,
                          "end_byte": 98,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 99,
                          "end_byte": 100,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 101,
                          "end_byte": 106,
                          "text": "k = i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 103,
                              "end_byte": 104,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 109,
                          "end_byte": 115,
                          "text": "k >= 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 111,
                              "end_byte": 113,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 114,
                              "end_byte": 115,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 118,
                          "end_byte": 122,
                          "text": "k --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 120,
                              "end_byte": 122,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 125,
                          "end_byte": 180,
                          "text": "{ if ( j % k == 0 && i % k == 0 ) { m = k ; break ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 127,
                              "end_byte": 178,
                              "text": "if ( j % k == 0 && i % k == 0 ) { m = k ; break ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 127,
                                  "end_byte": 129,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 130,
                                  "end_byte": 158,
                                  "text": "( j % k == 0 && i % k == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 132,
                                      "end_byte": 156,
                                      "text": "j % k == 0 && i % k == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 132,
                                          "end_byte": 142,
                                          "text": "j % k == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 132,
                                              "end_byte": 137,
                                              "text": "j % k",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 132,
                                                  "end_byte": 133,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 134,
                                                  "end_byte": 135,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 136,
                                                  "end_byte": 137,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 138,
                                              "end_byte": 140,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 141,
                                              "end_byte": 142,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 143,
                                          "end_byte": 145,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 146,
                                          "end_byte": 156,
                                          "text": "i % k == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 146,
                                              "end_byte": 151,
                                              "text": "i % k",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 146,
                                                  "end_byte": 147,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 148,
                                                  "end_byte": 149,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 150,
                                                  "end_byte": 151,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 152,
                                              "end_byte": 154,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 155,
                                              "end_byte": 156,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 159,
                                  "end_byte": 178,
                                  "text": "{ m = k ; break ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 159,
                                      "end_byte": 160,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 161,
                                      "end_byte": 168,
                                      "text": "m = k ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 161,
                                          "end_byte": 166,
                                          "text": "m = k",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 161,
                                              "end_byte": 162,
                                              "text": "m",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 163,
                                              "end_byte": 164,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 165,
                                              "end_byte": 166,
                                              "text": "k",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 167,
                                          "end_byte": 168,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "break_statement",
                                      "start_byte": 169,
                                      "end_byte": 176,
                                      "text": "break ;",
                                      "children": [
                                        {
                                          "type": "break",
                                          "start_byte": 169,
                                          "end_byte": 174,
                                          "text": "break",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 175,
                                          "end_byte": 176,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 177,
                                      "end_byte": 178,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 181,
                      "end_byte": 182,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 183,
                  "end_byte": 277,
                  "text": "else { for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 183,
                      "end_byte": 187,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 188,
                      "end_byte": 277,
                      "text": "{ for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } } }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 188,
                          "end_byte": 189,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 190,
                          "end_byte": 275,
                          "text": "for ( k = j ; k >= 1 ; k -- ) { if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } }",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 190,
                              "end_byte": 193,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 194,
                              "end_byte": 195,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 196,
                              "end_byte": 201,
                              "text": "k = j",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 196,
                                  "end_byte": 197,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 198,
                                  "end_byte": 199,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": "j",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 204,
                              "end_byte": 210,
                              "text": "k >= 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": ">=",
                                  "start_byte": 206,
                                  "end_byte": 208,
                                  "text": ">=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 211,
                              "end_byte": 212,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 213,
                              "end_byte": 217,
                              "text": "k --",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 213,
                                  "end_byte": 214,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "--",
                                  "start_byte": 215,
                                  "end_byte": 217,
                                  "text": "--",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 218,
                              "end_byte": 219,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 220,
                              "end_byte": 275,
                              "text": "{ if ( i % k == 0 && j % k == 0 ) { m = k ; break ; } }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 220,
                                  "end_byte": 221,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "if_statement",
                                  "start_byte": 222,
                                  "end_byte": 273,
                                  "text": "if ( i % k == 0 && j % k == 0 ) { m = k ; break ; }",
                                  "children": [
                                    {
                                      "type": "if",
                                      "start_byte": 222,
                                      "end_byte": 224,
                                      "text": "if",
                                      "children": []
                                    },
                                    {
                                      "type": "condition_clause",
                                      "start_byte": 225,
                                      "end_byte": 253,
                                      "text": "( i % k == 0 && j % k == 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 225,
                                          "end_byte": 226,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 227,
                                          "end_byte": 251,
                                          "text": "i % k == 0 && j % k == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 227,
                                              "end_byte": 237,
                                              "text": "i % k == 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 227,
                                                  "end_byte": 232,
                                                  "text": "i % k",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 227,
                                                      "end_byte": 228,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 229,
                                                      "end_byte": 230,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 231,
                                                      "end_byte": 232,
                                                      "text": "k",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 233,
                                                  "end_byte": 235,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 236,
                                                  "end_byte": 237,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "&&",
                                              "start_byte": 238,
                                              "end_byte": 240,
                                              "text": "&&",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 241,
                                              "end_byte": 251,
                                              "text": "j % k == 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 241,
                                                  "end_byte": 246,
                                                  "text": "j % k",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 241,
                                                      "end_byte": 242,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 243,
                                                      "end_byte": 244,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 245,
                                                      "end_byte": 246,
                                                      "text": "k",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 247,
                                                  "end_byte": 249,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 250,
                                                  "end_byte": 251,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 252,
                                          "end_byte": 253,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 254,
                                      "end_byte": 273,
                                      "text": "{ m = k ; break ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 254,
                                          "end_byte": 255,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 256,
                                          "end_byte": 263,
                                          "text": "m = k ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 256,
                                              "end_byte": 261,
                                              "text": "m = k",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 256,
                                                  "end_byte": 257,
                                                  "text": "m",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 258,
                                                  "end_byte": 259,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 260,
                                                  "end_byte": 261,
                                                  "text": "k",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 262,
                                              "end_byte": 263,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "break_statement",
                                          "start_byte": 264,
                                          "end_byte": 271,
                                          "text": "break ;",
                                          "children": [
                                            {
                                              "type": "break",
                                              "start_byte": 264,
                                              "end_byte": 269,
                                              "text": "break",
                                              "children": []
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 270,
                                              "end_byte": 271,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 272,
                                          "end_byte": 273,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 274,
                                  "end_byte": 275,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 276,
                          "end_byte": 277,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 278,
              "end_byte": 288,
              "text": "return m ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 278,
                  "end_byte": 284,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 285,
                  "end_byte": 286,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 287,
                  "end_byte": 288,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 289,
              "end_byte": 290,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 291,
      "end_byte": 548,
      "text": "int main ( ) { long long int t ; scanf ( \"%lld\" , & t ) ; while ( t -- ) { long long int i , j ; scanf ( \"%lld%lld\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 291,
          "end_byte": 294,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 295,
          "end_byte": 303,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 295,
              "end_byte": 299,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 300,
              "end_byte": 303,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 300,
                  "end_byte": 301,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 302,
                  "end_byte": 303,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 304,
          "end_byte": 548,
          "text": "{ long long int t ; scanf ( \"%lld\" , & t ) ; while ( t -- ) { long long int i , j ; scanf ( \"%lld%lld\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 304,
              "end_byte": 305,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 306,
              "end_byte": 323,
              "text": "long long int t ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 306,
                  "end_byte": 319,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 306,
                      "end_byte": 310,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 311,
                      "end_byte": 315,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 316,
                      "end_byte": 319,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 320,
                  "end_byte": 321,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 322,
                  "end_byte": 323,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 324,
              "end_byte": 348,
              "text": "scanf ( \"%lld\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 324,
                  "end_byte": 346,
                  "text": "scanf ( \"%lld\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 324,
                      "end_byte": 329,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 330,
                      "end_byte": 346,
                      "text": "( \"%lld\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 330,
                          "end_byte": 331,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 332,
                          "end_byte": 338,
                          "text": "\"%lld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 332,
                              "end_byte": 333,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 333,
                              "end_byte": 337,
                              "text": "%lld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 337,
                              "end_byte": 338,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 339,
                          "end_byte": 340,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 341,
                          "end_byte": 344,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 341,
                              "end_byte": 342,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 343,
                              "end_byte": 344,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 345,
                          "end_byte": 346,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 347,
                  "end_byte": 348,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 349,
              "end_byte": 535,
              "text": "while ( t -- ) { long long int i , j ; scanf ( \"%lld%lld\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 349,
                  "end_byte": 354,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 355,
                  "end_byte": 363,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 357,
                      "end_byte": 361,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 357,
                          "end_byte": 358,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 359,
                          "end_byte": 361,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 362,
                      "end_byte": 363,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 364,
                  "end_byte": 535,
                  "text": "{ long long int i , j ; scanf ( \"%lld%lld\" , & i , & j ) ; long long int gcd , lcm ; gcd = hcf ( i , j ) ; lcm = ( i * j ) / gcd ; printf ( \"%lld %lld\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 364,
                      "end_byte": 365,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 366,
                      "end_byte": 387,
                      "text": "long long int i , j ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 366,
                          "end_byte": 379,
                          "text": "long long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 366,
                              "end_byte": 370,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 371,
                              "end_byte": 375,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 376,
                              "end_byte": 379,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 380,
                          "end_byte": 381,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 382,
                          "end_byte": 383,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 384,
                          "end_byte": 385,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 386,
                          "end_byte": 387,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 388,
                      "end_byte": 422,
                      "text": "scanf ( \"%lld%lld\" , & i , & j ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 388,
                          "end_byte": 420,
                          "text": "scanf ( \"%lld%lld\" , & i , & j )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 388,
                              "end_byte": 393,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 394,
                              "end_byte": 420,
                              "text": "( \"%lld%lld\" , & i , & j )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 394,
                                  "end_byte": 395,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 396,
                                  "end_byte": 406,
                                  "text": "\"%lld%lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 396,
                                      "end_byte": 397,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 397,
                                      "end_byte": 405,
                                      "text": "%lld%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 405,
                                      "end_byte": 406,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 407,
                                  "end_byte": 408,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 409,
                                  "end_byte": 412,
                                  "text": "& i",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 409,
                                      "end_byte": 410,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 413,
                                  "end_byte": 414,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 415,
                                  "end_byte": 418,
                                  "text": "& j",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 415,
                                      "end_byte": 416,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 417,
                                      "end_byte": 418,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 419,
                                  "end_byte": 420,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 421,
                          "end_byte": 422,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 423,
                      "end_byte": 448,
                      "text": "long long int gcd , lcm ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 423,
                          "end_byte": 436,
                          "text": "long long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 423,
                              "end_byte": 427,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 428,
                              "end_byte": 432,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 433,
                              "end_byte": 436,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 437,
                          "end_byte": 440,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 441,
                          "end_byte": 442,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 443,
                          "end_byte": 446,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 447,
                          "end_byte": 448,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 449,
                      "end_byte": 470,
                      "text": "gcd = hcf ( i , j ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 449,
                          "end_byte": 468,
                          "text": "gcd = hcf ( i , j )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 449,
                              "end_byte": 452,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 455,
                              "end_byte": 468,
                              "text": "hcf ( i , j )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 455,
                                  "end_byte": 458,
                                  "text": "hcf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 459,
                                  "end_byte": 468,
                                  "text": "( i , j )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 459,
                                      "end_byte": 460,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 461,
                                      "end_byte": 462,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 463,
                                      "end_byte": 464,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 465,
                                      "end_byte": 466,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 467,
                                      "end_byte": 468,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 469,
                          "end_byte": 470,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 471,
                      "end_byte": 494,
                      "text": "lcm = ( i * j ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 471,
                          "end_byte": 492,
                          "text": "lcm = ( i * j ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 471,
                              "end_byte": 474,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 475,
                              "end_byte": 476,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 477,
                              "end_byte": 492,
                              "text": "( i * j ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 477,
                                  "end_byte": 486,
                                  "text": "( i * j )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 477,
                                      "end_byte": 478,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 479,
                                      "end_byte": 484,
                                      "text": "i * j",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 479,
                                          "end_byte": 480,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 481,
                                          "end_byte": 482,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 483,
                                          "end_byte": 484,
                                          "text": "j",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 485,
                                      "end_byte": 486,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 487,
                                  "end_byte": 488,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 489,
                                  "end_byte": 492,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 493,
                          "end_byte": 494,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 495,
                      "end_byte": 533,
                      "text": "printf ( \"%lld %lld\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 495,
                          "end_byte": 531,
                          "text": "printf ( \"%lld %lld\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 495,
                              "end_byte": 501,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 502,
                              "end_byte": 531,
                              "text": "( \"%lld %lld\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 502,
                                  "end_byte": 503,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 504,
                                  "end_byte": 517,
                                  "text": "\"%lld %lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 504,
                                      "end_byte": 505,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 505,
                                      "end_byte": 514,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 514,
                                      "end_byte": 516,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 516,
                                      "end_byte": 517,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 518,
                                  "end_byte": 519,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 520,
                                  "end_byte": 523,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 524,
                                  "end_byte": 525,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 526,
                                  "end_byte": 529,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 530,
                                  "end_byte": 531,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 532,
                          "end_byte": 533,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 534,
                      "end_byte": 535,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 536,
              "end_byte": 546,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 536,
                  "end_byte": 542,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 543,
                  "end_byte": 544,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 545,
                  "end_byte": 546,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 547,
              "end_byte": 548,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}