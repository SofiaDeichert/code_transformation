{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 500,
  "text": "long int fastInput ( ) { long int n = 0 , c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; } int main ( void ) { long int i , T , N , min , temp , ans ; T = fastInput ( ) ; for ( i = 0 ; i < T ; i ++ ) { N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%lld\\n\" , ans ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 193,
      "text": "long int fastInput ( ) { long int n = 0 , c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 8,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 5,
              "end_byte": 8,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 9,
          "end_byte": 22,
          "text": "fastInput ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 9,
              "end_byte": 18,
              "text": "fastInput",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 19,
              "end_byte": 22,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 23,
          "end_byte": 193,
          "text": "{ long int n = 0 , c = gc ( ) ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 23,
              "end_byte": 24,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 25,
              "end_byte": 54,
              "text": "long int n = 0 , c = gc ( ) ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 25,
                  "end_byte": 33,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 25,
                      "end_byte": 29,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 30,
                      "end_byte": 33,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 34,
                  "end_byte": 39,
                  "text": "n = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 34,
                      "end_byte": 35,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 36,
                      "end_byte": 37,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 38,
                      "end_byte": 39,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 42,
                  "end_byte": 52,
                  "text": "c = gc ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 42,
                      "end_byte": 43,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 44,
                      "end_byte": 45,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 46,
                      "end_byte": 52,
                      "text": "gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 46,
                          "end_byte": 48,
                          "text": "gc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 49,
                          "end_byte": 52,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 49,
                              "end_byte": 50,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 51,
                              "end_byte": 52,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 55,
              "end_byte": 96,
              "text": "while ( c < '0' || c > '9' ) c = gc ( ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 55,
                  "end_byte": 60,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 61,
                  "end_byte": 83,
                  "text": "( c < '0' || c > '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 61,
                      "end_byte": 62,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 63,
                      "end_byte": 81,
                      "text": "c < '0' || c > '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 63,
                          "end_byte": 70,
                          "text": "c < '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 63,
                              "end_byte": 64,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 67,
                              "end_byte": 70,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 67,
                                  "end_byte": 68,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 68,
                                  "end_byte": 69,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 69,
                                  "end_byte": 70,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start_byte": 71,
                          "end_byte": 73,
                          "text": "||",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 74,
                          "end_byte": 81,
                          "text": "c > '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 74,
                              "end_byte": 75,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 76,
                              "end_byte": 77,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 78,
                              "end_byte": 81,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 78,
                                  "end_byte": 79,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 79,
                                  "end_byte": 80,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 80,
                                  "end_byte": 81,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 82,
                      "end_byte": 83,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 84,
                  "end_byte": 96,
                  "text": "c = gc ( ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 84,
                      "end_byte": 94,
                      "text": "c = gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 84,
                          "end_byte": 85,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 86,
                          "end_byte": 87,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 88,
                          "end_byte": 94,
                          "text": "gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 88,
                              "end_byte": 90,
                              "text": "gc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 91,
                              "end_byte": 94,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 91,
                                  "end_byte": 92,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 93,
                                  "end_byte": 94,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 95,
                      "end_byte": 96,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 97,
              "end_byte": 180,
              "text": "while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 97,
                  "end_byte": 102,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 103,
                  "end_byte": 127,
                  "text": "( c >= '0' && c <= '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 103,
                      "end_byte": 104,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 105,
                      "end_byte": 125,
                      "text": "c >= '0' && c <= '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 105,
                          "end_byte": 113,
                          "text": "c >= '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 107,
                              "end_byte": 109,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 110,
                              "end_byte": 113,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 110,
                                  "end_byte": 111,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 111,
                                  "end_byte": 112,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 112,
                                  "end_byte": 113,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 114,
                          "end_byte": 116,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 117,
                          "end_byte": 125,
                          "text": "c <= '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 117,
                              "end_byte": 118,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 119,
                              "end_byte": 121,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 122,
                              "end_byte": 125,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 122,
                                  "end_byte": 123,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 123,
                                  "end_byte": 124,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 124,
                                  "end_byte": 125,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 128,
                  "end_byte": 180,
                  "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ;",
                  "children": [
                    {
                      "type": "comma_expression",
                      "start_byte": 128,
                      "end_byte": 178,
                      "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( )",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 128,
                          "end_byte": 165,
                          "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 128,
                              "end_byte": 129,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 130,
                              "end_byte": 131,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 132,
                              "end_byte": 165,
                              "text": "( n << 3 ) + ( n << 1 ) + c - '0'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 132,
                                  "end_byte": 159,
                                  "text": "( n << 3 ) + ( n << 1 ) + c",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 132,
                                      "end_byte": 155,
                                      "text": "( n << 3 ) + ( n << 1 )",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 132,
                                          "end_byte": 142,
                                          "text": "( n << 3 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 132,
                                              "end_byte": 133,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 134,
                                              "end_byte": 140,
                                              "text": "n << 3",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 134,
                                                  "end_byte": 135,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 136,
                                                  "end_byte": 138,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 139,
                                                  "end_byte": 140,
                                                  "text": "3",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 141,
                                              "end_byte": 142,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 143,
                                          "end_byte": 144,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 145,
                                          "end_byte": 155,
                                          "text": "( n << 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 145,
                                              "end_byte": 146,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 147,
                                              "end_byte": 153,
                                              "text": "n << 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 147,
                                                  "end_byte": 148,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 149,
                                                  "end_byte": 151,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 152,
                                                  "end_byte": 153,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 154,
                                              "end_byte": 155,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 156,
                                      "end_byte": 157,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 162,
                                  "end_byte": 165,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 163,
                                      "end_byte": 164,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 164,
                                      "end_byte": 165,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 168,
                          "end_byte": 178,
                          "text": "c = gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 172,
                              "end_byte": 178,
                              "text": "gc ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 172,
                                  "end_byte": 174,
                                  "text": "gc",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 175,
                                  "end_byte": 178,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 175,
                                      "end_byte": 176,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 177,
                                      "end_byte": 178,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 179,
                      "end_byte": 180,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 181,
              "end_byte": 191,
              "text": "return n ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 181,
                  "end_byte": 187,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 188,
                  "end_byte": 189,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 190,
                  "end_byte": 191,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 192,
              "end_byte": 193,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 194,
      "end_byte": 500,
      "text": "int main ( void ) { long int i , T , N , min , temp , ans ; T = fastInput ( ) ; for ( i = 0 ; i < T ; i ++ ) { N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%lld\\n\" , ans ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 194,
          "end_byte": 197,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 198,
          "end_byte": 211,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 198,
              "end_byte": 202,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 203,
              "end_byte": 211,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 203,
                  "end_byte": 204,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 205,
                  "end_byte": 209,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 205,
                      "end_byte": 209,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 210,
                  "end_byte": 211,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 212,
          "end_byte": 500,
          "text": "{ long int i , T , N , min , temp , ans ; T = fastInput ( ) ; for ( i = 0 ; i < T ; i ++ ) { N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%lld\\n\" , ans ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 212,
              "end_byte": 213,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 214,
              "end_byte": 253,
              "text": "long int i , T , N , min , temp , ans ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 214,
                  "end_byte": 222,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 214,
                      "end_byte": 218,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 219,
                      "end_byte": 222,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 223,
                  "end_byte": 224,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 225,
                  "end_byte": 226,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 227,
                  "end_byte": 228,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 229,
                  "end_byte": 230,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 231,
                  "end_byte": 232,
                  "text": "N",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 233,
                  "end_byte": 234,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 235,
                  "end_byte": 238,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 239,
                  "end_byte": 240,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 241,
                  "end_byte": 245,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 246,
                  "end_byte": 247,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 248,
                  "end_byte": 251,
                  "text": "ans",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 252,
                  "end_byte": 253,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 254,
              "end_byte": 273,
              "text": "T = fastInput ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 254,
                  "end_byte": 271,
                  "text": "T = fastInput ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 254,
                      "end_byte": 255,
                      "text": "T",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 256,
                      "end_byte": 257,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 258,
                      "end_byte": 271,
                      "text": "fastInput ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 258,
                          "end_byte": 267,
                          "text": "fastInput",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 268,
                          "end_byte": 271,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 268,
                              "end_byte": 269,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 270,
                              "end_byte": 271,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 272,
                  "end_byte": 273,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 274,
              "end_byte": 487,
              "text": "for ( i = 0 ; i < T ; i ++ ) { N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%lld\\n\" , ans ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 274,
                  "end_byte": 277,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 278,
                  "end_byte": 279,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 280,
                  "end_byte": 285,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 280,
                      "end_byte": 281,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 282,
                      "end_byte": 283,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 284,
                      "end_byte": 285,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 286,
                  "end_byte": 287,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 288,
                  "end_byte": 293,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 288,
                      "end_byte": 289,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 290,
                      "end_byte": 291,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 292,
                      "end_byte": 293,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 294,
                  "end_byte": 295,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 296,
                  "end_byte": 300,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 296,
                      "end_byte": 297,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 298,
                      "end_byte": 300,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 301,
                  "end_byte": 302,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 303,
                  "end_byte": 487,
                  "text": "{ N = fastInput ( ) ; min = fastInput ( ) ; for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; } ans = min * ( N - 1 ) ; printf ( \"%lld\\n\" , ans ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 305,
                      "end_byte": 324,
                      "text": "N = fastInput ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 305,
                          "end_byte": 322,
                          "text": "N = fastInput ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 305,
                              "end_byte": 306,
                              "text": "N",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 307,
                              "end_byte": 308,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 309,
                              "end_byte": 322,
                              "text": "fastInput ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 309,
                                  "end_byte": 318,
                                  "text": "fastInput",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 319,
                                  "end_byte": 322,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 319,
                                      "end_byte": 320,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 321,
                                      "end_byte": 322,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 325,
                      "end_byte": 346,
                      "text": "min = fastInput ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 325,
                          "end_byte": 344,
                          "text": "min = fastInput ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 328,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 329,
                              "end_byte": 330,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 331,
                              "end_byte": 344,
                              "text": "fastInput ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 331,
                                  "end_byte": 340,
                                  "text": "fastInput",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 341,
                                  "end_byte": 344,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 341,
                                      "end_byte": 342,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 343,
                                      "end_byte": 344,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 345,
                          "end_byte": 346,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 347,
                      "end_byte": 433,
                      "text": "for ( i = 1 ; i < N ; i ++ ) { temp = fastInput ( ) ; if ( temp < min ) min = temp ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 347,
                          "end_byte": 350,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 351,
                          "end_byte": 352,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 353,
                          "end_byte": 358,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 353,
                              "end_byte": 354,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 355,
                              "end_byte": 356,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 357,
                              "end_byte": 358,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 359,
                          "end_byte": 360,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 361,
                          "end_byte": 366,
                          "text": "i < N",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 361,
                              "end_byte": 362,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 363,
                              "end_byte": 364,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 365,
                              "end_byte": 366,
                              "text": "N",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 367,
                          "end_byte": 368,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 369,
                          "end_byte": 373,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 369,
                              "end_byte": 370,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 371,
                              "end_byte": 373,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 374,
                          "end_byte": 375,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 376,
                          "end_byte": 433,
                          "text": "{ temp = fastInput ( ) ; if ( temp < min ) min = temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 376,
                              "end_byte": 377,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 378,
                              "end_byte": 400,
                              "text": "temp = fastInput ( ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 378,
                                  "end_byte": 398,
                                  "text": "temp = fastInput ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 378,
                                      "end_byte": 382,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 383,
                                      "end_byte": 384,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 385,
                                      "end_byte": 398,
                                      "text": "fastInput ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 385,
                                          "end_byte": 394,
                                          "text": "fastInput",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 395,
                                          "end_byte": 398,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 395,
                                              "end_byte": 396,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 397,
                                              "end_byte": 398,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 399,
                                  "end_byte": 400,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 401,
                              "end_byte": 431,
                              "text": "if ( temp < min ) min = temp ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 401,
                                  "end_byte": 403,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 404,
                                  "end_byte": 418,
                                  "text": "( temp < min )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 404,
                                      "end_byte": 405,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 406,
                                      "end_byte": 416,
                                      "text": "temp < min",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 406,
                                          "end_byte": 410,
                                          "text": "temp",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 411,
                                          "end_byte": 412,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 413,
                                          "end_byte": 416,
                                          "text": "min",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 417,
                                      "end_byte": 418,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 419,
                                  "end_byte": 431,
                                  "text": "min = temp ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 419,
                                      "end_byte": 429,
                                      "text": "min = temp",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 419,
                                          "end_byte": 422,
                                          "text": "min",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 423,
                                          "end_byte": 424,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 425,
                                          "end_byte": 429,
                                          "text": "temp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 430,
                                      "end_byte": 431,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 432,
                              "end_byte": 433,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 434,
                      "end_byte": 457,
                      "text": "ans = min * ( N - 1 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 434,
                          "end_byte": 455,
                          "text": "ans = min * ( N - 1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 434,
                              "end_byte": 437,
                              "text": "ans",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 438,
                              "end_byte": 439,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 440,
                              "end_byte": 455,
                              "text": "min * ( N - 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 440,
                                  "end_byte": 443,
                                  "text": "min",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 444,
                                  "end_byte": 445,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 446,
                                  "end_byte": 455,
                                  "text": "( N - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 446,
                                      "end_byte": 447,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 448,
                                      "end_byte": 453,
                                      "text": "N - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 448,
                                          "end_byte": 449,
                                          "text": "N",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 450,
                                          "end_byte": 451,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 452,
                                          "end_byte": 453,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 454,
                                      "end_byte": 455,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 456,
                          "end_byte": 457,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 458,
                      "end_byte": 485,
                      "text": "printf ( \"%lld\\n\" , ans ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 458,
                          "end_byte": 483,
                          "text": "printf ( \"%lld\\n\" , ans )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 458,
                              "end_byte": 464,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 465,
                              "end_byte": 483,
                              "text": "( \"%lld\\n\" , ans )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 465,
                                  "end_byte": 466,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 467,
                                  "end_byte": 475,
                                  "text": "\"%lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 467,
                                      "end_byte": 468,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 468,
                                      "end_byte": 472,
                                      "text": "%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 472,
                                      "end_byte": 474,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 474,
                                      "end_byte": 475,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 476,
                                  "end_byte": 477,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 478,
                                  "end_byte": 481,
                                  "text": "ans",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 482,
                                  "end_byte": 483,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 484,
                          "end_byte": 485,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 486,
                      "end_byte": 487,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 488,
              "end_byte": 498,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 488,
                  "end_byte": 494,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 495,
                  "end_byte": 496,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 497,
                  "end_byte": 498,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 499,
              "end_byte": 500,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}