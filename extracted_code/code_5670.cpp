int * arr , n ; int * save ; int findmax ( int index , int i ) { int temp , sum ; if ( i == n - 1 ) { save [ index ] = arr [ index ] ; return save [ index ] ; } else if ( save [ index ] != 0 ) { return ( save [ index ] ) ; } i ++ ; temp = findmax ( index + i , i ) ; sum = findmax ( index + i + 1 , i ) ; if ( temp >= sum ) { save [ index ] = temp + arr [ index ] ; return save [ index ] ; } else { save [ index ] = sum + arr [ index ] ; return save [ index ] ; } } int main ( ) { int index = 0 , i = 0 , j ; int y , t , * sum1 ; scanf ( "%d" , & t ) ; sum1 = ( int * ) malloc ( t * sizeof ( int ) ) ; memset ( sum1 , 0 , sizeof ( sum1 ) ) ; for ( j = 0 ; j < t ; j ++ ) { scanf ( "%d" , & n ) ; arr = ( int * ) malloc ( ( n * ( n + 1 ) ) / 2 * sizeof ( int ) ) ; save = ( int * ) malloc ( ( n * ( n + 1 ) ) / 2 * sizeof ( int ) ) ; memset ( save , 0 , sizeof ( save ) ) ; for ( i = 0 ; i < ( n * ( n + 1 ) ) / 2 ; i ++ ) scanf ( "%d" , & arr [ i ] ) ; sum1 [ j ] = findmax ( 0 , 0 ) ; } printf ( "\n" ) ; for ( j = 0 ; j < t ; j ++ ) printf ( "\n%d" , sum1 [ j ] ) ; return 0 ; }