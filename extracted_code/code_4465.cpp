int * * a , n , l ; void large ( int r , int c ) { static int s = 0 ; if ( r == 1 ) s = 0 ; if ( r > n ) { if ( s > l ) l = s ; return ; } int m ; s = s + a [ r ] [ c ] ; m = s ; large ( r + 1 , c ) ; s = m ; large ( r + 1 , c + 1 ) ; } int main ( ) { int i , j , t ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; a = ( int * * ) malloc ( ( n + 1 ) * sizeof ( int * ) ) ; for ( i = 1 ; i <= n ; i ++ ) { a [ i ] = ( int * ) malloc ( ( i + 1 ) * sizeof ( int ) ) ; for ( j = 1 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; } l = 0 ; large ( 1 , 1 ) ; printf ( "%d\n" , l ) ; for ( i = 1 ; i <= n ; i ++ ) free ( a [ i ] ) ; free ( a ) ; } return 0 ; }