{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 355,
  "text": "int main ( ) { int dong ; scanf ( \"%d\" , & dong ) ; while ( dong -- ) { int so1 , so2 , ucln , bcnn , gan1 , gan2 ; scanf ( \"%d%d\" , & so1 , & so2 ) ; gan1 = so1 ; gan2 = so2 ; while ( so1 != so2 ) { if ( so1 > so2 ) so1 = so1 - so2 ; else so2 = so2 - so1 ; } ucln = so1 ; bcnn = ( gan1 * gan2 ) / so1 ; printf ( \"%d %d\\n\" , ucln , bcnn ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 355,
      "text": "int main ( ) { int dong ; scanf ( \"%d\" , & dong ) ; while ( dong -- ) { int so1 , so2 , ucln , bcnn , gan1 , gan2 ; scanf ( \"%d%d\" , & so1 , & so2 ) ; gan1 = so1 ; gan2 = so2 ; while ( so1 != so2 ) { if ( so1 > so2 ) so1 = so1 - so2 ; else so2 = so2 - so1 ; } ucln = so1 ; bcnn = ( gan1 * gan2 ) / so1 ; printf ( \"%d %d\\n\" , ucln , bcnn ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 355,
          "text": "{ int dong ; scanf ( \"%d\" , & dong ) ; while ( dong -- ) { int so1 , so2 , ucln , bcnn , gan1 , gan2 ; scanf ( \"%d%d\" , & so1 , & so2 ) ; gan1 = so1 ; gan2 = so2 ; while ( so1 != so2 ) { if ( so1 > so2 ) so1 = so1 - so2 ; else so2 = so2 - so1 ; } ucln = so1 ; bcnn = ( gan1 * gan2 ) / so1 ; printf ( \"%d %d\\n\" , ucln , bcnn ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 25,
              "text": "int dong ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 23,
                  "text": "dong",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 26,
              "end_byte": 51,
              "text": "scanf ( \"%d\" , & dong ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 26,
                  "end_byte": 49,
                  "text": "scanf ( \"%d\" , & dong )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 26,
                      "end_byte": 31,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 32,
                      "end_byte": 49,
                      "text": "( \"%d\" , & dong )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 32,
                          "end_byte": 33,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 34,
                          "end_byte": 38,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 34,
                              "end_byte": 35,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 35,
                              "end_byte": 37,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 37,
                              "end_byte": 38,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 39,
                          "end_byte": 40,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 41,
                          "end_byte": 47,
                          "text": "& dong",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 41,
                              "end_byte": 42,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 43,
                              "end_byte": 47,
                              "text": "dong",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 48,
                          "end_byte": 49,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 52,
              "end_byte": 342,
              "text": "while ( dong -- ) { int so1 , so2 , ucln , bcnn , gan1 , gan2 ; scanf ( \"%d%d\" , & so1 , & so2 ) ; gan1 = so1 ; gan2 = so2 ; while ( so1 != so2 ) { if ( so1 > so2 ) so1 = so1 - so2 ; else so2 = so2 - so1 ; } ucln = so1 ; bcnn = ( gan1 * gan2 ) / so1 ; printf ( \"%d %d\\n\" , ucln , bcnn ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 52,
                  "end_byte": 57,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 58,
                  "end_byte": 69,
                  "text": "( dong -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 60,
                      "end_byte": 67,
                      "text": "dong --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 60,
                          "end_byte": 64,
                          "text": "dong",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 65,
                          "end_byte": 67,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 68,
                      "end_byte": 69,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 70,
                  "end_byte": 342,
                  "text": "{ int so1 , so2 , ucln , bcnn , gan1 , gan2 ; scanf ( \"%d%d\" , & so1 , & so2 ) ; gan1 = so1 ; gan2 = so2 ; while ( so1 != so2 ) { if ( so1 > so2 ) so1 = so1 - so2 ; else so2 = so2 - so1 ; } ucln = so1 ; bcnn = ( gan1 * gan2 ) / so1 ; printf ( \"%d %d\\n\" , ucln , bcnn ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 70,
                      "end_byte": 71,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 72,
                      "end_byte": 115,
                      "text": "int so1 , so2 , ucln , bcnn , gan1 , gan2 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 72,
                          "end_byte": 75,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 76,
                          "end_byte": 79,
                          "text": "so1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 80,
                          "end_byte": 81,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 82,
                          "end_byte": 85,
                          "text": "so2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 86,
                          "end_byte": 87,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 88,
                          "end_byte": 92,
                          "text": "ucln",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 93,
                          "end_byte": 94,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 95,
                          "end_byte": 99,
                          "text": "bcnn",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 102,
                          "end_byte": 106,
                          "text": "gan1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 109,
                          "end_byte": 113,
                          "text": "gan2",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 116,
                      "end_byte": 150,
                      "text": "scanf ( \"%d%d\" , & so1 , & so2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 116,
                          "end_byte": 148,
                          "text": "scanf ( \"%d%d\" , & so1 , & so2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 116,
                              "end_byte": 121,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 122,
                              "end_byte": 148,
                              "text": "( \"%d%d\" , & so1 , & so2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 122,
                                  "end_byte": 123,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 124,
                                  "end_byte": 130,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 125,
                                      "end_byte": 129,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 129,
                                      "end_byte": 130,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 131,
                                  "end_byte": 132,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 133,
                                  "end_byte": 138,
                                  "text": "& so1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 133,
                                      "end_byte": 134,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 135,
                                      "end_byte": 138,
                                      "text": "so1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 139,
                                  "end_byte": 140,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 141,
                                  "end_byte": 146,
                                  "text": "& so2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 141,
                                      "end_byte": 142,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 143,
                                      "end_byte": 146,
                                      "text": "so2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 147,
                                  "end_byte": 148,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 149,
                          "end_byte": 150,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 151,
                      "end_byte": 163,
                      "text": "gan1 = so1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 151,
                          "end_byte": 161,
                          "text": "gan1 = so1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 155,
                              "text": "gan1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 156,
                              "end_byte": 157,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 158,
                              "end_byte": 161,
                              "text": "so1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 164,
                      "end_byte": 176,
                      "text": "gan2 = so2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 164,
                          "end_byte": 174,
                          "text": "gan2 = so2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 164,
                              "end_byte": 168,
                              "text": "gan2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 169,
                              "end_byte": 170,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 171,
                              "end_byte": 174,
                              "text": "so2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 175,
                          "end_byte": 176,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 177,
                      "end_byte": 259,
                      "text": "while ( so1 != so2 ) { if ( so1 > so2 ) so1 = so1 - so2 ; else so2 = so2 - so1 ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 177,
                          "end_byte": 182,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 183,
                          "end_byte": 197,
                          "text": "( so1 != so2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 185,
                              "end_byte": 195,
                              "text": "so1 != so2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 185,
                                  "end_byte": 188,
                                  "text": "so1",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 189,
                                  "end_byte": 191,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 192,
                                  "end_byte": 195,
                                  "text": "so2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 196,
                              "end_byte": 197,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 198,
                          "end_byte": 259,
                          "text": "{ if ( so1 > so2 ) so1 = so1 - so2 ; else so2 = so2 - so1 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 198,
                              "end_byte": 199,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 200,
                              "end_byte": 257,
                              "text": "if ( so1 > so2 ) so1 = so1 - so2 ; else so2 = so2 - so1 ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 200,
                                  "end_byte": 202,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 203,
                                  "end_byte": 216,
                                  "text": "( so1 > so2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 203,
                                      "end_byte": 204,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 205,
                                      "end_byte": 214,
                                      "text": "so1 > so2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 205,
                                          "end_byte": 208,
                                          "text": "so1",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 209,
                                          "end_byte": 210,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 211,
                                          "end_byte": 214,
                                          "text": "so2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 215,
                                      "end_byte": 216,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 217,
                                  "end_byte": 234,
                                  "text": "so1 = so1 - so2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 217,
                                      "end_byte": 232,
                                      "text": "so1 = so1 - so2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 217,
                                          "end_byte": 220,
                                          "text": "so1",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 221,
                                          "end_byte": 222,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 223,
                                          "end_byte": 232,
                                          "text": "so1 - so2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 223,
                                              "end_byte": 226,
                                              "text": "so1",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 227,
                                              "end_byte": 228,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 229,
                                              "end_byte": 232,
                                              "text": "so2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 233,
                                      "end_byte": 234,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 235,
                                  "end_byte": 257,
                                  "text": "else so2 = so2 - so1 ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 235,
                                      "end_byte": 239,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 240,
                                      "end_byte": 257,
                                      "text": "so2 = so2 - so1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 240,
                                          "end_byte": 255,
                                          "text": "so2 = so2 - so1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 240,
                                              "end_byte": 243,
                                              "text": "so2",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 244,
                                              "end_byte": 245,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 246,
                                              "end_byte": 255,
                                              "text": "so2 - so1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 246,
                                                  "end_byte": 249,
                                                  "text": "so2",
                                                  "children": []
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 250,
                                                  "end_byte": 251,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 252,
                                                  "end_byte": 255,
                                                  "text": "so1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 256,
                                          "end_byte": 257,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 258,
                              "end_byte": 259,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 260,
                      "end_byte": 272,
                      "text": "ucln = so1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 260,
                          "end_byte": 270,
                          "text": "ucln = so1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 260,
                              "end_byte": 264,
                              "text": "ucln",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 265,
                              "end_byte": 266,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 267,
                              "end_byte": 270,
                              "text": "so1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 271,
                          "end_byte": 272,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 273,
                      "end_byte": 303,
                      "text": "bcnn = ( gan1 * gan2 ) / so1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 273,
                          "end_byte": 301,
                          "text": "bcnn = ( gan1 * gan2 ) / so1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 273,
                              "end_byte": 277,
                              "text": "bcnn",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 278,
                              "end_byte": 279,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 280,
                              "end_byte": 301,
                              "text": "( gan1 * gan2 ) / so1",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 280,
                                  "end_byte": 295,
                                  "text": "( gan1 * gan2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 280,
                                      "end_byte": 281,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 282,
                                      "end_byte": 293,
                                      "text": "gan1 * gan2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 282,
                                          "end_byte": 286,
                                          "text": "gan1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 287,
                                          "end_byte": 288,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 289,
                                          "end_byte": 293,
                                          "text": "gan2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 294,
                                      "end_byte": 295,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 296,
                                  "end_byte": 297,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 298,
                                  "end_byte": 301,
                                  "text": "so1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 302,
                          "end_byte": 303,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 304,
                      "end_byte": 340,
                      "text": "printf ( \"%d %d\\n\" , ucln , bcnn ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 304,
                          "end_byte": 338,
                          "text": "printf ( \"%d %d\\n\" , ucln , bcnn )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 304,
                              "end_byte": 310,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 311,
                              "end_byte": 338,
                              "text": "( \"%d %d\\n\" , ucln , bcnn )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 311,
                                  "end_byte": 312,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 313,
                                  "end_byte": 322,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 313,
                                      "end_byte": 314,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 314,
                                      "end_byte": 319,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 319,
                                      "end_byte": 321,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 321,
                                      "end_byte": 322,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 323,
                                  "end_byte": 324,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 325,
                                  "end_byte": 329,
                                  "text": "ucln",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 330,
                                  "end_byte": 331,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 332,
                                  "end_byte": 336,
                                  "text": "bcnn",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 337,
                                  "end_byte": 338,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 339,
                          "end_byte": 340,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 341,
                      "end_byte": 342,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 343,
              "end_byte": 353,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 343,
                  "end_byte": 349,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 350,
                  "end_byte": 351,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 352,
                  "end_byte": 353,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 354,
              "end_byte": 355,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}