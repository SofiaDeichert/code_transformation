void sumtria ( int * a , int i , int count , int t , int * path , int len , int * maxi ) { int j , sum = 0 ; if ( count == t ) { for ( j = 0 ; j < count ; j ++ ) { sum += path [ j ] ; } if ( sum > ( * maxi ) ) * maxi = sum ; return ; } path [ len ] = a [ i ] ; len ++ ; count ++ ; sumtria ( a , i + count , count , t , path , len , maxi ) ; sumtria ( a , i + count + 1 , count , t , path , len , maxi ) ; } int main ( ) { int n , t , k , i , maxsum = 0 ; int * a , * path ; scanf ( "%d" , & n ) ; while ( n -- ) { i = 0 ; scanf ( "%d" , & t ) ; k = ( ( t * ( t + 1 ) ) / 2 ) ; path = ( int * ) malloc ( sizeof ( int ) * t ) ; a = ( int * ) malloc ( sizeof ( int ) * k ) ; while ( k -- ) { scanf ( "%d" , & a [ i ] ) ; i ++ ; } sumtria ( a , 0 , 0 , t , path , 0 , & maxsum ) ; printf ( "%d\n" , maxsum ) ; } return 0 ; }