{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 401,
  "text": "long long gcd ( long long num1 , long long num2 ) { long long t ; do { t = num1 % num2 ; num1 = num2 ; num2 = t ; } while ( num2 != 0 ) ; return num1 ; } int main ( ) { long long num1 , num2 ; int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%I64d%I64d\" , & num1 , & num2 ) ; long long g_c_d = gcd ( num1 , num2 ) ; printf ( \"%I64d %I64d\\n\" , g_c_d , ( num1 * num2 ) / g_c_d ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 153,
      "text": "long long gcd ( long long num1 , long long num2 ) { long long t ; do { t = num1 % num2 ; num1 = num2 ; num2 = t ; } while ( num2 != 0 ) ; return num1 ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 9,
          "text": "long long",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "long",
              "start_byte": 5,
              "end_byte": 9,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 10,
          "end_byte": 49,
          "text": "gcd ( long long num1 , long long num2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 10,
              "end_byte": 13,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 14,
              "end_byte": 49,
              "text": "( long long num1 , long long num2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 16,
                  "end_byte": 30,
                  "text": "long long num1",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 16,
                      "end_byte": 25,
                      "text": "long long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 16,
                          "end_byte": 20,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 21,
                          "end_byte": 25,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 26,
                      "end_byte": 30,
                      "text": "num1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 33,
                  "end_byte": 47,
                  "text": "long long num2",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 33,
                      "end_byte": 42,
                      "text": "long long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 33,
                          "end_byte": 37,
                          "text": "long",
                          "children": []
                        },
                        {
                          "type": "long",
                          "start_byte": 38,
                          "end_byte": 42,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 43,
                      "end_byte": 47,
                      "text": "num2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 50,
          "end_byte": 153,
          "text": "{ long long t ; do { t = num1 % num2 ; num1 = num2 ; num2 = t ; } while ( num2 != 0 ) ; return num1 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 50,
              "end_byte": 51,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 52,
              "end_byte": 65,
              "text": "long long t ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 52,
                  "end_byte": 61,
                  "text": "long long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 52,
                      "end_byte": 56,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 57,
                      "end_byte": 61,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "do_statement",
              "start_byte": 66,
              "end_byte": 137,
              "text": "do { t = num1 % num2 ; num1 = num2 ; num2 = t ; } while ( num2 != 0 ) ;",
              "children": [
                {
                  "type": "do",
                  "start_byte": 66,
                  "end_byte": 68,
                  "text": "do",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 69,
                  "end_byte": 115,
                  "text": "{ t = num1 % num2 ; num1 = num2 ; num2 = t ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 71,
                      "end_byte": 88,
                      "text": "t = num1 % num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 71,
                          "end_byte": 86,
                          "text": "t = num1 % num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 71,
                              "end_byte": 72,
                              "text": "t",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 73,
                              "end_byte": 74,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 75,
                              "end_byte": 86,
                              "text": "num1 % num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 75,
                                  "end_byte": 79,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 80,
                                  "end_byte": 81,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 82,
                                  "end_byte": 86,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 89,
                      "end_byte": 102,
                      "text": "num1 = num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 89,
                          "end_byte": 100,
                          "text": "num1 = num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 89,
                              "end_byte": 93,
                              "text": "num1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 94,
                              "end_byte": 95,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 96,
                              "end_byte": 100,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 101,
                          "end_byte": 102,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 103,
                      "end_byte": 113,
                      "text": "num2 = t ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 103,
                          "end_byte": 111,
                          "text": "num2 = t",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 103,
                              "end_byte": 107,
                              "text": "num2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 114,
                      "end_byte": 115,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "while",
                  "start_byte": 116,
                  "end_byte": 121,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "parenthesized_expression",
                  "start_byte": 122,
                  "end_byte": 135,
                  "text": "( num2 != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 124,
                      "end_byte": 133,
                      "text": "num2 != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 124,
                          "end_byte": 128,
                          "text": "num2",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 129,
                          "end_byte": 131,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 134,
                      "end_byte": 135,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 136,
                  "end_byte": 137,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 138,
              "end_byte": 151,
              "text": "return num1 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 138,
                  "end_byte": 144,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 145,
                  "end_byte": 149,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 150,
                  "end_byte": 151,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 152,
              "end_byte": 153,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 154,
      "end_byte": 401,
      "text": "int main ( ) { long long num1 , num2 ; int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%I64d%I64d\" , & num1 , & num2 ) ; long long g_c_d = gcd ( num1 , num2 ) ; printf ( \"%I64d %I64d\\n\" , g_c_d , ( num1 * num2 ) / g_c_d ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 154,
          "end_byte": 157,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 158,
          "end_byte": 166,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 158,
              "end_byte": 162,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 163,
              "end_byte": 166,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 163,
                  "end_byte": 164,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 165,
                  "end_byte": 166,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 167,
          "end_byte": 401,
          "text": "{ long long num1 , num2 ; int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%I64d%I64d\" , & num1 , & num2 ) ; long long g_c_d = gcd ( num1 , num2 ) ; printf ( \"%I64d %I64d\\n\" , g_c_d , ( num1 * num2 ) / g_c_d ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 167,
              "end_byte": 168,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 169,
              "end_byte": 192,
              "text": "long long num1 , num2 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 169,
                  "end_byte": 178,
                  "text": "long long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 169,
                      "end_byte": 173,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 174,
                      "end_byte": 178,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 179,
                  "end_byte": 183,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 184,
                  "end_byte": 185,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 186,
                  "end_byte": 190,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 191,
                  "end_byte": 192,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 193,
              "end_byte": 200,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 193,
                  "end_byte": 196,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 197,
                  "end_byte": 198,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 199,
                  "end_byte": 200,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 201,
              "end_byte": 223,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 201,
                  "end_byte": 221,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 201,
                      "end_byte": 206,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 207,
                      "end_byte": 221,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 207,
                          "end_byte": 208,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 209,
                          "end_byte": 213,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 209,
                              "end_byte": 210,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 210,
                              "end_byte": 212,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 212,
                              "end_byte": 213,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 214,
                          "end_byte": 215,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 216,
                          "end_byte": 219,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 216,
                              "end_byte": 217,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 218,
                              "end_byte": 219,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 220,
                          "end_byte": 221,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 222,
                  "end_byte": 223,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 224,
              "end_byte": 388,
              "text": "while ( t -- ) { scanf ( \"%I64d%I64d\" , & num1 , & num2 ) ; long long g_c_d = gcd ( num1 , num2 ) ; printf ( \"%I64d %I64d\\n\" , g_c_d , ( num1 * num2 ) / g_c_d ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 224,
                  "end_byte": 229,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 230,
                  "end_byte": 238,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 230,
                      "end_byte": 231,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 232,
                      "end_byte": 236,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 232,
                          "end_byte": 233,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 234,
                          "end_byte": 236,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 237,
                      "end_byte": 238,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 239,
                  "end_byte": 388,
                  "text": "{ scanf ( \"%I64d%I64d\" , & num1 , & num2 ) ; long long g_c_d = gcd ( num1 , num2 ) ; printf ( \"%I64d %I64d\\n\" , g_c_d , ( num1 * num2 ) / g_c_d ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 239,
                      "end_byte": 240,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 241,
                      "end_byte": 283,
                      "text": "scanf ( \"%I64d%I64d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 241,
                          "end_byte": 281,
                          "text": "scanf ( \"%I64d%I64d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 241,
                              "end_byte": 246,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 247,
                              "end_byte": 281,
                              "text": "( \"%I64d%I64d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 247,
                                  "end_byte": 248,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 249,
                                  "end_byte": 261,
                                  "text": "\"%I64d%I64d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 249,
                                      "end_byte": 250,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 250,
                                      "end_byte": 260,
                                      "text": "%I64d%I64d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 262,
                                  "end_byte": 263,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 264,
                                  "end_byte": 270,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 266,
                                      "end_byte": 270,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 271,
                                  "end_byte": 272,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 273,
                                  "end_byte": 279,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 273,
                                      "end_byte": 274,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 275,
                                      "end_byte": 279,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 282,
                          "end_byte": 283,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 284,
                      "end_byte": 323,
                      "text": "long long g_c_d = gcd ( num1 , num2 ) ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 284,
                          "end_byte": 293,
                          "text": "long long",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 284,
                              "end_byte": 288,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 289,
                              "end_byte": 293,
                              "text": "long",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 294,
                          "end_byte": 321,
                          "text": "g_c_d = gcd ( num1 , num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 294,
                              "end_byte": 299,
                              "text": "g_c_d",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 300,
                              "end_byte": 301,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 302,
                              "end_byte": 321,
                              "text": "gcd ( num1 , num2 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 302,
                                  "end_byte": 305,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 306,
                                  "end_byte": 321,
                                  "text": "( num1 , num2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 306,
                                      "end_byte": 307,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 308,
                                      "end_byte": 312,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 313,
                                      "end_byte": 314,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 315,
                                      "end_byte": 319,
                                      "text": "num2",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 322,
                          "end_byte": 323,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 324,
                      "end_byte": 386,
                      "text": "printf ( \"%I64d %I64d\\n\" , g_c_d , ( num1 * num2 ) / g_c_d ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 324,
                          "end_byte": 384,
                          "text": "printf ( \"%I64d %I64d\\n\" , g_c_d , ( num1 * num2 ) / g_c_d )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 324,
                              "end_byte": 330,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 331,
                              "end_byte": 384,
                              "text": "( \"%I64d %I64d\\n\" , g_c_d , ( num1 * num2 ) / g_c_d )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 331,
                                  "end_byte": 332,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 333,
                                  "end_byte": 348,
                                  "text": "\"%I64d %I64d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 333,
                                      "end_byte": 334,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 334,
                                      "end_byte": 345,
                                      "text": "%I64d %I64d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 345,
                                      "end_byte": 347,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 347,
                                      "end_byte": 348,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 349,
                                  "end_byte": 350,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 351,
                                  "end_byte": 356,
                                  "text": "g_c_d",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 357,
                                  "end_byte": 358,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 359,
                                  "end_byte": 382,
                                  "text": "( num1 * num2 ) / g_c_d",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 359,
                                      "end_byte": 374,
                                      "text": "( num1 * num2 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 359,
                                          "end_byte": 360,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 361,
                                          "end_byte": 372,
                                          "text": "num1 * num2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 361,
                                              "end_byte": 365,
                                              "text": "num1",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 366,
                                              "end_byte": 367,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 368,
                                              "end_byte": 372,
                                              "text": "num2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 373,
                                          "end_byte": 374,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 375,
                                      "end_byte": 376,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 377,
                                      "end_byte": 382,
                                      "text": "g_c_d",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 383,
                                  "end_byte": 384,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 385,
                          "end_byte": 386,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 387,
                      "end_byte": 388,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 389,
              "end_byte": 399,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 389,
                  "end_byte": 395,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 396,
                  "end_byte": 397,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 398,
                  "end_byte": 399,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 400,
              "end_byte": 401,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}