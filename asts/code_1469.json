{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1285,
  "text": "int check ( ) { int i , j , max , n , posi , posj , sum = 0 , ii , jj , a [ 100 ] [ 100 ] ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) a [ i ] [ j ] = 0 ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( \"%d\" , a [ i ] [ j ] ) ; printf ( \"\\n\" ) ; } max = a [ 0 ] [ 0 ] ; posi = 0 ; posj = 0 ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) if ( a [ i ] [ j ] > max ) { max = a [ i ] [ j ] ; posi = i ; posj = j ; } sum += max ; ii = posi ; jj = posj ; while ( posi > 0 ) { if ( posj == 0 ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else if ( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; } } posi = ii ; posj = jj ; while ( posi < n - 1 ) { if ( a [ posi + 1 ] [ posj ] > a [ posi + 1 ] [ posj + 1 ] ) { sum += a [ posi + 1 ] [ posj ] ; posi += 1 ; } else { sum += a [ posi + 1 ] [ posj + 1 ] ; posi += 1 ; posj += 1 ; } } return sum ; } main ( ) { int n , p , i ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { p = check ( ) ; printf ( \"%d\\n\" , p ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 1160,
      "text": "int check ( ) { int i , j , max , n , posi , posj , sum = 0 , ii , jj , a [ 100 ] [ 100 ] ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) a [ i ] [ j ] = 0 ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( \"%d\" , a [ i ] [ j ] ) ; printf ( \"\\n\" ) ; } max = a [ 0 ] [ 0 ] ; posi = 0 ; posj = 0 ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) if ( a [ i ] [ j ] > max ) { max = a [ i ] [ j ] ; posi = i ; posj = j ; } sum += max ; ii = posi ; jj = posj ; while ( posi > 0 ) { if ( posj == 0 ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else if ( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; } } posi = ii ; posj = jj ; while ( posi < n - 1 ) { if ( a [ posi + 1 ] [ posj ] > a [ posi + 1 ] [ posj + 1 ] ) { sum += a [ posi + 1 ] [ posj ] ; posi += 1 ; } else { sum += a [ posi + 1 ] [ posj + 1 ] ; posi += 1 ; posj += 1 ; } } return sum ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 13,
          "text": "check ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 9,
              "text": "check",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 1160,
          "text": "{ int i , j , max , n , posi , posj , sum = 0 , ii , jj , a [ 100 ] [ 100 ] ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) a [ i ] [ j ] = 0 ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( \"%d\" , a [ i ] [ j ] ) ; printf ( \"\\n\" ) ; } max = a [ 0 ] [ 0 ] ; posi = 0 ; posj = 0 ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) if ( a [ i ] [ j ] > max ) { max = a [ i ] [ j ] ; posi = i ; posj = j ; } sum += max ; ii = posi ; jj = posj ; while ( posi > 0 ) { if ( posj == 0 ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else if ( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; } } posi = ii ; posj = jj ; while ( posi < n - 1 ) { if ( a [ posi + 1 ] [ posj ] > a [ posi + 1 ] [ posj + 1 ] ) { sum += a [ posi + 1 ] [ posj ] ; posi += 1 ; } else { sum += a [ posi + 1 ] [ posj + 1 ] ; posi += 1 ; posj += 1 ; } } return sum ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 91,
              "text": "int i , j , max , n , posi , posj , sum = 0 , ii , jj , a [ 100 ] [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 31,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 42,
                  "text": "posi",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 49,
                  "text": "posj",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 52,
                  "end_byte": 59,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 52,
                      "end_byte": 55,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 62,
                  "end_byte": 64,
                  "text": "ii",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 67,
                  "end_byte": 69,
                  "text": "jj",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 72,
                  "end_byte": 89,
                  "text": "a [ 100 ] [ 100 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 72,
                      "end_byte": 81,
                      "text": "a [ 100 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 76,
                          "end_byte": 79,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 80,
                          "end_byte": 81,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 82,
                      "end_byte": 83,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 84,
                      "end_byte": 87,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 88,
                      "end_byte": 89,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 90,
                  "end_byte": 91,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 92,
              "end_byte": 114,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 92,
                  "end_byte": 112,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 92,
                      "end_byte": 97,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 98,
                      "end_byte": 112,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 100,
                          "end_byte": 104,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 101,
                              "end_byte": 103,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 103,
                              "end_byte": 104,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 105,
                          "end_byte": 106,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 107,
                          "end_byte": 110,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 107,
                              "end_byte": 108,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 115,
              "end_byte": 192,
              "text": "for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) a [ i ] [ j ] = 0 ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 115,
                  "end_byte": 118,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 121,
                  "end_byte": 126,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 129,
                  "end_byte": 134,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 131,
                      "end_byte": 132,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 133,
                      "end_byte": 134,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 135,
                  "end_byte": 136,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 137,
                  "end_byte": 141,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 137,
                      "end_byte": 138,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 139,
                      "end_byte": 141,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 142,
                  "end_byte": 143,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "for_statement",
                  "start_byte": 144,
                  "end_byte": 192,
                  "text": "for ( j = 0 ; j < n ; j ++ ) a [ i ] [ j ] = 0 ;",
                  "children": [
                    {
                      "type": "for",
                      "start_byte": 144,
                      "end_byte": 147,
                      "text": "for",
                      "children": []
                    },
                    {
                      "type": "(",
                      "start_byte": 148,
                      "end_byte": 149,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 150,
                      "end_byte": 155,
                      "text": "j = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 150,
                          "end_byte": 151,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 158,
                      "end_byte": 163,
                      "text": "j < n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 158,
                          "end_byte": 159,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 164,
                      "end_byte": 165,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 166,
                      "end_byte": 170,
                      "text": "j ++",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "++",
                          "start_byte": 168,
                          "end_byte": 170,
                          "text": "++",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 171,
                      "end_byte": 172,
                      "text": ")",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 173,
                      "end_byte": 192,
                      "text": "a [ i ] [ j ] = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 173,
                          "end_byte": 190,
                          "text": "a [ i ] [ j ] = 0",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 173,
                              "end_byte": 186,
                              "text": "a [ i ] [ j ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 173,
                                  "end_byte": 180,
                                  "text": "a [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 173,
                                      "end_byte": 174,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 175,
                                      "end_byte": 180,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 175,
                                          "end_byte": 176,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 177,
                                          "end_byte": 178,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 179,
                                          "end_byte": 180,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 181,
                                  "end_byte": 186,
                                  "text": "[ j ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 181,
                                      "end_byte": 182,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 185,
                                      "end_byte": 186,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 187,
                              "end_byte": 188,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 189,
                              "end_byte": 190,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 191,
                          "end_byte": 192,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 193,
              "end_byte": 286,
              "text": "for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 193,
                  "end_byte": 196,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 197,
                  "end_byte": 198,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 199,
                  "end_byte": 204,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 199,
                      "end_byte": 200,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 201,
                      "end_byte": 202,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 203,
                      "end_byte": 204,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 205,
                  "end_byte": 206,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 207,
                  "end_byte": 212,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 207,
                      "end_byte": 208,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 209,
                      "end_byte": 210,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 211,
                      "end_byte": 212,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 213,
                  "end_byte": 214,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 215,
                  "end_byte": 219,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 215,
                      "end_byte": 216,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 217,
                      "end_byte": 219,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 220,
                  "end_byte": 221,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "for_statement",
                  "start_byte": 222,
                  "end_byte": 286,
                  "text": "for ( j = 0 ; j <= i ; j ++ ) scanf ( \"%d\" , & a [ i ] [ j ] ) ;",
                  "children": [
                    {
                      "type": "for",
                      "start_byte": 222,
                      "end_byte": 225,
                      "text": "for",
                      "children": []
                    },
                    {
                      "type": "(",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 228,
                      "end_byte": 233,
                      "text": "j = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 228,
                          "end_byte": 229,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 230,
                          "end_byte": 231,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 232,
                          "end_byte": 233,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 234,
                      "end_byte": 235,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 236,
                      "end_byte": 242,
                      "text": "j <= i",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 236,
                          "end_byte": 237,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 238,
                          "end_byte": 240,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 241,
                          "end_byte": 242,
                          "text": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 245,
                      "end_byte": 249,
                      "text": "j ++",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 245,
                          "end_byte": 246,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "++",
                          "start_byte": 247,
                          "end_byte": 249,
                          "text": "++",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 250,
                      "end_byte": 251,
                      "text": ")",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 252,
                      "end_byte": 286,
                      "text": "scanf ( \"%d\" , & a [ i ] [ j ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 252,
                          "end_byte": 284,
                          "text": "scanf ( \"%d\" , & a [ i ] [ j ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 252,
                              "end_byte": 257,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 258,
                              "end_byte": 284,
                              "text": "( \"%d\" , & a [ i ] [ j ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 258,
                                  "end_byte": 259,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 260,
                                  "end_byte": 264,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 260,
                                      "end_byte": 261,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 261,
                                      "end_byte": 263,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 265,
                                  "end_byte": 266,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 267,
                                  "end_byte": 282,
                                  "text": "& a [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 267,
                                      "end_byte": 268,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 269,
                                      "end_byte": 282,
                                      "text": "a [ i ] [ j ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 269,
                                          "end_byte": 276,
                                          "text": "a [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 269,
                                              "end_byte": 270,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 271,
                                              "end_byte": 276,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 271,
                                                  "end_byte": 272,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 273,
                                                  "end_byte": 274,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 275,
                                                  "end_byte": 276,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 277,
                                          "end_byte": 282,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 277,
                                              "end_byte": 278,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 279,
                                              "end_byte": 280,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 281,
                                              "end_byte": 282,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 283,
                                  "end_byte": 284,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 285,
                          "end_byte": 286,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 287,
              "end_byte": 401,
              "text": "for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) printf ( \"%d\" , a [ i ] [ j ] ) ; printf ( \"\\n\" ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 287,
                  "end_byte": 290,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 291,
                  "end_byte": 292,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 293,
                  "end_byte": 298,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 293,
                      "end_byte": 294,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 295,
                      "end_byte": 296,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 297,
                      "end_byte": 298,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 299,
                  "end_byte": 300,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 301,
                  "end_byte": 306,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 305,
                      "end_byte": 306,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 307,
                  "end_byte": 308,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 309,
                  "end_byte": 313,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 309,
                      "end_byte": 310,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 311,
                      "end_byte": 313,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 314,
                  "end_byte": 315,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 316,
                  "end_byte": 401,
                  "text": "{ for ( j = 0 ; j <= i ; j ++ ) printf ( \"%d\" , a [ i ] [ j ] ) ; printf ( \"\\n\" ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 316,
                      "end_byte": 317,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 318,
                      "end_byte": 381,
                      "text": "for ( j = 0 ; j <= i ; j ++ ) printf ( \"%d\" , a [ i ] [ j ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 318,
                          "end_byte": 321,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 322,
                          "end_byte": 323,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 324,
                          "end_byte": 329,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 324,
                              "end_byte": 325,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 330,
                          "end_byte": 331,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 332,
                          "end_byte": 338,
                          "text": "j <= i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 332,
                              "end_byte": 333,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 334,
                              "end_byte": 336,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 337,
                              "end_byte": 338,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 339,
                          "end_byte": 340,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 341,
                          "end_byte": 345,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 341,
                              "end_byte": 342,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 343,
                              "end_byte": 345,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 346,
                          "end_byte": 347,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 348,
                          "end_byte": 381,
                          "text": "printf ( \"%d\" , a [ i ] [ j ] ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 348,
                              "end_byte": 379,
                              "text": "printf ( \"%d\" , a [ i ] [ j ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 348,
                                  "end_byte": 354,
                                  "text": "printf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 355,
                                  "end_byte": 379,
                                  "text": "( \"%d\" , a [ i ] [ j ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 355,
                                      "end_byte": 356,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 357,
                                      "end_byte": 361,
                                      "text": "\"%d\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 357,
                                          "end_byte": 358,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 358,
                                          "end_byte": 360,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 360,
                                          "end_byte": 361,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 362,
                                      "end_byte": 363,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 364,
                                      "end_byte": 377,
                                      "text": "a [ i ] [ j ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 364,
                                          "end_byte": 371,
                                          "text": "a [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 364,
                                              "end_byte": 365,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 366,
                                              "end_byte": 371,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 366,
                                                  "end_byte": 367,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 368,
                                                  "end_byte": 369,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 370,
                                                  "end_byte": 371,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 372,
                                          "end_byte": 377,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 372,
                                              "end_byte": 373,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 374,
                                              "end_byte": 375,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 376,
                                              "end_byte": 377,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 378,
                                      "end_byte": 379,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 380,
                              "end_byte": 381,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 382,
                      "end_byte": 399,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 382,
                          "end_byte": 397,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 382,
                              "end_byte": 388,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 389,
                              "end_byte": 397,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 389,
                                  "end_byte": 390,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 391,
                                  "end_byte": 395,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 391,
                                      "end_byte": 392,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 392,
                                      "end_byte": 394,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 394,
                                      "end_byte": 395,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 396,
                                  "end_byte": 397,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 398,
                          "end_byte": 399,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 400,
                      "end_byte": 401,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 402,
              "end_byte": 423,
              "text": "max = a [ 0 ] [ 0 ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 402,
                  "end_byte": 421,
                  "text": "max = a [ 0 ] [ 0 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 402,
                      "end_byte": 405,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 406,
                      "end_byte": 407,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 408,
                      "end_byte": 421,
                      "text": "a [ 0 ] [ 0 ]",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 408,
                          "end_byte": 415,
                          "text": "a [ 0 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 408,
                              "end_byte": 409,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 410,
                              "end_byte": 415,
                              "text": "[ 0 ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 410,
                                  "end_byte": 411,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 412,
                                  "end_byte": 413,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 414,
                                  "end_byte": 415,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 416,
                          "end_byte": 421,
                          "text": "[ 0 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 416,
                              "end_byte": 417,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 418,
                              "end_byte": 419,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 420,
                              "end_byte": 421,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 422,
                  "end_byte": 423,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 424,
              "end_byte": 434,
              "text": "posi = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 424,
                  "end_byte": 432,
                  "text": "posi = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 424,
                      "end_byte": 428,
                      "text": "posi",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 429,
                      "end_byte": 430,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 431,
                      "end_byte": 432,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 433,
                  "end_byte": 434,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 435,
              "end_byte": 445,
              "text": "posj = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 435,
                  "end_byte": 443,
                  "text": "posj = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 435,
                      "end_byte": 439,
                      "text": "posj",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 440,
                      "end_byte": 441,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 442,
                      "end_byte": 443,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 444,
                  "end_byte": 445,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 446,
              "end_byte": 579,
              "text": "for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) if ( a [ i ] [ j ] > max ) { max = a [ i ] [ j ] ; posi = i ; posj = j ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 446,
                  "end_byte": 449,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 450,
                  "end_byte": 451,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 452,
                  "end_byte": 457,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 452,
                      "end_byte": 453,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 454,
                      "end_byte": 455,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 456,
                      "end_byte": 457,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 458,
                  "end_byte": 459,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 460,
                  "end_byte": 465,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 460,
                      "end_byte": 461,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 462,
                      "end_byte": 463,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 464,
                      "end_byte": 465,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 466,
                  "end_byte": 467,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 468,
                  "end_byte": 472,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 468,
                      "end_byte": 469,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 470,
                      "end_byte": 472,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 473,
                  "end_byte": 474,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "for_statement",
                  "start_byte": 475,
                  "end_byte": 579,
                  "text": "for ( j = 0 ; j <= i ; j ++ ) if ( a [ i ] [ j ] > max ) { max = a [ i ] [ j ] ; posi = i ; posj = j ; }",
                  "children": [
                    {
                      "type": "for",
                      "start_byte": 475,
                      "end_byte": 478,
                      "text": "for",
                      "children": []
                    },
                    {
                      "type": "(",
                      "start_byte": 479,
                      "end_byte": 480,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "assignment_expression",
                      "start_byte": 481,
                      "end_byte": 486,
                      "text": "j = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 481,
                          "end_byte": 482,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 483,
                          "end_byte": 484,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 485,
                          "end_byte": 486,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 487,
                      "end_byte": 488,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 489,
                      "end_byte": 495,
                      "text": "j <= i",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 489,
                          "end_byte": 490,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 491,
                          "end_byte": 493,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 494,
                          "end_byte": 495,
                          "text": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 496,
                      "end_byte": 497,
                      "text": ";",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 498,
                      "end_byte": 502,
                      "text": "j ++",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 498,
                          "end_byte": 499,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": "++",
                          "start_byte": 500,
                          "end_byte": 502,
                          "text": "++",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 503,
                      "end_byte": 504,
                      "text": ")",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 505,
                      "end_byte": 579,
                      "text": "if ( a [ i ] [ j ] > max ) { max = a [ i ] [ j ] ; posi = i ; posj = j ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 505,
                          "end_byte": 507,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 508,
                          "end_byte": 531,
                          "text": "( a [ i ] [ j ] > max )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 508,
                              "end_byte": 509,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 510,
                              "end_byte": 529,
                              "text": "a [ i ] [ j ] > max",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 510,
                                  "end_byte": 523,
                                  "text": "a [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 510,
                                      "end_byte": 517,
                                      "text": "a [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 510,
                                          "end_byte": 511,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 512,
                                          "end_byte": 517,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 512,
                                              "end_byte": 513,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 514,
                                              "end_byte": 515,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 516,
                                              "end_byte": 517,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 518,
                                      "end_byte": 523,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 518,
                                          "end_byte": 519,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 520,
                                          "end_byte": 521,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 522,
                                          "end_byte": 523,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ">",
                                  "start_byte": 524,
                                  "end_byte": 525,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 526,
                                  "end_byte": 529,
                                  "text": "max",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 530,
                              "end_byte": 531,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 532,
                          "end_byte": 579,
                          "text": "{ max = a [ i ] [ j ] ; posi = i ; posj = j ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 532,
                              "end_byte": 533,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 534,
                              "end_byte": 555,
                              "text": "max = a [ i ] [ j ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 534,
                                  "end_byte": 553,
                                  "text": "max = a [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 534,
                                      "end_byte": 537,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 538,
                                      "end_byte": 539,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 540,
                                      "end_byte": 553,
                                      "text": "a [ i ] [ j ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 540,
                                          "end_byte": 547,
                                          "text": "a [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 540,
                                              "end_byte": 541,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 542,
                                              "end_byte": 547,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 542,
                                                  "end_byte": 543,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 544,
                                                  "end_byte": 545,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 546,
                                                  "end_byte": 547,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 548,
                                          "end_byte": 553,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 548,
                                              "end_byte": 549,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 550,
                                              "end_byte": 551,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 552,
                                              "end_byte": 553,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 554,
                                  "end_byte": 555,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 556,
                              "end_byte": 566,
                              "text": "posi = i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 556,
                                  "end_byte": 564,
                                  "text": "posi = i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 556,
                                      "end_byte": 560,
                                      "text": "posi",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 561,
                                      "end_byte": 562,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 563,
                                      "end_byte": 564,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 565,
                                  "end_byte": 566,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 567,
                              "end_byte": 577,
                              "text": "posj = j ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 567,
                                  "end_byte": 575,
                                  "text": "posj = j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 567,
                                      "end_byte": 571,
                                      "text": "posj",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 572,
                                      "end_byte": 573,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 574,
                                      "end_byte": 575,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 576,
                                  "end_byte": 577,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 578,
                              "end_byte": 579,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 580,
              "end_byte": 592,
              "text": "sum += max ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 580,
                  "end_byte": 590,
                  "text": "sum += max",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 580,
                      "end_byte": 583,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "+=",
                      "start_byte": 584,
                      "end_byte": 586,
                      "text": "+=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 587,
                      "end_byte": 590,
                      "text": "max",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 591,
                  "end_byte": 592,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 593,
              "end_byte": 604,
              "text": "ii = posi ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 593,
                  "end_byte": 602,
                  "text": "ii = posi",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 593,
                      "end_byte": 595,
                      "text": "ii",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 596,
                      "end_byte": 597,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 598,
                      "end_byte": 602,
                      "text": "posi",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 603,
                  "end_byte": 604,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 605,
              "end_byte": 616,
              "text": "jj = posj ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 605,
                  "end_byte": 614,
                  "text": "jj = posj",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 605,
                      "end_byte": 607,
                      "text": "jj",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 608,
                      "end_byte": 609,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 610,
                      "end_byte": 614,
                      "text": "posj",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 615,
                  "end_byte": 616,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 617,
              "end_byte": 914,
              "text": "while ( posi > 0 ) { if ( posj == 0 ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else if ( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 617,
                  "end_byte": 622,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 623,
                  "end_byte": 635,
                  "text": "( posi > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 623,
                      "end_byte": 624,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 625,
                      "end_byte": 633,
                      "text": "posi > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 625,
                          "end_byte": 629,
                          "text": "posi",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 630,
                          "end_byte": 631,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 632,
                          "end_byte": 633,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 634,
                      "end_byte": 635,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 636,
                  "end_byte": 914,
                  "text": "{ if ( posj == 0 ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else if ( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 636,
                      "end_byte": 637,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 638,
                      "end_byte": 912,
                      "text": "if ( posj == 0 ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else if ( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 638,
                          "end_byte": 640,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 641,
                          "end_byte": 654,
                          "text": "( posj == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 641,
                              "end_byte": 642,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 643,
                              "end_byte": 652,
                              "text": "posj == 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 643,
                                  "end_byte": 647,
                                  "text": "posj",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 648,
                                  "end_byte": 650,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 651,
                                  "end_byte": 652,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 653,
                              "end_byte": 654,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 655,
                          "end_byte": 709,
                          "text": "{ sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 655,
                              "end_byte": 656,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 657,
                              "end_byte": 689,
                              "text": "sum += a [ posi - 1 ] [ posj ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 657,
                                  "end_byte": 687,
                                  "text": "sum += a [ posi - 1 ] [ posj ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 657,
                                      "end_byte": 660,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 661,
                                      "end_byte": 663,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 664,
                                      "end_byte": 687,
                                      "text": "a [ posi - 1 ] [ posj ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 664,
                                          "end_byte": 678,
                                          "text": "a [ posi - 1 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 664,
                                              "end_byte": 665,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 666,
                                              "end_byte": 678,
                                              "text": "[ posi - 1 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 666,
                                                  "end_byte": 667,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 668,
                                                  "end_byte": 676,
                                                  "text": "posi - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 668,
                                                      "end_byte": 672,
                                                      "text": "posi",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 673,
                                                      "end_byte": 674,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 675,
                                                      "end_byte": 676,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 677,
                                                  "end_byte": 678,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 679,
                                          "end_byte": 687,
                                          "text": "[ posj ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 679,
                                              "end_byte": 680,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 681,
                                              "end_byte": 685,
                                              "text": "posj",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 686,
                                              "end_byte": 687,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 688,
                                  "end_byte": 689,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 690,
                              "end_byte": 707,
                              "text": "posi = posi - 1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 690,
                                  "end_byte": 705,
                                  "text": "posi = posi - 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 690,
                                      "end_byte": 694,
                                      "text": "posi",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 695,
                                      "end_byte": 696,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 697,
                                      "end_byte": 705,
                                      "text": "posi - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 697,
                                          "end_byte": 701,
                                          "text": "posi",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 702,
                                          "end_byte": 703,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 704,
                                          "end_byte": 705,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 706,
                                  "end_byte": 707,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 708,
                              "end_byte": 709,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 710,
                          "end_byte": 912,
                          "text": "else if ( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 710,
                              "end_byte": 714,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 715,
                              "end_byte": 912,
                              "text": "if ( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] ) { sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; } else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 715,
                                  "end_byte": 717,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 718,
                                  "end_byte": 775,
                                  "text": "( a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 718,
                                      "end_byte": 719,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 720,
                                      "end_byte": 773,
                                      "text": "a [ posi - 1 ] [ posj ] > a [ posi - 1 ] [ posj - 1 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 720,
                                          "end_byte": 743,
                                          "text": "a [ posi - 1 ] [ posj ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 720,
                                              "end_byte": 734,
                                              "text": "a [ posi - 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 720,
                                                  "end_byte": 721,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 722,
                                                  "end_byte": 734,
                                                  "text": "[ posi - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 722,
                                                      "end_byte": 723,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 724,
                                                      "end_byte": 732,
                                                      "text": "posi - 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 724,
                                                          "end_byte": 728,
                                                          "text": "posi",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "-",
                                                          "start_byte": 729,
                                                          "end_byte": 730,
                                                          "text": "-",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 731,
                                                          "end_byte": 732,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 733,
                                                      "end_byte": 734,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 735,
                                              "end_byte": 743,
                                              "text": "[ posj ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 735,
                                                  "end_byte": 736,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 737,
                                                  "end_byte": 741,
                                                  "text": "posj",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 742,
                                                  "end_byte": 743,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 744,
                                          "end_byte": 745,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 746,
                                          "end_byte": 773,
                                          "text": "a [ posi - 1 ] [ posj - 1 ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 746,
                                              "end_byte": 760,
                                              "text": "a [ posi - 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 746,
                                                  "end_byte": 747,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 748,
                                                  "end_byte": 760,
                                                  "text": "[ posi - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 748,
                                                      "end_byte": 749,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 750,
                                                      "end_byte": 758,
                                                      "text": "posi - 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 750,
                                                          "end_byte": 754,
                                                          "text": "posi",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "-",
                                                          "start_byte": 755,
                                                          "end_byte": 756,
                                                          "text": "-",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 757,
                                                          "end_byte": 758,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 759,
                                                      "end_byte": 760,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 761,
                                              "end_byte": 773,
                                              "text": "[ posj - 1 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 761,
                                                  "end_byte": 762,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 763,
                                                  "end_byte": 771,
                                                  "text": "posj - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 763,
                                                      "end_byte": 767,
                                                      "text": "posj",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 768,
                                                      "end_byte": 769,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 770,
                                                      "end_byte": 771,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 772,
                                                  "end_byte": 773,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 774,
                                      "end_byte": 775,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 776,
                                  "end_byte": 830,
                                  "text": "{ sum += a [ posi - 1 ] [ posj ] ; posi = posi - 1 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 776,
                                      "end_byte": 777,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 778,
                                      "end_byte": 810,
                                      "text": "sum += a [ posi - 1 ] [ posj ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 778,
                                          "end_byte": 808,
                                          "text": "sum += a [ posi - 1 ] [ posj ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 778,
                                              "end_byte": 781,
                                              "text": "sum",
                                              "children": []
                                            },
                                            {
                                              "type": "+=",
                                              "start_byte": 782,
                                              "end_byte": 784,
                                              "text": "+=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 785,
                                              "end_byte": 808,
                                              "text": "a [ posi - 1 ] [ posj ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 785,
                                                  "end_byte": 799,
                                                  "text": "a [ posi - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 785,
                                                      "end_byte": 786,
                                                      "text": "a",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 787,
                                                      "end_byte": 799,
                                                      "text": "[ posi - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 787,
                                                          "end_byte": 788,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 789,
                                                          "end_byte": 797,
                                                          "text": "posi - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 789,
                                                              "end_byte": 793,
                                                              "text": "posi",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 794,
                                                              "end_byte": 795,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 796,
                                                              "end_byte": 797,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 798,
                                                          "end_byte": 799,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 800,
                                                  "end_byte": 808,
                                                  "text": "[ posj ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 800,
                                                      "end_byte": 801,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 802,
                                                      "end_byte": 806,
                                                      "text": "posj",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 807,
                                                      "end_byte": 808,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 809,
                                          "end_byte": 810,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 811,
                                      "end_byte": 828,
                                      "text": "posi = posi - 1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 811,
                                          "end_byte": 826,
                                          "text": "posi = posi - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 811,
                                              "end_byte": 815,
                                              "text": "posi",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 816,
                                              "end_byte": 817,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 818,
                                              "end_byte": 826,
                                              "text": "posi - 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 818,
                                                  "end_byte": 822,
                                                  "text": "posi",
                                                  "children": []
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 823,
                                                  "end_byte": 824,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 825,
                                                  "end_byte": 826,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 827,
                                          "end_byte": 828,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 829,
                                      "end_byte": 830,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 831,
                                  "end_byte": 912,
                                  "text": "else { sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 831,
                                      "end_byte": 835,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "compound_statement",
                                      "start_byte": 836,
                                      "end_byte": 912,
                                      "text": "{ sum += a [ posi - 1 ] [ posj - 1 ] ; posi = posi - 1 ; posj = posj - 1 ; }",
                                      "children": [
                                        {
                                          "type": "{",
                                          "start_byte": 836,
                                          "end_byte": 837,
                                          "text": "{",
                                          "children": []
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 838,
                                          "end_byte": 874,
                                          "text": "sum += a [ posi - 1 ] [ posj - 1 ] ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 838,
                                              "end_byte": 872,
                                              "text": "sum += a [ posi - 1 ] [ posj - 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 838,
                                                  "end_byte": 841,
                                                  "text": "sum",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+=",
                                                  "start_byte": 842,
                                                  "end_byte": 844,
                                                  "text": "+=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 845,
                                                  "end_byte": 872,
                                                  "text": "a [ posi - 1 ] [ posj - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 845,
                                                      "end_byte": 859,
                                                      "text": "a [ posi - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 845,
                                                          "end_byte": 846,
                                                          "text": "a",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 847,
                                                          "end_byte": 859,
                                                          "text": "[ posi - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 847,
                                                              "end_byte": 848,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 849,
                                                              "end_byte": 857,
                                                              "text": "posi - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 849,
                                                                  "end_byte": 853,
                                                                  "text": "posi",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 854,
                                                                  "end_byte": 855,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 856,
                                                                  "end_byte": 857,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 858,
                                                              "end_byte": 859,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 860,
                                                      "end_byte": 872,
                                                      "text": "[ posj - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 860,
                                                          "end_byte": 861,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 862,
                                                          "end_byte": 870,
                                                          "text": "posj - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 862,
                                                              "end_byte": 866,
                                                              "text": "posj",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 867,
                                                              "end_byte": 868,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 869,
                                                              "end_byte": 870,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 871,
                                                          "end_byte": 872,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 873,
                                              "end_byte": 874,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 875,
                                          "end_byte": 892,
                                          "text": "posi = posi - 1 ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 875,
                                              "end_byte": 890,
                                              "text": "posi = posi - 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 875,
                                                  "end_byte": 879,
                                                  "text": "posi",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 880,
                                                  "end_byte": 881,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 882,
                                                  "end_byte": 890,
                                                  "text": "posi - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 882,
                                                      "end_byte": 886,
                                                      "text": "posi",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 887,
                                                      "end_byte": 888,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 889,
                                                      "end_byte": 890,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 891,
                                              "end_byte": 892,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 893,
                                          "end_byte": 910,
                                          "text": "posj = posj - 1 ;",
                                          "children": [
                                            {
                                              "type": "assignment_expression",
                                              "start_byte": 893,
                                              "end_byte": 908,
                                              "text": "posj = posj - 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 893,
                                                  "end_byte": 897,
                                                  "text": "posj",
                                                  "children": []
                                                },
                                                {
                                                  "type": "=",
                                                  "start_byte": 898,
                                                  "end_byte": 899,
                                                  "text": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 900,
                                                  "end_byte": 908,
                                                  "text": "posj - 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 900,
                                                      "end_byte": 904,
                                                      "text": "posj",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "-",
                                                      "start_byte": 905,
                                                      "end_byte": 906,
                                                      "text": "-",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 907,
                                                      "end_byte": 908,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 909,
                                              "end_byte": 910,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "}",
                                          "start_byte": 911,
                                          "end_byte": 912,
                                          "text": "}",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 913,
                      "end_byte": 914,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 915,
              "end_byte": 926,
              "text": "posi = ii ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 915,
                  "end_byte": 924,
                  "text": "posi = ii",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 915,
                      "end_byte": 919,
                      "text": "posi",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 920,
                      "end_byte": 921,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 922,
                      "end_byte": 924,
                      "text": "ii",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 925,
                  "end_byte": 926,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 927,
              "end_byte": 938,
              "text": "posj = jj ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 927,
                  "end_byte": 936,
                  "text": "posj = jj",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 927,
                      "end_byte": 931,
                      "text": "posj",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 932,
                      "end_byte": 933,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 934,
                      "end_byte": 936,
                      "text": "jj",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 937,
                  "end_byte": 938,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 939,
              "end_byte": 1145,
              "text": "while ( posi < n - 1 ) { if ( a [ posi + 1 ] [ posj ] > a [ posi + 1 ] [ posj + 1 ] ) { sum += a [ posi + 1 ] [ posj ] ; posi += 1 ; } else { sum += a [ posi + 1 ] [ posj + 1 ] ; posi += 1 ; posj += 1 ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 939,
                  "end_byte": 944,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 945,
                  "end_byte": 961,
                  "text": "( posi < n - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 945,
                      "end_byte": 946,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 947,
                      "end_byte": 959,
                      "text": "posi < n - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 947,
                          "end_byte": 951,
                          "text": "posi",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 952,
                          "end_byte": 953,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 954,
                          "end_byte": 959,
                          "text": "n - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 954,
                              "end_byte": 955,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "-",
                              "start_byte": 956,
                              "end_byte": 957,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 958,
                              "end_byte": 959,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 960,
                      "end_byte": 961,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 962,
                  "end_byte": 1145,
                  "text": "{ if ( a [ posi + 1 ] [ posj ] > a [ posi + 1 ] [ posj + 1 ] ) { sum += a [ posi + 1 ] [ posj ] ; posi += 1 ; } else { sum += a [ posi + 1 ] [ posj + 1 ] ; posi += 1 ; posj += 1 ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 962,
                      "end_byte": 963,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 964,
                      "end_byte": 1143,
                      "text": "if ( a [ posi + 1 ] [ posj ] > a [ posi + 1 ] [ posj + 1 ] ) { sum += a [ posi + 1 ] [ posj ] ; posi += 1 ; } else { sum += a [ posi + 1 ] [ posj + 1 ] ; posi += 1 ; posj += 1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 964,
                          "end_byte": 966,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 967,
                          "end_byte": 1024,
                          "text": "( a [ posi + 1 ] [ posj ] > a [ posi + 1 ] [ posj + 1 ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 967,
                              "end_byte": 968,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 969,
                              "end_byte": 1022,
                              "text": "a [ posi + 1 ] [ posj ] > a [ posi + 1 ] [ posj + 1 ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 969,
                                  "end_byte": 992,
                                  "text": "a [ posi + 1 ] [ posj ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 969,
                                      "end_byte": 983,
                                      "text": "a [ posi + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 969,
                                          "end_byte": 970,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 971,
                                          "end_byte": 983,
                                          "text": "[ posi + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 971,
                                              "end_byte": 972,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 973,
                                              "end_byte": 981,
                                              "text": "posi + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 973,
                                                  "end_byte": 977,
                                                  "text": "posi",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 978,
                                                  "end_byte": 979,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 980,
                                                  "end_byte": 981,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 982,
                                              "end_byte": 983,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 984,
                                      "end_byte": 992,
                                      "text": "[ posj ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 984,
                                          "end_byte": 985,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 986,
                                          "end_byte": 990,
                                          "text": "posj",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 991,
                                          "end_byte": 992,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ">",
                                  "start_byte": 993,
                                  "end_byte": 994,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 995,
                                  "end_byte": 1022,
                                  "text": "a [ posi + 1 ] [ posj + 1 ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 995,
                                      "end_byte": 1009,
                                      "text": "a [ posi + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 995,
                                          "end_byte": 996,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 997,
                                          "end_byte": 1009,
                                          "text": "[ posi + 1 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 997,
                                              "end_byte": 998,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 999,
                                              "end_byte": 1007,
                                              "text": "posi + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 999,
                                                  "end_byte": 1003,
                                                  "text": "posi",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 1004,
                                                  "end_byte": 1005,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 1006,
                                                  "end_byte": 1007,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1008,
                                              "end_byte": 1009,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 1010,
                                      "end_byte": 1022,
                                      "text": "[ posj + 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 1010,
                                          "end_byte": 1011,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 1012,
                                          "end_byte": 1020,
                                          "text": "posj + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1012,
                                              "end_byte": 1016,
                                              "text": "posj",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 1017,
                                              "end_byte": 1018,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 1019,
                                              "end_byte": 1020,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 1021,
                                          "end_byte": 1022,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1023,
                              "end_byte": 1024,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1025,
                          "end_byte": 1073,
                          "text": "{ sum += a [ posi + 1 ] [ posj ] ; posi += 1 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1025,
                              "end_byte": 1026,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1027,
                              "end_byte": 1059,
                              "text": "sum += a [ posi + 1 ] [ posj ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1027,
                                  "end_byte": 1057,
                                  "text": "sum += a [ posi + 1 ] [ posj ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1027,
                                      "end_byte": 1030,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 1031,
                                      "end_byte": 1033,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1034,
                                      "end_byte": 1057,
                                      "text": "a [ posi + 1 ] [ posj ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1034,
                                          "end_byte": 1048,
                                          "text": "a [ posi + 1 ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1034,
                                              "end_byte": 1035,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1036,
                                              "end_byte": 1048,
                                              "text": "[ posi + 1 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1036,
                                                  "end_byte": 1037,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1038,
                                                  "end_byte": 1046,
                                                  "text": "posi + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1038,
                                                      "end_byte": 1042,
                                                      "text": "posi",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 1043,
                                                      "end_byte": 1044,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 1045,
                                                      "end_byte": 1046,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1047,
                                                  "end_byte": 1048,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1049,
                                          "end_byte": 1057,
                                          "text": "[ posj ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1049,
                                              "end_byte": 1050,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1051,
                                              "end_byte": 1055,
                                              "text": "posj",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1056,
                                              "end_byte": 1057,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1058,
                                  "end_byte": 1059,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1060,
                              "end_byte": 1071,
                              "text": "posi += 1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1060,
                                  "end_byte": 1069,
                                  "text": "posi += 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1060,
                                      "end_byte": 1064,
                                      "text": "posi",
                                      "children": []
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 1065,
                                      "end_byte": 1067,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1068,
                                      "end_byte": 1069,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1070,
                                  "end_byte": 1071,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1072,
                              "end_byte": 1073,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 1074,
                          "end_byte": 1143,
                          "text": "else { sum += a [ posi + 1 ] [ posj + 1 ] ; posi += 1 ; posj += 1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 1074,
                              "end_byte": 1078,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 1079,
                              "end_byte": 1143,
                              "text": "{ sum += a [ posi + 1 ] [ posj + 1 ] ; posi += 1 ; posj += 1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 1079,
                                  "end_byte": 1080,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1081,
                                  "end_byte": 1117,
                                  "text": "sum += a [ posi + 1 ] [ posj + 1 ] ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1081,
                                      "end_byte": 1115,
                                      "text": "sum += a [ posi + 1 ] [ posj + 1 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1081,
                                          "end_byte": 1084,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": "+=",
                                          "start_byte": 1085,
                                          "end_byte": 1087,
                                          "text": "+=",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1088,
                                          "end_byte": 1115,
                                          "text": "a [ posi + 1 ] [ posj + 1 ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1088,
                                              "end_byte": 1102,
                                              "text": "a [ posi + 1 ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1088,
                                                  "end_byte": 1089,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1090,
                                                  "end_byte": 1102,
                                                  "text": "[ posi + 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1090,
                                                      "end_byte": 1091,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 1092,
                                                      "end_byte": 1100,
                                                      "text": "posi + 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1092,
                                                          "end_byte": 1096,
                                                          "text": "posi",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "+",
                                                          "start_byte": 1097,
                                                          "end_byte": 1098,
                                                          "text": "+",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 1099,
                                                          "end_byte": 1100,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1101,
                                                      "end_byte": 1102,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1103,
                                              "end_byte": 1115,
                                              "text": "[ posj + 1 ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1103,
                                                  "end_byte": 1104,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 1105,
                                                  "end_byte": 1113,
                                                  "text": "posj + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1105,
                                                      "end_byte": 1109,
                                                      "text": "posj",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 1110,
                                                      "end_byte": 1111,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 1112,
                                                      "end_byte": 1113,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1114,
                                                  "end_byte": 1115,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1116,
                                      "end_byte": 1117,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1118,
                                  "end_byte": 1129,
                                  "text": "posi += 1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1118,
                                      "end_byte": 1127,
                                      "text": "posi += 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1118,
                                          "end_byte": 1122,
                                          "text": "posi",
                                          "children": []
                                        },
                                        {
                                          "type": "+=",
                                          "start_byte": 1123,
                                          "end_byte": 1125,
                                          "text": "+=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1126,
                                          "end_byte": 1127,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1128,
                                      "end_byte": 1129,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1130,
                                  "end_byte": 1141,
                                  "text": "posj += 1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1130,
                                      "end_byte": 1139,
                                      "text": "posj += 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1130,
                                          "end_byte": 1134,
                                          "text": "posj",
                                          "children": []
                                        },
                                        {
                                          "type": "+=",
                                          "start_byte": 1135,
                                          "end_byte": 1137,
                                          "text": "+=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1138,
                                          "end_byte": 1139,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1140,
                                      "end_byte": 1141,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 1142,
                                  "end_byte": 1143,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1144,
                      "end_byte": 1145,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1146,
              "end_byte": 1158,
              "text": "return sum ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1146,
                  "end_byte": 1152,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1153,
                  "end_byte": 1156,
                  "text": "sum",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1157,
                  "end_byte": 1158,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1159,
              "end_byte": 1160,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 1161,
      "end_byte": 1285,
      "text": "main ( ) { int n , p , i ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { p = check ( ) ; printf ( \"%d\\n\" , p ) ; } }",
      "children": [
        {
          "type": "function_declarator",
          "start_byte": 1161,
          "end_byte": 1169,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 1161,
              "end_byte": 1165,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 1166,
              "end_byte": 1169,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 1166,
                  "end_byte": 1167,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 1168,
                  "end_byte": 1169,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 1170,
          "end_byte": 1285,
          "text": "{ int n , p , i ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { p = check ( ) ; printf ( \"%d\\n\" , p ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 1170,
              "end_byte": 1171,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 1172,
              "end_byte": 1187,
              "text": "int n , p , i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 1172,
                  "end_byte": 1175,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1176,
                  "end_byte": 1177,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 1178,
                  "end_byte": 1179,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1180,
                  "end_byte": 1181,
                  "text": "p",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 1182,
                  "end_byte": 1183,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 1184,
                  "end_byte": 1185,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1186,
                  "end_byte": 1187,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1188,
              "end_byte": 1210,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 1188,
                  "end_byte": 1208,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1188,
                      "end_byte": 1193,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 1194,
                      "end_byte": 1208,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 1194,
                          "end_byte": 1195,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 1196,
                          "end_byte": 1200,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 1196,
                              "end_byte": 1197,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 1197,
                              "end_byte": 1199,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 1199,
                              "end_byte": 1200,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 1201,
                          "end_byte": 1202,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 1203,
                          "end_byte": 1206,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 1203,
                              "end_byte": 1204,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1205,
                              "end_byte": 1206,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1207,
                          "end_byte": 1208,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1209,
                  "end_byte": 1210,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 1211,
              "end_byte": 1283,
              "text": "for ( i = 0 ; i < n ; i ++ ) { p = check ( ) ; printf ( \"%d\\n\" , p ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 1211,
                  "end_byte": 1214,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 1215,
                  "end_byte": 1216,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 1217,
                  "end_byte": 1222,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1217,
                      "end_byte": 1218,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1219,
                      "end_byte": 1220,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1221,
                      "end_byte": 1222,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1223,
                  "end_byte": 1224,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1225,
                  "end_byte": 1230,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1225,
                      "end_byte": 1226,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 1227,
                      "end_byte": 1228,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1229,
                      "end_byte": 1230,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1231,
                  "end_byte": 1232,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1233,
                  "end_byte": 1237,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1233,
                      "end_byte": 1234,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 1235,
                      "end_byte": 1237,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1238,
                  "end_byte": 1239,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 1240,
                  "end_byte": 1283,
                  "text": "{ p = check ( ) ; printf ( \"%d\\n\" , p ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 1240,
                      "end_byte": 1241,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1242,
                      "end_byte": 1257,
                      "text": "p = check ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1242,
                          "end_byte": 1255,
                          "text": "p = check ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1242,
                              "end_byte": 1243,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1244,
                              "end_byte": 1245,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1246,
                              "end_byte": 1255,
                              "text": "check ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1246,
                                  "end_byte": 1251,
                                  "text": "check",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1252,
                                  "end_byte": 1255,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1252,
                                      "end_byte": 1253,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1254,
                                      "end_byte": 1255,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1256,
                          "end_byte": 1257,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1258,
                      "end_byte": 1281,
                      "text": "printf ( \"%d\\n\" , p ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1258,
                          "end_byte": 1279,
                          "text": "printf ( \"%d\\n\" , p )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1258,
                              "end_byte": 1264,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1265,
                              "end_byte": 1279,
                              "text": "( \"%d\\n\" , p )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1265,
                                  "end_byte": 1266,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1267,
                                  "end_byte": 1273,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1267,
                                      "end_byte": 1268,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1268,
                                      "end_byte": 1270,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1270,
                                      "end_byte": 1272,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1272,
                                      "end_byte": 1273,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1274,
                                  "end_byte": 1275,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1276,
                                  "end_byte": 1277,
                                  "text": "p",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1278,
                                  "end_byte": 1279,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1280,
                          "end_byte": 1281,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1282,
                      "end_byte": 1283,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1284,
              "end_byte": 1285,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}