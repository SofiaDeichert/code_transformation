int max ( long int a , long int b ) { if ( a >= b ) return a ; else return b ; } int min ( long int a , long int b ) { if ( a >= b ) return b ; else return a ; } int gcd ( int a , int b ) { if ( a > b && a % b == 0 ) { return b ; } else if ( a < b && b % a == 0 ) { return a ; } else return gcd ( b , a % b ) ; } long int min_of_n ( long int len , long int arr [ ] ) { long int i = 0 , j = 1 ; long int minimum = min ( arr [ 0 ] , arr [ 1 ] ) ; if ( len % 2 == 0 ) { for ( ; i < len && j < len ; i += 2 , j += 2 ) { long int temp = ( min ( arr [ i ] , arr [ j ] ) ) ; if ( temp < minimum ) { minimum = temp ; } } } if ( len % 2 != 0 ) { for ( ; i < len && j < len ; i += 2 , j += 2 ) { long int temp = ( min ( arr [ i ] , arr [ j ] ) ) ; if ( temp < minimum ) { minimum = temp ; } minimum = min ( minimum , arr [ len - 1 ] ) ; } } return minimum * ( len - 1 ) ; } int main ( ) { int t ; long int a [ 50001 ] ; scanf ( "%d" , & t ) ; while ( t -- ) { long int n ; scanf ( "%li" , & n ) ; long int noneed = 0 ; for ( noneed = 0 ; noneed < n ; noneed ++ ) { scanf ( "%li" , & a [ noneed ] ) ; } printf ( "%li\n" , min_of_n ( n , a ) ) ; } return 0 ; }