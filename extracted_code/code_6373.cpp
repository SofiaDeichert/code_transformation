long int max ( int a [ 101 ] [ 101 ] , int x , int y , long int m [ 101 ] [ 101 ] ) { if ( a [ x ] [ y ] < 0 ) return 0 ; if ( m [ x ] [ y ] >= 0 ) return m [ x ] [ y ] ; long int b , r ; b = max ( a , x + 1 , y , m ) ; r = max ( a , x + 1 , y + 1 , m ) ; if ( b < r ) m [ x ] [ y ] = a [ x ] [ y ] + r ; else m [ x ] [ y ] = a [ x ] [ y ] + b ; return m [ x ] [ y ] ; } int main ( ) { int a [ 101 ] [ 101 ] ; long int m [ 101 ] [ 101 ] ; int t ; long int res [ 10000 ] ; scanf ( "%d" , & t ) ; int i , j , n , k ; for ( i = 0 ; i < t ; i ++ ) { scanf ( "%d" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%d" , a [ j ] + k ) ; } } for ( j = 0 ; j < n + 1 ; j ++ ) { a [ n ] [ j ] = - 1 ; } for ( j = 0 ; j < 101 ; j ++ ) { for ( k = 0 ; k < 101 ; k ++ ) { m [ j ] [ k ] = - 1 ; } } res [ i ] = max ( a , 0 , 0 , m ) ; } for ( i = 0 ; i < t ; i ++ ) { printf ( "%ld\n" , res [ i ] ) ; } return 0 ; }