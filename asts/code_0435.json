{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 534,
  "text": "int main ( void ) { int A , B , gcd , lcm , numerator , denominator , remainder ; printf ( \"enter two numbers:\" ) ; scanf ( \"%d%d\" , & A , & B ) ; if ( A > B ) { A = numerator ; B = denominator ; } else { A = denominator ; B = numerator ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = A * B / gcd ; printf ( \"gcd of %d and %d= %d\" , gcd ) ; printf ( \"lcm of %d and %d =%d\" , lcm ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 534,
      "text": "int main ( void ) { int A , B , gcd , lcm , numerator , denominator , remainder ; printf ( \"enter two numbers:\" ) ; scanf ( \"%d%d\" , & A , & B ) ; if ( A > B ) { A = numerator ; B = denominator ; } else { A = denominator ; B = numerator ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = A * B / gcd ; printf ( \"gcd of %d and %d= %d\" , gcd ) ; printf ( \"lcm of %d and %d =%d\" , lcm ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 17,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 15,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 534,
          "text": "{ int A , B , gcd , lcm , numerator , denominator , remainder ; printf ( \"enter two numbers:\" ) ; scanf ( \"%d%d\" , & A , & B ) ; if ( A > B ) { A = numerator ; B = denominator ; } else { A = denominator ; B = numerator ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = A * B / gcd ; printf ( \"gcd of %d and %d= %d\" , gcd ) ; printf ( \"lcm of %d and %d =%d\" , lcm ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 81,
              "text": "int A , B , gcd , lcm , numerator , denominator , remainder ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 20,
                  "end_byte": 23,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 35,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 41,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 53,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 56,
                  "end_byte": 67,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 70,
                  "end_byte": 79,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 82,
              "end_byte": 115,
              "text": "printf ( \"enter two numbers:\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 82,
                  "end_byte": 113,
                  "text": "printf ( \"enter two numbers:\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 82,
                      "end_byte": 88,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 89,
                      "end_byte": 113,
                      "text": "( \"enter two numbers:\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 91,
                          "end_byte": 111,
                          "text": "\"enter two numbers:\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 92,
                              "end_byte": 110,
                              "text": "enter two numbers:",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 114,
                  "end_byte": 115,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 116,
              "end_byte": 146,
              "text": "scanf ( \"%d%d\" , & A , & B ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 116,
                  "end_byte": 144,
                  "text": "scanf ( \"%d%d\" , & A , & B )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 116,
                      "end_byte": 121,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 122,
                      "end_byte": 144,
                      "text": "( \"%d%d\" , & A , & B )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 124,
                          "end_byte": 130,
                          "text": "\"%d%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 124,
                              "end_byte": 125,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 125,
                              "end_byte": 129,
                              "text": "%d%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 129,
                              "end_byte": 130,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 131,
                          "end_byte": 132,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 133,
                          "end_byte": 136,
                          "text": "& A",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 133,
                              "end_byte": 134,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "A",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 139,
                          "end_byte": 142,
                          "text": "& B",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 141,
                              "end_byte": 142,
                              "text": "B",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 143,
                          "end_byte": 144,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 145,
                  "end_byte": 146,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 147,
              "end_byte": 240,
              "text": "if ( A > B ) { A = numerator ; B = denominator ; } else { A = denominator ; B = numerator ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 147,
                  "end_byte": 149,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 150,
                  "end_byte": 159,
                  "text": "( A > B )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 150,
                      "end_byte": 151,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 152,
                      "end_byte": 157,
                      "text": "A > B",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 156,
                          "end_byte": 157,
                          "text": "B",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 160,
                  "end_byte": 197,
                  "text": "{ A = numerator ; B = denominator ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 160,
                      "end_byte": 161,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 162,
                      "end_byte": 177,
                      "text": "A = numerator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 162,
                          "end_byte": 175,
                          "text": "A = numerator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": "A",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 166,
                              "end_byte": 175,
                              "text": "numerator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 176,
                          "end_byte": 177,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 178,
                      "end_byte": 195,
                      "text": "B = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 178,
                          "end_byte": 193,
                          "text": "B = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 178,
                              "end_byte": 179,
                              "text": "B",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 182,
                              "end_byte": 193,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 194,
                          "end_byte": 195,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 196,
                      "end_byte": 197,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 198,
                  "end_byte": 240,
                  "text": "else { A = denominator ; B = numerator ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 198,
                      "end_byte": 202,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 203,
                      "end_byte": 240,
                      "text": "{ A = denominator ; B = numerator ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 203,
                          "end_byte": 204,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 205,
                          "end_byte": 222,
                          "text": "A = denominator ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 205,
                              "end_byte": 220,
                              "text": "A = denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 205,
                                  "end_byte": 206,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 207,
                                  "end_byte": 208,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 209,
                                  "end_byte": 220,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 221,
                              "end_byte": 222,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 223,
                          "end_byte": 238,
                          "text": "B = numerator ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 223,
                              "end_byte": 236,
                              "text": "B = numerator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 223,
                                  "end_byte": 224,
                                  "text": "B",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 225,
                                  "end_byte": 226,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 227,
                                  "end_byte": 236,
                                  "text": "numerator",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 237,
                              "end_byte": 238,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 239,
                          "end_byte": 240,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 241,
              "end_byte": 278,
              "text": "remainder = numerator % denominator ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 241,
                  "end_byte": 276,
                  "text": "remainder = numerator % denominator",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 241,
                      "end_byte": 250,
                      "text": "remainder",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 251,
                      "end_byte": 252,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 253,
                      "end_byte": 276,
                      "text": "numerator % denominator",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 253,
                          "end_byte": 262,
                          "text": "numerator",
                          "children": []
                        },
                        {
                          "type": "%",
                          "start_byte": 263,
                          "end_byte": 264,
                          "text": "%",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 265,
                          "end_byte": 276,
                          "text": "denominator",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 277,
                  "end_byte": 278,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 279,
              "end_byte": 397,
              "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 279,
                  "end_byte": 284,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 285,
                  "end_byte": 303,
                  "text": "( remainder != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 287,
                      "end_byte": 301,
                      "text": "remainder != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 287,
                          "end_byte": 296,
                          "text": "remainder",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 297,
                          "end_byte": 299,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 300,
                          "end_byte": 301,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 302,
                      "end_byte": 303,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 304,
                  "end_byte": 397,
                  "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 304,
                      "end_byte": 305,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 306,
                      "end_byte": 331,
                      "text": "numerator = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 306,
                          "end_byte": 329,
                          "text": "numerator = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 306,
                              "end_byte": 315,
                              "text": "numerator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 316,
                              "end_byte": 317,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 318,
                              "end_byte": 329,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 330,
                          "end_byte": 331,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 332,
                      "end_byte": 357,
                      "text": "denominator = remainder ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 332,
                          "end_byte": 355,
                          "text": "denominator = remainder",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 332,
                              "end_byte": 343,
                              "text": "denominator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 344,
                              "end_byte": 345,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 346,
                              "end_byte": 355,
                              "text": "remainder",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 358,
                      "end_byte": 395,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 358,
                          "end_byte": 393,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 358,
                              "end_byte": 367,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 368,
                              "end_byte": 369,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 370,
                              "end_byte": 393,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 370,
                                  "end_byte": 379,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 380,
                                  "end_byte": 381,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 382,
                                  "end_byte": 393,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 394,
                          "end_byte": 395,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 396,
                      "end_byte": 397,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 398,
              "end_byte": 417,
              "text": "gcd = denominator ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 398,
                  "end_byte": 415,
                  "text": "gcd = denominator",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 398,
                      "end_byte": 401,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 402,
                      "end_byte": 403,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 404,
                      "end_byte": 415,
                      "text": "denominator",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 416,
                  "end_byte": 417,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 418,
              "end_byte": 437,
              "text": "lcm = A * B / gcd ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 418,
                  "end_byte": 435,
                  "text": "lcm = A * B / gcd",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 418,
                      "end_byte": 421,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 422,
                      "end_byte": 423,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 424,
                      "end_byte": 435,
                      "text": "A * B / gcd",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 424,
                          "end_byte": 429,
                          "text": "A * B",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "A",
                              "children": []
                            },
                            {
                              "type": "*",
                              "start_byte": 426,
                              "end_byte": 427,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 428,
                              "end_byte": 429,
                              "text": "B",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 430,
                          "end_byte": 431,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 432,
                          "end_byte": 435,
                          "text": "gcd",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 436,
                  "end_byte": 437,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 438,
              "end_byte": 479,
              "text": "printf ( \"gcd of %d and %d= %d\" , gcd ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 438,
                  "end_byte": 477,
                  "text": "printf ( \"gcd of %d and %d= %d\" , gcd )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 438,
                      "end_byte": 444,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 445,
                      "end_byte": 477,
                      "text": "( \"gcd of %d and %d= %d\" , gcd )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 445,
                          "end_byte": 446,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 447,
                          "end_byte": 469,
                          "text": "\"gcd of %d and %d= %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 447,
                              "end_byte": 448,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 448,
                              "end_byte": 468,
                              "text": "gcd of %d and %d= %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 468,
                              "end_byte": 469,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 470,
                          "end_byte": 471,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 472,
                          "end_byte": 475,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 476,
                          "end_byte": 477,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 478,
                  "end_byte": 479,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 480,
              "end_byte": 521,
              "text": "printf ( \"lcm of %d and %d =%d\" , lcm ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 480,
                  "end_byte": 519,
                  "text": "printf ( \"lcm of %d and %d =%d\" , lcm )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 480,
                      "end_byte": 486,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 487,
                      "end_byte": 519,
                      "text": "( \"lcm of %d and %d =%d\" , lcm )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 487,
                          "end_byte": 488,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 489,
                          "end_byte": 511,
                          "text": "\"lcm of %d and %d =%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 489,
                              "end_byte": 490,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 490,
                              "end_byte": 510,
                              "text": "lcm of %d and %d =%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 510,
                              "end_byte": 511,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 512,
                          "end_byte": 513,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 514,
                          "end_byte": 517,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 518,
                          "end_byte": 519,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 520,
                  "end_byte": 521,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 522,
              "end_byte": 532,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 522,
                  "end_byte": 528,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 529,
                  "end_byte": 530,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 531,
                  "end_byte": 532,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 533,
              "end_byte": 534,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}