int dope [ 106 ] [ 106 ] , i , j ; int tr [ 106 ] [ 106 ] ; int max ( int x , int y ) { return x > y ? x : y ; } int maxs ( int tr [ ] [ 106 ] , int n ) { for ( i = 0 ; i < n ; i ++ ) dope [ n - 1 ] [ i ] = tr [ n - 1 ] [ i ] ; for ( i = n - 2 ; i >= 0 ; i -- ) { for ( j = 0 ; j <= i ; j ++ ) dope [ i ] [ j ] = tr [ i ] [ j ] + max ( dope [ i + 1 ] [ j ] , dope [ i + 1 ] [ j + 1 ] ) ; dope [ i ] [ n - 1 ] = tr [ i ] [ n - 1 ] + max ( dope [ i + 1 ] [ n - 2 ] , dope [ i + 1 ] [ n - 1 ] ) ; } return dope [ 0 ] [ 0 ] ; } int main ( void ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int n ; scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & tr [ i ] [ j ] ) ; printf ( "%d\n" , maxs ( tr , n ) ) ; } }