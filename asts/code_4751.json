{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 332,
  "text": "main ( ) { int a , b ; int temp , gcd ; long lcm , product ; printf ( \"\\n enter two number\" ) ; scanf ( \"%d%d\" , & a , & b ) ; product = a * b ; while ( a > 0 ) { if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; } gcd = b ; lcm = product / gcd ; printf ( \"\\ngcd and lcm values are:\" ) ; printf ( \"%d\\t%d\" , gcd , lcm ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 332,
      "text": "main ( ) { int a , b ; int temp , gcd ; long lcm , product ; printf ( \"\\n enter two number\" ) ; scanf ( \"%d%d\" , & a , & b ) ; product = a * b ; while ( a > 0 ) { if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; } gcd = b ; lcm = product / gcd ; printf ( \"\\ngcd and lcm values are:\" ) ; printf ( \"%d\\t%d\" , gcd , lcm ) ; }",
      "children": [
        {
          "type": "function_declarator",
          "start_byte": 0,
          "end_byte": 8,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 0,
              "end_byte": 4,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 5,
              "end_byte": 8,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 5,
                  "end_byte": 6,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 7,
                  "end_byte": 8,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 9,
          "end_byte": 332,
          "text": "{ int a , b ; int temp , gcd ; long lcm , product ; printf ( \"\\n enter two number\" ) ; scanf ( \"%d%d\" , & a , & b ) ; product = a * b ; while ( a > 0 ) { if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; } gcd = b ; lcm = product / gcd ; printf ( \"\\ngcd and lcm values are:\" ) ; printf ( \"%d\\t%d\" , gcd , lcm ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 9,
              "end_byte": 10,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 11,
              "end_byte": 22,
              "text": "int a , b ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 11,
                  "end_byte": 14,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 15,
                  "end_byte": 16,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 23,
              "end_byte": 39,
              "text": "int temp , gcd ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 23,
                  "end_byte": 26,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 40,
              "end_byte": 60,
              "text": "long lcm , product ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 40,
                  "end_byte": 44,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 40,
                      "end_byte": 44,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 48,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 58,
                  "text": "product",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 61,
              "end_byte": 95,
              "text": "printf ( \"\\n enter two number\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 61,
                  "end_byte": 93,
                  "text": "printf ( \"\\n enter two number\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 61,
                      "end_byte": 67,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 68,
                      "end_byte": 93,
                      "text": "( \"\\n enter two number\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 68,
                          "end_byte": 69,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 70,
                          "end_byte": 91,
                          "text": "\"\\n enter two number\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 70,
                              "end_byte": 71,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 71,
                              "end_byte": 73,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 73,
                              "end_byte": 90,
                              "text": " enter two number",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 90,
                              "end_byte": 91,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 92,
                          "end_byte": 93,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 96,
              "end_byte": 126,
              "text": "scanf ( \"%d%d\" , & a , & b ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 96,
                  "end_byte": 124,
                  "text": "scanf ( \"%d%d\" , & a , & b )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 96,
                      "end_byte": 101,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 102,
                      "end_byte": 124,
                      "text": "( \"%d%d\" , & a , & b )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 104,
                          "end_byte": 110,
                          "text": "\"%d%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 105,
                              "end_byte": 109,
                              "text": "%d%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 113,
                          "end_byte": 116,
                          "text": "& a",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 113,
                              "end_byte": 114,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 115,
                              "end_byte": 116,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 119,
                          "end_byte": 122,
                          "text": "& b",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 119,
                              "end_byte": 120,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 121,
                              "end_byte": 122,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 125,
                  "end_byte": 126,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 127,
              "end_byte": 144,
              "text": "product = a * b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 127,
                  "end_byte": 142,
                  "text": "product = a * b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 127,
                      "end_byte": 134,
                      "text": "product",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 135,
                      "end_byte": 136,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 137,
                      "end_byte": 142,
                      "text": "a * b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "*",
                          "start_byte": 139,
                          "end_byte": 140,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 141,
                          "end_byte": 142,
                          "text": "b",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 143,
                  "end_byte": 144,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 145,
              "end_byte": 223,
              "text": "while ( a > 0 ) { if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 145,
                  "end_byte": 150,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 151,
                  "end_byte": 160,
                  "text": "( a > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 151,
                      "end_byte": 152,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 153,
                      "end_byte": 158,
                      "text": "a > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 155,
                          "end_byte": 156,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 157,
                          "end_byte": 158,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 159,
                      "end_byte": 160,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 161,
                  "end_byte": 223,
                  "text": "{ if ( a < b ) { temp = a ; a = b ; b = temp ; } a = a % b ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 163,
                      "end_byte": 209,
                      "text": "if ( a < b ) { temp = a ; a = b ; b = temp ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 163,
                          "end_byte": 165,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 166,
                          "end_byte": 175,
                          "text": "( a < b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 166,
                              "end_byte": 167,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 168,
                              "end_byte": 173,
                              "text": "a < b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 168,
                                  "end_byte": 169,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 170,
                                  "end_byte": 171,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 176,
                          "end_byte": 209,
                          "text": "{ temp = a ; a = b ; b = temp ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 178,
                              "end_byte": 188,
                              "text": "temp = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 178,
                                  "end_byte": 186,
                                  "text": "temp = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 178,
                                      "end_byte": 182,
                                      "text": "temp",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 185,
                                      "end_byte": 186,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 187,
                                  "end_byte": 188,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 189,
                              "end_byte": 196,
                              "text": "a = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 189,
                                  "end_byte": 194,
                                  "text": "a = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 189,
                                      "end_byte": 190,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 191,
                                      "end_byte": 192,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 193,
                                      "end_byte": 194,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 195,
                                  "end_byte": 196,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 197,
                              "end_byte": 207,
                              "text": "b = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 197,
                                  "end_byte": 205,
                                  "text": "b = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 199,
                                      "end_byte": 200,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 201,
                                      "end_byte": 205,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 206,
                                  "end_byte": 207,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 208,
                              "end_byte": 209,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 210,
                      "end_byte": 221,
                      "text": "a = a % b ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 210,
                          "end_byte": 219,
                          "text": "a = a % b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 210,
                              "end_byte": 211,
                              "text": "a",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 212,
                              "end_byte": 213,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 214,
                              "end_byte": 219,
                              "text": "a % b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 214,
                                  "end_byte": 215,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 216,
                                  "end_byte": 217,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 218,
                                  "end_byte": 219,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 220,
                          "end_byte": 221,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 222,
                      "end_byte": 223,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 224,
              "end_byte": 233,
              "text": "gcd = b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 224,
                  "end_byte": 231,
                  "text": "gcd = b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 224,
                      "end_byte": 227,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 228,
                      "end_byte": 229,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 230,
                      "end_byte": 231,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 232,
                  "end_byte": 233,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 234,
              "end_byte": 255,
              "text": "lcm = product / gcd ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 234,
                  "end_byte": 253,
                  "text": "lcm = product / gcd",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 234,
                      "end_byte": 237,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 238,
                      "end_byte": 239,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 240,
                      "end_byte": 253,
                      "text": "product / gcd",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 240,
                          "end_byte": 247,
                          "text": "product",
                          "children": []
                        },
                        {
                          "type": "/",
                          "start_byte": 248,
                          "end_byte": 249,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 250,
                          "end_byte": 253,
                          "text": "gcd",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 254,
                  "end_byte": 255,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 256,
              "end_byte": 296,
              "text": "printf ( \"\\ngcd and lcm values are:\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 256,
                  "end_byte": 294,
                  "text": "printf ( \"\\ngcd and lcm values are:\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 256,
                      "end_byte": 262,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 263,
                      "end_byte": 294,
                      "text": "( \"\\ngcd and lcm values are:\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 263,
                          "end_byte": 264,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 265,
                          "end_byte": 292,
                          "text": "\"\\ngcd and lcm values are:\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 265,
                              "end_byte": 266,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 266,
                              "end_byte": 268,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 268,
                              "end_byte": 291,
                              "text": "gcd and lcm values are:",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 291,
                              "end_byte": 292,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 293,
                          "end_byte": 294,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 295,
                  "end_byte": 296,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 297,
              "end_byte": 330,
              "text": "printf ( \"%d\\t%d\" , gcd , lcm ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 297,
                  "end_byte": 328,
                  "text": "printf ( \"%d\\t%d\" , gcd , lcm )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 297,
                      "end_byte": 303,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 304,
                      "end_byte": 328,
                      "text": "( \"%d\\t%d\" , gcd , lcm )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 304,
                          "end_byte": 305,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 306,
                          "end_byte": 314,
                          "text": "\"%d\\t%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 307,
                              "end_byte": 309,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 309,
                              "end_byte": 311,
                              "text": "\\t",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 311,
                              "end_byte": 313,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 313,
                              "end_byte": 314,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 317,
                          "end_byte": 320,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 321,
                          "end_byte": 322,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 323,
                          "end_byte": 326,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 327,
                          "end_byte": 328,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 329,
                  "end_byte": 330,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 331,
              "end_byte": 332,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}