{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 690,
  "text": "static int map [ 100 ] [ 100 ] ; int path ( const int max , int row , int col , int value ) { value += map [ row ] [ col ] ; if ( row >= max ) return value ; int leftval = path ( max , row + 1 , col , value ) ; int rightval = path ( max , row + 1 , col + 1 , value ) ; return ( ( leftval > rightval ) ? leftval : rightval ) ; } int main ( void ) { int tris ; scanf ( \"%d\" , & tris ) ; int i ; for ( i = 0 ; i < tris ; ++ i ) { int rows ; scanf ( \"%d\" , & rows ) ; memset ( map , 0 , 100 * 100 ) ; int j ; for ( j = 0 ; j < rows ; ++ j ) { int k ; for ( k = 0 ; k <= j ; ++ k ) { scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; } } printf ( \"%d\\n\" , path ( rows - 1 , 0 , 0 , 0 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 32,
      "text": "static int map [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "storage_class_specifier",
          "start_byte": 0,
          "end_byte": 6,
          "text": "static",
          "children": [
            {
              "type": "static",
              "start_byte": 0,
              "end_byte": 6,
              "text": "static",
              "children": []
            }
          ]
        },
        {
          "type": "primitive_type",
          "start_byte": 7,
          "end_byte": 10,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 11,
          "end_byte": 30,
          "text": "map [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 11,
              "end_byte": 22,
              "text": "map [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 11,
                  "end_byte": 14,
                  "text": "map",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 15,
                  "end_byte": 16,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 17,
                  "end_byte": 20,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 23,
              "end_byte": 24,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 25,
              "end_byte": 28,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 29,
              "end_byte": 30,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 31,
          "end_byte": 32,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 33,
      "end_byte": 327,
      "text": "int path ( const int max , int row , int col , int value ) { value += map [ row ] [ col ] ; if ( row >= max ) return value ; int leftval = path ( max , row + 1 , col , value ) ; int rightval = path ( max , row + 1 , col + 1 , value ) ; return ( ( leftval > rightval ) ? leftval : rightval ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 33,
          "end_byte": 36,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 37,
          "end_byte": 91,
          "text": "path ( const int max , int row , int col , int value )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 37,
              "end_byte": 41,
              "text": "path",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 42,
              "end_byte": 91,
              "text": "( const int max , int row , int col , int value )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 44,
                  "end_byte": 57,
                  "text": "const int max",
                  "children": [
                    {
                      "type": "type_qualifier",
                      "start_byte": 44,
                      "end_byte": 49,
                      "text": "const",
                      "children": [
                        {
                          "type": "const",
                          "start_byte": 44,
                          "end_byte": 49,
                          "text": "const",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 50,
                      "end_byte": 53,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 57,
                      "text": "max",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 60,
                  "end_byte": 67,
                  "text": "int row",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 60,
                      "end_byte": 63,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 64,
                      "end_byte": 67,
                      "text": "row",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 70,
                  "end_byte": 77,
                  "text": "int col",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 70,
                      "end_byte": 73,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 74,
                      "end_byte": 77,
                      "text": "col",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 80,
                  "end_byte": 89,
                  "text": "int value",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 80,
                      "end_byte": 83,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 84,
                      "end_byte": 89,
                      "text": "value",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 90,
                  "end_byte": 91,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 92,
          "end_byte": 327,
          "text": "{ value += map [ row ] [ col ] ; if ( row >= max ) return value ; int leftval = path ( max , row + 1 , col , value ) ; int rightval = path ( max , row + 1 , col + 1 , value ) ; return ( ( leftval > rightval ) ? leftval : rightval ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 92,
              "end_byte": 93,
              "text": "{",
              "children": []
            },
            {
              "type": "expression_statement",
              "start_byte": 94,
              "end_byte": 124,
              "text": "value += map [ row ] [ col ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 94,
                  "end_byte": 122,
                  "text": "value += map [ row ] [ col ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 94,
                      "end_byte": 99,
                      "text": "value",
                      "children": []
                    },
                    {
                      "type": "+=",
                      "start_byte": 100,
                      "end_byte": 102,
                      "text": "+=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 103,
                      "end_byte": 122,
                      "text": "map [ row ] [ col ]",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 103,
                          "end_byte": 114,
                          "text": "map [ row ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 103,
                              "end_byte": 106,
                              "text": "map",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 107,
                              "end_byte": 114,
                              "text": "[ row ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 107,
                                  "end_byte": 108,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 109,
                                  "end_byte": 112,
                                  "text": "row",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 113,
                                  "end_byte": 114,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 115,
                          "end_byte": 122,
                          "text": "[ col ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 115,
                              "end_byte": 116,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 117,
                              "end_byte": 120,
                              "text": "col",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 121,
                              "end_byte": 122,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 123,
                  "end_byte": 124,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 125,
              "end_byte": 157,
              "text": "if ( row >= max ) return value ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 125,
                  "end_byte": 127,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 128,
                  "end_byte": 142,
                  "text": "( row >= max )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 130,
                      "end_byte": 140,
                      "text": "row >= max",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 130,
                          "end_byte": 133,
                          "text": "row",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 134,
                          "end_byte": 136,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 137,
                          "end_byte": 140,
                          "text": "max",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 141,
                      "end_byte": 142,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 143,
                  "end_byte": 157,
                  "text": "return value ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 143,
                      "end_byte": 149,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 150,
                      "end_byte": 155,
                      "text": "value",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 158,
              "end_byte": 210,
              "text": "int leftval = path ( max , row + 1 , col , value ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 158,
                  "end_byte": 161,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 162,
                  "end_byte": 208,
                  "text": "leftval = path ( max , row + 1 , col , value )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 162,
                      "end_byte": 169,
                      "text": "leftval",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 170,
                      "end_byte": 171,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 172,
                      "end_byte": 208,
                      "text": "path ( max , row + 1 , col , value )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 172,
                          "end_byte": 176,
                          "text": "path",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 177,
                          "end_byte": 208,
                          "text": "( max , row + 1 , col , value )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 177,
                              "end_byte": 178,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 179,
                              "end_byte": 182,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 185,
                              "end_byte": 192,
                              "text": "row + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 185,
                                  "end_byte": 188,
                                  "text": "row",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 189,
                                  "end_byte": 190,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 191,
                                  "end_byte": 192,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 195,
                              "end_byte": 198,
                              "text": "col",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 199,
                              "end_byte": 200,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 201,
                              "end_byte": 206,
                              "text": "value",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 207,
                              "end_byte": 208,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 209,
                  "end_byte": 210,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 211,
              "end_byte": 268,
              "text": "int rightval = path ( max , row + 1 , col + 1 , value ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 211,
                  "end_byte": 214,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 215,
                  "end_byte": 266,
                  "text": "rightval = path ( max , row + 1 , col + 1 , value )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 215,
                      "end_byte": 223,
                      "text": "rightval",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 224,
                      "end_byte": 225,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 226,
                      "end_byte": 266,
                      "text": "path ( max , row + 1 , col + 1 , value )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 226,
                          "end_byte": 230,
                          "text": "path",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 231,
                          "end_byte": 266,
                          "text": "( max , row + 1 , col + 1 , value )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 231,
                              "end_byte": 232,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 233,
                              "end_byte": 236,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 237,
                              "end_byte": 238,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 239,
                              "end_byte": 246,
                              "text": "row + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 239,
                                  "end_byte": 242,
                                  "text": "row",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 243,
                                  "end_byte": 244,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 245,
                                  "end_byte": 246,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 247,
                              "end_byte": 248,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 249,
                              "end_byte": 256,
                              "text": "col + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 249,
                                  "end_byte": 252,
                                  "text": "col",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 253,
                                  "end_byte": 254,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 255,
                                  "end_byte": 256,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 259,
                              "end_byte": 264,
                              "text": "value",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 265,
                              "end_byte": 266,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 267,
                  "end_byte": 268,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 269,
              "end_byte": 325,
              "text": "return ( ( leftval > rightval ) ? leftval : rightval ) ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 269,
                  "end_byte": 275,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "parenthesized_expression",
                  "start_byte": 276,
                  "end_byte": 323,
                  "text": "( ( leftval > rightval ) ? leftval : rightval )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 276,
                      "end_byte": 277,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "conditional_expression",
                      "start_byte": 278,
                      "end_byte": 321,
                      "text": "( leftval > rightval ) ? leftval : rightval",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 278,
                          "end_byte": 300,
                          "text": "( leftval > rightval )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 278,
                              "end_byte": 279,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 280,
                              "end_byte": 298,
                              "text": "leftval > rightval",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 280,
                                  "end_byte": 287,
                                  "text": "leftval",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 288,
                                  "end_byte": 289,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 290,
                                  "end_byte": 298,
                                  "text": "rightval",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 299,
                              "end_byte": 300,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": "?",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 303,
                          "end_byte": 310,
                          "text": "leftval",
                          "children": []
                        },
                        {
                          "type": ":",
                          "start_byte": 311,
                          "end_byte": 312,
                          "text": ":",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 313,
                          "end_byte": 321,
                          "text": "rightval",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 322,
                      "end_byte": 323,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 324,
                  "end_byte": 325,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 326,
              "end_byte": 327,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 328,
      "end_byte": 690,
      "text": "int main ( void ) { int tris ; scanf ( \"%d\" , & tris ) ; int i ; for ( i = 0 ; i < tris ; ++ i ) { int rows ; scanf ( \"%d\" , & rows ) ; memset ( map , 0 , 100 * 100 ) ; int j ; for ( j = 0 ; j < rows ; ++ j ) { int k ; for ( k = 0 ; k <= j ; ++ k ) { scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; } } printf ( \"%d\\n\" , path ( rows - 1 , 0 , 0 , 0 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 328,
          "end_byte": 331,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 332,
          "end_byte": 345,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 332,
              "end_byte": 336,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 337,
              "end_byte": 345,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 337,
                  "end_byte": 338,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 339,
                  "end_byte": 343,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 339,
                      "end_byte": 343,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 344,
                  "end_byte": 345,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 346,
          "end_byte": 690,
          "text": "{ int tris ; scanf ( \"%d\" , & tris ) ; int i ; for ( i = 0 ; i < tris ; ++ i ) { int rows ; scanf ( \"%d\" , & rows ) ; memset ( map , 0 , 100 * 100 ) ; int j ; for ( j = 0 ; j < rows ; ++ j ) { int k ; for ( k = 0 ; k <= j ; ++ k ) { scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; } } printf ( \"%d\\n\" , path ( rows - 1 , 0 , 0 , 0 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 346,
              "end_byte": 347,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 348,
              "end_byte": 358,
              "text": "int tris ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 348,
                  "end_byte": 351,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 352,
                  "end_byte": 356,
                  "text": "tris",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 357,
                  "end_byte": 358,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 359,
              "end_byte": 384,
              "text": "scanf ( \"%d\" , & tris ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 359,
                  "end_byte": 382,
                  "text": "scanf ( \"%d\" , & tris )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 359,
                      "end_byte": 364,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 365,
                      "end_byte": 382,
                      "text": "( \"%d\" , & tris )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 365,
                          "end_byte": 366,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 367,
                          "end_byte": 371,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 367,
                              "end_byte": 368,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 368,
                              "end_byte": 370,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 370,
                              "end_byte": 371,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 372,
                          "end_byte": 373,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 374,
                          "end_byte": 380,
                          "text": "& tris",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 374,
                              "end_byte": 375,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 376,
                              "end_byte": 380,
                              "text": "tris",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 381,
                          "end_byte": 382,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 383,
                  "end_byte": 384,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 385,
              "end_byte": 392,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 385,
                  "end_byte": 388,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 389,
                  "end_byte": 390,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 391,
                  "end_byte": 392,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 393,
              "end_byte": 677,
              "text": "for ( i = 0 ; i < tris ; ++ i ) { int rows ; scanf ( \"%d\" , & rows ) ; memset ( map , 0 , 100 * 100 ) ; int j ; for ( j = 0 ; j < rows ; ++ j ) { int k ; for ( k = 0 ; k <= j ; ++ k ) { scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; } } printf ( \"%d\\n\" , path ( rows - 1 , 0 , 0 , 0 ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 393,
                  "end_byte": 396,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 397,
                  "end_byte": 398,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 399,
                  "end_byte": 404,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 399,
                      "end_byte": 400,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 401,
                      "end_byte": 402,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 403,
                      "end_byte": 404,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 405,
                  "end_byte": 406,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 407,
                  "end_byte": 415,
                  "text": "i < tris",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 407,
                      "end_byte": 408,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 409,
                      "end_byte": 410,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 411,
                      "end_byte": 415,
                      "text": "tris",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 416,
                  "end_byte": 417,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 418,
                  "end_byte": 422,
                  "text": "++ i",
                  "children": [
                    {
                      "type": "++",
                      "start_byte": 418,
                      "end_byte": 420,
                      "text": "++",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 421,
                      "end_byte": 422,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 423,
                  "end_byte": 424,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 425,
                  "end_byte": 677,
                  "text": "{ int rows ; scanf ( \"%d\" , & rows ) ; memset ( map , 0 , 100 * 100 ) ; int j ; for ( j = 0 ; j < rows ; ++ j ) { int k ; for ( k = 0 ; k <= j ; ++ k ) { scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; } } printf ( \"%d\\n\" , path ( rows - 1 , 0 , 0 , 0 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 425,
                      "end_byte": 426,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 427,
                      "end_byte": 437,
                      "text": "int rows ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 427,
                          "end_byte": 430,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 431,
                          "end_byte": 435,
                          "text": "rows",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 436,
                          "end_byte": 437,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 438,
                      "end_byte": 463,
                      "text": "scanf ( \"%d\" , & rows ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 438,
                          "end_byte": 461,
                          "text": "scanf ( \"%d\" , & rows )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 438,
                              "end_byte": 443,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 444,
                              "end_byte": 461,
                              "text": "( \"%d\" , & rows )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 444,
                                  "end_byte": 445,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 446,
                                  "end_byte": 450,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 446,
                                      "end_byte": 447,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 447,
                                      "end_byte": 449,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 449,
                                      "end_byte": 450,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 451,
                                  "end_byte": 452,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 453,
                                  "end_byte": 459,
                                  "text": "& rows",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 453,
                                      "end_byte": 454,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 455,
                                      "end_byte": 459,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 460,
                                  "end_byte": 461,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 462,
                          "end_byte": 463,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 464,
                      "end_byte": 496,
                      "text": "memset ( map , 0 , 100 * 100 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 464,
                          "end_byte": 494,
                          "text": "memset ( map , 0 , 100 * 100 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 464,
                              "end_byte": 470,
                              "text": "memset",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 471,
                              "end_byte": 494,
                              "text": "( map , 0 , 100 * 100 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 471,
                                  "end_byte": 472,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 473,
                                  "end_byte": 476,
                                  "text": "map",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 477,
                                  "end_byte": 478,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 479,
                                  "end_byte": 480,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 481,
                                  "end_byte": 482,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 483,
                                  "end_byte": 492,
                                  "text": "100 * 100",
                                  "children": [
                                    {
                                      "type": "number_literal",
                                      "start_byte": 483,
                                      "end_byte": 486,
                                      "text": "100",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 487,
                                      "end_byte": 488,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 489,
                                      "end_byte": 492,
                                      "text": "100",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 493,
                                  "end_byte": 494,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 495,
                          "end_byte": 496,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 497,
                      "end_byte": 504,
                      "text": "int j ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 497,
                          "end_byte": 500,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 501,
                          "end_byte": 502,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 503,
                          "end_byte": 504,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 505,
                      "end_byte": 623,
                      "text": "for ( j = 0 ; j < rows ; ++ j ) { int k ; for ( k = 0 ; k <= j ; ++ k ) { scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 505,
                          "end_byte": 508,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 509,
                          "end_byte": 510,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 511,
                          "end_byte": 516,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 511,
                              "end_byte": 512,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 513,
                              "end_byte": 514,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 515,
                              "end_byte": 516,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 517,
                          "end_byte": 518,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 519,
                          "end_byte": 527,
                          "text": "j < rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 519,
                              "end_byte": 520,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 521,
                              "end_byte": 522,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 523,
                              "end_byte": 527,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 528,
                          "end_byte": 529,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 530,
                          "end_byte": 534,
                          "text": "++ j",
                          "children": [
                            {
                              "type": "++",
                              "start_byte": 530,
                              "end_byte": 532,
                              "text": "++",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 533,
                              "end_byte": 534,
                              "text": "j",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 535,
                          "end_byte": 536,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 537,
                          "end_byte": 623,
                          "text": "{ int k ; for ( k = 0 ; k <= j ; ++ k ) { scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 537,
                              "end_byte": 538,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "declaration",
                              "start_byte": 539,
                              "end_byte": 546,
                              "text": "int k ;",
                              "children": [
                                {
                                  "type": "primitive_type",
                                  "start_byte": 539,
                                  "end_byte": 542,
                                  "text": "int",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 543,
                                  "end_byte": 544,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 545,
                                  "end_byte": 546,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 547,
                              "end_byte": 621,
                              "text": "for ( k = 0 ; k <= j ; ++ k ) { scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 547,
                                  "end_byte": 550,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 551,
                                  "end_byte": 552,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 553,
                                  "end_byte": 558,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 553,
                                      "end_byte": 554,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 555,
                                      "end_byte": 556,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 557,
                                      "end_byte": 558,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 559,
                                  "end_byte": 560,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 561,
                                  "end_byte": 567,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 561,
                                      "end_byte": 562,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 563,
                                      "end_byte": 565,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 566,
                                      "end_byte": 567,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 568,
                                  "end_byte": 569,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 570,
                                  "end_byte": 574,
                                  "text": "++ k",
                                  "children": [
                                    {
                                      "type": "++",
                                      "start_byte": 570,
                                      "end_byte": 572,
                                      "text": "++",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 573,
                                      "end_byte": 574,
                                      "text": "k",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 575,
                                  "end_byte": 576,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 577,
                                  "end_byte": 621,
                                  "text": "{ scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 577,
                                      "end_byte": 578,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 579,
                                      "end_byte": 619,
                                      "text": "scanf ( \"%d\" , & ( map [ j ] [ k ] ) ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 579,
                                          "end_byte": 617,
                                          "text": "scanf ( \"%d\" , & ( map [ j ] [ k ] ) )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 579,
                                              "end_byte": 584,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 585,
                                              "end_byte": 617,
                                              "text": "( \"%d\" , & ( map [ j ] [ k ] ) )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 585,
                                                  "end_byte": 586,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 587,
                                                  "end_byte": 591,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 587,
                                                      "end_byte": 588,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 588,
                                                      "end_byte": 590,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 590,
                                                      "end_byte": 591,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 592,
                                                  "end_byte": 593,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 594,
                                                  "end_byte": 615,
                                                  "text": "& ( map [ j ] [ k ] )",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 594,
                                                      "end_byte": 595,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "parenthesized_expression",
                                                      "start_byte": 596,
                                                      "end_byte": 615,
                                                      "text": "( map [ j ] [ k ] )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 596,
                                                          "end_byte": 597,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 598,
                                                          "end_byte": 613,
                                                          "text": "map [ j ] [ k ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 598,
                                                              "end_byte": 607,
                                                              "text": "map [ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 598,
                                                                  "end_byte": 601,
                                                                  "text": "map",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 602,
                                                                  "end_byte": 607,
                                                                  "text": "[ j ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 602,
                                                                      "end_byte": 603,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 604,
                                                                      "end_byte": 605,
                                                                      "text": "j",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 606,
                                                                      "end_byte": 607,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 608,
                                                              "end_byte": 613,
                                                              "text": "[ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 608,
                                                                  "end_byte": 609,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 610,
                                                                  "end_byte": 611,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 612,
                                                                  "end_byte": 613,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 614,
                                                          "end_byte": 615,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 616,
                                                  "end_byte": 617,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 618,
                                          "end_byte": 619,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 620,
                                      "end_byte": 621,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 622,
                              "end_byte": 623,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 624,
                      "end_byte": 675,
                      "text": "printf ( \"%d\\n\" , path ( rows - 1 , 0 , 0 , 0 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 624,
                          "end_byte": 673,
                          "text": "printf ( \"%d\\n\" , path ( rows - 1 , 0 , 0 , 0 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 624,
                              "end_byte": 630,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 631,
                              "end_byte": 673,
                              "text": "( \"%d\\n\" , path ( rows - 1 , 0 , 0 , 0 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 631,
                                  "end_byte": 632,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 633,
                                  "end_byte": 639,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 633,
                                      "end_byte": 634,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 634,
                                      "end_byte": 636,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 636,
                                      "end_byte": 638,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 638,
                                      "end_byte": 639,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 640,
                                  "end_byte": 641,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 642,
                                  "end_byte": 671,
                                  "text": "path ( rows - 1 , 0 , 0 , 0 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 642,
                                      "end_byte": 646,
                                      "text": "path",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 647,
                                      "end_byte": 671,
                                      "text": "( rows - 1 , 0 , 0 , 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 647,
                                          "end_byte": 648,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 649,
                                          "end_byte": 657,
                                          "text": "rows - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 649,
                                              "end_byte": 653,
                                              "text": "rows",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 654,
                                              "end_byte": 655,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 656,
                                              "end_byte": 657,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 658,
                                          "end_byte": 659,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 660,
                                          "end_byte": 661,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 662,
                                          "end_byte": 663,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 664,
                                          "end_byte": 665,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 666,
                                          "end_byte": 667,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 668,
                                          "end_byte": 669,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 670,
                                          "end_byte": 671,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 672,
                                  "end_byte": 673,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 674,
                          "end_byte": 675,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 676,
                      "end_byte": 677,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 678,
              "end_byte": 688,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 678,
                  "end_byte": 684,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 685,
                  "end_byte": 686,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 687,
                  "end_byte": 688,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 689,
              "end_byte": 690,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}