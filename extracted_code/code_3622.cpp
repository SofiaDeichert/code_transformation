int a [ 101 ] [ 101 ] , line ; int * max ( int * i , int * j ) ; int main ( ) { int cas , i , j , k ; int * ptr , * val ; for ( scanf ( "%d" , & cas ) , i = 0 ; i < cas && cas > 0 ; i ++ ) { scanf ( "%d" , & line ) ; for ( j = 0 ; j < line ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%d" , & a [ j ] [ k ] ) ; } } for ( j = line ; j > 1 ; j -- ) { for ( k = 0 ; k <= j - 2 ; k ++ ) { a [ j - 2 ] [ k ] += ( a [ j - 1 ] [ k ] + a [ j - 1 ] [ k + 1 ] ) ; } } a [ 0 ] [ 0 ] -= ( a [ 1 ] [ 0 ] + a [ 1 ] [ 1 ] ) ; ptr = & a [ 0 ] [ 0 ] ; for ( j = 0 ; j < line - 1 ; j ++ ) { val = ptr ; ptr = max ( ( ptr + 101 ) , ( ptr + 102 ) ) ; * ptr += * val ; } printf ( "%d" , * ptr ) ; } return 0 ; } int * max ( int * i , int * j ) { if ( * i > * j ) { * i -= ( * ( i + 101 ) + * ( i + 102 ) ) ; return i ; } else if ( * j > * i ) { * j -= ( * ( j + 101 ) + * ( j + 102 ) ) ; return j ; } else if ( * i == * j ) { * i -= ( * ( i + 101 ) + * ( i + 102 ) ) ; * j -= ( * ( j + 101 ) + * ( j + 102 ) ) ; if ( * i > * j ) { return i ; } else if ( * j > * i ) { return j ; } else if ( * j == * i ) { return i ; } } }