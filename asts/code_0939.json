{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 724,
  "text": "int lines , inp [ 200 ] [ 200 ] ; int func ( int i , int j ) { if ( i == lines ) return inp [ i ] [ j ] ; else { int left_sum , right_sum ; left_sum = func ( i + 1 , j ) ; right_sum = func ( i + 1 , j + 1 ) ; if ( left_sum > right_sum ) return left_sum + inp [ i ] [ j ] ; else return right_sum + inp [ i ] [ j ] ; } } int main ( ) { int i , iter , test_cases , j ; scanf ( \"%d\" , & test_cases ) ; int ans [ test_cases ] ; for ( iter = 0 ; iter < test_cases ; iter ++ ) { scanf ( \"%d\" , & lines ) ; for ( i = 1 ; i <= lines ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & inp [ i ] [ j ] ) ; } } ans [ iter ] = func ( 1 , 1 ) ; } for ( i = 0 ; i < test_cases ; i ++ ) printf ( \"%d\\n\" , ans [ i ] ) ; return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 33,
      "text": "int lines , inp [ 200 ] [ 200 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 4,
          "end_byte": 9,
          "text": "lines",
          "children": []
        },
        {
          "type": ",",
          "start_byte": 10,
          "end_byte": 11,
          "text": ",",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 12,
          "end_byte": 31,
          "text": "inp [ 200 ] [ 200 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 12,
              "end_byte": 23,
              "text": "inp [ 200 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 12,
                  "end_byte": 15,
                  "text": "inp",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 18,
                  "end_byte": 21,
                  "text": "200",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 24,
              "end_byte": 25,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 26,
              "end_byte": 29,
              "text": "200",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 30,
              "end_byte": 31,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 32,
          "end_byte": 33,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 34,
      "end_byte": 318,
      "text": "int func ( int i , int j ) { if ( i == lines ) return inp [ i ] [ j ] ; else { int left_sum , right_sum ; left_sum = func ( i + 1 , j ) ; right_sum = func ( i + 1 , j + 1 ) ; if ( left_sum > right_sum ) return left_sum + inp [ i ] [ j ] ; else return right_sum + inp [ i ] [ j ] ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 34,
          "end_byte": 37,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 38,
          "end_byte": 60,
          "text": "func ( int i , int j )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 38,
              "end_byte": 42,
              "text": "func",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 43,
              "end_byte": 60,
              "text": "( int i , int j )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 45,
                  "end_byte": 50,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 45,
                      "end_byte": 48,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 53,
                  "end_byte": 58,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 53,
                      "end_byte": 56,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 57,
                      "end_byte": 58,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 61,
          "end_byte": 318,
          "text": "{ if ( i == lines ) return inp [ i ] [ j ] ; else { int left_sum , right_sum ; left_sum = func ( i + 1 , j ) ; right_sum = func ( i + 1 , j + 1 ) ; if ( left_sum > right_sum ) return left_sum + inp [ i ] [ j ] ; else return right_sum + inp [ i ] [ j ] ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 61,
              "end_byte": 62,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 63,
              "end_byte": 316,
              "text": "if ( i == lines ) return inp [ i ] [ j ] ; else { int left_sum , right_sum ; left_sum = func ( i + 1 , j ) ; right_sum = func ( i + 1 , j + 1 ) ; if ( left_sum > right_sum ) return left_sum + inp [ i ] [ j ] ; else return right_sum + inp [ i ] [ j ] ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 63,
                  "end_byte": 65,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 66,
                  "end_byte": 80,
                  "text": "( i == lines )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 66,
                      "end_byte": 67,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 68,
                      "end_byte": 78,
                      "text": "i == lines",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 68,
                          "end_byte": 69,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 70,
                          "end_byte": 72,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 73,
                          "end_byte": 78,
                          "text": "lines",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 81,
                  "end_byte": 105,
                  "text": "return inp [ i ] [ j ] ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 81,
                      "end_byte": 87,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 88,
                      "end_byte": 103,
                      "text": "inp [ i ] [ j ]",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 88,
                          "end_byte": 97,
                          "text": "inp [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 88,
                              "end_byte": 91,
                              "text": "inp",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 92,
                              "end_byte": 97,
                              "text": "[ i ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 92,
                                  "end_byte": 93,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 94,
                                  "end_byte": 95,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 96,
                                  "end_byte": 97,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 98,
                          "end_byte": 103,
                          "text": "[ j ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 106,
                  "end_byte": 316,
                  "text": "else { int left_sum , right_sum ; left_sum = func ( i + 1 , j ) ; right_sum = func ( i + 1 , j + 1 ) ; if ( left_sum > right_sum ) return left_sum + inp [ i ] [ j ] ; else return right_sum + inp [ i ] [ j ] ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 106,
                      "end_byte": 110,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 111,
                      "end_byte": 316,
                      "text": "{ int left_sum , right_sum ; left_sum = func ( i + 1 , j ) ; right_sum = func ( i + 1 , j + 1 ) ; if ( left_sum > right_sum ) return left_sum + inp [ i ] [ j ] ; else return right_sum + inp [ i ] [ j ] ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 111,
                          "end_byte": 112,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "declaration",
                          "start_byte": 113,
                          "end_byte": 139,
                          "text": "int left_sum , right_sum ;",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 113,
                              "end_byte": 116,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 117,
                              "end_byte": 125,
                              "text": "left_sum",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 128,
                              "end_byte": 137,
                              "text": "right_sum",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 138,
                              "end_byte": 139,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 140,
                          "end_byte": 171,
                          "text": "left_sum = func ( i + 1 , j ) ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 140,
                              "end_byte": 169,
                              "text": "left_sum = func ( i + 1 , j )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 140,
                                  "end_byte": 148,
                                  "text": "left_sum",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 149,
                                  "end_byte": 150,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 151,
                                  "end_byte": 169,
                                  "text": "func ( i + 1 , j )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 151,
                                      "end_byte": 155,
                                      "text": "func",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 156,
                                      "end_byte": 169,
                                      "text": "( i + 1 , j )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 156,
                                          "end_byte": 157,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 158,
                                          "end_byte": 163,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 158,
                                              "end_byte": 159,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 160,
                                              "end_byte": 161,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 162,
                                              "end_byte": 163,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 164,
                                          "end_byte": 165,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 166,
                                          "end_byte": 167,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 168,
                                          "end_byte": 169,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 172,
                          "end_byte": 208,
                          "text": "right_sum = func ( i + 1 , j + 1 ) ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 172,
                              "end_byte": 206,
                              "text": "right_sum = func ( i + 1 , j + 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 172,
                                  "end_byte": 181,
                                  "text": "right_sum",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 182,
                                  "end_byte": 183,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 184,
                                  "end_byte": 206,
                                  "text": "func ( i + 1 , j + 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 184,
                                      "end_byte": 188,
                                      "text": "func",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 189,
                                      "end_byte": 206,
                                      "text": "( i + 1 , j + 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 189,
                                          "end_byte": 190,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 191,
                                          "end_byte": 196,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 191,
                                              "end_byte": 192,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 193,
                                              "end_byte": 194,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 195,
                                              "end_byte": 196,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 197,
                                          "end_byte": 198,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 199,
                                          "end_byte": 204,
                                          "text": "j + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 199,
                                              "end_byte": 200,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 201,
                                              "end_byte": 202,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 203,
                                              "end_byte": 204,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 205,
                                          "end_byte": 206,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 207,
                              "end_byte": 208,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "if_statement",
                          "start_byte": 209,
                          "end_byte": 314,
                          "text": "if ( left_sum > right_sum ) return left_sum + inp [ i ] [ j ] ; else return right_sum + inp [ i ] [ j ] ;",
                          "children": [
                            {
                              "type": "if",
                              "start_byte": 209,
                              "end_byte": 211,
                              "text": "if",
                              "children": []
                            },
                            {
                              "type": "condition_clause",
                              "start_byte": 212,
                              "end_byte": 236,
                              "text": "( left_sum > right_sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 212,
                                  "end_byte": 213,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 214,
                                  "end_byte": 234,
                                  "text": "left_sum > right_sum",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 214,
                                      "end_byte": 222,
                                      "text": "left_sum",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 223,
                                      "end_byte": 224,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 225,
                                      "end_byte": 234,
                                      "text": "right_sum",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 235,
                                  "end_byte": 236,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 237,
                              "end_byte": 272,
                              "text": "return left_sum + inp [ i ] [ j ] ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 237,
                                  "end_byte": 243,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 244,
                                  "end_byte": 270,
                                  "text": "left_sum + inp [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 244,
                                      "end_byte": 252,
                                      "text": "left_sum",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 253,
                                      "end_byte": 254,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 255,
                                      "end_byte": 270,
                                      "text": "inp [ i ] [ j ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 255,
                                          "end_byte": 264,
                                          "text": "inp [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 255,
                                              "end_byte": 258,
                                              "text": "inp",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 259,
                                              "end_byte": 264,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 259,
                                                  "end_byte": 260,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 261,
                                                  "end_byte": 262,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 263,
                                                  "end_byte": 264,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 265,
                                          "end_byte": 270,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 265,
                                              "end_byte": 266,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 267,
                                              "end_byte": 268,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 269,
                                              "end_byte": 270,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 271,
                                  "end_byte": 272,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "else_clause",
                              "start_byte": 273,
                              "end_byte": 314,
                              "text": "else return right_sum + inp [ i ] [ j ] ;",
                              "children": [
                                {
                                  "type": "else",
                                  "start_byte": 273,
                                  "end_byte": 277,
                                  "text": "else",
                                  "children": []
                                },
                                {
                                  "type": "return_statement",
                                  "start_byte": 278,
                                  "end_byte": 314,
                                  "text": "return right_sum + inp [ i ] [ j ] ;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start_byte": 278,
                                      "end_byte": 284,
                                      "text": "return",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 285,
                                      "end_byte": 312,
                                      "text": "right_sum + inp [ i ] [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 285,
                                          "end_byte": 294,
                                          "text": "right_sum",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 295,
                                          "end_byte": 296,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 297,
                                          "end_byte": 312,
                                          "text": "inp [ i ] [ j ]",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 297,
                                              "end_byte": 306,
                                              "text": "inp [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 297,
                                                  "end_byte": 300,
                                                  "text": "inp",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 301,
                                                  "end_byte": 306,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 301,
                                                      "end_byte": 302,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 303,
                                                      "end_byte": 304,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 305,
                                                      "end_byte": 306,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 307,
                                              "end_byte": 312,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 307,
                                                  "end_byte": 308,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 309,
                                                  "end_byte": 310,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 311,
                                                  "end_byte": 312,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 313,
                                      "end_byte": 314,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 317,
              "end_byte": 318,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 319,
      "end_byte": 724,
      "text": "int main ( ) { int i , iter , test_cases , j ; scanf ( \"%d\" , & test_cases ) ; int ans [ test_cases ] ; for ( iter = 0 ; iter < test_cases ; iter ++ ) { scanf ( \"%d\" , & lines ) ; for ( i = 1 ; i <= lines ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & inp [ i ] [ j ] ) ; } } ans [ iter ] = func ( 1 , 1 ) ; } for ( i = 0 ; i < test_cases ; i ++ ) printf ( \"%d\\n\" , ans [ i ] ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 319,
          "end_byte": 322,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 323,
          "end_byte": 331,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 323,
              "end_byte": 327,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 328,
              "end_byte": 331,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 328,
                  "end_byte": 329,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 330,
                  "end_byte": 331,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 332,
          "end_byte": 724,
          "text": "{ int i , iter , test_cases , j ; scanf ( \"%d\" , & test_cases ) ; int ans [ test_cases ] ; for ( iter = 0 ; iter < test_cases ; iter ++ ) { scanf ( \"%d\" , & lines ) ; for ( i = 1 ; i <= lines ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & inp [ i ] [ j ] ) ; } } ans [ iter ] = func ( 1 , 1 ) ; } for ( i = 0 ; i < test_cases ; i ++ ) printf ( \"%d\\n\" , ans [ i ] ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 332,
              "end_byte": 333,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 334,
              "end_byte": 365,
              "text": "int i , iter , test_cases , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 334,
                  "end_byte": 337,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 338,
                  "end_byte": 339,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 340,
                  "end_byte": 341,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 342,
                  "end_byte": 346,
                  "text": "iter",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 347,
                  "end_byte": 348,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 349,
                  "end_byte": 359,
                  "text": "test_cases",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 360,
                  "end_byte": 361,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 362,
                  "end_byte": 363,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 364,
                  "end_byte": 365,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 366,
              "end_byte": 397,
              "text": "scanf ( \"%d\" , & test_cases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 366,
                  "end_byte": 395,
                  "text": "scanf ( \"%d\" , & test_cases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 366,
                      "end_byte": 371,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 372,
                      "end_byte": 395,
                      "text": "( \"%d\" , & test_cases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 372,
                          "end_byte": 373,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 374,
                          "end_byte": 378,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 374,
                              "end_byte": 375,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 375,
                              "end_byte": 377,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 377,
                              "end_byte": 378,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 379,
                          "end_byte": 380,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 381,
                          "end_byte": 393,
                          "text": "& test_cases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 381,
                              "end_byte": 382,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 383,
                              "end_byte": 393,
                              "text": "test_cases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 394,
                          "end_byte": 395,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 396,
                  "end_byte": 397,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 398,
              "end_byte": 422,
              "text": "int ans [ test_cases ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 398,
                  "end_byte": 401,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 402,
                  "end_byte": 420,
                  "text": "ans [ test_cases ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 402,
                      "end_byte": 405,
                      "text": "ans",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 406,
                      "end_byte": 407,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 408,
                      "end_byte": 418,
                      "text": "test_cases",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 419,
                      "end_byte": 420,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 421,
                  "end_byte": 422,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 423,
              "end_byte": 641,
              "text": "for ( iter = 0 ; iter < test_cases ; iter ++ ) { scanf ( \"%d\" , & lines ) ; for ( i = 1 ; i <= lines ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & inp [ i ] [ j ] ) ; } } ans [ iter ] = func ( 1 , 1 ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 423,
                  "end_byte": 426,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 427,
                  "end_byte": 428,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 429,
                  "end_byte": 437,
                  "text": "iter = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 429,
                      "end_byte": 433,
                      "text": "iter",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 434,
                      "end_byte": 435,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 436,
                      "end_byte": 437,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 438,
                  "end_byte": 439,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 440,
                  "end_byte": 457,
                  "text": "iter < test_cases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 440,
                      "end_byte": 444,
                      "text": "iter",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 445,
                      "end_byte": 446,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 447,
                      "end_byte": 457,
                      "text": "test_cases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 458,
                  "end_byte": 459,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 460,
                  "end_byte": 467,
                  "text": "iter ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 460,
                      "end_byte": 464,
                      "text": "iter",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 465,
                      "end_byte": 467,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 468,
                  "end_byte": 469,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 470,
                  "end_byte": 641,
                  "text": "{ scanf ( \"%d\" , & lines ) ; for ( i = 1 ; i <= lines ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & inp [ i ] [ j ] ) ; } } ans [ iter ] = func ( 1 , 1 ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 470,
                      "end_byte": 471,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 472,
                      "end_byte": 498,
                      "text": "scanf ( \"%d\" , & lines ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 472,
                          "end_byte": 496,
                          "text": "scanf ( \"%d\" , & lines )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 472,
                              "end_byte": 477,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 478,
                              "end_byte": 496,
                              "text": "( \"%d\" , & lines )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 478,
                                  "end_byte": 479,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 480,
                                  "end_byte": 484,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 480,
                                      "end_byte": 481,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 481,
                                      "end_byte": 483,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 483,
                                      "end_byte": 484,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 485,
                                  "end_byte": 486,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 487,
                                  "end_byte": 494,
                                  "text": "& lines",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 487,
                                      "end_byte": 488,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 489,
                                      "end_byte": 494,
                                      "text": "lines",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 495,
                                  "end_byte": 496,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 497,
                          "end_byte": 498,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 499,
                      "end_byte": 607,
                      "text": "for ( i = 1 ; i <= lines ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & inp [ i ] [ j ] ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 499,
                          "end_byte": 502,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 503,
                          "end_byte": 504,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 505,
                          "end_byte": 510,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 505,
                              "end_byte": 506,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 507,
                              "end_byte": 508,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 509,
                              "end_byte": 510,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 511,
                          "end_byte": 512,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 513,
                          "end_byte": 523,
                          "text": "i <= lines",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 513,
                              "end_byte": 514,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 515,
                              "end_byte": 517,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 518,
                              "end_byte": 523,
                              "text": "lines",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 524,
                          "end_byte": 525,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 526,
                          "end_byte": 530,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 526,
                              "end_byte": 527,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 528,
                              "end_byte": 530,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 531,
                          "end_byte": 532,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 533,
                          "end_byte": 607,
                          "text": "{ for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & inp [ i ] [ j ] ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 533,
                              "end_byte": 534,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 535,
                              "end_byte": 605,
                              "text": "for ( j = 1 ; j <= i ; j ++ ) { scanf ( \"%d\" , & inp [ i ] [ j ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 535,
                                  "end_byte": 538,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 539,
                                  "end_byte": 540,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 541,
                                  "end_byte": 546,
                                  "text": "j = 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 541,
                                      "end_byte": 542,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 543,
                                      "end_byte": 544,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 545,
                                      "end_byte": 546,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 547,
                                  "end_byte": 548,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 549,
                                  "end_byte": 555,
                                  "text": "j <= i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 549,
                                      "end_byte": 550,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 551,
                                      "end_byte": 553,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 554,
                                      "end_byte": 555,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 556,
                                  "end_byte": 557,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 558,
                                  "end_byte": 562,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 558,
                                      "end_byte": 559,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 560,
                                      "end_byte": 562,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 563,
                                  "end_byte": 564,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 565,
                                  "end_byte": 605,
                                  "text": "{ scanf ( \"%d\" , & inp [ i ] [ j ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 565,
                                      "end_byte": 566,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 567,
                                      "end_byte": 603,
                                      "text": "scanf ( \"%d\" , & inp [ i ] [ j ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 567,
                                          "end_byte": 601,
                                          "text": "scanf ( \"%d\" , & inp [ i ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 567,
                                              "end_byte": 572,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 573,
                                              "end_byte": 601,
                                              "text": "( \"%d\" , & inp [ i ] [ j ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 573,
                                                  "end_byte": 574,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 575,
                                                  "end_byte": 579,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 575,
                                                      "end_byte": 576,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 576,
                                                      "end_byte": 578,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 578,
                                                      "end_byte": 579,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 580,
                                                  "end_byte": 581,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 582,
                                                  "end_byte": 599,
                                                  "text": "& inp [ i ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 582,
                                                      "end_byte": 583,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 584,
                                                      "end_byte": 599,
                                                      "text": "inp [ i ] [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 584,
                                                          "end_byte": 593,
                                                          "text": "inp [ i ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 584,
                                                              "end_byte": 587,
                                                              "text": "inp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 588,
                                                              "end_byte": 593,
                                                              "text": "[ i ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 588,
                                                                  "end_byte": 589,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 590,
                                                                  "end_byte": 591,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 592,
                                                                  "end_byte": 593,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 594,
                                                          "end_byte": 599,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 594,
                                                              "end_byte": 595,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 596,
                                                              "end_byte": 597,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 598,
                                                              "end_byte": 599,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 600,
                                                  "end_byte": 601,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 602,
                                          "end_byte": 603,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 604,
                                      "end_byte": 605,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 606,
                              "end_byte": 607,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 608,
                      "end_byte": 639,
                      "text": "ans [ iter ] = func ( 1 , 1 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 608,
                          "end_byte": 637,
                          "text": "ans [ iter ] = func ( 1 , 1 )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 608,
                              "end_byte": 620,
                              "text": "ans [ iter ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 608,
                                  "end_byte": 611,
                                  "text": "ans",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 612,
                                  "end_byte": 620,
                                  "text": "[ iter ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 612,
                                      "end_byte": 613,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 614,
                                      "end_byte": 618,
                                      "text": "iter",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 619,
                                      "end_byte": 620,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 621,
                              "end_byte": 622,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 623,
                              "end_byte": 637,
                              "text": "func ( 1 , 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 623,
                                  "end_byte": 627,
                                  "text": "func",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 628,
                                  "end_byte": 637,
                                  "text": "( 1 , 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 628,
                                      "end_byte": 629,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 630,
                                      "end_byte": 631,
                                      "text": "1",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 632,
                                      "end_byte": 633,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 634,
                                      "end_byte": 635,
                                      "text": "1",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 636,
                                      "end_byte": 637,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 638,
                          "end_byte": 639,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 640,
                      "end_byte": 641,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 642,
              "end_byte": 711,
              "text": "for ( i = 0 ; i < test_cases ; i ++ ) printf ( \"%d\\n\" , ans [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 642,
                  "end_byte": 645,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 646,
                  "end_byte": 647,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 648,
                  "end_byte": 653,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 648,
                      "end_byte": 649,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 650,
                      "end_byte": 651,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 652,
                      "end_byte": 653,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 654,
                  "end_byte": 655,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 656,
                  "end_byte": 670,
                  "text": "i < test_cases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 656,
                      "end_byte": 657,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 658,
                      "end_byte": 659,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 660,
                      "end_byte": 670,
                      "text": "test_cases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 671,
                  "end_byte": 672,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 673,
                  "end_byte": 677,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 673,
                      "end_byte": 674,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 675,
                      "end_byte": 677,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 678,
                  "end_byte": 679,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 680,
                  "end_byte": 711,
                  "text": "printf ( \"%d\\n\" , ans [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 680,
                      "end_byte": 709,
                      "text": "printf ( \"%d\\n\" , ans [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 680,
                          "end_byte": 686,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 687,
                          "end_byte": 709,
                          "text": "( \"%d\\n\" , ans [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 687,
                              "end_byte": 688,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 689,
                              "end_byte": 695,
                              "text": "\"%d\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 689,
                                  "end_byte": 690,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 690,
                                  "end_byte": 692,
                                  "text": "%d",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 692,
                                  "end_byte": 694,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 694,
                                  "end_byte": 695,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 696,
                              "end_byte": 697,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 698,
                              "end_byte": 707,
                              "text": "ans [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 698,
                                  "end_byte": 701,
                                  "text": "ans",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 702,
                                  "end_byte": 707,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 702,
                                      "end_byte": 703,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 704,
                                      "end_byte": 705,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 706,
                                      "end_byte": 707,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 708,
                              "end_byte": 709,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 710,
                      "end_byte": 711,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 712,
              "end_byte": 722,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 712,
                  "end_byte": 718,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 719,
                  "end_byte": 720,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 721,
                  "end_byte": 722,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 723,
              "end_byte": 724,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}