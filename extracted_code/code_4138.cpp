int main ( ) { int testCases = 0 , rows , * * arr , i , j , max ; scanf ( "%d" , & testCases ) ; while ( testCases -- ) { scanf ( "%d" , & rows ) ; arr = ( int * * ) malloc ( rows * sizeof ( int ) ) ; for ( i = 0 ; i < rows ; i ++ ) arr [ i ] = ( int * ) malloc ( rows * sizeof ( int ) ) ; for ( i = 0 ; i < rows ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & arr [ i ] [ j ] ) ; } for ( i = 1 ; i < rows ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { if ( j == 0 ) arr [ i ] [ j ] = arr [ i ] [ j ] + arr [ i - 1 ] [ j ] ; else if ( j == i ) arr [ i ] [ j ] = arr [ i ] [ j ] + arr [ i - 1 ] [ j - 1 ] ; else arr [ i ] [ j ] = ( arr [ i ] [ j ] + arr [ i - 1 ] [ j - 1 ] > arr [ i ] [ j ] + arr [ i - 1 ] [ j ] ) ? arr [ i ] [ j ] + arr [ i - 1 ] [ j - 1 ] : arr [ i ] [ j ] + arr [ i - 1 ] [ j ] ; } } max = arr [ rows - 1 ] [ 0 ] ; for ( j = 1 ; j < rows ; j ++ ) { if ( arr [ rows - 1 ] [ j ] > max ) max = arr [ rows - 1 ] [ j ] ; } printf ( "%d\n" , max ) ; } return 0 ; }