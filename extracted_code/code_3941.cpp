int n ; long long int calc ( int x , int y , int a [ ] [ 101 ] , long long int large [ ] [ 101 ] ) { if ( y == n ) return a [ x ] [ n ] ; if ( x > n ) return 0 ; if ( y > n ) return 0 ; return large [ x ] [ y ] != 0 ? large [ x ] [ y ] : ( large [ x ] [ y ] = a [ x ] [ y ] + ( calc ( x + 1 , y + 1 , a , large ) > calc ( x , y + 1 , a , large ) ? calc ( x + 1 , y + 1 , a , large ) : calc ( x , y + 1 , a , large ) ) ) ; } int main ( ) { int t , i , j , a [ 101 ] [ 101 ] ; scanf ( "%d" , & t ) ; while ( t -- ) { long long int largpath [ 101 ] [ 101 ] = { 0 } ; scanf ( "%d" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ j ] [ i ] ) ; } } printf ( "%lld\n" , calc ( 1 , 1 , a , largpath ) ) ; } return 0 ; }