int f = 0 ; int hight ( long int s ) { long int i ; for ( i = 1 ; ; i ++ ) { if ( i * ( i + 1 ) == 2 * s ) { f = 1 ; return i ; } if ( i * ( i + 1 ) > 2 * s ) { if ( 2 * s - ( i * ( i - 1 ) ) == 2 ) { f = 2 ; return i ; } else return i ; } } } long int max ( long int a , long int b ) { if ( a > b ) return a ; else return b ; } int main ( ) { int t ; scanf ( "%d" , & t ) ; int n , i , k ; long int ms = 0 ; while ( t -- ) { scanf ( "%d" , & n ) ; k = ( n * ( n + 1 ) ) / 2 ; long int a [ k + 1 ] , h , ms = 0 ; for ( i = 1 ; i <= k ; i ++ ) scanf ( "%ld" , & a [ i ] ) ; long int sum [ n ] ; sum [ 1 ] = a [ 1 ] ; for ( i = 2 ; i <= k ; i ++ ) { f = 0 ; h = hight ( i ) ; if ( f == 0 ) { sum [ i ] = max ( a [ i ] + sum [ i - h ] , a [ i ] + sum [ i - h + 1 ] ) ; if ( sum [ i ] > ms ) ms = sum [ i ] ; } if ( f == 1 ) { sum [ i ] = a [ i ] + sum [ i - h ] ; if ( sum [ i ] > ms ) ms = sum [ i ] ; } if ( f == 2 ) { sum [ i ] = a [ i ] + sum [ i - h + 1 ] ; if ( sum [ i ] > ms ) ms = sum [ i ] ; } } printf ( "%ld\n" , ms ) ; } }