int p = 0 , count = 0 , a [ ( n ) * ( n + 1 ) / 2 ] , max [ ( n ) * ( n + 1 ) / 2 ] ; int main ( ) { int t = 0 , r = 1 , k = 0 , s = 0 , i = 0 , j = 0 , g = 0 , h = 0 , prev_line_tot = 0 , total = 0 , lines = 0 ; scanf ( "%d" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { scanf ( "%d" , & lines ) ; total = ( lines ) * ( lines + 1 ) / 2 ; prev_line_tot = ( lines - 1 ) * ( lines ) / 2 ; for ( j = 0 ; j < total ; j ++ ) { scanf ( "%d" , & a [ j ] ) ; if ( j >= prev_line_tot ) max [ j ] = a [ j ] ; } count = lines - 1 ; p = count ; for ( k = prev_line_tot - 1 ; k >= 0 ; k -- ) { if ( p == 0 ) { count -- ; p = count ; } r = a [ k ] + max [ k + count ] ; s = a [ k ] + max [ k + count + 1 ] ; if ( r > s ) max [ k ] = r ; else max [ k ] = s ; p -- ; } printf ( "%d\n" , max [ 0 ] ) ; } return 0 ; }