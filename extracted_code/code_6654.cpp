int n ; unsigned long long int max ( unsigned long long int a , unsigned long long int b ) { if ( b > a ) return b ; else return a ; } unsigned long long int sot ( long long int a [ ] [ 100 ] , int r , int c , unsigned long long int b [ ] [ 100 ] ) { if ( r >= n || c >= n ) return 0 ; if ( r == ( n - 1 ) || c == ( n - 1 ) ) { b [ r ] [ c ] = a [ r ] [ c ] ; return a [ r ] [ c ] ; } else { if ( b [ r ] [ c ] == 0 ) b [ r ] [ c ] = a [ r ] [ c ] + max ( sot ( a , r + 1 , c + 1 , b ) , sot ( a , r + 1 , c + 1 , b ) ) ; if ( b [ r + 1 ] [ c ] == 0 ) b [ r + 1 ] [ c ] = a [ r + 1 ] [ c ] + max ( sot ( a , r + 2 , c + 1 , b ) , sot ( a , r + 2 , c , b ) ) ; if ( b [ r + 1 ] [ c + 1 ] == 0 ) b [ r + 1 ] [ c + 1 ] = a [ r + 1 ] [ c + 1 ] + max ( sot ( a , r + 2 , c + 2 , b ) , sot ( a , r + 2 , c + 1 , b ) ) ; return ( a [ r ] [ c ] + max ( b [ r + 1 ] [ c ] , b [ r + 1 ] [ c + 1 ] ) ) ; } } int main ( ) { int t , i , j ; unsigned long long int b [ 100 ] [ 100 ] ; long long int a [ 100 ] [ 100 ] ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%lld" , & a [ i ] [ j ] ) ; b [ i ] [ j ] = 0 ; } } printf ( "%u\n" , sot ( a , 0 , 0 , b ) ) ; } return 0 ; }