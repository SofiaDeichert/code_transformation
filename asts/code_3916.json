{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1407,
  "text": "struct node { int triangle [ 100 ] [ 100 ] ; struct node * next ; } ; typedef struct node * NODE ; NODE getnode ( void ) { return ( malloc ( sizeof ( struct node ) ) ) ; } int next ( int mask [ ] , int n ) { int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; } int main ( void ) { int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int max [ 1000 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; printf ( \"Input\\n\" ) ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { max [ count ] = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; max [ count ] += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > max [ count ] ) max [ count ] = sum ; } cur = cur -> next ; } printf ( \"\\nOutput\\n\" ) ; for ( count = 0 ; count < testcases ; count ++ ) printf ( \"%d\\n\" , max [ count ] ) ; }",
  "children": [
    {
      "type": "struct_specifier",
      "start_byte": 0,
      "end_byte": 67,
      "text": "struct node { int triangle [ 100 ] [ 100 ] ; struct node * next ; }",
      "children": [
        {
          "type": "struct",
          "start_byte": 0,
          "end_byte": 6,
          "text": "struct",
          "children": []
        },
        {
          "type": "type_identifier",
          "start_byte": 7,
          "end_byte": 11,
          "text": "node",
          "children": []
        },
        {
          "type": "field_declaration_list",
          "start_byte": 12,
          "end_byte": 67,
          "text": "{ int triangle [ 100 ] [ 100 ] ; struct node * next ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 12,
              "end_byte": 13,
              "text": "{",
              "children": []
            },
            {
              "type": "field_declaration",
              "start_byte": 14,
              "end_byte": 44,
              "text": "int triangle [ 100 ] [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 14,
                  "end_byte": 17,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 18,
                  "end_byte": 42,
                  "text": "triangle [ 100 ] [ 100 ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 18,
                      "end_byte": 34,
                      "text": "triangle [ 100 ]",
                      "children": [
                        {
                          "type": "field_identifier",
                          "start_byte": 18,
                          "end_byte": 26,
                          "text": "triangle",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 27,
                          "end_byte": 28,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 29,
                          "end_byte": 32,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 35,
                      "end_byte": 36,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 37,
                      "end_byte": 40,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 41,
                      "end_byte": 42,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "field_declaration",
              "start_byte": 45,
              "end_byte": 65,
              "text": "struct node * next ;",
              "children": [
                {
                  "type": "struct_specifier",
                  "start_byte": 45,
                  "end_byte": 56,
                  "text": "struct node",
                  "children": [
                    {
                      "type": "struct",
                      "start_byte": 45,
                      "end_byte": 51,
                      "text": "struct",
                      "children": []
                    },
                    {
                      "type": "type_identifier",
                      "start_byte": 52,
                      "end_byte": 56,
                      "text": "node",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 57,
                  "end_byte": 63,
                  "text": "* next",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 57,
                      "end_byte": 58,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "field_identifier",
                      "start_byte": 59,
                      "end_byte": 63,
                      "text": "next",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 66,
              "end_byte": 67,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": ";",
      "start_byte": 68,
      "end_byte": 69,
      "text": ";",
      "children": []
    },
    {
      "type": "type_definition",
      "start_byte": 70,
      "end_byte": 98,
      "text": "typedef struct node * NODE ;",
      "children": [
        {
          "type": "typedef",
          "start_byte": 70,
          "end_byte": 77,
          "text": "typedef",
          "children": []
        },
        {
          "type": "struct_specifier",
          "start_byte": 78,
          "end_byte": 89,
          "text": "struct node",
          "children": [
            {
              "type": "struct",
              "start_byte": 78,
              "end_byte": 84,
              "text": "struct",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 85,
              "end_byte": 89,
              "text": "node",
              "children": []
            }
          ]
        },
        {
          "type": "pointer_declarator",
          "start_byte": 90,
          "end_byte": 96,
          "text": "* NODE",
          "children": [
            {
              "type": "*",
              "start_byte": 90,
              "end_byte": 91,
              "text": "*",
              "children": []
            },
            {
              "type": "type_identifier",
              "start_byte": 92,
              "end_byte": 96,
              "text": "NODE",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 97,
          "end_byte": 98,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 99,
      "end_byte": 171,
      "text": "NODE getnode ( void ) { return ( malloc ( sizeof ( struct node ) ) ) ; }",
      "children": [
        {
          "type": "type_identifier",
          "start_byte": 99,
          "end_byte": 103,
          "text": "NODE",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 104,
          "end_byte": 120,
          "text": "getnode ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 104,
              "end_byte": 111,
              "text": "getnode",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 112,
              "end_byte": 120,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 112,
                  "end_byte": 113,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 114,
                  "end_byte": 118,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 114,
                      "end_byte": 118,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 119,
                  "end_byte": 120,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 121,
          "end_byte": 171,
          "text": "{ return ( malloc ( sizeof ( struct node ) ) ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 121,
              "end_byte": 122,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 123,
              "end_byte": 169,
              "text": "return ( malloc ( sizeof ( struct node ) ) ) ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 123,
                  "end_byte": 129,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "parenthesized_expression",
                  "start_byte": 130,
                  "end_byte": 167,
                  "text": "( malloc ( sizeof ( struct node ) ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 132,
                      "end_byte": 165,
                      "text": "malloc ( sizeof ( struct node ) )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 132,
                          "end_byte": 138,
                          "text": "malloc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 139,
                          "end_byte": 165,
                          "text": "( sizeof ( struct node ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 139,
                              "end_byte": 140,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "sizeof_expression",
                              "start_byte": 141,
                              "end_byte": 163,
                              "text": "sizeof ( struct node )",
                              "children": [
                                {
                                  "type": "sizeof",
                                  "start_byte": 141,
                                  "end_byte": 147,
                                  "text": "sizeof",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 148,
                                  "end_byte": 149,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "type_descriptor",
                                  "start_byte": 150,
                                  "end_byte": 161,
                                  "text": "struct node",
                                  "children": [
                                    {
                                      "type": "struct_specifier",
                                      "start_byte": 150,
                                      "end_byte": 161,
                                      "text": "struct node",
                                      "children": [
                                        {
                                          "type": "struct",
                                          "start_byte": 150,
                                          "end_byte": 156,
                                          "text": "struct",
                                          "children": []
                                        },
                                        {
                                          "type": "type_identifier",
                                          "start_byte": 157,
                                          "end_byte": 161,
                                          "text": "node",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 162,
                                  "end_byte": 163,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 168,
                  "end_byte": 169,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 170,
              "end_byte": 171,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 172,
      "end_byte": 337,
      "text": "int next ( int mask [ ] , int n ) { int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 172,
          "end_byte": 175,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 176,
          "end_byte": 205,
          "text": "next ( int mask [ ] , int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 176,
              "end_byte": 180,
              "text": "next",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 181,
              "end_byte": 205,
              "text": "( int mask [ ] , int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 181,
                  "end_byte": 182,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 183,
                  "end_byte": 195,
                  "text": "int mask [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 183,
                      "end_byte": 186,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 187,
                      "end_byte": 195,
                      "text": "mask [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 187,
                          "end_byte": 191,
                          "text": "mask",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 192,
                          "end_byte": 193,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 194,
                          "end_byte": 195,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 196,
                  "end_byte": 197,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 198,
                  "end_byte": 203,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 198,
                      "end_byte": 201,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 202,
                      "end_byte": 203,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 204,
                  "end_byte": 205,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 206,
          "end_byte": 337,
          "text": "{ int i ; for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ; if ( i < n ) { mask [ i ] = 1 ; return 1 ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 206,
              "end_byte": 207,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 208,
              "end_byte": 215,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 208,
                  "end_byte": 211,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 212,
                  "end_byte": 213,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 214,
                  "end_byte": 215,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 216,
              "end_byte": 279,
              "text": "for ( i = 0 ; ( i < n ) && mask [ i ] ; ++ i ) mask [ i ] = 0 ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 216,
                  "end_byte": 219,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 220,
                  "end_byte": 221,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 222,
                  "end_byte": 227,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 222,
                      "end_byte": 223,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 224,
                      "end_byte": 225,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 228,
                  "end_byte": 229,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 230,
                  "end_byte": 253,
                  "text": "( i < n ) && mask [ i ]",
                  "children": [
                    {
                      "type": "parenthesized_expression",
                      "start_byte": 230,
                      "end_byte": 239,
                      "text": "( i < n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 230,
                          "end_byte": 231,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 232,
                          "end_byte": 237,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 232,
                              "end_byte": 233,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 234,
                              "end_byte": 235,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 236,
                              "end_byte": 237,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 238,
                          "end_byte": 239,
                          "text": ")",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "&&",
                      "start_byte": 240,
                      "end_byte": 242,
                      "text": "&&",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 243,
                      "end_byte": 253,
                      "text": "mask [ i ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 243,
                          "end_byte": 247,
                          "text": "mask",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 248,
                          "end_byte": 253,
                          "text": "[ i ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 248,
                              "end_byte": 249,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 250,
                              "end_byte": 251,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 252,
                              "end_byte": 253,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 254,
                  "end_byte": 255,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 256,
                  "end_byte": 260,
                  "text": "++ i",
                  "children": [
                    {
                      "type": "++",
                      "start_byte": 256,
                      "end_byte": 258,
                      "text": "++",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 259,
                      "end_byte": 260,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 261,
                  "end_byte": 262,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 263,
                  "end_byte": 279,
                  "text": "mask [ i ] = 0 ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 263,
                      "end_byte": 277,
                      "text": "mask [ i ] = 0",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 263,
                          "end_byte": 273,
                          "text": "mask [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 263,
                              "end_byte": 267,
                              "text": "mask",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 268,
                              "end_byte": 273,
                              "text": "[ i ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 268,
                                  "end_byte": 269,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 270,
                                  "end_byte": 271,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 272,
                                  "end_byte": 273,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "=",
                          "start_byte": 274,
                          "end_byte": 275,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 276,
                          "end_byte": 277,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 278,
                      "end_byte": 279,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 280,
              "end_byte": 324,
              "text": "if ( i < n ) { mask [ i ] = 1 ; return 1 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 280,
                  "end_byte": 282,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 283,
                  "end_byte": 292,
                  "text": "( i < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 285,
                      "end_byte": 290,
                      "text": "i < n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 285,
                          "end_byte": 286,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 287,
                          "end_byte": 288,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 289,
                          "end_byte": 290,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 291,
                      "end_byte": 292,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 293,
                  "end_byte": 324,
                  "text": "{ mask [ i ] = 1 ; return 1 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 293,
                      "end_byte": 294,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 295,
                      "end_byte": 311,
                      "text": "mask [ i ] = 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 295,
                          "end_byte": 309,
                          "text": "mask [ i ] = 1",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 295,
                              "end_byte": 305,
                              "text": "mask [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 295,
                                  "end_byte": 299,
                                  "text": "mask",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 300,
                                  "end_byte": 305,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 304,
                                      "end_byte": 305,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 308,
                              "end_byte": 309,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 310,
                          "end_byte": 311,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 312,
                      "end_byte": 322,
                      "text": "return 1 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 312,
                          "end_byte": 318,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 319,
                          "end_byte": 320,
                          "text": "1",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 321,
                          "end_byte": 322,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 323,
                      "end_byte": 324,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 325,
              "end_byte": 335,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 325,
                  "end_byte": 331,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 332,
                  "end_byte": 333,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 334,
                  "end_byte": 335,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 336,
              "end_byte": 337,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 338,
      "end_byte": 1407,
      "text": "int main ( void ) { int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int max [ 1000 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; printf ( \"Input\\n\" ) ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { max [ count ] = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; max [ count ] += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > max [ count ] ) max [ count ] = sum ; } cur = cur -> next ; } printf ( \"\\nOutput\\n\" ) ; for ( count = 0 ; count < testcases ; count ++ ) printf ( \"%d\\n\" , max [ count ] ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 338,
          "end_byte": 341,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 342,
          "end_byte": 355,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 342,
              "end_byte": 346,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 347,
              "end_byte": 355,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 347,
                  "end_byte": 348,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 349,
                  "end_byte": 353,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 349,
                      "end_byte": 353,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 354,
                  "end_byte": 355,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 356,
          "end_byte": 1407,
          "text": "{ int rows ; int i , j , k , count ; int r , c ; int bin [ 100 ] ; int max [ 1000 ] ; int sum = 0 ; int testcases ; NODE temp , head , cur ; printf ( \"Input\\n\" ) ; scanf ( \"%d\" , & testcases ) ; for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } } cur = head ; for ( count = 0 ; count < testcases ; count ++ ) { max [ count ] = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; max [ count ] += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > max [ count ] ) max [ count ] = sum ; } cur = cur -> next ; } printf ( \"\\nOutput\\n\" ) ; for ( count = 0 ; count < testcases ; count ++ ) printf ( \"%d\\n\" , max [ count ] ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 356,
              "end_byte": 357,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 358,
              "end_byte": 368,
              "text": "int rows ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 358,
                  "end_byte": 361,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 362,
                  "end_byte": 366,
                  "text": "rows",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 367,
                  "end_byte": 368,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 369,
              "end_byte": 392,
              "text": "int i , j , k , count ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 369,
                  "end_byte": 372,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 373,
                  "end_byte": 374,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 375,
                  "end_byte": 376,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 379,
                  "end_byte": 380,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 381,
                  "end_byte": 382,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 383,
                  "end_byte": 384,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 385,
                  "end_byte": 390,
                  "text": "count",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 391,
                  "end_byte": 392,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 393,
              "end_byte": 404,
              "text": "int r , c ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 393,
                  "end_byte": 396,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 397,
                  "end_byte": 398,
                  "text": "r",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 399,
                  "end_byte": 400,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 401,
                  "end_byte": 402,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 403,
                  "end_byte": 404,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 405,
              "end_byte": 422,
              "text": "int bin [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 405,
                  "end_byte": 408,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 409,
                  "end_byte": 420,
                  "text": "bin [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 409,
                      "end_byte": 412,
                      "text": "bin",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 413,
                      "end_byte": 414,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 415,
                      "end_byte": 418,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 419,
                      "end_byte": 420,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 421,
                  "end_byte": 422,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 423,
              "end_byte": 441,
              "text": "int max [ 1000 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 423,
                  "end_byte": 426,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 427,
                  "end_byte": 439,
                  "text": "max [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 427,
                      "end_byte": 430,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 431,
                      "end_byte": 432,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 433,
                      "end_byte": 437,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 438,
                      "end_byte": 439,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 440,
                  "end_byte": 441,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 442,
              "end_byte": 455,
              "text": "int sum = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 442,
                  "end_byte": 445,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 446,
                  "end_byte": 453,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 446,
                      "end_byte": 449,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 450,
                      "end_byte": 451,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 452,
                      "end_byte": 453,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 454,
                  "end_byte": 455,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 456,
              "end_byte": 471,
              "text": "int testcases ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 456,
                  "end_byte": 459,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 460,
                  "end_byte": 469,
                  "text": "testcases",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 470,
                  "end_byte": 471,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 472,
              "end_byte": 496,
              "text": "NODE temp , head , cur ;",
              "children": [
                {
                  "type": "type_identifier",
                  "start_byte": 472,
                  "end_byte": 476,
                  "text": "NODE",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 477,
                  "end_byte": 481,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 482,
                  "end_byte": 483,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 484,
                  "end_byte": 488,
                  "text": "head",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 489,
                  "end_byte": 490,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 491,
                  "end_byte": 494,
                  "text": "cur",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 495,
                  "end_byte": 496,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 497,
              "end_byte": 519,
              "text": "printf ( \"Input\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 497,
                  "end_byte": 517,
                  "text": "printf ( \"Input\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 497,
                      "end_byte": 503,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 504,
                      "end_byte": 517,
                      "text": "( \"Input\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 504,
                          "end_byte": 505,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 506,
                          "end_byte": 515,
                          "text": "\"Input\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 506,
                              "end_byte": 507,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 507,
                              "end_byte": 512,
                              "text": "Input",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 512,
                              "end_byte": 514,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 514,
                              "end_byte": 515,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 516,
                          "end_byte": 517,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 518,
                  "end_byte": 519,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 520,
              "end_byte": 550,
              "text": "scanf ( \"%d\" , & testcases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 520,
                  "end_byte": 548,
                  "text": "scanf ( \"%d\" , & testcases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 520,
                      "end_byte": 525,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 526,
                      "end_byte": 548,
                      "text": "( \"%d\" , & testcases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 526,
                          "end_byte": 527,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 528,
                          "end_byte": 532,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 528,
                              "end_byte": 529,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 529,
                              "end_byte": 531,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 531,
                              "end_byte": 532,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 533,
                          "end_byte": 534,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 535,
                          "end_byte": 546,
                          "text": "& testcases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 535,
                              "end_byte": 536,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 537,
                              "end_byte": 546,
                              "text": "testcases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 547,
                          "end_byte": 548,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 549,
                  "end_byte": 550,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 551,
              "end_byte": 869,
              "text": "for ( count = 0 ; count < testcases ; count ++ ) { temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 551,
                  "end_byte": 554,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 555,
                  "end_byte": 556,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 557,
                  "end_byte": 566,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 557,
                      "end_byte": 562,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 563,
                      "end_byte": 564,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 565,
                      "end_byte": 566,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 567,
                  "end_byte": 568,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 569,
                  "end_byte": 586,
                  "text": "count < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 569,
                      "end_byte": 574,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 575,
                      "end_byte": 576,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 577,
                      "end_byte": 586,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 587,
                  "end_byte": 588,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 589,
                  "end_byte": 597,
                  "text": "count ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 589,
                      "end_byte": 594,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 595,
                      "end_byte": 597,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 598,
                  "end_byte": 599,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 600,
                  "end_byte": 869,
                  "text": "{ temp = getnode ( ) ; scanf ( \"%d\" , & rows ) ; for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; } if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 600,
                      "end_byte": 601,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 602,
                      "end_byte": 622,
                      "text": "temp = getnode ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 602,
                          "end_byte": 620,
                          "text": "temp = getnode ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 602,
                              "end_byte": 606,
                              "text": "temp",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 607,
                              "end_byte": 608,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 609,
                              "end_byte": 620,
                              "text": "getnode ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 609,
                                  "end_byte": 616,
                                  "text": "getnode",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 617,
                                  "end_byte": 620,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 617,
                                      "end_byte": 618,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 619,
                                      "end_byte": 620,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 621,
                          "end_byte": 622,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 623,
                      "end_byte": 648,
                      "text": "scanf ( \"%d\" , & rows ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 623,
                          "end_byte": 646,
                          "text": "scanf ( \"%d\" , & rows )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 623,
                              "end_byte": 628,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 629,
                              "end_byte": 646,
                              "text": "( \"%d\" , & rows )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 629,
                                  "end_byte": 630,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 631,
                                  "end_byte": 635,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 631,
                                      "end_byte": 632,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 632,
                                      "end_byte": 634,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 634,
                                      "end_byte": 635,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 636,
                                  "end_byte": 637,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 638,
                                  "end_byte": 644,
                                  "text": "& rows",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 638,
                                      "end_byte": 639,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 640,
                                      "end_byte": 644,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 645,
                                  "end_byte": 646,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 647,
                          "end_byte": 648,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 649,
                      "end_byte": 768,
                      "text": "for ( i = 1 ; i <= rows ; i ++ ) for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 649,
                          "end_byte": 652,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 653,
                          "end_byte": 654,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 655,
                          "end_byte": 660,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 655,
                              "end_byte": 656,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 657,
                              "end_byte": 658,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 659,
                              "end_byte": 660,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 661,
                          "end_byte": 662,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 663,
                          "end_byte": 672,
                          "text": "i <= rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 663,
                              "end_byte": 664,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 665,
                              "end_byte": 667,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 668,
                              "end_byte": 672,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 673,
                          "end_byte": 674,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 675,
                          "end_byte": 679,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 675,
                              "end_byte": 676,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 677,
                              "end_byte": 679,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 680,
                          "end_byte": 681,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 682,
                          "end_byte": 768,
                          "text": "for ( j = 0 ; j < i ; j ++ ) { scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; }",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 682,
                              "end_byte": 685,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 686,
                              "end_byte": 687,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 688,
                              "end_byte": 693,
                              "text": "j = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 688,
                                  "end_byte": 689,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 690,
                                  "end_byte": 691,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 692,
                                  "end_byte": 693,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 694,
                              "end_byte": 695,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 696,
                              "end_byte": 701,
                              "text": "j < i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 696,
                                  "end_byte": 697,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 698,
                                  "end_byte": 699,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 700,
                                  "end_byte": 701,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 702,
                              "end_byte": 703,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 704,
                              "end_byte": 708,
                              "text": "j ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 704,
                                  "end_byte": 705,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 706,
                                  "end_byte": 708,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 709,
                              "end_byte": 710,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 711,
                              "end_byte": 768,
                              "text": "{ scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 711,
                                  "end_byte": 712,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 713,
                                  "end_byte": 766,
                                  "text": "scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 713,
                                      "end_byte": 764,
                                      "text": "scanf ( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 713,
                                          "end_byte": 718,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 719,
                                          "end_byte": 764,
                                          "text": "( \"%d\" , & temp -> triangle [ i - 1 ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 719,
                                              "end_byte": 720,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 721,
                                              "end_byte": 725,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 721,
                                                  "end_byte": 722,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 722,
                                                  "end_byte": 724,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 724,
                                                  "end_byte": 725,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 726,
                                              "end_byte": 727,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 728,
                                              "end_byte": 762,
                                              "text": "& temp -> triangle [ i - 1 ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 728,
                                                  "end_byte": 729,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 730,
                                                  "end_byte": 762,
                                                  "text": "temp -> triangle [ i - 1 ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 730,
                                                      "end_byte": 756,
                                                      "text": "temp -> triangle [ i - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "field_expression",
                                                          "start_byte": 730,
                                                          "end_byte": 746,
                                                          "text": "temp -> triangle",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 730,
                                                              "end_byte": 734,
                                                              "text": "temp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "->",
                                                              "start_byte": 735,
                                                              "end_byte": 737,
                                                              "text": "->",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "field_identifier",
                                                              "start_byte": 738,
                                                              "end_byte": 746,
                                                              "text": "triangle",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 747,
                                                          "end_byte": 756,
                                                          "text": "[ i - 1 ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 747,
                                                              "end_byte": 748,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 749,
                                                              "end_byte": 754,
                                                              "text": "i - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 749,
                                                                  "end_byte": 750,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 751,
                                                                  "end_byte": 752,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 753,
                                                                  "end_byte": 754,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 755,
                                                              "end_byte": 756,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 757,
                                                      "end_byte": 762,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 757,
                                                          "end_byte": 758,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 759,
                                                          "end_byte": 760,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 761,
                                                          "end_byte": 762,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 763,
                                              "end_byte": 764,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 765,
                                      "end_byte": 766,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 767,
                                  "end_byte": 768,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 769,
                      "end_byte": 867,
                      "text": "if ( count == 0 ) { head = temp ; cur = head ; } else { cur -> next = temp ; cur = cur -> next ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 769,
                          "end_byte": 771,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 772,
                          "end_byte": 786,
                          "text": "( count == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 772,
                              "end_byte": 773,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 774,
                              "end_byte": 784,
                              "text": "count == 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 774,
                                  "end_byte": 779,
                                  "text": "count",
                                  "children": []
                                },
                                {
                                  "type": "==",
                                  "start_byte": 780,
                                  "end_byte": 782,
                                  "text": "==",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 783,
                                  "end_byte": 784,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 785,
                              "end_byte": 786,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 787,
                          "end_byte": 817,
                          "text": "{ head = temp ; cur = head ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 787,
                              "end_byte": 788,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 789,
                              "end_byte": 802,
                              "text": "head = temp ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 789,
                                  "end_byte": 800,
                                  "text": "head = temp",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 789,
                                      "end_byte": 793,
                                      "text": "head",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 794,
                                      "end_byte": 795,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 796,
                                      "end_byte": 800,
                                      "text": "temp",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 801,
                                  "end_byte": 802,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 803,
                              "end_byte": 815,
                              "text": "cur = head ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 803,
                                  "end_byte": 813,
                                  "text": "cur = head",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 803,
                                      "end_byte": 806,
                                      "text": "cur",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 807,
                                      "end_byte": 808,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 809,
                                      "end_byte": 813,
                                      "text": "head",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 814,
                                  "end_byte": 815,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 816,
                              "end_byte": 817,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 818,
                          "end_byte": 867,
                          "text": "else { cur -> next = temp ; cur = cur -> next ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 818,
                              "end_byte": 822,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 823,
                              "end_byte": 867,
                              "text": "{ cur -> next = temp ; cur = cur -> next ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 823,
                                  "end_byte": 824,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 825,
                                  "end_byte": 845,
                                  "text": "cur -> next = temp ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 825,
                                      "end_byte": 843,
                                      "text": "cur -> next = temp",
                                      "children": [
                                        {
                                          "type": "field_expression",
                                          "start_byte": 825,
                                          "end_byte": 836,
                                          "text": "cur -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 825,
                                              "end_byte": 828,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 829,
                                              "end_byte": 831,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 832,
                                              "end_byte": 836,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 837,
                                          "end_byte": 838,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 839,
                                          "end_byte": 843,
                                          "text": "temp",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 844,
                                      "end_byte": 845,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 846,
                                  "end_byte": 865,
                                  "text": "cur = cur -> next ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 846,
                                      "end_byte": 863,
                                      "text": "cur = cur -> next",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 846,
                                          "end_byte": 849,
                                          "text": "cur",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 850,
                                          "end_byte": 851,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "field_expression",
                                          "start_byte": 852,
                                          "end_byte": 863,
                                          "text": "cur -> next",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 852,
                                              "end_byte": 855,
                                              "text": "cur",
                                              "children": []
                                            },
                                            {
                                              "type": "->",
                                              "start_byte": 856,
                                              "end_byte": 858,
                                              "text": "->",
                                              "children": []
                                            },
                                            {
                                              "type": "field_identifier",
                                              "start_byte": 859,
                                              "end_byte": 863,
                                              "text": "next",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 864,
                                      "end_byte": 865,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 866,
                                  "end_byte": 867,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 868,
                      "end_byte": 869,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 870,
              "end_byte": 882,
              "text": "cur = head ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 870,
                  "end_byte": 880,
                  "text": "cur = head",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 870,
                      "end_byte": 873,
                      "text": "cur",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 874,
                      "end_byte": 875,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 876,
                      "end_byte": 880,
                      "text": "head",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 881,
                  "end_byte": 882,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 883,
              "end_byte": 1294,
              "text": "for ( count = 0 ; count < testcases ; count ++ ) { max [ count ] = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; max [ count ] += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > max [ count ] ) max [ count ] = sum ; } cur = cur -> next ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 883,
                  "end_byte": 886,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 887,
                  "end_byte": 888,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 889,
                  "end_byte": 898,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 889,
                      "end_byte": 894,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 895,
                      "end_byte": 896,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 897,
                      "end_byte": 898,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 899,
                  "end_byte": 900,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 901,
                  "end_byte": 918,
                  "text": "count < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 901,
                      "end_byte": 906,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 907,
                      "end_byte": 908,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 909,
                      "end_byte": 918,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 919,
                  "end_byte": 920,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 921,
                  "end_byte": 929,
                  "text": "count ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 921,
                      "end_byte": 926,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 927,
                      "end_byte": 929,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 930,
                  "end_byte": 931,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 932,
                  "end_byte": 1294,
                  "text": "{ max [ count ] = 0 ; for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; max [ count ] += cur -> triangle [ j ] [ 0 ] ; } while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > max [ count ] ) max [ count ] = sum ; } cur = cur -> next ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 932,
                      "end_byte": 933,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 934,
                      "end_byte": 953,
                      "text": "max [ count ] = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 934,
                          "end_byte": 951,
                          "text": "max [ count ] = 0",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 934,
                              "end_byte": 947,
                              "text": "max [ count ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 934,
                                  "end_byte": 937,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 938,
                                  "end_byte": 947,
                                  "text": "[ count ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 938,
                                      "end_byte": 939,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 940,
                                      "end_byte": 945,
                                      "text": "count",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 946,
                                      "end_byte": 947,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 948,
                              "end_byte": 949,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 950,
                              "end_byte": 951,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 952,
                          "end_byte": 953,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 954,
                      "end_byte": 1052,
                      "text": "for ( j = 0 ; j < rows ; j ++ ) { bin [ j ] = 0 ; max [ count ] += cur -> triangle [ j ] [ 0 ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 954,
                          "end_byte": 957,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 958,
                          "end_byte": 959,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 960,
                          "end_byte": 965,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 960,
                              "end_byte": 961,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 962,
                              "end_byte": 963,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 964,
                              "end_byte": 965,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 966,
                          "end_byte": 967,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 968,
                          "end_byte": 976,
                          "text": "j < rows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 968,
                              "end_byte": 969,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 970,
                              "end_byte": 971,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 972,
                              "end_byte": 976,
                              "text": "rows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 977,
                          "end_byte": 978,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 979,
                          "end_byte": 983,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 979,
                              "end_byte": 980,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 981,
                              "end_byte": 983,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 984,
                          "end_byte": 985,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 986,
                          "end_byte": 1052,
                          "text": "{ bin [ j ] = 0 ; max [ count ] += cur -> triangle [ j ] [ 0 ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 986,
                              "end_byte": 987,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 988,
                              "end_byte": 1003,
                              "text": "bin [ j ] = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 988,
                                  "end_byte": 1001,
                                  "text": "bin [ j ] = 0",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 988,
                                      "end_byte": 997,
                                      "text": "bin [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 988,
                                          "end_byte": 991,
                                          "text": "bin",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 992,
                                          "end_byte": 997,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 992,
                                              "end_byte": 993,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 994,
                                              "end_byte": 995,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 996,
                                              "end_byte": 997,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 998,
                                      "end_byte": 999,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1000,
                                      "end_byte": 1001,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1002,
                                  "end_byte": 1003,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1004,
                              "end_byte": 1050,
                              "text": "max [ count ] += cur -> triangle [ j ] [ 0 ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1004,
                                  "end_byte": 1048,
                                  "text": "max [ count ] += cur -> triangle [ j ] [ 0 ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1004,
                                      "end_byte": 1017,
                                      "text": "max [ count ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1004,
                                          "end_byte": 1007,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1008,
                                          "end_byte": 1017,
                                          "text": "[ count ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1008,
                                              "end_byte": 1009,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1010,
                                              "end_byte": 1015,
                                              "text": "count",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1016,
                                              "end_byte": 1017,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+=",
                                      "start_byte": 1018,
                                      "end_byte": 1020,
                                      "text": "+=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 1021,
                                      "end_byte": 1048,
                                      "text": "cur -> triangle [ j ] [ 0 ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1021,
                                          "end_byte": 1042,
                                          "text": "cur -> triangle [ j ]",
                                          "children": [
                                            {
                                              "type": "field_expression",
                                              "start_byte": 1021,
                                              "end_byte": 1036,
                                              "text": "cur -> triangle",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1021,
                                                  "end_byte": 1024,
                                                  "text": "cur",
                                                  "children": []
                                                },
                                                {
                                                  "type": "->",
                                                  "start_byte": 1025,
                                                  "end_byte": 1027,
                                                  "text": "->",
                                                  "children": []
                                                },
                                                {
                                                  "type": "field_identifier",
                                                  "start_byte": 1028,
                                                  "end_byte": 1036,
                                                  "text": "triangle",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1037,
                                              "end_byte": 1042,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1037,
                                                  "end_byte": 1038,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1039,
                                                  "end_byte": 1040,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1041,
                                                  "end_byte": 1042,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 1043,
                                          "end_byte": 1048,
                                          "text": "[ 0 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 1043,
                                              "end_byte": 1044,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 1045,
                                              "end_byte": 1046,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 1047,
                                              "end_byte": 1048,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1049,
                                  "end_byte": 1050,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1051,
                              "end_byte": 1052,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 1053,
                      "end_byte": 1272,
                      "text": "while ( next ( bin , rows - 1 ) ) { k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > max [ count ] ) max [ count ] = sum ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 1053,
                          "end_byte": 1058,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 1059,
                          "end_byte": 1086,
                          "text": "( next ( bin , rows - 1 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1059,
                              "end_byte": 1060,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 1061,
                              "end_byte": 1084,
                              "text": "next ( bin , rows - 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1061,
                                  "end_byte": 1065,
                                  "text": "next",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 1066,
                                  "end_byte": 1084,
                                  "text": "( bin , rows - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1066,
                                      "end_byte": 1067,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1068,
                                      "end_byte": 1071,
                                      "text": "bin",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 1072,
                                      "end_byte": 1073,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1074,
                                      "end_byte": 1082,
                                      "text": "rows - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1074,
                                          "end_byte": 1078,
                                          "text": "rows",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 1079,
                                          "end_byte": 1080,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 1081,
                                          "end_byte": 1082,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1083,
                                      "end_byte": 1084,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1085,
                              "end_byte": 1086,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1087,
                          "end_byte": 1272,
                          "text": "{ k = 0 ; r = 0 ; c = 0 ; sum = 0 ; for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; } if ( sum > max [ count ] ) max [ count ] = sum ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1087,
                              "end_byte": 1088,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1089,
                              "end_byte": 1096,
                              "text": "k = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1089,
                                  "end_byte": 1094,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1089,
                                      "end_byte": 1090,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1091,
                                      "end_byte": 1092,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1093,
                                      "end_byte": 1094,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1095,
                                  "end_byte": 1096,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1097,
                              "end_byte": 1104,
                              "text": "r = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1097,
                                  "end_byte": 1102,
                                  "text": "r = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1097,
                                      "end_byte": 1098,
                                      "text": "r",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1099,
                                      "end_byte": 1100,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1101,
                                      "end_byte": 1102,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1103,
                                  "end_byte": 1104,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1105,
                              "end_byte": 1112,
                              "text": "c = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1105,
                                  "end_byte": 1110,
                                  "text": "c = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1105,
                                      "end_byte": 1106,
                                      "text": "c",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1107,
                                      "end_byte": 1108,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1109,
                                      "end_byte": 1110,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1111,
                                  "end_byte": 1112,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 1113,
                              "end_byte": 1122,
                              "text": "sum = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1113,
                                  "end_byte": 1120,
                                  "text": "sum = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1113,
                                      "end_byte": 1116,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1117,
                                      "end_byte": 1118,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1119,
                                      "end_byte": 1120,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1121,
                                  "end_byte": 1122,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 1123,
                              "end_byte": 1221,
                              "text": "for ( j = 0 ; j < rows ; j ++ ) { sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 1123,
                                  "end_byte": 1126,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 1127,
                                  "end_byte": 1128,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 1129,
                                  "end_byte": 1134,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1129,
                                      "end_byte": 1130,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 1131,
                                      "end_byte": 1132,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 1133,
                                      "end_byte": 1134,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1135,
                                  "end_byte": 1136,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 1137,
                                  "end_byte": 1145,
                                  "text": "j < rows",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1137,
                                      "end_byte": 1138,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 1139,
                                      "end_byte": 1140,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1141,
                                      "end_byte": 1145,
                                      "text": "rows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 1146,
                                  "end_byte": 1147,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 1148,
                                  "end_byte": 1152,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1148,
                                      "end_byte": 1149,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 1150,
                                      "end_byte": 1152,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1153,
                                  "end_byte": 1154,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 1155,
                                  "end_byte": 1221,
                                  "text": "{ sum += cur -> triangle [ r ++ ] [ c ] ; c = c + bin [ k ++ ] ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 1155,
                                      "end_byte": 1156,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1157,
                                      "end_byte": 1196,
                                      "text": "sum += cur -> triangle [ r ++ ] [ c ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1157,
                                          "end_byte": 1194,
                                          "text": "sum += cur -> triangle [ r ++ ] [ c ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1157,
                                              "end_byte": 1160,
                                              "text": "sum",
                                              "children": []
                                            },
                                            {
                                              "type": "+=",
                                              "start_byte": 1161,
                                              "end_byte": 1163,
                                              "text": "+=",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 1164,
                                              "end_byte": 1194,
                                              "text": "cur -> triangle [ r ++ ] [ c ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1164,
                                                  "end_byte": 1188,
                                                  "text": "cur -> triangle [ r ++ ]",
                                                  "children": [
                                                    {
                                                      "type": "field_expression",
                                                      "start_byte": 1164,
                                                      "end_byte": 1179,
                                                      "text": "cur -> triangle",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 1164,
                                                          "end_byte": 1167,
                                                          "text": "cur",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "->",
                                                          "start_byte": 1168,
                                                          "end_byte": 1170,
                                                          "text": "->",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "field_identifier",
                                                          "start_byte": 1171,
                                                          "end_byte": 1179,
                                                          "text": "triangle",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1180,
                                                      "end_byte": 1188,
                                                      "text": "[ r ++ ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1180,
                                                          "end_byte": 1181,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 1182,
                                                          "end_byte": 1186,
                                                          "text": "r ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1182,
                                                              "end_byte": 1183,
                                                              "text": "r",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 1184,
                                                              "end_byte": 1186,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1187,
                                                          "end_byte": 1188,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 1189,
                                                  "end_byte": 1194,
                                                  "text": "[ c ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 1189,
                                                      "end_byte": 1190,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1191,
                                                      "end_byte": 1192,
                                                      "text": "c",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 1193,
                                                      "end_byte": 1194,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1195,
                                          "end_byte": 1196,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 1197,
                                      "end_byte": 1219,
                                      "text": "c = c + bin [ k ++ ] ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 1197,
                                          "end_byte": 1217,
                                          "text": "c = c + bin [ k ++ ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1197,
                                              "end_byte": 1198,
                                              "text": "c",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 1199,
                                              "end_byte": 1200,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 1201,
                                              "end_byte": 1217,
                                              "text": "c + bin [ k ++ ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1201,
                                                  "end_byte": 1202,
                                                  "text": "c",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 1203,
                                                  "end_byte": 1204,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 1205,
                                                  "end_byte": 1217,
                                                  "text": "bin [ k ++ ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 1205,
                                                      "end_byte": 1208,
                                                      "text": "bin",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 1209,
                                                      "end_byte": 1217,
                                                      "text": "[ k ++ ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 1209,
                                                          "end_byte": 1210,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "update_expression",
                                                          "start_byte": 1211,
                                                          "end_byte": 1215,
                                                          "text": "k ++",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 1211,
                                                              "end_byte": 1212,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "++",
                                                              "start_byte": 1213,
                                                              "end_byte": 1215,
                                                              "text": "++",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 1216,
                                                          "end_byte": 1217,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 1218,
                                          "end_byte": 1219,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1220,
                                      "end_byte": 1221,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 1222,
                              "end_byte": 1270,
                              "text": "if ( sum > max [ count ] ) max [ count ] = sum ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 1222,
                                  "end_byte": 1224,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 1225,
                                  "end_byte": 1248,
                                  "text": "( sum > max [ count ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1225,
                                      "end_byte": 1226,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1227,
                                      "end_byte": 1246,
                                      "text": "sum > max [ count ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1227,
                                          "end_byte": 1230,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 1231,
                                          "end_byte": 1232,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1233,
                                          "end_byte": 1246,
                                          "text": "max [ count ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1233,
                                              "end_byte": 1236,
                                              "text": "max",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1237,
                                              "end_byte": 1246,
                                              "text": "[ count ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1237,
                                                  "end_byte": 1238,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1239,
                                                  "end_byte": 1244,
                                                  "text": "count",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1245,
                                                  "end_byte": 1246,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1247,
                                      "end_byte": 1248,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1249,
                                  "end_byte": 1270,
                                  "text": "max [ count ] = sum ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1249,
                                      "end_byte": 1268,
                                      "text": "max [ count ] = sum",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1249,
                                          "end_byte": 1262,
                                          "text": "max [ count ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1249,
                                              "end_byte": 1252,
                                              "text": "max",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1253,
                                              "end_byte": 1262,
                                              "text": "[ count ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1253,
                                                  "end_byte": 1254,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1255,
                                                  "end_byte": 1260,
                                                  "text": "count",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1261,
                                                  "end_byte": 1262,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1263,
                                          "end_byte": 1264,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1265,
                                          "end_byte": 1268,
                                          "text": "sum",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1269,
                                      "end_byte": 1270,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1271,
                              "end_byte": 1272,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1273,
                      "end_byte": 1292,
                      "text": "cur = cur -> next ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1273,
                          "end_byte": 1290,
                          "text": "cur = cur -> next",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1273,
                              "end_byte": 1276,
                              "text": "cur",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1277,
                              "end_byte": 1278,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "field_expression",
                              "start_byte": 1279,
                              "end_byte": 1290,
                              "text": "cur -> next",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1279,
                                  "end_byte": 1282,
                                  "text": "cur",
                                  "children": []
                                },
                                {
                                  "type": "->",
                                  "start_byte": 1283,
                                  "end_byte": 1285,
                                  "text": "->",
                                  "children": []
                                },
                                {
                                  "type": "field_identifier",
                                  "start_byte": 1286,
                                  "end_byte": 1290,
                                  "text": "next",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1291,
                          "end_byte": 1292,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1293,
                      "end_byte": 1294,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 1295,
              "end_byte": 1320,
              "text": "printf ( \"\\nOutput\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 1295,
                  "end_byte": 1318,
                  "text": "printf ( \"\\nOutput\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1295,
                      "end_byte": 1301,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 1302,
                      "end_byte": 1318,
                      "text": "( \"\\nOutput\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 1302,
                          "end_byte": 1303,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 1304,
                          "end_byte": 1316,
                          "text": "\"\\nOutput\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 1304,
                              "end_byte": 1305,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 1305,
                              "end_byte": 1307,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 1307,
                              "end_byte": 1313,
                              "text": "Output",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 1313,
                              "end_byte": 1315,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 1315,
                              "end_byte": 1316,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1317,
                          "end_byte": 1318,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1319,
                  "end_byte": 1320,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 1321,
              "end_byte": 1405,
              "text": "for ( count = 0 ; count < testcases ; count ++ ) printf ( \"%d\\n\" , max [ count ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 1321,
                  "end_byte": 1324,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 1325,
                  "end_byte": 1326,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 1327,
                  "end_byte": 1336,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1327,
                      "end_byte": 1332,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 1333,
                      "end_byte": 1334,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 1335,
                      "end_byte": 1336,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1337,
                  "end_byte": 1338,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 1339,
                  "end_byte": 1356,
                  "text": "count < testcases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1339,
                      "end_byte": 1344,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 1345,
                      "end_byte": 1346,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 1347,
                      "end_byte": 1356,
                      "text": "testcases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 1357,
                  "end_byte": 1358,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 1359,
                  "end_byte": 1367,
                  "text": "count ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 1359,
                      "end_byte": 1364,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 1365,
                      "end_byte": 1367,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 1368,
                  "end_byte": 1369,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 1370,
                  "end_byte": 1405,
                  "text": "printf ( \"%d\\n\" , max [ count ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 1370,
                      "end_byte": 1403,
                      "text": "printf ( \"%d\\n\" , max [ count ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 1370,
                          "end_byte": 1376,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 1377,
                          "end_byte": 1403,
                          "text": "( \"%d\\n\" , max [ count ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 1377,
                              "end_byte": 1378,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 1379,
                              "end_byte": 1385,
                              "text": "\"%d\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 1379,
                                  "end_byte": 1380,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 1380,
                                  "end_byte": 1382,
                                  "text": "%d",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 1382,
                                  "end_byte": 1384,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 1384,
                                  "end_byte": 1385,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 1386,
                              "end_byte": 1387,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 1388,
                              "end_byte": 1401,
                              "text": "max [ count ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1388,
                                  "end_byte": 1391,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 1392,
                                  "end_byte": 1401,
                                  "text": "[ count ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 1392,
                                      "end_byte": 1393,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 1394,
                                      "end_byte": 1399,
                                      "text": "count",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 1400,
                                      "end_byte": 1401,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 1402,
                              "end_byte": 1403,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 1404,
                      "end_byte": 1405,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1406,
              "end_byte": 1407,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}