{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 575,
  "text": "int CountNonDecSubarray ( int * , int ) ; int main ( ) { int t , i , a [ 100 ] , n , s , j , flag ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & s ) ; for ( j = 0 ; j < s ; j ++ ) scanf ( \"%d\" , & a [ j ] ) ; flag = CountNonDecSubarray ( a , s ) ; printf ( \"%d\\n\" , flag ) ; } return 0 ; } int CountNonDecSubarray ( int * a , int s ) { int i , j , k , count = 0 ; for ( i = 0 ; i < s - 1 ; ) { k = 0 ; for ( j = i + 1 ; j < s ; j ++ , i ++ ) { if ( a [ i ] > a [ j ] ) break ; else k ++ ; } if ( k > 0 ) { count ++ ; i = j ; } } return count + s ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 41,
      "text": "int CountNonDecSubarray ( int * , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 39,
          "text": "CountNonDecSubarray ( int * , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 23,
              "text": "CountNonDecSubarray",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 24,
              "end_byte": 39,
              "text": "( int * , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 26,
                  "end_byte": 31,
                  "text": "int *",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 26,
                      "end_byte": 29,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "abstract_pointer_declarator",
                      "start_byte": 30,
                      "end_byte": 31,
                      "text": "*",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 30,
                          "end_byte": 31,
                          "text": "*",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 34,
                      "end_byte": 37,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 40,
          "end_byte": 41,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 42,
      "end_byte": 315,
      "text": "int main ( ) { int t , i , a [ 100 ] , n , s , j , flag ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & s ) ; for ( j = 0 ; j < s ; j ++ ) scanf ( \"%d\" , & a [ j ] ) ; flag = CountNonDecSubarray ( a , s ) ; printf ( \"%d\\n\" , flag ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 42,
          "end_byte": 45,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 46,
          "end_byte": 54,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 46,
              "end_byte": 50,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 51,
              "end_byte": 54,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 55,
          "end_byte": 315,
          "text": "{ int t , i , a [ 100 ] , n , s , j , flag ; scanf ( \"%d\" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & s ) ; for ( j = 0 ; j < s ; j ++ ) scanf ( \"%d\" , & a [ j ] ) ; flag = CountNonDecSubarray ( a , s ) ; printf ( \"%d\\n\" , flag ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 55,
              "end_byte": 56,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 57,
              "end_byte": 99,
              "text": "int t , i , a [ 100 ] , n , s , j , flag ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 57,
                  "end_byte": 60,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 69,
                  "end_byte": 78,
                  "text": "a [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 73,
                      "end_byte": 76,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 85,
                  "end_byte": 86,
                  "text": "s",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 89,
                  "end_byte": 90,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 91,
                  "end_byte": 92,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 93,
                  "end_byte": 97,
                  "text": "flag",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 100,
              "end_byte": 122,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 100,
                  "end_byte": 120,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 100,
                      "end_byte": 105,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 106,
                      "end_byte": 120,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 106,
                          "end_byte": 107,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 108,
                          "end_byte": 112,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 108,
                              "end_byte": 109,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 109,
                              "end_byte": 111,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 111,
                              "end_byte": 112,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 113,
                          "end_byte": 114,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 115,
                          "end_byte": 118,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 115,
                              "end_byte": 116,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 117,
                              "end_byte": 118,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 119,
                          "end_byte": 120,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 121,
                  "end_byte": 122,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 123,
              "end_byte": 302,
              "text": "for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & s ) ; for ( j = 0 ; j < s ; j ++ ) scanf ( \"%d\" , & a [ j ] ) ; flag = CountNonDecSubarray ( a , s ) ; printf ( \"%d\\n\" , flag ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 123,
                  "end_byte": 126,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 129,
                  "end_byte": 134,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 131,
                      "end_byte": 132,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 133,
                      "end_byte": 134,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 135,
                  "end_byte": 136,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 137,
                  "end_byte": 142,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 137,
                      "end_byte": 138,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 139,
                      "end_byte": 140,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 141,
                      "end_byte": 142,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 143,
                  "end_byte": 144,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 145,
                  "end_byte": 149,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 145,
                      "end_byte": 146,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 147,
                      "end_byte": 149,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 150,
                  "end_byte": 151,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 152,
                  "end_byte": 302,
                  "text": "{ scanf ( \"%d\" , & s ) ; for ( j = 0 ; j < s ; j ++ ) scanf ( \"%d\" , & a [ j ] ) ; flag = CountNonDecSubarray ( a , s ) ; printf ( \"%d\\n\" , flag ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 152,
                      "end_byte": 153,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 154,
                      "end_byte": 176,
                      "text": "scanf ( \"%d\" , & s ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 154,
                          "end_byte": 174,
                          "text": "scanf ( \"%d\" , & s )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 154,
                              "end_byte": 159,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 160,
                              "end_byte": 174,
                              "text": "( \"%d\" , & s )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 162,
                                  "end_byte": 166,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 163,
                                      "end_byte": 165,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 167,
                                  "end_byte": 168,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 169,
                                  "end_byte": 172,
                                  "text": "& s",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 169,
                                      "end_byte": 170,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 171,
                                      "end_byte": 172,
                                      "text": "s",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 175,
                          "end_byte": 176,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 177,
                      "end_byte": 234,
                      "text": "for ( j = 0 ; j < s ; j ++ ) scanf ( \"%d\" , & a [ j ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 177,
                          "end_byte": 180,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 181,
                          "end_byte": 182,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 183,
                          "end_byte": 188,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 187,
                              "end_byte": 188,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 189,
                          "end_byte": 190,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 191,
                          "end_byte": 196,
                          "text": "j < s",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 195,
                              "end_byte": 196,
                              "text": "s",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 197,
                          "end_byte": 198,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 199,
                          "end_byte": 203,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 199,
                              "end_byte": 200,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 201,
                              "end_byte": 203,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 204,
                          "end_byte": 205,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 206,
                          "end_byte": 234,
                          "text": "scanf ( \"%d\" , & a [ j ] ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 206,
                              "end_byte": 232,
                              "text": "scanf ( \"%d\" , & a [ j ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 206,
                                  "end_byte": 211,
                                  "text": "scanf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 212,
                                  "end_byte": 232,
                                  "text": "( \"%d\" , & a [ j ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 212,
                                      "end_byte": 213,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 214,
                                      "end_byte": 218,
                                      "text": "\"%d\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 214,
                                          "end_byte": 215,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 215,
                                          "end_byte": 217,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 217,
                                          "end_byte": 218,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 219,
                                      "end_byte": 220,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "pointer_expression",
                                      "start_byte": 221,
                                      "end_byte": 230,
                                      "text": "& a [ j ]",
                                      "children": [
                                        {
                                          "type": "&",
                                          "start_byte": 221,
                                          "end_byte": 222,
                                          "text": "&",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 223,
                                          "end_byte": 230,
                                          "text": "a [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 223,
                                              "end_byte": 224,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 225,
                                              "end_byte": 230,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 225,
                                                  "end_byte": 226,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 227,
                                                  "end_byte": 228,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 229,
                                                  "end_byte": 230,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 231,
                                      "end_byte": 232,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 233,
                              "end_byte": 234,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 235,
                      "end_byte": 273,
                      "text": "flag = CountNonDecSubarray ( a , s ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 235,
                          "end_byte": 271,
                          "text": "flag = CountNonDecSubarray ( a , s )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 235,
                              "end_byte": 239,
                              "text": "flag",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 240,
                              "end_byte": 241,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 242,
                              "end_byte": 271,
                              "text": "CountNonDecSubarray ( a , s )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 242,
                                  "end_byte": 261,
                                  "text": "CountNonDecSubarray",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 262,
                                  "end_byte": 271,
                                  "text": "( a , s )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 262,
                                      "end_byte": 263,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 266,
                                      "end_byte": 267,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 268,
                                      "end_byte": 269,
                                      "text": "s",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 270,
                                      "end_byte": 271,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 272,
                          "end_byte": 273,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 274,
                      "end_byte": 300,
                      "text": "printf ( \"%d\\n\" , flag ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 274,
                          "end_byte": 298,
                          "text": "printf ( \"%d\\n\" , flag )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 274,
                              "end_byte": 280,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 281,
                              "end_byte": 298,
                              "text": "( \"%d\\n\" , flag )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 281,
                                  "end_byte": 282,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 283,
                                  "end_byte": 289,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 284,
                                      "end_byte": 286,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 286,
                                      "end_byte": 288,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 288,
                                      "end_byte": 289,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 290,
                                  "end_byte": 291,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 292,
                                  "end_byte": 296,
                                  "text": "flag",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 297,
                                  "end_byte": 298,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 299,
                          "end_byte": 300,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 303,
              "end_byte": 313,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 303,
                  "end_byte": 309,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 310,
                  "end_byte": 311,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 312,
                  "end_byte": 313,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 314,
              "end_byte": 315,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 316,
      "end_byte": 575,
      "text": "int CountNonDecSubarray ( int * a , int s ) { int i , j , k , count = 0 ; for ( i = 0 ; i < s - 1 ; ) { k = 0 ; for ( j = i + 1 ; j < s ; j ++ , i ++ ) { if ( a [ i ] > a [ j ] ) break ; else k ++ ; } if ( k > 0 ) { count ++ ; i = j ; } } return count + s ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 316,
          "end_byte": 319,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 320,
          "end_byte": 359,
          "text": "CountNonDecSubarray ( int * a , int s )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 320,
              "end_byte": 339,
              "text": "CountNonDecSubarray",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 340,
              "end_byte": 359,
              "text": "( int * a , int s )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 340,
                  "end_byte": 341,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 342,
                  "end_byte": 349,
                  "text": "int * a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 342,
                      "end_byte": 345,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 346,
                      "end_byte": 349,
                      "text": "* a",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 346,
                          "end_byte": 347,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 348,
                          "end_byte": 349,
                          "text": "a",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 350,
                  "end_byte": 351,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 352,
                  "end_byte": 357,
                  "text": "int s",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 352,
                      "end_byte": 355,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 356,
                      "end_byte": 357,
                      "text": "s",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 358,
                  "end_byte": 359,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 360,
          "end_byte": 575,
          "text": "{ int i , j , k , count = 0 ; for ( i = 0 ; i < s - 1 ; ) { k = 0 ; for ( j = i + 1 ; j < s ; j ++ , i ++ ) { if ( a [ i ] > a [ j ] ) break ; else k ++ ; } if ( k > 0 ) { count ++ ; i = j ; } } return count + s ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 360,
              "end_byte": 361,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 362,
              "end_byte": 389,
              "text": "int i , j , k , count = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 362,
                  "end_byte": 365,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 366,
                  "end_byte": 367,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 368,
                  "end_byte": 369,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 372,
                  "end_byte": 373,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 374,
                  "end_byte": 375,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 376,
                  "end_byte": 377,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 378,
                  "end_byte": 387,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 378,
                      "end_byte": 383,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 384,
                      "end_byte": 385,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 386,
                      "end_byte": 387,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 388,
                  "end_byte": 389,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 390,
              "end_byte": 554,
              "text": "for ( i = 0 ; i < s - 1 ; ) { k = 0 ; for ( j = i + 1 ; j < s ; j ++ , i ++ ) { if ( a [ i ] > a [ j ] ) break ; else k ++ ; } if ( k > 0 ) { count ++ ; i = j ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 390,
                  "end_byte": 393,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 394,
                  "end_byte": 395,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 396,
                  "end_byte": 401,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 396,
                      "end_byte": 397,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 398,
                      "end_byte": 399,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 400,
                      "end_byte": 401,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 404,
                  "end_byte": 413,
                  "text": "i < s - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 404,
                      "end_byte": 405,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 406,
                      "end_byte": 407,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 408,
                      "end_byte": 413,
                      "text": "s - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 408,
                          "end_byte": 409,
                          "text": "s",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 410,
                          "end_byte": 411,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 412,
                          "end_byte": 413,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 414,
                  "end_byte": 415,
                  "text": ";",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 416,
                  "end_byte": 417,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 418,
                  "end_byte": 554,
                  "text": "{ k = 0 ; for ( j = i + 1 ; j < s ; j ++ , i ++ ) { if ( a [ i ] > a [ j ] ) break ; else k ++ ; } if ( k > 0 ) { count ++ ; i = j ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 418,
                      "end_byte": 419,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 420,
                      "end_byte": 427,
                      "text": "k = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 420,
                          "end_byte": 425,
                          "text": "k = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 420,
                              "end_byte": 421,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 422,
                              "end_byte": 423,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 426,
                          "end_byte": 427,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 428,
                      "end_byte": 516,
                      "text": "for ( j = i + 1 ; j < s ; j ++ , i ++ ) { if ( a [ i ] > a [ j ] ) break ; else k ++ ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 428,
                          "end_byte": 431,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 432,
                          "end_byte": 433,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 434,
                          "end_byte": 443,
                          "text": "j = i + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 434,
                              "end_byte": 435,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 436,
                              "end_byte": 437,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 438,
                              "end_byte": 443,
                              "text": "i + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 438,
                                  "end_byte": 439,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 440,
                                  "end_byte": 441,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 442,
                                  "end_byte": 443,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 444,
                          "end_byte": 445,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 446,
                          "end_byte": 451,
                          "text": "j < s",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 446,
                              "end_byte": 447,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 448,
                              "end_byte": 449,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 450,
                              "end_byte": 451,
                              "text": "s",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 452,
                          "end_byte": 453,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "comma_expression",
                          "start_byte": 454,
                          "end_byte": 465,
                          "text": "j ++ , i ++",
                          "children": [
                            {
                              "type": "update_expression",
                              "start_byte": 454,
                              "end_byte": 458,
                              "text": "j ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 456,
                                  "end_byte": 458,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 459,
                              "end_byte": 460,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 461,
                              "end_byte": 465,
                              "text": "i ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 461,
                                  "end_byte": 462,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 463,
                                  "end_byte": 465,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 466,
                          "end_byte": 467,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 468,
                          "end_byte": 516,
                          "text": "{ if ( a [ i ] > a [ j ] ) break ; else k ++ ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 468,
                              "end_byte": 469,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 470,
                              "end_byte": 514,
                              "text": "if ( a [ i ] > a [ j ] ) break ; else k ++ ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 470,
                                  "end_byte": 472,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 473,
                                  "end_byte": 494,
                                  "text": "( a [ i ] > a [ j ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 473,
                                      "end_byte": 474,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 475,
                                      "end_byte": 492,
                                      "text": "a [ i ] > a [ j ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 475,
                                          "end_byte": 482,
                                          "text": "a [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 475,
                                              "end_byte": 476,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 477,
                                              "end_byte": 482,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 477,
                                                  "end_byte": 478,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 479,
                                                  "end_byte": 480,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 481,
                                                  "end_byte": 482,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 483,
                                          "end_byte": 484,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 485,
                                          "end_byte": 492,
                                          "text": "a [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 485,
                                              "end_byte": 486,
                                              "text": "a",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 487,
                                              "end_byte": 492,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 487,
                                                  "end_byte": 488,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 489,
                                                  "end_byte": 490,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 491,
                                                  "end_byte": 492,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 493,
                                      "end_byte": 494,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "break_statement",
                                  "start_byte": 495,
                                  "end_byte": 502,
                                  "text": "break ;",
                                  "children": [
                                    {
                                      "type": "break",
                                      "start_byte": 495,
                                      "end_byte": 500,
                                      "text": "break",
                                      "children": []
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 501,
                                      "end_byte": 502,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 503,
                                  "end_byte": 514,
                                  "text": "else k ++ ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 503,
                                      "end_byte": 507,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 508,
                                      "end_byte": 514,
                                      "text": "k ++ ;",
                                      "children": [
                                        {
                                          "type": "update_expression",
                                          "start_byte": 508,
                                          "end_byte": 512,
                                          "text": "k ++",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 508,
                                              "end_byte": 509,
                                              "text": "k",
                                              "children": []
                                            },
                                            {
                                              "type": "++",
                                              "start_byte": 510,
                                              "end_byte": 512,
                                              "text": "++",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 513,
                                          "end_byte": 514,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 515,
                              "end_byte": 516,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 517,
                      "end_byte": 552,
                      "text": "if ( k > 0 ) { count ++ ; i = j ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 517,
                          "end_byte": 519,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 520,
                          "end_byte": 529,
                          "text": "( k > 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 520,
                              "end_byte": 521,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 522,
                              "end_byte": 527,
                              "text": "k > 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 522,
                                  "end_byte": 523,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 524,
                                  "end_byte": 525,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 526,
                                  "end_byte": 527,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 528,
                              "end_byte": 529,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 530,
                          "end_byte": 552,
                          "text": "{ count ++ ; i = j ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 530,
                              "end_byte": 531,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 532,
                              "end_byte": 542,
                              "text": "count ++ ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 532,
                                  "end_byte": 540,
                                  "text": "count ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 532,
                                      "end_byte": 537,
                                      "text": "count",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 538,
                                      "end_byte": 540,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 541,
                                  "end_byte": 542,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 543,
                              "end_byte": 550,
                              "text": "i = j ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 543,
                                  "end_byte": 548,
                                  "text": "i = j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 543,
                                      "end_byte": 544,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 545,
                                      "end_byte": 546,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 547,
                                      "end_byte": 548,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 549,
                                  "end_byte": 550,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 551,
                              "end_byte": 552,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 553,
                      "end_byte": 554,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 555,
              "end_byte": 573,
              "text": "return count + s ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 555,
                  "end_byte": 561,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 562,
                  "end_byte": 571,
                  "text": "count + s",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 562,
                      "end_byte": 567,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "+",
                      "start_byte": 568,
                      "end_byte": 569,
                      "text": "+",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 570,
                      "end_byte": 571,
                      "text": "s",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 572,
                  "end_byte": 573,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 574,
              "end_byte": 575,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}