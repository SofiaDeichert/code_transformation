int main ( ) { int max_sum [ 2 ] [ 100 ] ; int flag_a = 0 ; int flag_b = 1 ; int result [ 100 ] ; int input , temp ; int total_cases , total_inputs ; int i , row , column , j , k ; scanf ( "%d" , & total_cases ) ; for ( k = 0 ; k < 100 ; k ++ ) { result [ k ] = 0 ; } for ( i = 0 ; i < total_cases ; i ++ ) { for ( k = 0 ; k < 100 ; k ++ ) { max_sum [ 0 ] [ k ] = 0 ; max_sum [ 1 ] [ k ] = 0 ; } scanf ( "%d" , & total_inputs ) ; for ( row = 1 ; row <= total_inputs ; row ++ ) { for ( column = 0 ; column < row ; column ++ ) { scanf ( "%d" , & input ) ; if ( column != 0 ) { if ( max_sum [ flag_a ] [ column ] > max_sum [ flag_a ] [ column - 1 ] ) max_sum [ flag_b ] [ column ] = input + max_sum [ flag_a ] [ column ] ; else max_sum [ flag_b ] [ column ] = input + max_sum [ flag_a ] [ column - 1 ] ; } if ( column == 0 ) max_sum [ flag_b ] [ column ] = input + max_sum [ flag_a ] [ column ] ; } temp = flag_a ; flag_a = flag_b ; flag_b = temp ; } int max = 0 ; for ( j = 0 ; j < total_inputs ; j ++ ) { if ( max_sum [ flag_a ] [ j ] > max ) max = max_sum [ flag_a ] [ j ] ; } result [ i ] = max ; } for ( i = 0 ; i < total_cases ; i ++ ) { printf ( "%d\n" , result [ i ] ) ; } return 0 ; }