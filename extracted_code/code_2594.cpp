int main ( void ) { int sum [ LIMIT ] ; int i , j , l , max , n , prev_sum , tmp , x ; READ_INT_P ( n ) ; while ( n -- > 0 ) { READ_INT_P ( l ) ; if ( l < 1 || l > LIMIT ) continue ; for ( * sum = 0 , i = 1 ; i <= l ; i ++ ) { READ_INT_P ( x ) ; prev_sum = * sum ; max = * sum += x ; for ( j = 1 ; j < i - 1 ; j ++ ) { READ_INT_P ( x ) ; if ( prev_sum < * ( sum + j ) ) { prev_sum = * ( sum + j ) ; * ( sum + j ) += x ; } else { tmp = * ( sum + j ) ; * ( sum + j ) = prev_sum + x ; prev_sum = tmp ; } if ( max < * ( sum + j ) ) max = * ( sum + j ) ; } if ( j < i ) { READ_INT_P ( x ) ; * ( sum + j ) = prev_sum + x ; if ( max < * ( sum + j ) ) max = * ( sum + j ) ; } } WRITE_INT_P ( max ) ; putchar_unlocked ( '\n' ) ; } return 0 ; }