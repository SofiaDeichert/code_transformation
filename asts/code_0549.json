{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 358,
  "text": "main ( ) { long int A , B , gcd , lcm , rem , T , nr , dr ; scanf ( \"%ld\" , & T ) ; while ( T -- ) { scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) { nr = A ; dr = B ; } else { nr = B ; dr = A ; } while ( dr != 0 ) { rem = nr % dr ; nr = dr ; dr = rem ; } gcd = nr ; lcm = ( A * B ) / gcd ; printf ( \"%ld\\t\" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 358,
      "text": "main ( ) { long int A , B , gcd , lcm , rem , T , nr , dr ; scanf ( \"%ld\" , & T ) ; while ( T -- ) { scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) { nr = A ; dr = B ; } else { nr = B ; dr = A ; } while ( dr != 0 ) { rem = nr % dr ; nr = dr ; dr = rem ; } gcd = nr ; lcm = ( A * B ) / gcd ; printf ( \"%ld\\t\" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "function_declarator",
          "start_byte": 0,
          "end_byte": 8,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 0,
              "end_byte": 4,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 5,
              "end_byte": 8,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 5,
                  "end_byte": 6,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 7,
                  "end_byte": 8,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 9,
          "end_byte": 358,
          "text": "{ long int A , B , gcd , lcm , rem , T , nr , dr ; scanf ( \"%ld\" , & T ) ; while ( T -- ) { scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) { nr = A ; dr = B ; } else { nr = B ; dr = A ; } while ( dr != 0 ) { rem = nr % dr ; nr = dr ; dr = rem ; } gcd = nr ; lcm = ( A * B ) / gcd ; printf ( \"%ld\\t\" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 9,
              "end_byte": 10,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 11,
              "end_byte": 59,
              "text": "long int A , B , gcd , lcm , rem , T , nr , dr ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 11,
                  "end_byte": 19,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 16,
                      "end_byte": 19,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 31,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "rem",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 52,
                  "text": "nr",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 55,
                  "end_byte": 57,
                  "text": "dr",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 58,
                  "end_byte": 59,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 60,
              "end_byte": 83,
              "text": "scanf ( \"%ld\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 60,
                  "end_byte": 81,
                  "text": "scanf ( \"%ld\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 60,
                      "end_byte": 65,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 66,
                      "end_byte": 81,
                      "text": "( \"%ld\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 68,
                          "end_byte": 73,
                          "text": "\"%ld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 68,
                              "end_byte": 69,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 69,
                              "end_byte": 72,
                              "text": "%ld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 72,
                              "end_byte": 73,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 76,
                          "end_byte": 79,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 76,
                              "end_byte": 77,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 78,
                              "end_byte": 79,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 80,
                          "end_byte": 81,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 84,
              "end_byte": 345,
              "text": "while ( T -- ) { scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) { nr = A ; dr = B ; } else { nr = B ; dr = A ; } while ( dr != 0 ) { rem = nr % dr ; nr = dr ; dr = rem ; } gcd = nr ; lcm = ( A * B ) / gcd ; printf ( \"%ld\\t\" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 84,
                  "end_byte": 89,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 90,
                  "end_byte": 98,
                  "text": "( T -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 92,
                      "end_byte": 96,
                      "text": "T --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 92,
                          "end_byte": 93,
                          "text": "T",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 94,
                          "end_byte": 96,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 97,
                      "end_byte": 98,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 99,
                  "end_byte": 345,
                  "text": "{ scanf ( \"%ld%ld\" , & A , & B ) ; if ( A > B ) { nr = A ; dr = B ; } else { nr = B ; dr = A ; } while ( dr != 0 ) { rem = nr % dr ; nr = dr ; dr = rem ; } gcd = nr ; lcm = ( A * B ) / gcd ; printf ( \"%ld\\t\" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 101,
                      "end_byte": 133,
                      "text": "scanf ( \"%ld%ld\" , & A , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 101,
                          "end_byte": 131,
                          "text": "scanf ( \"%ld%ld\" , & A , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 101,
                              "end_byte": 106,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 107,
                              "end_byte": 131,
                              "text": "( \"%ld%ld\" , & A , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 107,
                                  "end_byte": 108,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 109,
                                  "end_byte": 117,
                                  "text": "\"%ld%ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 109,
                                      "end_byte": 110,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 110,
                                      "end_byte": 116,
                                      "text": "%ld%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 116,
                                      "end_byte": 117,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 118,
                                  "end_byte": 119,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 120,
                                  "end_byte": 123,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 120,
                                      "end_byte": 121,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 122,
                                      "end_byte": 123,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 124,
                                  "end_byte": 125,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 126,
                                  "end_byte": 129,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 126,
                                      "end_byte": 127,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 128,
                                      "end_byte": 129,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 130,
                                  "end_byte": 131,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 134,
                      "end_byte": 195,
                      "text": "if ( A > B ) { nr = A ; dr = B ; } else { nr = B ; dr = A ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 134,
                          "end_byte": 136,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 137,
                          "end_byte": 146,
                          "text": "( A > B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 137,
                              "end_byte": 138,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 139,
                              "end_byte": 144,
                              "text": "A > B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 139,
                                  "end_byte": 140,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 141,
                                  "end_byte": 142,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 143,
                                  "end_byte": 144,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 147,
                          "end_byte": 168,
                          "text": "{ nr = A ; dr = B ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 149,
                              "end_byte": 157,
                              "text": "nr = A ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 149,
                                  "end_byte": 155,
                                  "text": "nr = A",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 149,
                                      "end_byte": 151,
                                      "text": "nr",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 156,
                                  "end_byte": 157,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 158,
                              "end_byte": 166,
                              "text": "dr = B ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 158,
                                  "end_byte": 164,
                                  "text": "dr = B",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 158,
                                      "end_byte": 160,
                                      "text": "dr",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 163,
                                      "end_byte": 164,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 165,
                                  "end_byte": 166,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 169,
                          "end_byte": 195,
                          "text": "else { nr = B ; dr = A ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 169,
                              "end_byte": 173,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 174,
                              "end_byte": 195,
                              "text": "{ nr = B ; dr = A ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 174,
                                  "end_byte": 175,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 176,
                                  "end_byte": 184,
                                  "text": "nr = B ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 176,
                                      "end_byte": 182,
                                      "text": "nr = B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 176,
                                          "end_byte": 178,
                                          "text": "nr",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 179,
                                          "end_byte": 180,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 181,
                                          "end_byte": 182,
                                          "text": "B",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 185,
                                  "end_byte": 193,
                                  "text": "dr = A ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 185,
                                      "end_byte": 191,
                                      "text": "dr = A",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 185,
                                          "end_byte": 187,
                                          "text": "dr",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 188,
                                          "end_byte": 189,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 190,
                                          "end_byte": 191,
                                          "text": "A",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 194,
                                  "end_byte": 195,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 196,
                      "end_byte": 254,
                      "text": "while ( dr != 0 ) { rem = nr % dr ; nr = dr ; dr = rem ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 196,
                          "end_byte": 201,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 202,
                          "end_byte": 213,
                          "text": "( dr != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 204,
                              "end_byte": 211,
                              "text": "dr != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 204,
                                  "end_byte": 206,
                                  "text": "dr",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 207,
                                  "end_byte": 209,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 210,
                                  "end_byte": 211,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 212,
                              "end_byte": 213,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 214,
                          "end_byte": 254,
                          "text": "{ rem = nr % dr ; nr = dr ; dr = rem ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 214,
                              "end_byte": 215,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 216,
                              "end_byte": 231,
                              "text": "rem = nr % dr ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 216,
                                  "end_byte": 229,
                                  "text": "rem = nr % dr",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 216,
                                      "end_byte": 219,
                                      "text": "rem",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 222,
                                      "end_byte": 229,
                                      "text": "nr % dr",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 222,
                                          "end_byte": 224,
                                          "text": "nr",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 225,
                                          "end_byte": 226,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 227,
                                          "end_byte": 229,
                                          "text": "dr",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 230,
                                  "end_byte": 231,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 232,
                              "end_byte": 241,
                              "text": "nr = dr ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 232,
                                  "end_byte": 239,
                                  "text": "nr = dr",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 232,
                                      "end_byte": 234,
                                      "text": "nr",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 235,
                                      "end_byte": 236,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 237,
                                      "end_byte": 239,
                                      "text": "dr",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 240,
                                  "end_byte": 241,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 242,
                              "end_byte": 252,
                              "text": "dr = rem ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 242,
                                  "end_byte": 250,
                                  "text": "dr = rem",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 242,
                                      "end_byte": 244,
                                      "text": "dr",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 245,
                                      "end_byte": 246,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 247,
                                      "end_byte": 250,
                                      "text": "rem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 251,
                                  "end_byte": 252,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 253,
                              "end_byte": 254,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 255,
                      "end_byte": 265,
                      "text": "gcd = nr ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 255,
                          "end_byte": 263,
                          "text": "gcd = nr",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 255,
                              "end_byte": 258,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 259,
                              "end_byte": 260,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 261,
                              "end_byte": 263,
                              "text": "nr",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 264,
                          "end_byte": 265,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 266,
                      "end_byte": 289,
                      "text": "lcm = ( A * B ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 266,
                          "end_byte": 287,
                          "text": "lcm = ( A * B ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 266,
                              "end_byte": 269,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 270,
                              "end_byte": 271,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 272,
                              "end_byte": 287,
                              "text": "( A * B ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 272,
                                  "end_byte": 281,
                                  "text": "( A * B )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 274,
                                      "end_byte": 279,
                                      "text": "A * B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 274,
                                          "end_byte": 275,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 276,
                                          "end_byte": 277,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 278,
                                          "end_byte": 279,
                                          "text": "B",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 280,
                                      "end_byte": 281,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 282,
                                  "end_byte": 283,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 284,
                                  "end_byte": 287,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 288,
                          "end_byte": 289,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 290,
                      "end_byte": 316,
                      "text": "printf ( \"%ld\\t\" , gcd ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 290,
                          "end_byte": 314,
                          "text": "printf ( \"%ld\\t\" , gcd )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 290,
                              "end_byte": 296,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 297,
                              "end_byte": 314,
                              "text": "( \"%ld\\t\" , gcd )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 297,
                                  "end_byte": 298,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 299,
                                  "end_byte": 306,
                                  "text": "\"%ld\\t\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 299,
                                      "end_byte": 300,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 300,
                                      "end_byte": 303,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 303,
                                      "end_byte": 305,
                                      "text": "\\t",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 305,
                                      "end_byte": 306,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 309,
                                  "end_byte": 312,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 313,
                                  "end_byte": 314,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 317,
                      "end_byte": 343,
                      "text": "printf ( \"%ld\\n\" , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 317,
                          "end_byte": 341,
                          "text": "printf ( \"%ld\\n\" , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 317,
                              "end_byte": 323,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 324,
                              "end_byte": 341,
                              "text": "( \"%ld\\n\" , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 324,
                                  "end_byte": 325,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 326,
                                  "end_byte": 333,
                                  "text": "\"%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 327,
                                      "end_byte": 330,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 330,
                                      "end_byte": 332,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 332,
                                      "end_byte": 333,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 334,
                                  "end_byte": 335,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 336,
                                  "end_byte": 339,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 340,
                                  "end_byte": 341,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 342,
                          "end_byte": 343,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 344,
                      "end_byte": 345,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 346,
              "end_byte": 356,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 346,
                  "end_byte": 352,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 353,
                  "end_byte": 354,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 355,
                  "end_byte": 356,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 357,
              "end_byte": 358,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}