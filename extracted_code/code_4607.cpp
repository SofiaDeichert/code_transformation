static inline int getInt ( void ) { int ch , r = 0 ; while ( ! isdigit ( ch = GetChar ( ) ) && ch != '-' ) { if ( ch == '-' ) { while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return - r ; } if ( ch == EOF ) exit ( 1 ) ; } r = ch - '0' ; while ( isdigit ( ch = GetChar ( ) ) ) r = r * 10 + ( ch - '0' ) ; if ( ch != EOF ) ungetc ( ch , stdin ) ; return r ; } static inline void putInt ( int x ) { if ( x < 0 ) { x = - x ; PutChar ( '-' ) ; } if ( x >= 1000000000 ) { PutChar ( x / 1000000000 + '0' ) ; x %= 1000000000 ; } if ( x >= 100000000 ) { PutChar ( x / 100000000 + '0' ) ; x %= 100000000 ; } if ( x >= 10000000 ) { PutChar ( x / 10000000 + '0' ) ; x %= 10000000 ; } if ( x >= 1000000 ) { PutChar ( x / 1000000 + '0' ) ; x %= 1000000 ; } if ( x >= 100000 ) { PutChar ( x / 100000 + '0' ) ; x %= 100000 ; } if ( x >= 10000 ) { PutChar ( x / 10000 + '0' ) ; x %= 10000 ; } if ( x >= 1000 ) { PutChar ( x / 1000 + '0' ) ; x %= 1000 ; } if ( x >= 100 ) { PutChar ( x / 100 + '0' ) ; x %= 100 ; } if ( x >= 10 ) { PutChar ( x / 10 + '0' ) ; x %= 10 ; } PutChar ( x + '0' ) ; } int main ( void ) { int t = getInt ( ) ; while ( t -- ) { int h = getInt ( ) ; int rw [ 2 ] [ 100 ] ; int r , c , x , y ; int ip = 0 , op = 1 ; rw [ op ] [ 0 ] = getInt ( ) ; for ( r = 1 ; r < h ; r ++ ) { op = ip ; ip = ! ip ; y = rw [ ip ] [ 0 ] ; rw [ op ] [ 0 ] = y + getInt ( ) ; for ( c = 1 ; c < r ; c ++ ) { x = y ; y = rw [ ip ] [ c ] ; rw [ op ] [ c ] = ( x > y ? x : y ) + getInt ( ) ; } rw [ op ] [ c ] = y + getInt ( ) ; } for ( c = 1 , x = rw [ op ] [ 0 ] ; c < h ; c ++ ) if ( rw [ op ] [ c ] > x ) x = rw [ op ] [ c ] ; putInt ( x ) ; PutChar ( '\n' ) ; } return 0 ; }