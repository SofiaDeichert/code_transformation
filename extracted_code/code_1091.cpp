int * * temp ; int calc_sum ( int i , int j , int num , int * * arr ) ; int main ( ) { int * * arr ; int cases = 0 ; int num = 0 , n = 0 , i , j ; scanf ( "%d" , & cases ) ; while ( cases > 0 ) { cases = cases - 1 ; scanf ( "%d" , & num ) ; arr = ( int * * ) malloc ( num * sizeof ( int ) ) ; temp = ( int * * ) malloc ( num * sizeof ( int ) ) ; for ( i = 0 ; i < num ; i ++ ) { arr [ i ] = ( int * ) malloc ( ( num ) * sizeof ( int ) ) ; temp [ i ] = ( int * ) malloc ( num * sizeof ( int ) ) ; for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & n ) ; arr [ i ] [ j ] = n ; temp [ i ] [ j ] = - 1 ; } } int ans = calc_sum ( 0 , 0 , num , arr ) ; printf ( "%d\n" , ans ) ; } } int calc_sum ( int i , int j , int num , int * * arr ) { if ( temp [ i ] [ j ] != - 1 ) { return temp [ i ] [ j ] ; } if ( i == num - 1 ) { return arr [ i ] [ j ] ; } int rightsum = arr [ i ] [ j ] + calc_sum ( i + 1 , j + 1 , num , arr ) ; int leftsum = arr [ i ] [ j ] + calc_sum ( i + 1 , j , num , arr ) ; if ( rightsum > leftsum ) { temp [ i ] [ j ] = rightsum ; return rightsum ; } else { temp [ i ] [ j ] = leftsum ; return leftsum ; } }