int gcdfun ( int , int ) ; int lcmfun ( int , int ) ; int main ( ) { int T , i ; int A [ 1000000 ] , B [ 1000000 ] ; int gcd [ 1000 ] , lcm [ 1000 ] ; printf ( "enter total number of testcases\n" ) ; scanf ( "%d" , & T ) ; if ( ( T >= 1 ) && ( T <= 1000 ) ) { printf ( "enter %d sets of elements\n" , T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( "%d \t %d \n" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { gcd [ i ] = gcdfun ( A [ i ] , B [ i ] ) ; lcm [ i ] = lcmfun ( A [ i ] , B [ i ] ) ; printf ( "%d \t %d \n" , gcd [ i ] , lcm [ i ] ) ; } } else printf ( "please enter the number of testcases between 1 to 1000 only" ) ; return 0 ; } int gcdfun ( int num1 , int num2 ) { int i , m ; int gcd ; if ( num1 > num2 ) m = num2 ; else m = num1 ; for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } } return gcd ; } int lcmfun ( int num1 , int num2 ) { int i , m , gcd , lcm ; if ( num1 > num2 ) m = num2 ; else m = num1 ; for ( i = m ; i >= 1 ; i -- ) { if ( ( num1 % i == 0 ) && ( num2 % i == 0 ) ) { gcd = i ; break ; } } lcm = ( num1 * num2 ) / gcd ; return lcm ; }