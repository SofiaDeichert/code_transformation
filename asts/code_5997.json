{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 299,
  "text": "int GCD ( int A , int B ) { if ( A % B ) GCD ( B , A % B ) ; else return B ; } int main ( ) { int t ; int G , A , B ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A > B ) G = GCD ( A , B ) ; else G = GCD ( B , A ) ; printf ( \"%d%d\\n\" , G , A * B / G ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 78,
      "text": "int GCD ( int A , int B ) { if ( A % B ) GCD ( B , A % B ) ; else return B ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "GCD ( int A , int B )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "GCD",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int A , int B )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int A",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "A",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int B",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "B",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 78,
          "text": "{ if ( A % B ) GCD ( B , A % B ) ; else return B ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 28,
              "end_byte": 76,
              "text": "if ( A % B ) GCD ( B , A % B ) ; else return B ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 28,
                  "end_byte": 30,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 31,
                  "end_byte": 40,
                  "text": "( A % B )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 33,
                      "end_byte": 38,
                      "text": "A % B",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": "%",
                          "start_byte": 35,
                          "end_byte": 36,
                          "text": "%",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 37,
                          "end_byte": 38,
                          "text": "B",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 39,
                      "end_byte": 40,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 41,
                  "end_byte": 60,
                  "text": "GCD ( B , A % B ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 41,
                      "end_byte": 58,
                      "text": "GCD ( B , A % B )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 41,
                          "end_byte": 44,
                          "text": "GCD",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 45,
                          "end_byte": 58,
                          "text": "( B , A % B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 45,
                              "end_byte": 46,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 47,
                              "end_byte": 48,
                              "text": "B",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 49,
                              "end_byte": 50,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 51,
                              "end_byte": 56,
                              "text": "A % B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 51,
                                  "end_byte": 52,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 53,
                                  "end_byte": 54,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 55,
                                  "end_byte": 56,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 57,
                              "end_byte": 58,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 59,
                      "end_byte": 60,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 61,
                  "end_byte": 76,
                  "text": "else return B ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 61,
                      "end_byte": 65,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 66,
                      "end_byte": 76,
                      "text": "return B ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 66,
                          "end_byte": 72,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 73,
                          "end_byte": 74,
                          "text": "B",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 75,
                          "end_byte": 76,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 77,
              "end_byte": 78,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 79,
      "end_byte": 299,
      "text": "int main ( ) { int t ; int G , A , B ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A > B ) G = GCD ( A , B ) ; else G = GCD ( B , A ) ; printf ( \"%d%d\\n\" , G , A * B / G ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 79,
          "end_byte": 82,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 83,
          "end_byte": 91,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 83,
              "end_byte": 87,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 88,
              "end_byte": 91,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 88,
                  "end_byte": 89,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 90,
                  "end_byte": 91,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 92,
          "end_byte": 299,
          "text": "{ int t ; int G , A , B ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A > B ) G = GCD ( A , B ) ; else G = GCD ( B , A ) ; printf ( \"%d%d\\n\" , G , A * B / G ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 92,
              "end_byte": 93,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 94,
              "end_byte": 101,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 94,
                  "end_byte": 97,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 102,
              "end_byte": 117,
              "text": "int G , A , B ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 102,
                  "end_byte": 105,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": "G",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 112,
                  "end_byte": 113,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 114,
                  "end_byte": 115,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 118,
              "end_byte": 140,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 118,
                  "end_byte": 138,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 118,
                      "end_byte": 123,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 124,
                      "end_byte": 138,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 124,
                          "end_byte": 125,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 126,
                          "end_byte": 130,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 127,
                              "end_byte": 129,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 129,
                              "end_byte": 130,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 131,
                          "end_byte": 132,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 133,
                          "end_byte": 136,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 133,
                              "end_byte": 134,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 135,
                              "end_byte": 136,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 137,
                          "end_byte": 138,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 139,
                  "end_byte": 140,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 141,
              "end_byte": 286,
              "text": "while ( t -- ) { scanf ( \"%d%d\" , & A , & B ) ; if ( A > B ) G = GCD ( A , B ) ; else G = GCD ( B , A ) ; printf ( \"%d%d\\n\" , G , A * B / G ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 141,
                  "end_byte": 146,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 147,
                  "end_byte": 155,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 147,
                      "end_byte": 148,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 149,
                      "end_byte": 153,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 149,
                          "end_byte": 150,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 151,
                          "end_byte": 153,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 156,
                  "end_byte": 286,
                  "text": "{ scanf ( \"%d%d\" , & A , & B ) ; if ( A > B ) G = GCD ( A , B ) ; else G = GCD ( B , A ) ; printf ( \"%d%d\\n\" , G , A * B / G ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 158,
                      "end_byte": 188,
                      "text": "scanf ( \"%d%d\" , & A , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 158,
                          "end_byte": 186,
                          "text": "scanf ( \"%d%d\" , & A , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 158,
                              "end_byte": 163,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 164,
                              "end_byte": 186,
                              "text": "( \"%d%d\" , & A , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 164,
                                  "end_byte": 165,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 166,
                                  "end_byte": 172,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 166,
                                      "end_byte": 167,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 167,
                                      "end_byte": 171,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 171,
                                      "end_byte": 172,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 175,
                                  "end_byte": 178,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 175,
                                      "end_byte": 176,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 177,
                                      "end_byte": 178,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 179,
                                  "end_byte": 180,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 181,
                                  "end_byte": 184,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 181,
                                      "end_byte": 182,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 183,
                                      "end_byte": 184,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 187,
                          "end_byte": 188,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 189,
                      "end_byte": 246,
                      "text": "if ( A > B ) G = GCD ( A , B ) ; else G = GCD ( B , A ) ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 189,
                          "end_byte": 191,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 192,
                          "end_byte": 201,
                          "text": "( A > B )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 192,
                              "end_byte": 193,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 194,
                              "end_byte": 199,
                              "text": "A > B",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 194,
                                  "end_byte": 195,
                                  "text": "A",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 196,
                                  "end_byte": 197,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 198,
                                  "end_byte": 199,
                                  "text": "B",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 200,
                              "end_byte": 201,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 202,
                          "end_byte": 221,
                          "text": "G = GCD ( A , B ) ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 202,
                              "end_byte": 219,
                              "text": "G = GCD ( A , B )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": "G",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 206,
                                  "end_byte": 219,
                                  "text": "GCD ( A , B )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 206,
                                      "end_byte": 209,
                                      "text": "GCD",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 210,
                                      "end_byte": 219,
                                      "text": "( A , B )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 210,
                                          "end_byte": 211,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 212,
                                          "end_byte": 213,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 214,
                                          "end_byte": 215,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 216,
                                          "end_byte": 217,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 218,
                                          "end_byte": 219,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 222,
                          "end_byte": 246,
                          "text": "else G = GCD ( B , A ) ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 222,
                              "end_byte": 226,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 227,
                              "end_byte": 246,
                              "text": "G = GCD ( B , A ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 227,
                                  "end_byte": 244,
                                  "text": "G = GCD ( B , A )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 227,
                                      "end_byte": 228,
                                      "text": "G",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 229,
                                      "end_byte": 230,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 231,
                                      "end_byte": 244,
                                      "text": "GCD ( B , A )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 231,
                                          "end_byte": 234,
                                          "text": "GCD",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 235,
                                          "end_byte": 244,
                                          "text": "( B , A )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 235,
                                              "end_byte": 236,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 237,
                                              "end_byte": 238,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 239,
                                              "end_byte": 240,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 241,
                                              "end_byte": 242,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 243,
                                              "end_byte": 244,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 245,
                                  "end_byte": 246,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 247,
                      "end_byte": 284,
                      "text": "printf ( \"%d%d\\n\" , G , A * B / G ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 247,
                          "end_byte": 282,
                          "text": "printf ( \"%d%d\\n\" , G , A * B / G )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 247,
                              "end_byte": 253,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 254,
                              "end_byte": 282,
                              "text": "( \"%d%d\\n\" , G , A * B / G )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 254,
                                  "end_byte": 255,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 256,
                                  "end_byte": 264,
                                  "text": "\"%d%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 256,
                                      "end_byte": 257,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 257,
                                      "end_byte": 261,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 261,
                                      "end_byte": 263,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 265,
                                  "end_byte": 266,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 267,
                                  "end_byte": 268,
                                  "text": "G",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 269,
                                  "end_byte": 270,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 271,
                                  "end_byte": 280,
                                  "text": "A * B / G",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 271,
                                      "end_byte": 276,
                                      "text": "A * B",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 271,
                                          "end_byte": 272,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 273,
                                          "end_byte": 274,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 275,
                                          "end_byte": 276,
                                          "text": "B",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 277,
                                      "end_byte": 278,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": "G",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 281,
                                  "end_byte": 282,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 283,
                          "end_byte": 284,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 287,
              "end_byte": 297,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 287,
                  "end_byte": 293,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 294,
                  "end_byte": 295,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 296,
                  "end_byte": 297,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 298,
              "end_byte": 299,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}