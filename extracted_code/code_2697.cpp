int main ( ) { int t , n , * * a , * * b ; int max , i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; a = ( int * * ) malloc ( sizeof ( int * ) * n ) ; b = ( int * * ) malloc ( sizeof ( int * ) * n ) ; for ( i = 0 ; i < n ; i ++ ) { a [ i ] = ( int * ) malloc ( sizeof ( int ) * ( i + 1 ) ) ; b [ i ] = ( int * ) malloc ( sizeof ( int ) * ( i + 1 ) ) ; } for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < i + 1 ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; b [ i ] [ j ] = a [ i ] [ j ] ; } for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < i + 1 ; j ++ ) { if ( ( i && j ) && j < i ) b [ i ] [ j ] += ( b [ i - 1 ] [ j - 1 ] > b [ i - 1 ] [ j ] ) ? b [ i - 1 ] [ j - 1 ] : b [ i - 1 ] [ j ] ; else if ( i && j == i ) b [ i ] [ j ] += b [ i - 1 ] [ j - 1 ] ; else if ( j == 0 && i != j ) b [ i ] [ j ] += b [ i - 1 ] [ j ] ; } max = b [ n - 1 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) if ( b [ n - 1 ] [ i ] > max ) max = b [ n - 1 ] [ i ] ; printf ( "%d\n" , max ) ; } return 0 ; }