int max ( int a , int b ) { return a > b ? a : b ; } int solve ( int i , int j , int a [ ] [ MAX ] , int n , int store [ ] [ MAX ] ) { int s ; if ( i >= n ) return 0 ; if ( store [ i ] [ j ] ) return store [ i ] [ j ] ; s = a [ i ] [ j ] + max ( solve ( i + 1 , j , a , n , store ) , solve ( i + 1 , j + 1 , a , n , store ) ) ; store [ i ] [ j ] = s ; return s ; } int main ( ) { int t , i , j , n , a [ MAX ] [ MAX ] , store [ MAX ] [ MAX ] ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; store [ i ] [ j ] = 0 ; } printf ( "%d\n" , a [ 0 ] [ 0 ] + max ( solve ( 1 , 0 , a , n , store ) , solve ( 1 , 1 , a , n , store ) ) ) ; } return 0 ; }