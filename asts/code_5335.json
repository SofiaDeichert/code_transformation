{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 456,
  "text": "long int scan ( ) { long int c = gc ( ) , n = 0 ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; } int main ( ) { long int t , j , min , ans ; long long int i , n ; t = scan ( ) ; while ( t -- ) { n = scan ( ) ; min = scan ( ) ; for ( i = 0 ; i < n - 1 ; i ++ ) { ans = scan ( ) ; if ( ans < min ) min = ans ; } printf ( \"%lld\\n\" , min * ( n - 1 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 188,
      "text": "long int scan ( ) { long int c = gc ( ) , n = 0 ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 8,
          "text": "long int",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            },
            {
              "type": "primitive_type",
              "start_byte": 5,
              "end_byte": 8,
              "text": "int",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 9,
          "end_byte": 17,
          "text": "scan ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 9,
              "end_byte": 13,
              "text": "scan",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 14,
              "end_byte": 17,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 188,
          "text": "{ long int c = gc ( ) , n = 0 ; while ( c < '0' || c > '9' ) c = gc ( ) ; while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ; return n ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 49,
              "text": "long int c = gc ( ) , n = 0 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 20,
                  "end_byte": 28,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 20,
                      "end_byte": 24,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 25,
                      "end_byte": 28,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "init_declarator",
                  "start_byte": 29,
                  "end_byte": 39,
                  "text": "c = gc ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 29,
                      "end_byte": 30,
                      "text": "c",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 33,
                      "end_byte": 39,
                      "text": "gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 33,
                          "end_byte": 35,
                          "text": "gc",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 36,
                          "end_byte": 39,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 36,
                              "end_byte": 37,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 38,
                              "end_byte": 39,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 42,
                  "end_byte": 47,
                  "text": "n = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 42,
                      "end_byte": 43,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 44,
                      "end_byte": 45,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 46,
                      "end_byte": 47,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 50,
              "end_byte": 91,
              "text": "while ( c < '0' || c > '9' ) c = gc ( ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 50,
                  "end_byte": 55,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 56,
                  "end_byte": 78,
                  "text": "( c < '0' || c > '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 58,
                      "end_byte": 76,
                      "text": "c < '0' || c > '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 58,
                          "end_byte": 65,
                          "text": "c < '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 58,
                              "end_byte": 59,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 60,
                              "end_byte": 61,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 62,
                              "end_byte": 65,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 62,
                                  "end_byte": 63,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 63,
                                  "end_byte": 64,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 64,
                                  "end_byte": 65,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "||",
                          "start_byte": 66,
                          "end_byte": 68,
                          "text": "||",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 69,
                          "end_byte": 76,
                          "text": "c > '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 69,
                              "end_byte": 70,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 71,
                              "end_byte": 72,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 73,
                              "end_byte": 76,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 73,
                                  "end_byte": 74,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 74,
                                  "end_byte": 75,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 75,
                                  "end_byte": 76,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 79,
                  "end_byte": 91,
                  "text": "c = gc ( ) ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 79,
                      "end_byte": 89,
                      "text": "c = gc ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": "c",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 83,
                          "end_byte": 89,
                          "text": "gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 83,
                              "end_byte": 85,
                              "text": "gc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 86,
                              "end_byte": 89,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 86,
                                  "end_byte": 87,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 88,
                                  "end_byte": 89,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 90,
                      "end_byte": 91,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 92,
              "end_byte": 175,
              "text": "while ( c >= '0' && c <= '9' ) n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ;",
              "children": [
                {
                  "type": "while",
                  "start_byte": 92,
                  "end_byte": 97,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 98,
                  "end_byte": 122,
                  "text": "( c >= '0' && c <= '9' )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 100,
                      "end_byte": 120,
                      "text": "c >= '0' && c <= '9'",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 100,
                          "end_byte": 108,
                          "text": "c >= '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 102,
                              "end_byte": 104,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 105,
                              "end_byte": 108,
                              "text": "'0'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 105,
                                  "end_byte": 106,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 106,
                                  "end_byte": 107,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 107,
                                  "end_byte": 108,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 109,
                          "end_byte": 111,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 112,
                          "end_byte": 120,
                          "text": "c <= '9'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 112,
                              "end_byte": 113,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 114,
                              "end_byte": 116,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "char_literal",
                              "start_byte": 117,
                              "end_byte": 120,
                              "text": "'9'",
                              "children": [
                                {
                                  "type": "'",
                                  "start_byte": 117,
                                  "end_byte": 118,
                                  "text": "'",
                                  "children": []
                                },
                                {
                                  "type": "character",
                                  "start_byte": 118,
                                  "end_byte": 119,
                                  "text": "9",
                                  "children": []
                                },
                                {
                                  "type": "'",
                                  "start_byte": 119,
                                  "end_byte": 120,
                                  "text": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 123,
                  "end_byte": 175,
                  "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( ) ;",
                  "children": [
                    {
                      "type": "comma_expression",
                      "start_byte": 123,
                      "end_byte": 173,
                      "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0' , c = gc ( )",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 123,
                          "end_byte": 160,
                          "text": "n = ( n << 3 ) + ( n << 1 ) + c - '0'",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 123,
                              "end_byte": 124,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 127,
                              "end_byte": 160,
                              "text": "( n << 3 ) + ( n << 1 ) + c - '0'",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 127,
                                  "end_byte": 154,
                                  "text": "( n << 3 ) + ( n << 1 ) + c",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 127,
                                      "end_byte": 150,
                                      "text": "( n << 3 ) + ( n << 1 )",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 127,
                                          "end_byte": 137,
                                          "text": "( n << 3 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 127,
                                              "end_byte": 128,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 129,
                                              "end_byte": 135,
                                              "text": "n << 3",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 129,
                                                  "end_byte": 130,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 131,
                                                  "end_byte": 133,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 134,
                                                  "end_byte": 135,
                                                  "text": "3",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 136,
                                              "end_byte": 137,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 138,
                                          "end_byte": 139,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 140,
                                          "end_byte": 150,
                                          "text": "( n << 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 140,
                                              "end_byte": 141,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 142,
                                              "end_byte": 148,
                                              "text": "n << 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 142,
                                                  "end_byte": 143,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<<",
                                                  "start_byte": 144,
                                                  "end_byte": 146,
                                                  "text": "<<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 147,
                                                  "end_byte": 148,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 149,
                                              "end_byte": 150,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 155,
                                  "end_byte": 156,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "char_literal",
                                  "start_byte": 157,
                                  "end_byte": 160,
                                  "text": "'0'",
                                  "children": [
                                    {
                                      "type": "'",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "'",
                                      "children": []
                                    },
                                    {
                                      "type": "character",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "'",
                                      "start_byte": 159,
                                      "end_byte": 160,
                                      "text": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 163,
                          "end_byte": 173,
                          "text": "c = gc ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 167,
                              "end_byte": 173,
                              "text": "gc ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 167,
                                  "end_byte": 169,
                                  "text": "gc",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 170,
                                  "end_byte": 173,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 170,
                                      "end_byte": 171,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 172,
                                      "end_byte": 173,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 174,
                      "end_byte": 175,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 176,
              "end_byte": 186,
              "text": "return n ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 176,
                  "end_byte": 182,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 183,
                  "end_byte": 184,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 185,
                  "end_byte": 186,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 187,
              "end_byte": 188,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 189,
      "end_byte": 456,
      "text": "int main ( ) { long int t , j , min , ans ; long long int i , n ; t = scan ( ) ; while ( t -- ) { n = scan ( ) ; min = scan ( ) ; for ( i = 0 ; i < n - 1 ; i ++ ) { ans = scan ( ) ; if ( ans < min ) min = ans ; } printf ( \"%lld\\n\" , min * ( n - 1 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 189,
          "end_byte": 192,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 193,
          "end_byte": 201,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 193,
              "end_byte": 197,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 198,
              "end_byte": 201,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 198,
                  "end_byte": 199,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 200,
                  "end_byte": 201,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 202,
          "end_byte": 456,
          "text": "{ long int t , j , min , ans ; long long int i , n ; t = scan ( ) ; while ( t -- ) { n = scan ( ) ; min = scan ( ) ; for ( i = 0 ; i < n - 1 ; i ++ ) { ans = scan ( ) ; if ( ans < min ) min = ans ; } printf ( \"%lld\\n\" , min * ( n - 1 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 202,
              "end_byte": 203,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 204,
              "end_byte": 232,
              "text": "long int t , j , min , ans ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 204,
                  "end_byte": 212,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 204,
                      "end_byte": 208,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 209,
                      "end_byte": 212,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 213,
                  "end_byte": 214,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 215,
                  "end_byte": 216,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 217,
                  "end_byte": 218,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 219,
                  "end_byte": 220,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 221,
                  "end_byte": 224,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 225,
                  "end_byte": 226,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 227,
                  "end_byte": 230,
                  "text": "ans",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 231,
                  "end_byte": 232,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 233,
              "end_byte": 254,
              "text": "long long int i , n ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 233,
                  "end_byte": 246,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 233,
                      "end_byte": 237,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 238,
                      "end_byte": 242,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 243,
                      "end_byte": 246,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 247,
                  "end_byte": 248,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 249,
                  "end_byte": 250,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 251,
                  "end_byte": 252,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 253,
                  "end_byte": 254,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 255,
              "end_byte": 269,
              "text": "t = scan ( ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 255,
                  "end_byte": 267,
                  "text": "t = scan ( )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 255,
                      "end_byte": 256,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 257,
                      "end_byte": 258,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 259,
                      "end_byte": 267,
                      "text": "scan ( )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 259,
                          "end_byte": 263,
                          "text": "scan",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 264,
                          "end_byte": 267,
                          "text": "( )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 264,
                              "end_byte": 265,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 266,
                              "end_byte": 267,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 268,
                  "end_byte": 269,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 270,
              "end_byte": 443,
              "text": "while ( t -- ) { n = scan ( ) ; min = scan ( ) ; for ( i = 0 ; i < n - 1 ; i ++ ) { ans = scan ( ) ; if ( ans < min ) min = ans ; } printf ( \"%lld\\n\" , min * ( n - 1 ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 270,
                  "end_byte": 275,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 276,
                  "end_byte": 284,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 276,
                      "end_byte": 277,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 278,
                      "end_byte": 282,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 278,
                          "end_byte": 279,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 280,
                          "end_byte": 282,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 285,
                  "end_byte": 443,
                  "text": "{ n = scan ( ) ; min = scan ( ) ; for ( i = 0 ; i < n - 1 ; i ++ ) { ans = scan ( ) ; if ( ans < min ) min = ans ; } printf ( \"%lld\\n\" , min * ( n - 1 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 287,
                      "end_byte": 301,
                      "text": "n = scan ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 287,
                          "end_byte": 299,
                          "text": "n = scan ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 287,
                              "end_byte": 288,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 289,
                              "end_byte": 290,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 291,
                              "end_byte": 299,
                              "text": "scan ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 291,
                                  "end_byte": 295,
                                  "text": "scan",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 296,
                                  "end_byte": 299,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 296,
                                      "end_byte": 297,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 300,
                          "end_byte": 301,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 302,
                      "end_byte": 318,
                      "text": "min = scan ( ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 302,
                          "end_byte": 316,
                          "text": "min = scan ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 302,
                              "end_byte": 305,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 306,
                              "end_byte": 307,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 308,
                              "end_byte": 316,
                              "text": "scan ( )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 308,
                                  "end_byte": 312,
                                  "text": "scan",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 313,
                                  "end_byte": 316,
                                  "text": "( )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 313,
                                      "end_byte": 314,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 315,
                                      "end_byte": 316,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 317,
                          "end_byte": 318,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 319,
                      "end_byte": 401,
                      "text": "for ( i = 0 ; i < n - 1 ; i ++ ) { ans = scan ( ) ; if ( ans < min ) min = ans ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 319,
                          "end_byte": 322,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 325,
                          "end_byte": 330,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 326,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 327,
                              "end_byte": 328,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 329,
                              "end_byte": 330,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 331,
                          "end_byte": 332,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 333,
                          "end_byte": 342,
                          "text": "i < n - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 333,
                              "end_byte": 334,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 335,
                              "end_byte": 336,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 337,
                              "end_byte": 342,
                              "text": "n - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 337,
                                  "end_byte": 338,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 339,
                                  "end_byte": 340,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 341,
                                  "end_byte": 342,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 343,
                          "end_byte": 344,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 345,
                          "end_byte": 349,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 345,
                              "end_byte": 346,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 347,
                              "end_byte": 349,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 350,
                          "end_byte": 351,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 352,
                          "end_byte": 401,
                          "text": "{ ans = scan ( ) ; if ( ans < min ) min = ans ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 352,
                              "end_byte": 353,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 354,
                              "end_byte": 370,
                              "text": "ans = scan ( ) ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 354,
                                  "end_byte": 368,
                                  "text": "ans = scan ( )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 354,
                                      "end_byte": 357,
                                      "text": "ans",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 358,
                                      "end_byte": 359,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 360,
                                      "end_byte": 368,
                                      "text": "scan ( )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 360,
                                          "end_byte": 364,
                                          "text": "scan",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 365,
                                          "end_byte": 368,
                                          "text": "( )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 365,
                                              "end_byte": 366,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 367,
                                              "end_byte": 368,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 369,
                                  "end_byte": 370,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 371,
                              "end_byte": 399,
                              "text": "if ( ans < min ) min = ans ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 371,
                                  "end_byte": 373,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 374,
                                  "end_byte": 387,
                                  "text": "( ans < min )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 374,
                                      "end_byte": 375,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 376,
                                      "end_byte": 385,
                                      "text": "ans < min",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 376,
                                          "end_byte": 379,
                                          "text": "ans",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 380,
                                          "end_byte": 381,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 382,
                                          "end_byte": 385,
                                          "text": "min",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 386,
                                      "end_byte": 387,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 388,
                                  "end_byte": 399,
                                  "text": "min = ans ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 388,
                                      "end_byte": 397,
                                      "text": "min = ans",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 388,
                                          "end_byte": 391,
                                          "text": "min",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 392,
                                          "end_byte": 393,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 394,
                                          "end_byte": 397,
                                          "text": "ans",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 398,
                                      "end_byte": 399,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 400,
                              "end_byte": 401,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 402,
                      "end_byte": 441,
                      "text": "printf ( \"%lld\\n\" , min * ( n - 1 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 402,
                          "end_byte": 439,
                          "text": "printf ( \"%lld\\n\" , min * ( n - 1 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 402,
                              "end_byte": 408,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 409,
                              "end_byte": 439,
                              "text": "( \"%lld\\n\" , min * ( n - 1 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 409,
                                  "end_byte": 410,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 411,
                                  "end_byte": 419,
                                  "text": "\"%lld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 412,
                                      "end_byte": 416,
                                      "text": "%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 416,
                                      "end_byte": 418,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 418,
                                      "end_byte": 419,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 420,
                                  "end_byte": 421,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 422,
                                  "end_byte": 437,
                                  "text": "min * ( n - 1 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 422,
                                      "end_byte": 425,
                                      "text": "min",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 426,
                                      "end_byte": 427,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 428,
                                      "end_byte": 437,
                                      "text": "( n - 1 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 428,
                                          "end_byte": 429,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 430,
                                          "end_byte": 435,
                                          "text": "n - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 430,
                                              "end_byte": 431,
                                              "text": "n",
                                              "children": []
                                            },
                                            {
                                              "type": "-",
                                              "start_byte": 432,
                                              "end_byte": 433,
                                              "text": "-",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 434,
                                              "end_byte": 435,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 436,
                                          "end_byte": 437,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 438,
                                  "end_byte": 439,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 440,
                          "end_byte": 441,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 442,
                      "end_byte": 443,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 444,
              "end_byte": 454,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 444,
                  "end_byte": 450,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 451,
                  "end_byte": 452,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 453,
                  "end_byte": 454,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 455,
              "end_byte": 456,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}