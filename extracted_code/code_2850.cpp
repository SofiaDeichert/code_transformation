int num_collec [ 99 ] [ 99 ] ; int memo [ 99 ] [ 99 ] ; int height ; int main ( ) { int row , i , j = 0 , val , sum , temp = 0 ; int num_tri ; scanf ( "%d" , & num_tri ) ; while ( num_tri != 0 ) { scanf ( "%d" , & height ) ; for ( i = 0 ; i < height ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & num_collec [ i ] [ j ] ) ; memo [ i ] [ j ] = - 1 ; } } printf ( "%d" , solve ( 0 , 0 ) ) ; num_tri -- ; } return 0 ; } int solve ( int p , int q ) { int sum1 = num_collec [ p ] [ q ] , sum2 = num_collec [ p ] [ q ] ; if ( memo [ p ] [ q ] != - 1 ) { return memo [ p ] [ q ] ; } if ( p == height ) { return 0 ; } else { sum1 = sum1 + solve ( p + 1 , q ) ; sum2 = sum2 + solve ( p + 1 , q + 1 ) ; } if ( sum1 > sum2 ) { memo [ p ] [ q ] = sum1 ; return sum1 ; } else { memo [ p ] [ q ] = sum2 ; return sum2 ; } }