int triangle [ MAXSIZE ] ; char buffer [ 300 ] ; int main ( void ) { int t , N , n , index = 0 , num = 0 , i , j , k , m ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & N ) ; n = N ; while ( n -- ) { read ( 0 , buffer , 300 ) ; i = 0 ; while ( buffer [ i ] != '\n' ) { if ( buffer [ i ] == ' ' ) { triangle [ index ] = num ; num = 0 ; index ++ ; } else { num = num * 10 + ( buffer [ i ] - 48 ) ; } i ++ ; } triangle [ index ] = num ; num = 0 ; index ++ ; } k = N - 2 ; while ( k >= 0 ) { m = k * ( k + 1 ) / 2 ; for ( j = 0 ; j <= k ; j ++ ) { triangle [ m + j ] = ( ( ( triangle [ m + j ] + triangle [ m + j + k + 1 ] ) > ( triangle [ m + j ] + triangle [ m + j + k + 2 ] ) ) ? ( triangle [ m + j ] + triangle [ m + j + k + 1 ] ) : ( triangle [ m + j ] + triangle [ m + j + k + 2 ] ) ) ; } k -- ; } printf ( "%d\n" , triangle [ 0 ] ) ; index = 0 ; } return 0 ; }