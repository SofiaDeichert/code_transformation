{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 484,
  "text": "int main ( ) { int numTests = 0 , num1 = 10 , num2 = 3 , i = 1 , j = 0 , gcd = 1 , lcm = 1 ; static int gcds [ MAX ] , lcms [ MAX ] ; scanf ( \"%d\" , & numTests ) ; for ( j = 0 ; j < numTests ; j ++ ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; while ( i <= num1 && i <= num2 ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; i ++ ; } lcm = num1 * num2 / gcd ; gcds [ j ] = gcd ; lcms [ j ] = lcm ; } for ( i = 0 ; i < numTests ; i ++ ) printf ( \"%d %d\\n\" , gcds [ i ] , lcms [ i ] ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 484,
      "text": "int main ( ) { int numTests = 0 , num1 = 10 , num2 = 3 , i = 1 , j = 0 , gcd = 1 , lcm = 1 ; static int gcds [ MAX ] , lcms [ MAX ] ; scanf ( \"%d\" , & numTests ) ; for ( j = 0 ; j < numTests ; j ++ ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; while ( i <= num1 && i <= num2 ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; i ++ ; } lcm = num1 * num2 / gcd ; gcds [ j ] = gcd ; lcms [ j ] = lcm ; } for ( i = 0 ; i < numTests ; i ++ ) printf ( \"%d %d\\n\" , gcds [ i ] , lcms [ i ] ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 484,
          "text": "{ int numTests = 0 , num1 = 10 , num2 = 3 , i = 1 , j = 0 , gcd = 1 , lcm = 1 ; static int gcds [ MAX ] , lcms [ MAX ] ; scanf ( \"%d\" , & numTests ) ; for ( j = 0 ; j < numTests ; j ++ ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; while ( i <= num1 && i <= num2 ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; i ++ ; } lcm = num1 * num2 / gcd ; gcds [ j ] = gcd ; lcms [ j ] = lcm ; } for ( i = 0 ; i < numTests ; i ++ ) printf ( \"%d %d\\n\" , gcds [ i ] , lcms [ i ] ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 92,
              "text": "int numTests = 0 , num1 = 10 , num2 = 3 , i = 1 , j = 0 , gcd = 1 , lcm = 1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 19,
                  "end_byte": 31,
                  "text": "numTests = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 19,
                      "end_byte": 27,
                      "text": "numTests",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 28,
                      "end_byte": 29,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 30,
                      "end_byte": 31,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 34,
                  "end_byte": 43,
                  "text": "num1 = 10",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 34,
                      "end_byte": 38,
                      "text": "num1",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 39,
                      "end_byte": 40,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 41,
                      "end_byte": 43,
                      "text": "10",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 46,
                  "end_byte": 54,
                  "text": "num2 = 3",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 46,
                      "end_byte": 50,
                      "text": "num2",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 53,
                      "end_byte": 54,
                      "text": "3",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 57,
                  "end_byte": 62,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 57,
                      "end_byte": 58,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 59,
                      "end_byte": 60,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 61,
                      "end_byte": 62,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 65,
                  "end_byte": 70,
                  "text": "j = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 73,
                  "end_byte": 80,
                  "text": "gcd = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 73,
                      "end_byte": 76,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 81,
                  "end_byte": 82,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 83,
                  "end_byte": 90,
                  "text": "lcm = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 83,
                      "end_byte": 86,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 89,
                      "end_byte": 90,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 91,
                  "end_byte": 92,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 93,
              "end_byte": 133,
              "text": "static int gcds [ MAX ] , lcms [ MAX ] ;",
              "children": [
                {
                  "type": "storage_class_specifier",
                  "start_byte": 93,
                  "end_byte": 99,
                  "text": "static",
                  "children": [
                    {
                      "type": "static",
                      "start_byte": 93,
                      "end_byte": 99,
                      "text": "static",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "primitive_type",
                  "start_byte": 100,
                  "end_byte": 103,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 104,
                  "end_byte": 116,
                  "text": "gcds [ MAX ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 104,
                      "end_byte": 108,
                      "text": "gcds",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 111,
                      "end_byte": 114,
                      "text": "MAX",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 119,
                  "end_byte": 131,
                  "text": "lcms [ MAX ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 119,
                      "end_byte": 123,
                      "text": "lcms",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 126,
                      "end_byte": 129,
                      "text": "MAX",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 134,
              "end_byte": 163,
              "text": "scanf ( \"%d\" , & numTests ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 134,
                  "end_byte": 161,
                  "text": "scanf ( \"%d\" , & numTests )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 134,
                      "end_byte": 139,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 140,
                      "end_byte": 161,
                      "text": "( \"%d\" , & numTests )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 140,
                          "end_byte": 141,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 142,
                          "end_byte": 146,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 143,
                              "end_byte": 145,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 147,
                          "end_byte": 148,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 149,
                          "end_byte": 159,
                          "text": "& numTests",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 151,
                              "end_byte": 159,
                              "text": "numTests",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 162,
                  "end_byte": 163,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 164,
              "end_byte": 397,
              "text": "for ( j = 0 ; j < numTests ; j ++ ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; while ( i <= num1 && i <= num2 ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; i ++ ; } lcm = num1 * num2 / gcd ; gcds [ j ] = gcd ; lcms [ j ] = lcm ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 164,
                  "end_byte": 167,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 168,
                  "end_byte": 169,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 170,
                  "end_byte": 175,
                  "text": "j = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 170,
                      "end_byte": 171,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 172,
                      "end_byte": 173,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 174,
                      "end_byte": 175,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 176,
                  "end_byte": 177,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 178,
                  "end_byte": 190,
                  "text": "j < numTests",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 178,
                      "end_byte": 179,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 180,
                      "end_byte": 181,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 182,
                      "end_byte": 190,
                      "text": "numTests",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 191,
                  "end_byte": 192,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 193,
                  "end_byte": 197,
                  "text": "j ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 193,
                      "end_byte": 194,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 195,
                      "end_byte": 197,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 198,
                  "end_byte": 199,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 200,
                  "end_byte": 397,
                  "text": "{ scanf ( \"%d %d\" , & num1 , & num2 ) ; while ( i <= num1 && i <= num2 ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; i ++ ; } lcm = num1 * num2 / gcd ; gcds [ j ] = gcd ; lcms [ j ] = lcm ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 200,
                      "end_byte": 201,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 202,
                      "end_byte": 239,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 202,
                          "end_byte": 237,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 202,
                              "end_byte": 207,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 208,
                              "end_byte": 237,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 210,
                                  "end_byte": 217,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 210,
                                      "end_byte": 211,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 211,
                                      "end_byte": 216,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 216,
                                      "end_byte": 217,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 218,
                                  "end_byte": 219,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 220,
                                  "end_byte": 226,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 222,
                                      "end_byte": 226,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 227,
                                  "end_byte": 228,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 229,
                                  "end_byte": 235,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 229,
                                      "end_byte": 230,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 231,
                                      "end_byte": 235,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 236,
                                  "end_byte": 237,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 238,
                          "end_byte": 239,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 240,
                      "end_byte": 331,
                      "text": "while ( i <= num1 && i <= num2 ) { if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; i ++ ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 240,
                          "end_byte": 245,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 246,
                          "end_byte": 272,
                          "text": "( i <= num1 && i <= num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 246,
                              "end_byte": 247,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 248,
                              "end_byte": 270,
                              "text": "i <= num1 && i <= num2",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 248,
                                  "end_byte": 257,
                                  "text": "i <= num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 248,
                                      "end_byte": 249,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 250,
                                      "end_byte": 252,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 253,
                                      "end_byte": 257,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 258,
                                  "end_byte": 260,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 261,
                                  "end_byte": 270,
                                  "text": "i <= num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 263,
                                      "end_byte": 265,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 266,
                                      "end_byte": 270,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 273,
                          "end_byte": 331,
                          "text": "{ if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ; i ++ ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 273,
                              "end_byte": 274,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 275,
                              "end_byte": 322,
                              "text": "if ( num1 % i == 0 && num2 % i == 0 ) gcd = i ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 275,
                                  "end_byte": 277,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 278,
                                  "end_byte": 312,
                                  "text": "( num1 % i == 0 && num2 % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 278,
                                      "end_byte": 279,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 280,
                                      "end_byte": 310,
                                      "text": "num1 % i == 0 && num2 % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 280,
                                          "end_byte": 293,
                                          "text": "num1 % i == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 280,
                                              "end_byte": 288,
                                              "text": "num1 % i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 280,
                                                  "end_byte": 284,
                                                  "text": "num1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 285,
                                                  "end_byte": 286,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 287,
                                                  "end_byte": 288,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 289,
                                              "end_byte": 291,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 292,
                                              "end_byte": 293,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 294,
                                          "end_byte": 296,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 297,
                                          "end_byte": 310,
                                          "text": "num2 % i == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 297,
                                              "end_byte": 305,
                                              "text": "num2 % i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 297,
                                                  "end_byte": 301,
                                                  "text": "num2",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 302,
                                                  "end_byte": 303,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 304,
                                                  "end_byte": 305,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 306,
                                              "end_byte": 308,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 309,
                                              "end_byte": 310,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 311,
                                      "end_byte": 312,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 313,
                                  "end_byte": 322,
                                  "text": "gcd = i ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 313,
                                      "end_byte": 320,
                                      "text": "gcd = i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 313,
                                          "end_byte": 316,
                                          "text": "gcd",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 317,
                                          "end_byte": 318,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 319,
                                          "end_byte": 320,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 321,
                                      "end_byte": 322,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 323,
                              "end_byte": 329,
                              "text": "i ++ ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 323,
                                  "end_byte": 327,
                                  "text": "i ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 323,
                                      "end_byte": 324,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 325,
                                      "end_byte": 327,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 328,
                                  "end_byte": 329,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 330,
                              "end_byte": 331,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 332,
                      "end_byte": 357,
                      "text": "lcm = num1 * num2 / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 332,
                          "end_byte": 355,
                          "text": "lcm = num1 * num2 / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 332,
                              "end_byte": 335,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 336,
                              "end_byte": 337,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 338,
                              "end_byte": 355,
                              "text": "num1 * num2 / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 338,
                                  "end_byte": 349,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 338,
                                      "end_byte": 342,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 343,
                                      "end_byte": 344,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 345,
                                      "end_byte": 349,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 350,
                                  "end_byte": 351,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 352,
                                  "end_byte": 355,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 358,
                      "end_byte": 376,
                      "text": "gcds [ j ] = gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 358,
                          "end_byte": 374,
                          "text": "gcds [ j ] = gcd",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 358,
                              "end_byte": 368,
                              "text": "gcds [ j ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 358,
                                  "end_byte": 362,
                                  "text": "gcds",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 363,
                                  "end_byte": 368,
                                  "text": "[ j ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 363,
                                      "end_byte": 364,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 367,
                                      "end_byte": 368,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 369,
                              "end_byte": 370,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 371,
                              "end_byte": 374,
                              "text": "gcd",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 375,
                          "end_byte": 376,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 377,
                      "end_byte": 395,
                      "text": "lcms [ j ] = lcm ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 377,
                          "end_byte": 393,
                          "text": "lcms [ j ] = lcm",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 377,
                              "end_byte": 387,
                              "text": "lcms [ j ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 377,
                                  "end_byte": 381,
                                  "text": "lcms",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 382,
                                  "end_byte": 387,
                                  "text": "[ j ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 382,
                                      "end_byte": 383,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 384,
                                      "end_byte": 385,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 386,
                                      "end_byte": 387,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 388,
                              "end_byte": 389,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 390,
                              "end_byte": 393,
                              "text": "lcm",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 394,
                          "end_byte": 395,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 396,
                      "end_byte": 397,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 398,
              "end_byte": 482,
              "text": "for ( i = 0 ; i < numTests ; i ++ ) printf ( \"%d %d\\n\" , gcds [ i ] , lcms [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 398,
                  "end_byte": 401,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 404,
                  "end_byte": 409,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 404,
                      "end_byte": 405,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 406,
                      "end_byte": 407,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 408,
                      "end_byte": 409,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 410,
                  "end_byte": 411,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 412,
                  "end_byte": 424,
                  "text": "i < numTests",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 412,
                      "end_byte": 413,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 414,
                      "end_byte": 415,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 416,
                      "end_byte": 424,
                      "text": "numTests",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 425,
                  "end_byte": 426,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 427,
                  "end_byte": 431,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 427,
                      "end_byte": 428,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 429,
                      "end_byte": 431,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 432,
                  "end_byte": 433,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 434,
                  "end_byte": 482,
                  "text": "printf ( \"%d %d\\n\" , gcds [ i ] , lcms [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 434,
                      "end_byte": 480,
                      "text": "printf ( \"%d %d\\n\" , gcds [ i ] , lcms [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 434,
                          "end_byte": 440,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 441,
                          "end_byte": 480,
                          "text": "( \"%d %d\\n\" , gcds [ i ] , lcms [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 441,
                              "end_byte": 442,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 443,
                              "end_byte": 452,
                              "text": "\"%d %d\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 443,
                                  "end_byte": 444,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 444,
                                  "end_byte": 449,
                                  "text": "%d %d",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 449,
                                  "end_byte": 451,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 451,
                                  "end_byte": 452,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 453,
                              "end_byte": 454,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 455,
                              "end_byte": 465,
                              "text": "gcds [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 455,
                                  "end_byte": 459,
                                  "text": "gcds",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 460,
                                  "end_byte": 465,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 460,
                                      "end_byte": 461,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 462,
                                      "end_byte": 463,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 464,
                                      "end_byte": 465,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 466,
                              "end_byte": 467,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 468,
                              "end_byte": 478,
                              "text": "lcms [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 468,
                                  "end_byte": 472,
                                  "text": "lcms",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 473,
                                  "end_byte": 478,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 473,
                                      "end_byte": 474,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 475,
                                      "end_byte": 476,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 477,
                                      "end_byte": 478,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 479,
                              "end_byte": 480,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 481,
                      "end_byte": 482,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 483,
              "end_byte": 484,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}