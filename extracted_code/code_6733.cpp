int a [ 100 ] [ 100 ] ; int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int ans ( int a [ 100 ] [ 100 ] , int i , int j ) { if ( i < 0 || j < 0 ) return 0 ; if ( i == 0 && j == 0 ) return a [ i ] [ j ] ; else return ( a [ i ] [ j ] + max ( ans ( a , i - 1 , j ) , ans ( a , i - 1 , j - 1 ) ) ) ; } int main ( ) { int n , r , i , j , count = 0 , se ; int an [ 100 ] ; scanf ( "%d" , & n ) ; while ( n ) { scanf ( "%d" , & r ) ; for ( i = 0 ; i < r ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } for ( i = 0 ; i < r ; i ++ ) { se = ans ( a , r - 1 , i ) ; if ( ans ( a , r - 1 , i ) > se ) se = ans ( a , r - 1 , i ) ; } an [ count ] = se ; count ++ ; n -- ; } for ( i = 0 ; i < count ; i ++ ) printf ( "%d\n" , an [ i ] ) ; return 0 ; }