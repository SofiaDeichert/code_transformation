{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 457,
  "text": "int main ( ) { int n1 , n2 , k , i , minMultiple , gcd ; printf ( \"Enter two positive integers: \" ) ; scanf ( \"%d %d\" , & n1 , & n2 ) ; minMultiple = ( n1 > n2 ) ? n1 : n2 ; while ( 1 ) { if ( minMultiple % n1 == 0 && minMultiple % n2 == 0 ) { k = minMultiple ; break ; } ++ minMultiple ; } printf ( \"%d\" , k ) ; for ( i = 1 ; i <= n1 && i <= n2 ; ++ i ) { if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; } printf ( \"%d\" , gcd ) ; printf ( \"\\n\" ) ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 457,
      "text": "int main ( ) { int n1 , n2 , k , i , minMultiple , gcd ; printf ( \"Enter two positive integers: \" ) ; scanf ( \"%d %d\" , & n1 , & n2 ) ; minMultiple = ( n1 > n2 ) ? n1 : n2 ; while ( 1 ) { if ( minMultiple % n1 == 0 && minMultiple % n2 == 0 ) { k = minMultiple ; break ; } ++ minMultiple ; } printf ( \"%d\" , k ) ; for ( i = 1 ; i <= n1 && i <= n2 ; ++ i ) { if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; } printf ( \"%d\" , gcd ) ; printf ( \"\\n\" ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 457,
          "text": "{ int n1 , n2 , k , i , minMultiple , gcd ; printf ( \"Enter two positive integers: \" ) ; scanf ( \"%d %d\" , & n1 , & n2 ) ; minMultiple = ( n1 > n2 ) ? n1 : n2 ; while ( 1 ) { if ( minMultiple % n1 == 0 && minMultiple % n2 == 0 ) { k = minMultiple ; break ; } ++ minMultiple ; } printf ( \"%d\" , k ) ; for ( i = 1 ; i <= n1 && i <= n2 ; ++ i ) { if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; } printf ( \"%d\" , gcd ) ; printf ( \"\\n\" ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 56,
              "text": "int n1 , n2 , k , i , minMultiple , gcd ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 21,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 26,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 48,
                  "text": "minMultiple",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 54,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 57,
              "end_byte": 101,
              "text": "printf ( \"Enter two positive integers: \" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 57,
                  "end_byte": 99,
                  "text": "printf ( \"Enter two positive integers: \" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 57,
                      "end_byte": 63,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 64,
                      "end_byte": 99,
                      "text": "( \"Enter two positive integers: \" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 64,
                          "end_byte": 65,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 66,
                          "end_byte": 97,
                          "text": "\"Enter two positive integers: \"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 66,
                              "end_byte": 67,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 67,
                              "end_byte": 96,
                              "text": "Enter two positive integers: ",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 96,
                              "end_byte": 97,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 100,
                  "end_byte": 101,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 102,
              "end_byte": 135,
              "text": "scanf ( \"%d %d\" , & n1 , & n2 ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 102,
                  "end_byte": 133,
                  "text": "scanf ( \"%d %d\" , & n1 , & n2 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 102,
                      "end_byte": 107,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 108,
                      "end_byte": 133,
                      "text": "( \"%d %d\" , & n1 , & n2 )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 108,
                          "end_byte": 109,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 110,
                          "end_byte": 117,
                          "text": "\"%d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 111,
                              "end_byte": 116,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 118,
                          "end_byte": 119,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 120,
                          "end_byte": 124,
                          "text": "& n1",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 120,
                              "end_byte": 121,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 122,
                              "end_byte": 124,
                              "text": "n1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 127,
                          "end_byte": 131,
                          "text": "& n2",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 129,
                              "end_byte": 131,
                              "text": "n2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 134,
                  "end_byte": 135,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 136,
              "end_byte": 173,
              "text": "minMultiple = ( n1 > n2 ) ? n1 : n2 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 136,
                  "end_byte": 171,
                  "text": "minMultiple = ( n1 > n2 ) ? n1 : n2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 136,
                      "end_byte": 147,
                      "text": "minMultiple",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 148,
                      "end_byte": 149,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "conditional_expression",
                      "start_byte": 150,
                      "end_byte": 171,
                      "text": "( n1 > n2 ) ? n1 : n2",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 150,
                          "end_byte": 161,
                          "text": "( n1 > n2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 150,
                              "end_byte": 151,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 152,
                              "end_byte": 159,
                              "text": "n1 > n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 152,
                                  "end_byte": 154,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 155,
                                  "end_byte": 156,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 157,
                                  "end_byte": 159,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": "?",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 164,
                          "end_byte": 166,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": ":",
                          "start_byte": 167,
                          "end_byte": 168,
                          "text": ":",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 169,
                          "end_byte": 171,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 172,
                  "end_byte": 173,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 174,
              "end_byte": 290,
              "text": "while ( 1 ) { if ( minMultiple % n1 == 0 && minMultiple % n2 == 0 ) { k = minMultiple ; break ; } ++ minMultiple ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 174,
                  "end_byte": 179,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 180,
                  "end_byte": 185,
                  "text": "( 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 180,
                      "end_byte": 181,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "1",
                      "children": []
                    },
                    {
                      "type": ")",
                      "start_byte": 184,
                      "end_byte": 185,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 186,
                  "end_byte": 290,
                  "text": "{ if ( minMultiple % n1 == 0 && minMultiple % n2 == 0 ) { k = minMultiple ; break ; } ++ minMultiple ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 186,
                      "end_byte": 187,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 188,
                      "end_byte": 271,
                      "text": "if ( minMultiple % n1 == 0 && minMultiple % n2 == 0 ) { k = minMultiple ; break ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 188,
                          "end_byte": 190,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 191,
                          "end_byte": 241,
                          "text": "( minMultiple % n1 == 0 && minMultiple % n2 == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 193,
                              "end_byte": 239,
                              "text": "minMultiple % n1 == 0 && minMultiple % n2 == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 193,
                                  "end_byte": 214,
                                  "text": "minMultiple % n1 == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 193,
                                      "end_byte": 209,
                                      "text": "minMultiple % n1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 193,
                                          "end_byte": 204,
                                          "text": "minMultiple",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 205,
                                          "end_byte": 206,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 207,
                                          "end_byte": 209,
                                          "text": "n1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 210,
                                      "end_byte": 212,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 213,
                                      "end_byte": 214,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 215,
                                  "end_byte": 217,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 218,
                                  "end_byte": 239,
                                  "text": "minMultiple % n2 == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 218,
                                      "end_byte": 234,
                                      "text": "minMultiple % n2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 218,
                                          "end_byte": 229,
                                          "text": "minMultiple",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 230,
                                          "end_byte": 231,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 232,
                                          "end_byte": 234,
                                          "text": "n2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 235,
                                      "end_byte": 237,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 238,
                                      "end_byte": 239,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 240,
                              "end_byte": 241,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 242,
                          "end_byte": 271,
                          "text": "{ k = minMultiple ; break ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 242,
                              "end_byte": 243,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 244,
                              "end_byte": 261,
                              "text": "k = minMultiple ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 244,
                                  "end_byte": 259,
                                  "text": "k = minMultiple",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 244,
                                      "end_byte": 245,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 246,
                                      "end_byte": 247,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 248,
                                      "end_byte": 259,
                                      "text": "minMultiple",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 260,
                                  "end_byte": 261,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "break_statement",
                              "start_byte": 262,
                              "end_byte": 269,
                              "text": "break ;",
                              "children": [
                                {
                                  "type": "break",
                                  "start_byte": 262,
                                  "end_byte": 267,
                                  "text": "break",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 268,
                                  "end_byte": 269,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 270,
                              "end_byte": 271,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 272,
                      "end_byte": 288,
                      "text": "++ minMultiple ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 272,
                          "end_byte": 286,
                          "text": "++ minMultiple",
                          "children": [
                            {
                              "type": "++",
                              "start_byte": 272,
                              "end_byte": 274,
                              "text": "++",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 275,
                              "end_byte": 286,
                              "text": "minMultiple",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 287,
                          "end_byte": 288,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 289,
                      "end_byte": 290,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 291,
              "end_byte": 312,
              "text": "printf ( \"%d\" , k ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 291,
                  "end_byte": 310,
                  "text": "printf ( \"%d\" , k )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 291,
                      "end_byte": 297,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 298,
                      "end_byte": 310,
                      "text": "( \"%d\" , k )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 298,
                          "end_byte": 299,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 300,
                          "end_byte": 304,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 300,
                              "end_byte": 301,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 301,
                              "end_byte": 303,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 303,
                              "end_byte": 304,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 305,
                          "end_byte": 306,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 307,
                          "end_byte": 308,
                          "text": "k",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 309,
                          "end_byte": 310,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 311,
                  "end_byte": 312,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 313,
              "end_byte": 402,
              "text": "for ( i = 1 ; i <= n1 && i <= n2 ; ++ i ) { if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 313,
                  "end_byte": 316,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 317,
                  "end_byte": 318,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 319,
                  "end_byte": 324,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 319,
                      "end_byte": 320,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 321,
                      "end_byte": 322,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 323,
                      "end_byte": 324,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 325,
                  "end_byte": 326,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 327,
                  "end_byte": 345,
                  "text": "i <= n1 && i <= n2",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 327,
                      "end_byte": 334,
                      "text": "i <= n1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 327,
                          "end_byte": 328,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 329,
                          "end_byte": 331,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 332,
                          "end_byte": 334,
                          "text": "n1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "&&",
                      "start_byte": 335,
                      "end_byte": 337,
                      "text": "&&",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 338,
                      "end_byte": 345,
                      "text": "i <= n2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 338,
                          "end_byte": 339,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<=",
                          "start_byte": 340,
                          "end_byte": 342,
                          "text": "<=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 343,
                          "end_byte": 345,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 346,
                  "end_byte": 347,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 348,
                  "end_byte": 352,
                  "text": "++ i",
                  "children": [
                    {
                      "type": "++",
                      "start_byte": 348,
                      "end_byte": 350,
                      "text": "++",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 351,
                      "end_byte": 352,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 353,
                  "end_byte": 354,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 355,
                  "end_byte": 402,
                  "text": "{ if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 357,
                      "end_byte": 400,
                      "text": "if ( n1 % i == 0 && n2 % i == 0 ) gcd = i ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 357,
                          "end_byte": 359,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 360,
                          "end_byte": 390,
                          "text": "( n1 % i == 0 && n2 % i == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 360,
                              "end_byte": 361,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 362,
                              "end_byte": 388,
                              "text": "n1 % i == 0 && n2 % i == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 362,
                                  "end_byte": 373,
                                  "text": "n1 % i == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 362,
                                      "end_byte": 368,
                                      "text": "n1 % i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 362,
                                          "end_byte": 364,
                                          "text": "n1",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 365,
                                          "end_byte": 366,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 367,
                                          "end_byte": 368,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 369,
                                      "end_byte": 371,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 372,
                                      "end_byte": 373,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 374,
                                  "end_byte": 376,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 377,
                                  "end_byte": 388,
                                  "text": "n2 % i == 0",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 377,
                                      "end_byte": 383,
                                      "text": "n2 % i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 377,
                                          "end_byte": 379,
                                          "text": "n2",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 380,
                                          "end_byte": 381,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 382,
                                          "end_byte": 383,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 384,
                                      "end_byte": 386,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 387,
                                      "end_byte": 388,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 389,
                              "end_byte": 390,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 391,
                          "end_byte": 400,
                          "text": "gcd = i ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 391,
                              "end_byte": 398,
                              "text": "gcd = i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 391,
                                  "end_byte": 394,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 395,
                                  "end_byte": 396,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 397,
                                  "end_byte": 398,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 399,
                              "end_byte": 400,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 401,
                      "end_byte": 402,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 403,
              "end_byte": 426,
              "text": "printf ( \"%d\" , gcd ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 403,
                  "end_byte": 424,
                  "text": "printf ( \"%d\" , gcd )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 403,
                      "end_byte": 409,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 410,
                      "end_byte": 424,
                      "text": "( \"%d\" , gcd )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 410,
                          "end_byte": 411,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 412,
                          "end_byte": 416,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 412,
                              "end_byte": 413,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 413,
                              "end_byte": 415,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 415,
                              "end_byte": 416,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 417,
                          "end_byte": 418,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 419,
                          "end_byte": 422,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 423,
                          "end_byte": 424,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 425,
                  "end_byte": 426,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 427,
              "end_byte": 444,
              "text": "printf ( \"\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 427,
                  "end_byte": 442,
                  "text": "printf ( \"\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 427,
                      "end_byte": 433,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 434,
                      "end_byte": 442,
                      "text": "( \"\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 434,
                          "end_byte": 435,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 436,
                          "end_byte": 440,
                          "text": "\"\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 436,
                              "end_byte": 437,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 437,
                              "end_byte": 439,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 439,
                              "end_byte": 440,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 441,
                          "end_byte": 442,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 443,
                  "end_byte": 444,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 445,
              "end_byte": 455,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 445,
                  "end_byte": 451,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 452,
                  "end_byte": 453,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 454,
                  "end_byte": 455,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 456,
              "end_byte": 457,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}