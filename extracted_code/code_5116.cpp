int max ( int , int ) ; int t = 0 ; int s ; int main ( ) { int n , i , j , k ; scanf ( "%d" , & n ) ; int r [ n ] ; for ( k = 0 ; k < n ; k ++ ) { scanf ( "%d" , & s ) ; int a [ s ] [ s ] ; for ( i = 0 ; i < s ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; r [ k ] = cache ( a , 0 , 0 , s ) ; } for ( k = 0 ; k < n ; k ++ ) printf ( "%d\n" , r [ k ] ) ; return 0 ; } int cache ( int a [ s ] [ s ] , int i , int j , int s ) { int p , q , c [ s ] [ s ] ; for ( p = 0 ; p < s ; p ++ ) for ( q = 0 ; q < s ; q ++ ) c [ p ] [ q ] = - 1 ; return solve ( c , a , i , j , s ) ; } int solve ( int c [ s ] [ s ] , int a [ s ] [ s ] , int i , int j , int s ) { int t1 , t2 ; if ( i == s ) return 0 ; if ( c [ i ] [ j ] >= 0 ) return c [ i ] [ j ] ; t1 = solve ( c , a , i + 1 , j , s ) ; t2 = solve ( c , a , i + 1 , j + 1 , s ) ; t = max ( t1 , t2 ) + a [ i ] [ j ] ; c [ i ] [ j ] = t ; return t ; } int max ( int a , int b ) { if ( a > b ) return a ; else return b ; }