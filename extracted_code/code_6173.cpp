int static max_val ; int * * buf ; void max_cal ( int sum , int row , int column , int m ) { if ( row == m ) { if ( max_val < sum + buf [ row ] [ column ] ) max_val = sum + buf [ row ] [ column ] ; } else { max_cal ( sum + buf [ row ] [ column ] , row + 1 , column + 1 , m ) ; max_cal ( sum + buf [ row ] [ column ] , row + 1 , column , m ) ; } } void mvp ( int m ) { max_val = 0 ; max_cal ( 0 , 0 , 0 , m ) ; } int main ( void ) { int i , j , k , m ; buf = ( int * * ) malloc ( sizeof ( int * ) * 100 ) ; for ( i = 0 ; i < 100 ; i ++ ) buf [ i ] = ( int * ) malloc ( sizeof ( int ) * ( i + 1 ) ) ; int n , max ; scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( "%d" , & m ) ; for ( j = 0 ; j < m ; j ++ ) for ( k = 0 ; k < j + 1 ; k ++ ) scanf ( "%d" , & buf [ j ] [ k ] ) ; max = - 1 ; mvp ( m ) ; if ( max < max_val ) max = max_val ; printf ( "%d\n" , max ) ; } return 0 ; }