int n , a [ 100 ] [ 100 ] ; int max ( int a , int b ) { if ( a >= b ) return a ; else return b ; } int maxpathsum ( int i , int j ) { if ( i == n || j == n ) return a [ i ] [ j ] ; return a [ i ] [ j ] + max ( maxpathsum ( i + 1 , j ) , maxpathsum ( i + 1 , j + 1 ) ) ; } int main ( ) { int t , i , j , m ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= n ; j ++ ) a [ i ] [ j ] = 0 ; } for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; } m = maxpathsum ( 1 , 1 ) ; printf ( "%d\n" , m ) ; } return 0 ; }