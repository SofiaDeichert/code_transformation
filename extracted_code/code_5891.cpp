int max ( int A [ 110 ] [ 110 ] , int B [ 110 ] [ 110 ] , int N , int j , int k ) ; int main ( ) { int T , i , j , k , N ; int A [ 110 ] [ 110 ] , B [ 110 ] [ 110 ] ; scanf ( "%d" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( "%d" , & N ) ; for ( j = 0 ; j < N ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) B [ j ] [ k ] = - 1 ; for ( j = 0 ; j < N ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) scanf ( "%d" , & A [ j ] [ k ] ) ; printf ( "%d\n" , max ( A , B , N , 0 , 0 ) ) ; } return 0 ; } int max ( int A [ 110 ] [ 110 ] , int B [ 110 ] [ 110 ] , int N , int j , int k ) { int lsum , rsum ; if ( j >= N || k >= N ) return 0 ; if ( B [ j ] [ k ] != - 1 ) return B [ j ] [ k ] ; lsum = max ( A , B , N , j + 1 , k ) ; rsum = max ( A , B , N , j + 1 , k + 1 ) ; if ( lsum > rsum ) B [ j ] [ k ] = A [ j ] [ k ] + lsum ; else B [ j ] [ k ] = A [ j ] [ k ] + rsum ; return B [ j ] [ k ] ; }