long LCommonM ( long A , long B ) { long i , L , mul = 1 ; if ( A > B ) L = A ; else L = B ; for ( i = 2 ; i <= L ; ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) { A = A / i ; B = B / i ; mul = mul * i ; } else if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; } } return mul ; } long GCommonD ( long A , long B ) { long i , S ; if ( A < B ) S = A ; else S = B ; for ( i = S ; i >= 1 ; i -- ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) break ; } return i ; } int main ( ) { long t , A , B , GCD , LCM ; scanf ( "%ld" , & t ) ; while ( t -- ) { scanf ( "%ld %ld" , & A , & B ) ; LCM = LCommonM ( A , B ) ; GCD = GCommonD ( A , B ) ; printf ( "%ld %ld\n" , GCD , LCM ) ; } return 0 ; }