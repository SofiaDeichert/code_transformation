int compare ( int v1 , int v2 ) ; void main ( ) { int test = 0 , arr [ 100 ] , i , j , k , r , n , y , r1 ; scanf ( "%d" , & test ) ; scanf ( "%d" , & n ) ; int * p ; while ( test != 0 ) { r1 = n ; p = ( int * ) malloc ( sizeof ( int ) * n * ( n + 1 ) / 2 ) ; while ( r1 - 1 > 0 ) { for ( i = 0 ; i < n * ( n + 1 ) / 2 ; i ++ ) { scanf ( "%d" , p + i ) ; } j = n * ( n + 1 ) / 2 ; for ( i = j - 1 , k = 0 ; k < n - 1 ; i -- , k ++ ) { printf ( "%d\t" , p [ i ] ) ; printf ( "/nit is %d" , p [ i ] ) ; arr [ k ] = compare ( p [ i ] , p [ i - 1 ] ) ; } n -- ; r = k ; for ( i = ( n ) * ( n + 1 ) / 2 , k = 0 ; k < r ; i ++ , k ++ ) { p [ i ] = p [ i ] + arr [ k ] ; } r1 -- ; } p [ 0 ] = p [ 0 ] + p [ 1 ] ; printf ( "%d" , * p ) ; test -- ; free ( p ) ; } } int compare ( int v1 , int v2 ) { if ( v1 >= v2 ) return ( v1 ) ; else return ( v2 ) ; }