{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 584,
  "text": "int main ( ) { long int num1 , num2 , gcd , lcm , a , i , testcases ; x : scanf ( \"%d\" , & testcases ) ; if ( testcases <= 1000 && testcases >= 1 ) { for ( i = 1 ; i <= testcases ; i ++ ) { y : scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 ) { if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; } else goto y ; } } else goto x ; return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 584,
      "text": "int main ( ) { long int num1 , num2 , gcd , lcm , a , i , testcases ; x : scanf ( \"%d\" , & testcases ) ; if ( testcases <= 1000 && testcases >= 1 ) { for ( i = 1 ; i <= testcases ; i ++ ) { y : scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 ) { if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; } else goto y ; } } else goto x ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 584,
          "text": "{ long int num1 , num2 , gcd , lcm , a , i , testcases ; x : scanf ( \"%d\" , & testcases ) ; if ( testcases <= 1000 && testcases >= 1 ) { for ( i = 1 ; i <= testcases ; i ++ ) { y : scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 ) { if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; } else goto y ; } } else goto x ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 69,
              "text": "long int num1 , num2 , gcd , lcm , a , i , testcases ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 15,
                  "end_byte": 23,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 15,
                      "end_byte": 19,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 20,
                      "end_byte": 23,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 28,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 35,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 41,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 44,
                  "end_byte": 47,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 67,
                  "text": "testcases",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "labeled_statement",
              "start_byte": 70,
              "end_byte": 104,
              "text": "x : scanf ( \"%d\" , & testcases ) ;",
              "children": [
                {
                  "type": "statement_identifier",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ":",
                  "start_byte": 72,
                  "end_byte": 73,
                  "text": ":",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 74,
                  "end_byte": 104,
                  "text": "scanf ( \"%d\" , & testcases ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 74,
                      "end_byte": 102,
                      "text": "scanf ( \"%d\" , & testcases )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 74,
                          "end_byte": 79,
                          "text": "scanf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 80,
                          "end_byte": 102,
                          "text": "( \"%d\" , & testcases )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 80,
                              "end_byte": 81,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 82,
                              "end_byte": 86,
                              "text": "\"%d\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 82,
                                  "end_byte": 83,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 83,
                                  "end_byte": 85,
                                  "text": "%d",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 85,
                                  "end_byte": 86,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 87,
                              "end_byte": 88,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "pointer_expression",
                              "start_byte": 89,
                              "end_byte": 100,
                              "text": "& testcases",
                              "children": [
                                {
                                  "type": "&",
                                  "start_byte": 89,
                                  "end_byte": 90,
                                  "text": "&",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 91,
                                  "end_byte": 100,
                                  "text": "testcases",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 103,
                      "end_byte": 104,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 105,
              "end_byte": 571,
              "text": "if ( testcases <= 1000 && testcases >= 1 ) { for ( i = 1 ; i <= testcases ; i ++ ) { y : scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 ) { if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; } else goto y ; } } else goto x ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 105,
                  "end_byte": 107,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 108,
                  "end_byte": 147,
                  "text": "( testcases <= 1000 && testcases >= 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 108,
                      "end_byte": 109,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 110,
                      "end_byte": 145,
                      "text": "testcases <= 1000 && testcases >= 1",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 110,
                          "end_byte": 127,
                          "text": "testcases <= 1000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 110,
                              "end_byte": 119,
                              "text": "testcases",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 120,
                              "end_byte": 122,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 123,
                              "end_byte": 127,
                              "text": "1000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "start_byte": 128,
                          "end_byte": 130,
                          "text": "&&",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 131,
                          "end_byte": 145,
                          "text": "testcases >= 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 131,
                              "end_byte": 140,
                              "text": "testcases",
                              "children": []
                            },
                            {
                              "type": ">=",
                              "start_byte": 141,
                              "end_byte": 143,
                              "text": ">=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 148,
                  "end_byte": 557,
                  "text": "{ for ( i = 1 ; i <= testcases ; i ++ ) { y : scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 ) { if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; } else goto y ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 148,
                      "end_byte": 149,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 150,
                      "end_byte": 555,
                      "text": "for ( i = 1 ; i <= testcases ; i ++ ) { y : scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 ) { if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; } else goto y ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 150,
                          "end_byte": 153,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 154,
                          "end_byte": 155,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 156,
                          "end_byte": 161,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 156,
                              "end_byte": 157,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 158,
                              "end_byte": 159,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 164,
                          "end_byte": 178,
                          "text": "i <= testcases",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 166,
                              "end_byte": 168,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 169,
                              "end_byte": 178,
                              "text": "testcases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 179,
                          "end_byte": 180,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 181,
                          "end_byte": 185,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 183,
                              "end_byte": 185,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 186,
                          "end_byte": 187,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 188,
                          "end_byte": 555,
                          "text": "{ y : scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 ) { if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; } else goto y ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 188,
                              "end_byte": 189,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "labeled_statement",
                              "start_byte": 190,
                              "end_byte": 231,
                              "text": "y : scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                              "children": [
                                {
                                  "type": "statement_identifier",
                                  "start_byte": 190,
                                  "end_byte": 191,
                                  "text": "y",
                                  "children": []
                                },
                                {
                                  "type": ":",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": ":",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 194,
                                  "end_byte": 231,
                                  "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 194,
                                      "end_byte": 229,
                                      "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 194,
                                          "end_byte": 199,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 200,
                                          "end_byte": 229,
                                          "text": "( \"%d %d\" , & num1 , & num2 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 200,
                                              "end_byte": 201,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 202,
                                              "end_byte": 209,
                                              "text": "\"%d %d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 202,
                                                  "end_byte": 203,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 203,
                                                  "end_byte": 208,
                                                  "text": "%d %d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 208,
                                                  "end_byte": 209,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 210,
                                              "end_byte": 211,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 212,
                                              "end_byte": 218,
                                              "text": "& num1",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 212,
                                                  "end_byte": 213,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 214,
                                                  "end_byte": 218,
                                                  "text": "num1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 219,
                                              "end_byte": 220,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 221,
                                              "end_byte": 227,
                                              "text": "& num2",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 221,
                                                  "end_byte": 222,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 223,
                                                  "end_byte": 227,
                                                  "text": "num2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 228,
                                              "end_byte": 229,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 230,
                                      "end_byte": 231,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 232,
                              "end_byte": 553,
                              "text": "if ( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 ) { if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; } else goto y ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 232,
                                  "end_byte": 234,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 235,
                                  "end_byte": 299,
                                  "text": "( num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 235,
                                      "end_byte": 236,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 237,
                                      "end_byte": 297,
                                      "text": "num1 <= 1000000 && num2 <= 1000000 && num1 >= 1 && num2 >= 1",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 237,
                                          "end_byte": 284,
                                          "text": "num1 <= 1000000 && num2 <= 1000000 && num1 >= 1",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 237,
                                              "end_byte": 271,
                                              "text": "num1 <= 1000000 && num2 <= 1000000",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 237,
                                                  "end_byte": 252,
                                                  "text": "num1 <= 1000000",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 237,
                                                      "end_byte": 241,
                                                      "text": "num1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "<=",
                                                      "start_byte": 242,
                                                      "end_byte": 244,
                                                      "text": "<=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 245,
                                                      "end_byte": 252,
                                                      "text": "1000000",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "&&",
                                                  "start_byte": 253,
                                                  "end_byte": 255,
                                                  "text": "&&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 256,
                                                  "end_byte": 271,
                                                  "text": "num2 <= 1000000",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 256,
                                                      "end_byte": 260,
                                                      "text": "num2",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "<=",
                                                      "start_byte": 261,
                                                      "end_byte": 263,
                                                      "text": "<=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 264,
                                                      "end_byte": 271,
                                                      "text": "1000000",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "&&",
                                              "start_byte": 272,
                                              "end_byte": 274,
                                              "text": "&&",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 275,
                                              "end_byte": 284,
                                              "text": "num1 >= 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 275,
                                                  "end_byte": 279,
                                                  "text": "num1",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">=",
                                                  "start_byte": 280,
                                                  "end_byte": 282,
                                                  "text": ">=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 283,
                                                  "end_byte": 284,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 285,
                                          "end_byte": 287,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 288,
                                          "end_byte": 297,
                                          "text": "num2 >= 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 288,
                                              "end_byte": 292,
                                              "text": "num2",
                                              "children": []
                                            },
                                            {
                                              "type": ">=",
                                              "start_byte": 293,
                                              "end_byte": 295,
                                              "text": ">=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 296,
                                              "end_byte": 297,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 300,
                                  "end_byte": 539,
                                  "text": "{ if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; } for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } } lcm = num1 * num2 / gcd ; printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 302,
                                      "end_byte": 360,
                                      "text": "if ( num1 > num2 ) { a = num1 ; num1 = num2 ; num2 = a ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 302,
                                          "end_byte": 304,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 305,
                                          "end_byte": 320,
                                          "text": "( num1 > num2 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 305,
                                              "end_byte": 306,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 307,
                                              "end_byte": 318,
                                              "text": "num1 > num2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 307,
                                                  "end_byte": 311,
                                                  "text": "num1",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 312,
                                                  "end_byte": 313,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 314,
                                                  "end_byte": 318,
                                                  "text": "num2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 319,
                                              "end_byte": 320,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 321,
                                          "end_byte": 360,
                                          "text": "{ a = num1 ; num1 = num2 ; num2 = a ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 321,
                                              "end_byte": 322,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 323,
                                              "end_byte": 333,
                                              "text": "a = num1 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 323,
                                                  "end_byte": 331,
                                                  "text": "a = num1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 323,
                                                      "end_byte": 324,
                                                      "text": "a",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 325,
                                                      "end_byte": 326,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 327,
                                                      "end_byte": 331,
                                                      "text": "num1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 332,
                                                  "end_byte": 333,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 334,
                                              "end_byte": 347,
                                              "text": "num1 = num2 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 334,
                                                  "end_byte": 345,
                                                  "text": "num1 = num2",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 334,
                                                      "end_byte": 338,
                                                      "text": "num1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 339,
                                                      "end_byte": 340,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 341,
                                                      "end_byte": 345,
                                                      "text": "num2",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 346,
                                                  "end_byte": 347,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 348,
                                              "end_byte": 358,
                                              "text": "num2 = a ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 348,
                                                  "end_byte": 356,
                                                  "text": "num2 = a",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 348,
                                                      "end_byte": 352,
                                                      "text": "num2",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 353,
                                                      "end_byte": 354,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 355,
                                                      "end_byte": 356,
                                                      "text": "a",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 357,
                                                  "end_byte": 358,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 359,
                                              "end_byte": 360,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "for_statement",
                                      "start_byte": 361,
                                      "end_byte": 464,
                                      "text": "for ( i = num1 ; i > 1 ; i -- ) { if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } }",
                                      "children": [
                                        {
                                          "type": "for",
                                          "start_byte": 361,
                                          "end_byte": 364,
                                          "text": "for",
                                          "children": []
                                        },
                                        {
                                          "type": "(",
                                          "start_byte": 365,
                                          "end_byte": 366,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 367,
                                          "end_byte": 375,
                                          "text": "i = num1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 367,
                                              "end_byte": 368,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 369,
                                              "end_byte": 370,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 371,
                                              "end_byte": 375,
                                              "text": "num1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 376,
                                          "end_byte": 377,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 378,
                                          "end_byte": 383,
                                          "text": "i > 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 378,
                                              "end_byte": 379,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": ">",
                                              "start_byte": 380,
                                              "end_byte": 381,
                                              "text": ">",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 382,
                                              "end_byte": 383,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 384,
                                          "end_byte": 385,
                                          "text": ";",
                                          "children": []
                                        },
                                        {
                                          "type": "update_expression",
                                          "start_byte": 386,
                                          "end_byte": 390,
                                          "text": "i --",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 386,
                                              "end_byte": 387,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "--",
                                              "start_byte": 388,
                                              "end_byte": 390,
                                              "text": "--",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 391,
                                          "end_byte": 392,
                                          "text": ")",
                                          "children": []
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 393,
                                          "end_byte": 464,
                                          "text": "{ if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } } }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 393,
                                              "end_byte": 394,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 395,
                                              "end_byte": 462,
                                              "text": "if ( num1 % i == 0 ) { if ( num2 % i == 0 ) { gcd = i ; break ; } }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 395,
                                                  "end_byte": 397,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 398,
                                                  "end_byte": 415,
                                                  "text": "( num1 % i == 0 )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 398,
                                                      "end_byte": 399,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 400,
                                                      "end_byte": 413,
                                                      "text": "num1 % i == 0",
                                                      "children": [
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 400,
                                                          "end_byte": 408,
                                                          "text": "num1 % i",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 400,
                                                              "end_byte": 404,
                                                              "text": "num1",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "%",
                                                              "start_byte": 405,
                                                              "end_byte": 406,
                                                              "text": "%",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 407,
                                                              "end_byte": 408,
                                                              "text": "i",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "==",
                                                          "start_byte": 409,
                                                          "end_byte": 411,
                                                          "text": "==",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 412,
                                                          "end_byte": 413,
                                                          "text": "0",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 414,
                                                      "end_byte": 415,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 416,
                                                  "end_byte": 462,
                                                  "text": "{ if ( num2 % i == 0 ) { gcd = i ; break ; } }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 416,
                                                      "end_byte": 417,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "if_statement",
                                                      "start_byte": 418,
                                                      "end_byte": 460,
                                                      "text": "if ( num2 % i == 0 ) { gcd = i ; break ; }",
                                                      "children": [
                                                        {
                                                          "type": "if",
                                                          "start_byte": 418,
                                                          "end_byte": 420,
                                                          "text": "if",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "condition_clause",
                                                          "start_byte": 421,
                                                          "end_byte": 438,
                                                          "text": "( num2 % i == 0 )",
                                                          "children": [
                                                            {
                                                              "type": "(",
                                                              "start_byte": 421,
                                                              "end_byte": 422,
                                                              "text": "(",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 423,
                                                              "end_byte": 436,
                                                              "text": "num2 % i == 0",
                                                              "children": [
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 423,
                                                                  "end_byte": 431,
                                                                  "text": "num2 % i",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 423,
                                                                      "end_byte": 427,
                                                                      "text": "num2",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "%",
                                                                      "start_byte": 428,
                                                                      "end_byte": 429,
                                                                      "text": "%",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 430,
                                                                      "end_byte": 431,
                                                                      "text": "i",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "==",
                                                                  "start_byte": 432,
                                                                  "end_byte": 434,
                                                                  "text": "==",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 435,
                                                                  "end_byte": 436,
                                                                  "text": "0",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": ")",
                                                              "start_byte": 437,
                                                              "end_byte": 438,
                                                              "text": ")",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "compound_statement",
                                                          "start_byte": 439,
                                                          "end_byte": 460,
                                                          "text": "{ gcd = i ; break ; }",
                                                          "children": [
                                                            {
                                                              "type": "{",
                                                              "start_byte": 439,
                                                              "end_byte": 440,
                                                              "text": "{",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "expression_statement",
                                                              "start_byte": 441,
                                                              "end_byte": 450,
                                                              "text": "gcd = i ;",
                                                              "children": [
                                                                {
                                                                  "type": "assignment_expression",
                                                                  "start_byte": 441,
                                                                  "end_byte": 448,
                                                                  "text": "gcd = i",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 441,
                                                                      "end_byte": 444,
                                                                      "text": "gcd",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "=",
                                                                      "start_byte": 445,
                                                                      "end_byte": 446,
                                                                      "text": "=",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 447,
                                                                      "end_byte": 448,
                                                                      "text": "i",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ";",
                                                                  "start_byte": 449,
                                                                  "end_byte": 450,
                                                                  "text": ";",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "break_statement",
                                                              "start_byte": 451,
                                                              "end_byte": 458,
                                                              "text": "break ;",
                                                              "children": [
                                                                {
                                                                  "type": "break",
                                                                  "start_byte": 451,
                                                                  "end_byte": 456,
                                                                  "text": "break",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": ";",
                                                                  "start_byte": 457,
                                                                  "end_byte": 458,
                                                                  "text": ";",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "}",
                                                              "start_byte": 459,
                                                              "end_byte": 460,
                                                              "text": "}",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 461,
                                                      "end_byte": 462,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 463,
                                              "end_byte": 464,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 465,
                                      "end_byte": 490,
                                      "text": "lcm = num1 * num2 / gcd ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 465,
                                          "end_byte": 488,
                                          "text": "lcm = num1 * num2 / gcd",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 465,
                                              "end_byte": 468,
                                              "text": "lcm",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 469,
                                              "end_byte": 470,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 471,
                                              "end_byte": 488,
                                              "text": "num1 * num2 / gcd",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 471,
                                                  "end_byte": 482,
                                                  "text": "num1 * num2",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 471,
                                                      "end_byte": 475,
                                                      "text": "num1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 476,
                                                      "end_byte": 477,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 478,
                                                      "end_byte": 482,
                                                      "text": "num2",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "/",
                                                  "start_byte": 483,
                                                  "end_byte": 484,
                                                  "text": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 485,
                                                  "end_byte": 488,
                                                  "text": "gcd",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 489,
                                          "end_byte": 490,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 491,
                                      "end_byte": 537,
                                      "text": "printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 491,
                                          "end_byte": 535,
                                          "text": "printf ( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 491,
                                              "end_byte": 497,
                                              "text": "printf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 498,
                                              "end_byte": 535,
                                              "text": "( \"LCM= %ld GCD= %ld\\n\" , lcm , gcd )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 498,
                                                  "end_byte": 499,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 500,
                                                  "end_byte": 521,
                                                  "text": "\"LCM= %ld GCD= %ld\\n\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 500,
                                                      "end_byte": 501,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 501,
                                                      "end_byte": 518,
                                                      "text": "LCM= %ld GCD= %ld",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "escape_sequence",
                                                      "start_byte": 518,
                                                      "end_byte": 520,
                                                      "text": "\\n",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 520,
                                                      "end_byte": 521,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 522,
                                                  "end_byte": 523,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 524,
                                                  "end_byte": 527,
                                                  "text": "lcm",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 528,
                                                  "end_byte": 529,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 530,
                                                  "end_byte": 533,
                                                  "text": "gcd",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 534,
                                                  "end_byte": 535,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 536,
                                          "end_byte": 537,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 538,
                                      "end_byte": 539,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 540,
                                  "end_byte": 553,
                                  "text": "else goto y ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 540,
                                      "end_byte": 544,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "goto_statement",
                                      "start_byte": 545,
                                      "end_byte": 553,
                                      "text": "goto y ;",
                                      "children": [
                                        {
                                          "type": "goto",
                                          "start_byte": 545,
                                          "end_byte": 549,
                                          "text": "goto",
                                          "children": []
                                        },
                                        {
                                          "type": "statement_identifier",
                                          "start_byte": 550,
                                          "end_byte": 551,
                                          "text": "y",
                                          "children": []
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 552,
                                          "end_byte": 553,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 554,
                              "end_byte": 555,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 556,
                      "end_byte": 557,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 558,
                  "end_byte": 571,
                  "text": "else goto x ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 558,
                      "end_byte": 562,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "goto_statement",
                      "start_byte": 563,
                      "end_byte": 571,
                      "text": "goto x ;",
                      "children": [
                        {
                          "type": "goto",
                          "start_byte": 563,
                          "end_byte": 567,
                          "text": "goto",
                          "children": []
                        },
                        {
                          "type": "statement_identifier",
                          "start_byte": 568,
                          "end_byte": 569,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 570,
                          "end_byte": 571,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 572,
              "end_byte": 582,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 572,
                  "end_byte": 578,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 579,
                  "end_byte": 580,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 581,
                  "end_byte": 582,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 583,
              "end_byte": 584,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}