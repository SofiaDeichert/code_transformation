int max ( int size , int i , int j , int p [ size ] [ size ] ) ; int main ( ) { int cases , array_size , p [ 100 ] [ 100 ] ; scanf ( "%d" , & cases ) ; while ( cases -- ) { scanf ( "%d" , & array_size ) ; if ( array_size ) { int i , j ; for ( i = 0 ; i < array_size ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) { scanf ( "%d" , & p [ i ] [ j ] ) ; } } printf ( "%d\n" , p [ 0 ] [ 0 ] + max ( array_size , 1 , 0 , p ) ) ; } } return 0 ; } int max ( int size , int i , int j , int p [ size ] [ size ] ) { if ( i == ( size - 1 ) ) { return greater ( p [ i ] [ j ] , p [ i ] [ j + 1 ] ) ; } else { return greater ( p [ i ] [ j ] + max ( size , i + 1 , j , p ) , p [ i ] [ j + 1 ] + max ( size , i + 1 , j + 1 , p ) ) ; } }