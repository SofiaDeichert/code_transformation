int sum ( int ) ; int sum ( int n ) { if ( n == 0 ) return 0 ; else if ( n == 1 ) return 1 ; else return ( n + sum ( n - 1 ) ) ; } int main ( ) { int t , n , i , tt , sum1 = 0 , j = 0 , k = 0 , sum2 , * arr ; scanf ( "%d" , & t ) ; if ( t > 1000 || t < 1 ) return - 1 ; tt = t ; while ( t -- ) { sum1 = 0 , sum2 = 0 , k = 0 ; scanf ( "%d" , & n ) ; if ( n > 99 || n < 1 ) return - 1 ; arr = malloc ( sizeof ( int ) * sum ( n ) ) ; for ( i = 0 ; i < sum ( n ) ; i ++ ) { scanf ( "%d" , & arr [ i ] ) ; if ( arr [ i ] < 0 || arr [ i ] > 99 ) return - 1 ; } while ( k < n ) { sum1 = sum1 + arr [ sum ( k ++ ) ] ; } sum2 = sum1 - arr [ sum ( n - 1 ) ] + arr [ ( sum ( n - 1 ) + 1 ) ] ; if ( sum2 > sum1 ) printf ( "%d\n" , sum2 ) ; else printf ( "%d\n" , sum1 ) ; } return 0 ; }