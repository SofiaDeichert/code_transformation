short int max_sum ( short int * , short int ) ; int main ( ) { short int i , j , line , n , size ; short int * arr ; scanf ( "%d" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { scanf ( "%d" , & line ) ; size = line * ( line + 1 ) / 2 ; arr = ( short int * ) malloc ( sizeof ( short int ) * size ) ; for ( j = 0 ; j < size ; j ++ ) scanf ( "%d" , & arr [ j ] ) ; printf ( "%d\n" , max_sum ( arr , size ) ) ; free ( arr ) ; } return 0 ; } short int max_sum ( short int arr [ ] , short int size ) { short int count , i , index , j , lower , max , upper ; short int * sum ; sum = ( short int * ) malloc ( sizeof ( short int ) * size ) ; sum [ 0 ] = arr [ 0 ] ; j = 0 ; i = lower = 1 ; count = upper = 2 ; while ( i < size ) { while ( i <= upper ) { if ( ( i == lower ) || ( j == 0 ) ) sum [ i ] = arr [ i ] + sum [ j ] ; else if ( i == upper ) sum [ i ] = arr [ i ] + sum [ j - 1 ] ; else { if ( sum [ j ] > sum [ j - 1 ] ) sum [ i ] = arr [ i ] + sum [ j ] ; else sum [ i ] = arr [ i ] + sum [ j - 1 ] ; } i ++ ; if ( i != upper ) j ++ ; } lower += count ; count ++ ; upper += count ; } index = lower - count + 1 ; max = sum [ index ] ; for ( i = index + 1 ; i < size ; i ++ ) if ( sum [ i ] > max ) max = sum [ i ] ; free ( sum ) ; return max ; }