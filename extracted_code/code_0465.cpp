long unsigned int leastCD ( long unsigned int a , long unsigned int b ) ; long unsigned int greatestCD ( long unsigned int a , long unsigned int b ) { int k , j ; if ( a > b ) { while ( 1 ) { k = a / b ; j = a - k * b ; if ( j == 0 ) break ; a = b ; b = j ; } return b ; } else { while ( 1 ) { k = b / a ; j = b - k * a ; if ( j == 0 ) break ; b = a ; a = j ; } return a ; } } long unsigned int leastCD ( long unsigned int a , long unsigned int b ) { return ( a * b / greatestCD ( a , b ) ) ; } int main ( ) { int t , k = 0 , i ; long unsigned int A , B , * lcm , * gcd ; scanf ( "%d" , & t ) ; gcd = ( long unsigned int * ) malloc ( t * sizeof ( long unsigned int ) ) ; lcm = ( long unsigned int * ) malloc ( t * sizeof ( long unsigned int ) ) ; while ( t ) { scanf ( "%lu%lu" , & A , & B ) ; gcd [ k ] = greatestCD ( A , B ) ; lcm [ k ] = leastCD ( A , B ) ; k ++ ; t -- ; } for ( i = 0 ; i < k ; i ++ ) { printf ( "%lu %lu\n" , gcd [ i ] , lcm [ i ] ) ; } }