{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 422,
  "text": "void function ( int n ) { int i , j ; i = 0 ; int min , sum ; sum = 0 ; int array [ n ] ; while ( i < n ) { scanf ( \"%d\" , & array [ i ] ) ; i ++ ; } min = array [ 0 ] ; for ( j = 1 ; j < n ; j ++ ) { if ( min > array [ j ] ) { min = array [ j ] ; } sum = sum + min ; } printf ( \"%d\\n\" , sum ) ; } int main ( ) { int t , no ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & no ) ; function ( no ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 297,
      "text": "void function ( int n ) { int i , j ; i = 0 ; int min , sum ; sum = 0 ; int array [ n ] ; while ( i < n ) { scanf ( \"%d\" , & array [ i ] ) ; i ++ ; } min = array [ 0 ] ; for ( j = 1 ; j < n ; j ++ ) { if ( min > array [ j ] ) { min = array [ j ] ; } sum = sum + min ; } printf ( \"%d\\n\" , sum ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 23,
          "text": "function ( int n )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 13,
              "text": "function",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 14,
              "end_byte": 23,
              "text": "( int n )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 16,
                  "end_byte": 21,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 16,
                      "end_byte": 19,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 20,
                      "end_byte": 21,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 24,
          "end_byte": 297,
          "text": "{ int i , j ; i = 0 ; int min , sum ; sum = 0 ; int array [ n ] ; while ( i < n ) { scanf ( \"%d\" , & array [ i ] ) ; i ++ ; } min = array [ 0 ] ; for ( j = 1 ; j < n ; j ++ ) { if ( min > array [ j ] ) { min = array [ j ] ; } sum = sum + min ; } printf ( \"%d\\n\" , sum ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 24,
              "end_byte": 25,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 26,
              "end_byte": 37,
              "text": "int i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 26,
                  "end_byte": 29,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 38,
              "end_byte": 45,
              "text": "i = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 38,
                  "end_byte": 43,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 38,
                      "end_byte": 39,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 40,
                      "end_byte": 41,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 42,
                      "end_byte": 43,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 46,
              "end_byte": 61,
              "text": "int min , sum ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 46,
                  "end_byte": 49,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 53,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 56,
                  "end_byte": 59,
                  "text": "sum",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 62,
              "end_byte": 71,
              "text": "sum = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 62,
                  "end_byte": 69,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 62,
                      "end_byte": 65,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 66,
                      "end_byte": 67,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 68,
                      "end_byte": 69,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 72,
              "end_byte": 89,
              "text": "int array [ n ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 72,
                  "end_byte": 75,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 76,
                  "end_byte": 87,
                  "text": "array [ n ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 81,
                      "text": "array",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 82,
                      "end_byte": 83,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 84,
                      "end_byte": 85,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 86,
                      "end_byte": 87,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 88,
                  "end_byte": 89,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 90,
              "end_byte": 149,
              "text": "while ( i < n ) { scanf ( \"%d\" , & array [ i ] ) ; i ++ ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 90,
                  "end_byte": 95,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 96,
                  "end_byte": 105,
                  "text": "( i < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 96,
                      "end_byte": 97,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 98,
                      "end_byte": 103,
                      "text": "i < n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 106,
                  "end_byte": 149,
                  "text": "{ scanf ( \"%d\" , & array [ i ] ) ; i ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 108,
                      "end_byte": 140,
                      "text": "scanf ( \"%d\" , & array [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 108,
                          "end_byte": 138,
                          "text": "scanf ( \"%d\" , & array [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 108,
                              "end_byte": 113,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 114,
                              "end_byte": 138,
                              "text": "( \"%d\" , & array [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 114,
                                  "end_byte": 115,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 116,
                                  "end_byte": 120,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 116,
                                      "end_byte": 117,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 117,
                                      "end_byte": 119,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 119,
                                      "end_byte": 120,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 121,
                                  "end_byte": 122,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 123,
                                  "end_byte": 136,
                                  "text": "& array [ i ]",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 123,
                                      "end_byte": 124,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 125,
                                      "end_byte": 136,
                                      "text": "array [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 125,
                                          "end_byte": 130,
                                          "text": "array",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 131,
                                          "end_byte": 136,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 131,
                                              "end_byte": 132,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 133,
                                              "end_byte": 134,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 135,
                                              "end_byte": 136,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 137,
                                  "end_byte": 138,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 139,
                          "end_byte": 140,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 141,
                      "end_byte": 147,
                      "text": "i ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 141,
                          "end_byte": 145,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 141,
                              "end_byte": 142,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 143,
                              "end_byte": 145,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 146,
                          "end_byte": 147,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 148,
                      "end_byte": 149,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 150,
              "end_byte": 169,
              "text": "min = array [ 0 ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 150,
                  "end_byte": 167,
                  "text": "min = array [ 0 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 150,
                      "end_byte": 153,
                      "text": "min",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 154,
                      "end_byte": 155,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 156,
                      "end_byte": 167,
                      "text": "array [ 0 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 156,
                          "end_byte": 161,
                          "text": "array",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 162,
                          "end_byte": 167,
                          "text": "[ 0 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 166,
                              "end_byte": 167,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 168,
                  "end_byte": 169,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 170,
              "end_byte": 269,
              "text": "for ( j = 1 ; j < n ; j ++ ) { if ( min > array [ j ] ) { min = array [ j ] ; } sum = sum + min ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 170,
                  "end_byte": 173,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 174,
                  "end_byte": 175,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 176,
                  "end_byte": 181,
                  "text": "j = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 178,
                      "end_byte": 179,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 180,
                      "end_byte": 181,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 182,
                  "end_byte": 183,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 184,
                  "end_byte": 189,
                  "text": "j < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 184,
                      "end_byte": 185,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 186,
                      "end_byte": 187,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 188,
                      "end_byte": 189,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 190,
                  "end_byte": 191,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 192,
                  "end_byte": 196,
                  "text": "j ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 192,
                      "end_byte": 193,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 194,
                      "end_byte": 196,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 197,
                  "end_byte": 198,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 199,
                  "end_byte": 269,
                  "text": "{ if ( min > array [ j ] ) { min = array [ j ] ; } sum = sum + min ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 199,
                      "end_byte": 200,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 201,
                      "end_byte": 249,
                      "text": "if ( min > array [ j ] ) { min = array [ j ] ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 201,
                          "end_byte": 203,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 204,
                          "end_byte": 225,
                          "text": "( min > array [ j ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 206,
                              "end_byte": 223,
                              "text": "min > array [ j ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 206,
                                  "end_byte": 209,
                                  "text": "min",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 210,
                                  "end_byte": 211,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 212,
                                  "end_byte": 223,
                                  "text": "array [ j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 212,
                                      "end_byte": 217,
                                      "text": "array",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 218,
                                      "end_byte": 223,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 218,
                                          "end_byte": 219,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 220,
                                          "end_byte": 221,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 222,
                                          "end_byte": 223,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 224,
                              "end_byte": 225,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 226,
                          "end_byte": 249,
                          "text": "{ min = array [ j ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 226,
                              "end_byte": 227,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 228,
                              "end_byte": 247,
                              "text": "min = array [ j ] ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 228,
                                  "end_byte": 245,
                                  "text": "min = array [ j ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 228,
                                      "end_byte": 231,
                                      "text": "min",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 232,
                                      "end_byte": 233,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 234,
                                      "end_byte": 245,
                                      "text": "array [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 234,
                                          "end_byte": 239,
                                          "text": "array",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 240,
                                          "end_byte": 245,
                                          "text": "[ j ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 240,
                                              "end_byte": 241,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 242,
                                              "end_byte": 243,
                                              "text": "j",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 244,
                                              "end_byte": 245,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 246,
                                  "end_byte": 247,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 248,
                              "end_byte": 249,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 250,
                      "end_byte": 267,
                      "text": "sum = sum + min ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 250,
                          "end_byte": 265,
                          "text": "sum = sum + min",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 250,
                              "end_byte": 253,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 254,
                              "end_byte": 255,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 256,
                              "end_byte": 265,
                              "text": "sum + min",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 256,
                                  "end_byte": 259,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 260,
                                  "end_byte": 261,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 262,
                                  "end_byte": 265,
                                  "text": "min",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 266,
                          "end_byte": 267,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 268,
                      "end_byte": 269,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 270,
              "end_byte": 295,
              "text": "printf ( \"%d\\n\" , sum ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 270,
                  "end_byte": 293,
                  "text": "printf ( \"%d\\n\" , sum )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 270,
                      "end_byte": 276,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 277,
                      "end_byte": 293,
                      "text": "( \"%d\\n\" , sum )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 277,
                          "end_byte": 278,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 279,
                          "end_byte": 285,
                          "text": "\"%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 279,
                              "end_byte": 280,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 280,
                              "end_byte": 282,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 282,
                              "end_byte": 284,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 284,
                              "end_byte": 285,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 288,
                          "end_byte": 291,
                          "text": "sum",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 292,
                          "end_byte": 293,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 294,
                  "end_byte": 295,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 296,
              "end_byte": 297,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 298,
      "end_byte": 422,
      "text": "int main ( ) { int t , no ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & no ) ; function ( no ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 298,
          "end_byte": 301,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 302,
          "end_byte": 310,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 302,
              "end_byte": 306,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 307,
              "end_byte": 310,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 307,
                  "end_byte": 308,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 309,
                  "end_byte": 310,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 311,
          "end_byte": 422,
          "text": "{ int t , no ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & no ) ; function ( no ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 311,
              "end_byte": 312,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 313,
              "end_byte": 325,
              "text": "int t , no ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 313,
                  "end_byte": 316,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 317,
                  "end_byte": 318,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 321,
                  "end_byte": 323,
                  "text": "no",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 324,
                  "end_byte": 325,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 326,
              "end_byte": 348,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 326,
                  "end_byte": 346,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 326,
                      "end_byte": 331,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 332,
                      "end_byte": 346,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 332,
                          "end_byte": 333,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 334,
                          "end_byte": 338,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 334,
                              "end_byte": 335,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 335,
                              "end_byte": 337,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 337,
                              "end_byte": 338,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 339,
                          "end_byte": 340,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 341,
                          "end_byte": 344,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 341,
                              "end_byte": 342,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 343,
                              "end_byte": 344,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 345,
                          "end_byte": 346,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 347,
                  "end_byte": 348,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 349,
              "end_byte": 409,
              "text": "while ( t -- ) { scanf ( \"%d\" , & no ) ; function ( no ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 349,
                  "end_byte": 354,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 355,
                  "end_byte": 363,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 357,
                      "end_byte": 361,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 357,
                          "end_byte": 358,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 359,
                          "end_byte": 361,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 362,
                      "end_byte": 363,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 364,
                  "end_byte": 409,
                  "text": "{ scanf ( \"%d\" , & no ) ; function ( no ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 364,
                      "end_byte": 365,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 366,
                      "end_byte": 389,
                      "text": "scanf ( \"%d\" , & no ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 366,
                          "end_byte": 387,
                          "text": "scanf ( \"%d\" , & no )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 366,
                              "end_byte": 371,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 372,
                              "end_byte": 387,
                              "text": "( \"%d\" , & no )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 372,
                                  "end_byte": 373,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 374,
                                  "end_byte": 378,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 374,
                                      "end_byte": 375,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 375,
                                      "end_byte": 377,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 377,
                                      "end_byte": 378,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 381,
                                  "end_byte": 385,
                                  "text": "& no",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 381,
                                      "end_byte": 382,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 383,
                                      "end_byte": 385,
                                      "text": "no",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 386,
                                  "end_byte": 387,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 388,
                          "end_byte": 389,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 390,
                      "end_byte": 407,
                      "text": "function ( no ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 390,
                          "end_byte": 405,
                          "text": "function ( no )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 390,
                              "end_byte": 398,
                              "text": "function",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 399,
                              "end_byte": 405,
                              "text": "( no )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 399,
                                  "end_byte": 400,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 401,
                                  "end_byte": 403,
                                  "text": "no",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 404,
                                  "end_byte": 405,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 406,
                          "end_byte": 407,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 408,
                      "end_byte": 409,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 410,
              "end_byte": 420,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 410,
                  "end_byte": 416,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 417,
                  "end_byte": 418,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 419,
                  "end_byte": 420,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 421,
              "end_byte": 422,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}