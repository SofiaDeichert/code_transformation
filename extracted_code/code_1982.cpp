int max ( int a , int b ) { int ans ; ans = a > b ? a : b ; return ans ; } int len ( int i , int j , int cache_arr [ 101 ] [ 101 ] , int arr [ 100 ] [ 100 ] , int n ) { if ( i > n ) return 0 ; if ( cache_arr [ i ] [ j ] ) return cache_arr [ i ] [ j ] ; int value = 0 ; value = max ( len ( i + 1 , j , cache_arr , arr , n ) , len ( i + 1 , j + 1 , cache_arr , arr , n ) ) ; value += arr [ i ] [ j ] ; cache_arr [ i ] [ j ] = value ; return ( value ) ; } int main ( ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int n ; scanf ( "%d" , & n ) ; int cache_arr [ 101 ] [ 101 ] = { 0 } , arr [ 100 ] [ 100 ] = { 0 } ; int i , j ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & arr [ i ] [ j ] ) ; int ans = len ( 0 , 0 , cache_arr , arr , n ) ; printf ( "%d\n" , ans ) ; } return 0 ; }