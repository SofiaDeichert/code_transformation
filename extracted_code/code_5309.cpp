void handleCase ( ) ; void sum ( int * * triangle , int numLines , int currentLine , int column , int sum , int * largestSum ) ; int main ( int argc , char * argv [ ] ) { int numCases ; scanf ( "%d" , & numCases ) ; int i ; for ( i = 0 ; i < numCases ; i ++ ) handleCase ( ) ; return 0 ; } void handleCase ( ) { int numLines ; scanf ( "%d" , & numLines ) ; int * * triangle = ( int * * ) calloc ( numLines , sizeof ( int * ) ) ; int i , j ; for ( i = 0 ; i < numLines ; i ++ ) { triangle [ i ] = ( int * ) calloc ( ( i + 1 ) , sizeof ( int ) ) ; for ( j = 0 ; j < ( i + 1 ) ; j ++ ) scanf ( "%d" , & triangle [ i ] [ j ] ) ; } int largestSum = 0 ; sum ( triangle , numLines , 1 , 1 , 0 , & largestSum ) ; printf ( "%d\n" , largestSum ) ; } void sum ( int * * triangle , int numLines , int currentLine , int column , int currentSum , int * largestSum ) { currentSum += triangle [ currentLine - 1 ] [ column - 1 ] ; if ( currentLine == numLines ) { * largestSum = ( currentSum >= * largestSum ) ? currentSum : * largestSum ; } else { sum ( triangle , numLines , currentLine + 1 , column , currentSum , largestSum ) ; sum ( triangle , numLines , currentLine + 1 , column + 1 , currentSum , largestSum ) ; } }