int max ( int a , int b ) { if ( a > b ) return a ; return b ; } int cache [ 100 ] ; int trianglesum ( int n , int arr [ ] [ 100 ] , int i , int j ) { if ( i > n ) return 0 ; if ( cache [ i ] == 0 ) { int a1 = trianglesum ( n , arr , i + 1 , j ) + arr [ i ] [ j ] ; int a2 = trianglesum ( n , arr , i + 1 , j + 1 ) + arr [ i ] [ j ] ; cache [ i ] = max ( a1 , a2 ) ; } return cache [ i ] ; } void inputarray ( int n , int arr [ ] [ 100 ] ) { int i , j ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & arr [ i ] [ j ] ) ; } int main ( ) { int arr [ 100 ] [ 100 ] , t , n ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; memset ( arr , 0 , sizeof ( arr [ 0 ] [ 0 ] ) * 100 * 100 ) ; memset ( cache , 0 , 100 ) ; inputarray ( n , arr ) ; printf ( "%d\n" , trianglesum ( n , arr , 0 , 0 ) + 1 ) ; } return 0 ; }