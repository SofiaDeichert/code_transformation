int A [ 100 ] [ 100 ] = { 0 } , cache [ 100 ] [ 100 ] = { 0 } ; int max ( int i , int j ) { if ( i > j ) return ( i ) ; else return ( j ) ; } void initialize ( ) { int i , j ; for ( i = 0 ; i < 100 ; ++ i ) for ( j = 0 ; j < 100 ; j ++ ) cache [ i ] [ j ] = 0 ; } int sum ( int i , int j , int n ) { int t ; if ( cache [ i ] [ j ] != 0 ) return ( cache [ i ] [ j ] ) ; else { if ( i == n - 1 ) return ( A [ i ] [ j ] ) ; else { int t1 , t2 ; t1 = sum ( i + 1 , j , n ) ; t2 = sum ( i + 1 , j + 1 , n ) ; t = A [ i ] [ j ] + max ( t1 , t2 ) ; cache [ i ] [ j ] = t ; return ( t ) ; } } } int main ( ) { int t , l ; scanf ( "%d" , & t ) ; for ( l = 0 ; l < t ; ++ l ) { int n , i , j , s ; scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; ++ i ) for ( j = 0 ; j <= i ; ++ j ) scanf ( "%d" , & A [ i ] [ j ] ) ; initialize ( ) ; s = sum ( 0 , 0 , n ) ; printf ( "%d\n" , s ) ; } return ( 0 ) ; }