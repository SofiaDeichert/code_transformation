void maxsum ( int [ 100 ] [ 100 ] , int , int , int , int , int * ) ; int main ( ) { int i = 0 , n , arr [ 100 ] [ 100 ] , j , k , l , row , col , sum , max = 0 , arr1 [ 10000 ] ; int * p ; p = & max ; scanf ( "%d" , & n ) ; while ( i < n ) { scanf ( "%d" , & l ) ; for ( j = 0 ; j < l ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( "%d" , & arr [ j ] [ k ] ) ; } } row = 0 ; col = 0 ; sum = 0 ; maxsum ( arr , row , col , l , sum , p ) ; arr1 [ i ] = * p ; i ++ ; } for ( l = 0 ; l < i ; l ++ ) printf ( "%d\n" , arr1 [ l ] ) ; return 0 ; } void maxsum ( int arr [ 100 ] [ 100 ] , int row , int col , int l , int sum , int * p ) { int b , a = 0 ; if ( col == l ) { return ; } if ( row == l - 1 ) { b = sum + arr [ row ] [ col ] ; if ( b >= ( * p ) ) { * p = b ; } sum = sum - arr [ row ] [ col ] ; return ; } sum = sum + arr [ row ] [ col ] ; maxsum ( arr , row + 1 , col , l , sum , p ) ; maxsum ( arr , row + 1 , col + 1 , l , sum , p ) ; return ; }