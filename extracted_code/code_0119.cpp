int max ( int q , int r ) ; int main ( ) { int t , i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { int n , p , k ; scanf ( "%d" , & n ) ; int a [ n ] [ n ] , m [ n ] , b [ n ] , big ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; } for ( i = 0 ; i < n ; i ++ ) { for ( k = 0 ; k < i ; k ++ ) b [ k ] = m [ k ] ; for ( j = 0 ; j <= i ; j ++ ) { if ( i == 0 && j == 0 ) m [ 0 ] = a [ i ] [ j ] ; else { if ( j == 0 ) m [ j ] = b [ j ] + a [ i ] [ j ] ; else if ( j == i ) m [ j ] = b [ j - 1 ] + a [ i ] [ j ] ; else m [ j ] = max ( b [ j ] , b [ j - 1 ] ) + a [ i ] [ j ] ; } } } big = m [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { if ( m [ i ] > big ) big = m [ i ] ; } printf ( "%d\n" , big ) ; } } int max ( int q , int r ) { if ( q > r ) return q ; else return r ; }