{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 847,
  "text": "int max ( int x , int y ) { return x > y ? x : y ; } long findBest ( int triangle [ ] [ MAXROWS ] , long best [ ] [ MAXROWS ] , int i , int j , int rows ) { if ( i == rows - 1 ) return ( long ) triangle [ i ] [ j ] ; else if ( best [ i ] [ j ] != 0 ) { return best [ i ] [ j ] ; } return best [ i ] [ j ] = ( long ) ( triangle [ i ] [ j ] + max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) ) ) ; } int main ( ) { int t , n ; int triangle [ MAXROWS ] [ MAXROWS ] ; long best [ MAXROWS ] [ MAXROWS ] ; int i , j ; scanf ( \"%d \" , & t ) ; while ( t -- ) { scanf ( \"%d \" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; } } printf ( \"%ld\\n\" , findBest ( triangle , best , 0 , 0 , n ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 52,
      "text": "int max ( int x , int y ) { return x > y ? x : y ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "max ( int x , int y )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int x , int y )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int y",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 52,
          "text": "{ return x > y ? x : y ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 28,
              "end_byte": 50,
              "text": "return x > y ? x : y ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 28,
                  "end_byte": 34,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "conditional_expression",
                  "start_byte": 35,
                  "end_byte": 48,
                  "text": "x > y ? x : y",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 35,
                      "end_byte": 40,
                      "text": "x > y",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 35,
                          "end_byte": 36,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 37,
                          "end_byte": 38,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 39,
                          "end_byte": 40,
                          "text": "y",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "?",
                      "start_byte": 41,
                      "end_byte": 42,
                      "text": "?",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 43,
                      "end_byte": 44,
                      "text": "x",
                      "children": []
                    },
                    {
                      "type": ":",
                      "start_byte": 45,
                      "end_byte": 46,
                      "text": ":",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 47,
                      "end_byte": 48,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 51,
              "end_byte": 52,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 53,
      "end_byte": 456,
      "text": "long findBest ( int triangle [ ] [ MAXROWS ] , long best [ ] [ MAXROWS ] , int i , int j , int rows ) { if ( i == rows - 1 ) return ( long ) triangle [ i ] [ j ] ; else if ( best [ i ] [ j ] != 0 ) { return best [ i ] [ j ] ; } return best [ i ] [ j ] = ( long ) ( triangle [ i ] [ j ] + max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) ) ) ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 53,
          "end_byte": 57,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 53,
              "end_byte": 57,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 58,
          "end_byte": 154,
          "text": "findBest ( int triangle [ ] [ MAXROWS ] , long best [ ] [ MAXROWS ] , int i , int j , int rows )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 58,
              "end_byte": 66,
              "text": "findBest",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 67,
              "end_byte": 154,
              "text": "( int triangle [ ] [ MAXROWS ] , long best [ ] [ MAXROWS ] , int i , int j , int rows )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 69,
                  "end_byte": 97,
                  "text": "int triangle [ ] [ MAXROWS ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 69,
                      "end_byte": 72,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 73,
                      "end_byte": 97,
                      "text": "triangle [ ] [ MAXROWS ]",
                      "children": [
                        {
                          "type": "array_declarator",
                          "start_byte": 73,
                          "end_byte": 85,
                          "text": "triangle [ ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 73,
                              "end_byte": 81,
                              "text": "triangle",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 82,
                              "end_byte": 83,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start_byte": 86,
                          "end_byte": 87,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 88,
                          "end_byte": 95,
                          "text": "MAXROWS",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 100,
                  "end_byte": 125,
                  "text": "long best [ ] [ MAXROWS ]",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 100,
                      "end_byte": 104,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 100,
                          "end_byte": 104,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 105,
                      "end_byte": 125,
                      "text": "best [ ] [ MAXROWS ]",
                      "children": [
                        {
                          "type": "array_declarator",
                          "start_byte": 105,
                          "end_byte": 113,
                          "text": "best [ ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 105,
                              "end_byte": 109,
                              "text": "best",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 112,
                              "end_byte": 113,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 116,
                          "end_byte": 123,
                          "text": "MAXROWS",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 124,
                          "end_byte": 125,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 126,
                  "end_byte": 127,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 128,
                  "end_byte": 133,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 128,
                      "end_byte": 131,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 134,
                  "end_byte": 135,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 136,
                  "end_byte": 141,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 136,
                      "end_byte": 139,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 140,
                      "end_byte": 141,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 142,
                  "end_byte": 143,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 144,
                  "end_byte": 152,
                  "text": "int rows",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 144,
                      "end_byte": 147,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 148,
                      "end_byte": 152,
                      "text": "rows",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 153,
                  "end_byte": 154,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 155,
          "end_byte": 456,
          "text": "{ if ( i == rows - 1 ) return ( long ) triangle [ i ] [ j ] ; else if ( best [ i ] [ j ] != 0 ) { return best [ i ] [ j ] ; } return best [ i ] [ j ] = ( long ) ( triangle [ i ] [ j ] + max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) ) ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 155,
              "end_byte": 156,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 157,
              "end_byte": 280,
              "text": "if ( i == rows - 1 ) return ( long ) triangle [ i ] [ j ] ; else if ( best [ i ] [ j ] != 0 ) { return best [ i ] [ j ] ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 157,
                  "end_byte": 159,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 160,
                  "end_byte": 177,
                  "text": "( i == rows - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 160,
                      "end_byte": 161,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 162,
                      "end_byte": 175,
                      "text": "i == rows - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 162,
                          "end_byte": 163,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 164,
                          "end_byte": 166,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 167,
                          "end_byte": 175,
                          "text": "rows - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 167,
                              "end_byte": 171,
                              "text": "rows",
                              "children": []
                            },
                            {
                              "type": "-",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 178,
                  "end_byte": 216,
                  "text": "return ( long ) triangle [ i ] [ j ] ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 178,
                      "end_byte": 184,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "cast_expression",
                      "start_byte": 185,
                      "end_byte": 214,
                      "text": "( long ) triangle [ i ] [ j ]",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 185,
                          "end_byte": 186,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "type_descriptor",
                          "start_byte": 187,
                          "end_byte": 191,
                          "text": "long",
                          "children": [
                            {
                              "type": "sized_type_specifier",
                              "start_byte": 187,
                              "end_byte": 191,
                              "text": "long",
                              "children": [
                                {
                                  "type": "long",
                                  "start_byte": 187,
                                  "end_byte": 191,
                                  "text": "long",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 192,
                          "end_byte": 193,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 194,
                          "end_byte": 214,
                          "text": "triangle [ i ] [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 194,
                              "end_byte": 208,
                              "text": "triangle [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 194,
                                  "end_byte": 202,
                                  "text": "triangle",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 203,
                                  "end_byte": 208,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 203,
                                      "end_byte": 204,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 205,
                                      "end_byte": 206,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 207,
                                      "end_byte": 208,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 209,
                              "end_byte": 214,
                              "text": "[ j ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 211,
                                  "end_byte": 212,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 213,
                                  "end_byte": 214,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 215,
                      "end_byte": 216,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 217,
                  "end_byte": 280,
                  "text": "else if ( best [ i ] [ j ] != 0 ) { return best [ i ] [ j ] ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 217,
                      "end_byte": 221,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 222,
                      "end_byte": 280,
                      "text": "if ( best [ i ] [ j ] != 0 ) { return best [ i ] [ j ] ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 222,
                          "end_byte": 224,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 225,
                          "end_byte": 250,
                          "text": "( best [ i ] [ j ] != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 225,
                              "end_byte": 226,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 227,
                              "end_byte": 248,
                              "text": "best [ i ] [ j ] != 0",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 227,
                                  "end_byte": 243,
                                  "text": "best [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 227,
                                      "end_byte": 237,
                                      "text": "best [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 227,
                                          "end_byte": 231,
                                          "text": "best",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 232,
                                          "end_byte": 237,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 232,
                                              "end_byte": 233,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 234,
                                              "end_byte": 235,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 236,
                                              "end_byte": 237,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 238,
                                      "end_byte": 243,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 238,
                                          "end_byte": 239,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 240,
                                          "end_byte": 241,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 242,
                                          "end_byte": 243,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 244,
                                  "end_byte": 246,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 247,
                                  "end_byte": 248,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 249,
                              "end_byte": 250,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 251,
                          "end_byte": 280,
                          "text": "{ return best [ i ] [ j ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 251,
                              "end_byte": 252,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 253,
                              "end_byte": 278,
                              "text": "return best [ i ] [ j ] ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 253,
                                  "end_byte": 259,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 260,
                                  "end_byte": 276,
                                  "text": "best [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 260,
                                      "end_byte": 270,
                                      "text": "best [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 260,
                                          "end_byte": 264,
                                          "text": "best",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 265,
                                          "end_byte": 270,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 265,
                                              "end_byte": 266,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 267,
                                              "end_byte": 268,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 269,
                                              "end_byte": 270,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 271,
                                      "end_byte": 276,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 271,
                                          "end_byte": 272,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 273,
                                          "end_byte": 274,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 275,
                                          "end_byte": 276,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 277,
                                  "end_byte": 278,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 279,
                              "end_byte": 280,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 281,
              "end_byte": 454,
              "text": "return best [ i ] [ j ] = ( long ) ( triangle [ i ] [ j ] + max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) ) ) ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 281,
                  "end_byte": 287,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 288,
                  "end_byte": 452,
                  "text": "best [ i ] [ j ] = ( long ) ( triangle [ i ] [ j ] + max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) ) )",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 288,
                      "end_byte": 304,
                      "text": "best [ i ] [ j ]",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 288,
                          "end_byte": 298,
                          "text": "best [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 288,
                              "end_byte": 292,
                              "text": "best",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 293,
                              "end_byte": 298,
                              "text": "[ i ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 293,
                                  "end_byte": 294,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 295,
                                  "end_byte": 296,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 297,
                                  "end_byte": 298,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 299,
                          "end_byte": 304,
                          "text": "[ j ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 299,
                              "end_byte": 300,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 301,
                              "end_byte": 302,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 303,
                              "end_byte": 304,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 305,
                      "end_byte": 306,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "cast_expression",
                      "start_byte": 307,
                      "end_byte": 452,
                      "text": "( long ) ( triangle [ i ] [ j ] + max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) ) )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 307,
                          "end_byte": 308,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "type_descriptor",
                          "start_byte": 309,
                          "end_byte": 313,
                          "text": "long",
                          "children": [
                            {
                              "type": "sized_type_specifier",
                              "start_byte": 309,
                              "end_byte": 313,
                              "text": "long",
                              "children": [
                                {
                                  "type": "long",
                                  "start_byte": 309,
                                  "end_byte": 313,
                                  "text": "long",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 314,
                          "end_byte": 315,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 316,
                          "end_byte": 452,
                          "text": "( triangle [ i ] [ j ] + max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 316,
                              "end_byte": 317,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 318,
                              "end_byte": 450,
                              "text": "triangle [ i ] [ j ] + max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) )",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 318,
                                  "end_byte": 338,
                                  "text": "triangle [ i ] [ j ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 318,
                                      "end_byte": 332,
                                      "text": "triangle [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 318,
                                          "end_byte": 326,
                                          "text": "triangle",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 327,
                                          "end_byte": 332,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 327,
                                              "end_byte": 328,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 329,
                                              "end_byte": 330,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 331,
                                              "end_byte": 332,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 333,
                                      "end_byte": 338,
                                      "text": "[ j ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 333,
                                          "end_byte": 334,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 335,
                                          "end_byte": 336,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 339,
                                  "end_byte": 340,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 341,
                                  "end_byte": 450,
                                  "text": "max ( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 341,
                                      "end_byte": 344,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 345,
                                      "end_byte": 450,
                                      "text": "( findBest ( triangle , best , i + 1 , j , rows ) , findBest ( triangle , best , i + 1 , j + 1 , rows ) )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 345,
                                          "end_byte": 346,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 347,
                                          "end_byte": 394,
                                          "text": "findBest ( triangle , best , i + 1 , j , rows )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 347,
                                              "end_byte": 355,
                                              "text": "findBest",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 356,
                                              "end_byte": 394,
                                              "text": "( triangle , best , i + 1 , j , rows )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 356,
                                                  "end_byte": 357,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 358,
                                                  "end_byte": 366,
                                                  "text": "triangle",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 367,
                                                  "end_byte": 368,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 369,
                                                  "end_byte": 373,
                                                  "text": "best",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 374,
                                                  "end_byte": 375,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 376,
                                                  "end_byte": 381,
                                                  "text": "i + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 376,
                                                      "end_byte": 377,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 378,
                                                      "end_byte": 379,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 380,
                                                      "end_byte": 381,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 382,
                                                  "end_byte": 383,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 384,
                                                  "end_byte": 385,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 386,
                                                  "end_byte": 387,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 388,
                                                  "end_byte": 392,
                                                  "text": "rows",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 393,
                                                  "end_byte": 394,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 395,
                                          "end_byte": 396,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 397,
                                          "end_byte": 448,
                                          "text": "findBest ( triangle , best , i + 1 , j + 1 , rows )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 397,
                                              "end_byte": 405,
                                              "text": "findBest",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 406,
                                              "end_byte": 448,
                                              "text": "( triangle , best , i + 1 , j + 1 , rows )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 406,
                                                  "end_byte": 407,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 408,
                                                  "end_byte": 416,
                                                  "text": "triangle",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 417,
                                                  "end_byte": 418,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 419,
                                                  "end_byte": 423,
                                                  "text": "best",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 424,
                                                  "end_byte": 425,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 426,
                                                  "end_byte": 431,
                                                  "text": "i + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 426,
                                                      "end_byte": 427,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 428,
                                                      "end_byte": 429,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 430,
                                                      "end_byte": 431,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 432,
                                                  "end_byte": 433,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 434,
                                                  "end_byte": 439,
                                                  "text": "j + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 434,
                                                      "end_byte": 435,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 436,
                                                      "end_byte": 437,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 438,
                                                      "end_byte": 439,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 440,
                                                  "end_byte": 441,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 442,
                                                  "end_byte": 446,
                                                  "text": "rows",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 447,
                                                  "end_byte": 448,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 449,
                                          "end_byte": 450,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 451,
                              "end_byte": 452,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 453,
                  "end_byte": 454,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 455,
              "end_byte": 456,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 457,
      "end_byte": 847,
      "text": "int main ( ) { int t , n ; int triangle [ MAXROWS ] [ MAXROWS ] ; long best [ MAXROWS ] [ MAXROWS ] ; int i , j ; scanf ( \"%d \" , & t ) ; while ( t -- ) { scanf ( \"%d \" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; } } printf ( \"%ld\\n\" , findBest ( triangle , best , 0 , 0 , n ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 457,
          "end_byte": 460,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 461,
          "end_byte": 469,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 461,
              "end_byte": 465,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 466,
              "end_byte": 469,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 466,
                  "end_byte": 467,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 468,
                  "end_byte": 469,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 470,
          "end_byte": 847,
          "text": "{ int t , n ; int triangle [ MAXROWS ] [ MAXROWS ] ; long best [ MAXROWS ] [ MAXROWS ] ; int i , j ; scanf ( \"%d \" , & t ) ; while ( t -- ) { scanf ( \"%d \" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; } } printf ( \"%ld\\n\" , findBest ( triangle , best , 0 , 0 , n ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 470,
              "end_byte": 471,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 472,
              "end_byte": 483,
              "text": "int t , n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 472,
                  "end_byte": 475,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 476,
                  "end_byte": 477,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 478,
                  "end_byte": 479,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 480,
                  "end_byte": 481,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 482,
                  "end_byte": 483,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 484,
              "end_byte": 522,
              "text": "int triangle [ MAXROWS ] [ MAXROWS ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 484,
                  "end_byte": 487,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 488,
                  "end_byte": 520,
                  "text": "triangle [ MAXROWS ] [ MAXROWS ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 488,
                      "end_byte": 508,
                      "text": "triangle [ MAXROWS ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 488,
                          "end_byte": 496,
                          "text": "triangle",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 497,
                          "end_byte": 498,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 499,
                          "end_byte": 506,
                          "text": "MAXROWS",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 507,
                          "end_byte": 508,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 509,
                      "end_byte": 510,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 511,
                      "end_byte": 518,
                      "text": "MAXROWS",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 519,
                      "end_byte": 520,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 521,
                  "end_byte": 522,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 523,
              "end_byte": 558,
              "text": "long best [ MAXROWS ] [ MAXROWS ] ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 523,
                  "end_byte": 527,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 523,
                      "end_byte": 527,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 528,
                  "end_byte": 556,
                  "text": "best [ MAXROWS ] [ MAXROWS ]",
                  "children": [
                    {
                      "type": "array_declarator",
                      "start_byte": 528,
                      "end_byte": 544,
                      "text": "best [ MAXROWS ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 528,
                          "end_byte": 532,
                          "text": "best",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 533,
                          "end_byte": 534,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 535,
                          "end_byte": 542,
                          "text": "MAXROWS",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 543,
                          "end_byte": 544,
                          "text": "]",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "[",
                      "start_byte": 545,
                      "end_byte": 546,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 547,
                      "end_byte": 554,
                      "text": "MAXROWS",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 555,
                      "end_byte": 556,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 557,
                  "end_byte": 558,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 559,
              "end_byte": 570,
              "text": "int i , j ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 559,
                  "end_byte": 562,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 563,
                  "end_byte": 564,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 565,
                  "end_byte": 566,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 567,
                  "end_byte": 568,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 569,
                  "end_byte": 570,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 571,
              "end_byte": 594,
              "text": "scanf ( \"%d \" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 571,
                  "end_byte": 592,
                  "text": "scanf ( \"%d \" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 571,
                      "end_byte": 576,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 577,
                      "end_byte": 592,
                      "text": "( \"%d \" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 577,
                          "end_byte": 578,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 579,
                          "end_byte": 584,
                          "text": "\"%d \"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 579,
                              "end_byte": 580,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 580,
                              "end_byte": 583,
                              "text": "%d ",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 583,
                              "end_byte": 584,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 585,
                          "end_byte": 586,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 587,
                          "end_byte": 590,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 587,
                              "end_byte": 588,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 589,
                              "end_byte": 590,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 591,
                          "end_byte": 592,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 593,
                  "end_byte": 594,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 595,
              "end_byte": 834,
              "text": "while ( t -- ) { scanf ( \"%d \" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; } } printf ( \"%ld\\n\" , findBest ( triangle , best , 0 , 0 , n ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 595,
                  "end_byte": 600,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 601,
                  "end_byte": 609,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 601,
                      "end_byte": 602,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 603,
                      "end_byte": 607,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 603,
                          "end_byte": 604,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 605,
                          "end_byte": 607,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 608,
                      "end_byte": 609,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 610,
                  "end_byte": 834,
                  "text": "{ scanf ( \"%d \" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; } } printf ( \"%ld\\n\" , findBest ( triangle , best , 0 , 0 , n ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 610,
                      "end_byte": 611,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 612,
                      "end_byte": 635,
                      "text": "scanf ( \"%d \" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 612,
                          "end_byte": 633,
                          "text": "scanf ( \"%d \" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 612,
                              "end_byte": 617,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 618,
                              "end_byte": 633,
                              "text": "( \"%d \" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 618,
                                  "end_byte": 619,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 620,
                                  "end_byte": 625,
                                  "text": "\"%d \"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 620,
                                      "end_byte": 621,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 621,
                                      "end_byte": 624,
                                      "text": "%d ",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 624,
                                      "end_byte": 625,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 626,
                                  "end_byte": 627,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 628,
                                  "end_byte": 631,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 628,
                                      "end_byte": 629,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 630,
                                      "end_byte": 631,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 632,
                                  "end_byte": 633,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 634,
                          "end_byte": 635,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 636,
                      "end_byte": 768,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 636,
                          "end_byte": 639,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 640,
                          "end_byte": 641,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 642,
                          "end_byte": 647,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 642,
                              "end_byte": 643,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 644,
                              "end_byte": 645,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 646,
                              "end_byte": 647,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 648,
                          "end_byte": 649,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 650,
                          "end_byte": 655,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 650,
                              "end_byte": 651,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 652,
                              "end_byte": 653,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 654,
                              "end_byte": 655,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 656,
                          "end_byte": 657,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 658,
                          "end_byte": 662,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 658,
                              "end_byte": 659,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 660,
                              "end_byte": 662,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 663,
                          "end_byte": 664,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 665,
                          "end_byte": 768,
                          "text": "{ for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 665,
                              "end_byte": 666,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 667,
                              "end_byte": 766,
                              "text": "for ( j = 0 ; j <= i ; j ++ ) { best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 667,
                                  "end_byte": 670,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 671,
                                  "end_byte": 672,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 673,
                                  "end_byte": 678,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 673,
                                      "end_byte": 674,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 675,
                                      "end_byte": 676,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 677,
                                      "end_byte": 678,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 679,
                                  "end_byte": 680,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 681,
                                  "end_byte": 687,
                                  "text": "j <= i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 681,
                                      "end_byte": 682,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 683,
                                      "end_byte": 685,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 686,
                                      "end_byte": 687,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 688,
                                  "end_byte": 689,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 690,
                                  "end_byte": 694,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 690,
                                      "end_byte": 691,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 692,
                                      "end_byte": 694,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 695,
                                  "end_byte": 696,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 697,
                                  "end_byte": 766,
                                  "text": "{ best [ i ] [ j ] = 0 ; scanf ( \"%d \" , & triangle [ i ] [ j ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 697,
                                      "end_byte": 698,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 699,
                                      "end_byte": 721,
                                      "text": "best [ i ] [ j ] = 0 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 699,
                                          "end_byte": 719,
                                          "text": "best [ i ] [ j ] = 0",
                                          "children": [
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 699,
                                              "end_byte": 715,
                                              "text": "best [ i ] [ j ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 699,
                                                  "end_byte": 709,
                                                  "text": "best [ i ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 699,
                                                      "end_byte": 703,
                                                      "text": "best",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 704,
                                                      "end_byte": 709,
                                                      "text": "[ i ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 704,
                                                          "end_byte": 705,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 706,
                                                          "end_byte": 707,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 708,
                                                          "end_byte": 709,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 710,
                                                  "end_byte": 715,
                                                  "text": "[ j ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 710,
                                                      "end_byte": 711,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 712,
                                                      "end_byte": 713,
                                                      "text": "j",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 714,
                                                      "end_byte": 715,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 716,
                                              "end_byte": 717,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 718,
                                              "end_byte": 719,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 720,
                                          "end_byte": 721,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 722,
                                      "end_byte": 764,
                                      "text": "scanf ( \"%d \" , & triangle [ i ] [ j ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 722,
                                          "end_byte": 762,
                                          "text": "scanf ( \"%d \" , & triangle [ i ] [ j ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 722,
                                              "end_byte": 727,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 728,
                                              "end_byte": 762,
                                              "text": "( \"%d \" , & triangle [ i ] [ j ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 728,
                                                  "end_byte": 729,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 730,
                                                  "end_byte": 735,
                                                  "text": "\"%d \"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 730,
                                                      "end_byte": 731,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 731,
                                                      "end_byte": 734,
                                                      "text": "%d ",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 734,
                                                      "end_byte": 735,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 736,
                                                  "end_byte": 737,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 738,
                                                  "end_byte": 760,
                                                  "text": "& triangle [ i ] [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 738,
                                                      "end_byte": 739,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 740,
                                                      "end_byte": 760,
                                                      "text": "triangle [ i ] [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 740,
                                                          "end_byte": 754,
                                                          "text": "triangle [ i ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 740,
                                                              "end_byte": 748,
                                                              "text": "triangle",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 749,
                                                              "end_byte": 754,
                                                              "text": "[ i ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 749,
                                                                  "end_byte": 750,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 751,
                                                                  "end_byte": 752,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 753,
                                                                  "end_byte": 754,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 755,
                                                          "end_byte": 760,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 755,
                                                              "end_byte": 756,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 757,
                                                              "end_byte": 758,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 759,
                                                              "end_byte": 760,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 761,
                                                  "end_byte": 762,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 763,
                                          "end_byte": 764,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 765,
                                      "end_byte": 766,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 767,
                              "end_byte": 768,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 769,
                      "end_byte": 832,
                      "text": "printf ( \"%ld\\n\" , findBest ( triangle , best , 0 , 0 , n ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 769,
                          "end_byte": 830,
                          "text": "printf ( \"%ld\\n\" , findBest ( triangle , best , 0 , 0 , n ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 769,
                              "end_byte": 775,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 776,
                              "end_byte": 830,
                              "text": "( \"%ld\\n\" , findBest ( triangle , best , 0 , 0 , n ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 776,
                                  "end_byte": 777,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 778,
                                  "end_byte": 785,
                                  "text": "\"%ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 778,
                                      "end_byte": 779,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 779,
                                      "end_byte": 782,
                                      "text": "%ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 782,
                                      "end_byte": 784,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 784,
                                      "end_byte": 785,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 786,
                                  "end_byte": 787,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 788,
                                  "end_byte": 828,
                                  "text": "findBest ( triangle , best , 0 , 0 , n )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 788,
                                      "end_byte": 796,
                                      "text": "findBest",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 797,
                                      "end_byte": 828,
                                      "text": "( triangle , best , 0 , 0 , n )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 797,
                                          "end_byte": 798,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 799,
                                          "end_byte": 807,
                                          "text": "triangle",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 808,
                                          "end_byte": 809,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 810,
                                          "end_byte": 814,
                                          "text": "best",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 815,
                                          "end_byte": 816,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 817,
                                          "end_byte": 818,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 819,
                                          "end_byte": 820,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 821,
                                          "end_byte": 822,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 823,
                                          "end_byte": 824,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 825,
                                          "end_byte": 826,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 827,
                                          "end_byte": 828,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 829,
                                  "end_byte": 830,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 831,
                          "end_byte": 832,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 833,
                      "end_byte": 834,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 835,
              "end_byte": 845,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 835,
                  "end_byte": 841,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 842,
                  "end_byte": 843,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 844,
                  "end_byte": 845,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 846,
              "end_byte": 847,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}