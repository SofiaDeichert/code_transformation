{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 557,
  "text": "int tree [ 5050 ] ; int n ; int find_sum ( int root ) { int l , r ; if ( root >= n ) { return 0 ; } l = root * 2 + 1 ; r = l + 1 ; if ( root * 2 + 1 < n ) { l = tree [ l ] + find_sum ( l ) ; r = tree [ r ] + find_sum ( r ) ; return l > r ? l : r ; } return 0 ; } int main ( int argc , char const * argv [ ] ) { int i , j , T ; scanf ( \"%d\" , & T ) ; for ( j = 0 ; j < T ; ++ j ) { scanf ( \"%d\" , & n ) ; n = n * ( ( 1 + n ) / 2 ) ; for ( i = 0 ; i < n ; ++ i ) scanf ( \"%d\" , & tree [ i ] ) ; printf ( \"%d\\n\" , tree [ 0 ] + find_sum ( 0 ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 19,
      "text": "int tree [ 5050 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "tree [ 5050 ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "tree",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 9,
              "end_byte": 10,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 11,
              "end_byte": 15,
              "text": "5050",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 16,
              "end_byte": 17,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 18,
          "end_byte": 19,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 20,
      "end_byte": 27,
      "text": "int n ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 20,
          "end_byte": 23,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 24,
          "end_byte": 25,
          "text": "n",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 26,
          "end_byte": 27,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 28,
      "end_byte": 262,
      "text": "int find_sum ( int root ) { int l , r ; if ( root >= n ) { return 0 ; } l = root * 2 + 1 ; r = l + 1 ; if ( root * 2 + 1 < n ) { l = tree [ l ] + find_sum ( l ) ; r = tree [ r ] + find_sum ( r ) ; return l > r ? l : r ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 28,
          "end_byte": 31,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 32,
          "end_byte": 53,
          "text": "find_sum ( int root )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 32,
              "end_byte": 40,
              "text": "find_sum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 41,
              "end_byte": 53,
              "text": "( int root )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 43,
                  "end_byte": 51,
                  "text": "int root",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 43,
                      "end_byte": 46,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 47,
                      "end_byte": 51,
                      "text": "root",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 54,
          "end_byte": 262,
          "text": "{ int l , r ; if ( root >= n ) { return 0 ; } l = root * 2 + 1 ; r = l + 1 ; if ( root * 2 + 1 < n ) { l = tree [ l ] + find_sum ( l ) ; r = tree [ r ] + find_sum ( r ) ; return l > r ? l : r ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 54,
              "end_byte": 55,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 56,
              "end_byte": 67,
              "text": "int l , r ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 56,
                  "end_byte": 59,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": "r",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 66,
                  "end_byte": 67,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 68,
              "end_byte": 99,
              "text": "if ( root >= n ) { return 0 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 68,
                  "end_byte": 70,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 71,
                  "end_byte": 84,
                  "text": "( root >= n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 71,
                      "end_byte": 72,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 73,
                      "end_byte": 82,
                      "text": "root >= n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 73,
                          "end_byte": 77,
                          "text": "root",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 78,
                          "end_byte": 80,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 85,
                  "end_byte": 99,
                  "text": "{ return 0 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 85,
                      "end_byte": 86,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 87,
                      "end_byte": 97,
                      "text": "return 0 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 87,
                          "end_byte": 93,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 100,
              "end_byte": 118,
              "text": "l = root * 2 + 1 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 100,
                  "end_byte": 116,
                  "text": "l = root * 2 + 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": "l",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 104,
                      "end_byte": 116,
                      "text": "root * 2 + 1",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 104,
                          "end_byte": 112,
                          "text": "root * 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 104,
                              "end_byte": 108,
                              "text": "root",
                              "children": []
                            },
                            {
                              "type": "*",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 111,
                              "end_byte": 112,
                              "text": "2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "+",
                          "start_byte": 113,
                          "end_byte": 114,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 115,
                          "end_byte": 116,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 117,
                  "end_byte": 118,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 119,
              "end_byte": 130,
              "text": "r = l + 1 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 119,
                  "end_byte": 128,
                  "text": "r = l + 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "r",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 123,
                      "end_byte": 128,
                      "text": "l + 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": "l",
                          "children": []
                        },
                        {
                          "type": "+",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 127,
                          "end_byte": 128,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 129,
                  "end_byte": 130,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 131,
              "end_byte": 249,
              "text": "if ( root * 2 + 1 < n ) { l = tree [ l ] + find_sum ( l ) ; r = tree [ r ] + find_sum ( r ) ; return l > r ? l : r ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 131,
                  "end_byte": 133,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 134,
                  "end_byte": 154,
                  "text": "( root * 2 + 1 < n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 134,
                      "end_byte": 135,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 136,
                      "end_byte": 152,
                      "text": "root * 2 + 1 < n",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 136,
                          "end_byte": 148,
                          "text": "root * 2 + 1",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start_byte": 136,
                              "end_byte": 144,
                              "text": "root * 2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 136,
                                  "end_byte": 140,
                                  "text": "root",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 141,
                                  "end_byte": 142,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 143,
                                  "end_byte": 144,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "<",
                          "start_byte": 149,
                          "end_byte": 150,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 151,
                          "end_byte": 152,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 153,
                      "end_byte": 154,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 155,
                  "end_byte": 249,
                  "text": "{ l = tree [ l ] + find_sum ( l ) ; r = tree [ r ] + find_sum ( r ) ; return l > r ? l : r ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 155,
                      "end_byte": 156,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 157,
                      "end_byte": 190,
                      "text": "l = tree [ l ] + find_sum ( l ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 157,
                          "end_byte": 188,
                          "text": "l = tree [ l ] + find_sum ( l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 159,
                              "end_byte": 160,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 161,
                              "end_byte": 188,
                              "text": "tree [ l ] + find_sum ( l )",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 161,
                                  "end_byte": 171,
                                  "text": "tree [ l ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 161,
                                      "end_byte": 165,
                                      "text": "tree",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 166,
                                      "end_byte": 171,
                                      "text": "[ l ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 166,
                                          "end_byte": 167,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 168,
                                          "end_byte": 169,
                                          "text": "l",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 170,
                                          "end_byte": 171,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 174,
                                  "end_byte": 188,
                                  "text": "find_sum ( l )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 174,
                                      "end_byte": 182,
                                      "text": "find_sum",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 183,
                                      "end_byte": 188,
                                      "text": "( l )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 183,
                                          "end_byte": 184,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 185,
                                          "end_byte": 186,
                                          "text": "l",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 187,
                                          "end_byte": 188,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 189,
                          "end_byte": 190,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 191,
                      "end_byte": 224,
                      "text": "r = tree [ r ] + find_sum ( r ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 191,
                          "end_byte": 222,
                          "text": "r = tree [ r ] + find_sum ( r )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "r",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 195,
                              "end_byte": 222,
                              "text": "tree [ r ] + find_sum ( r )",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 195,
                                  "end_byte": 205,
                                  "text": "tree [ r ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 195,
                                      "end_byte": 199,
                                      "text": "tree",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 200,
                                      "end_byte": 205,
                                      "text": "[ r ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 200,
                                          "end_byte": 201,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 202,
                                          "end_byte": 203,
                                          "text": "r",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 204,
                                          "end_byte": 205,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 206,
                                  "end_byte": 207,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 208,
                                  "end_byte": 222,
                                  "text": "find_sum ( r )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 208,
                                      "end_byte": 216,
                                      "text": "find_sum",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 217,
                                      "end_byte": 222,
                                      "text": "( r )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 217,
                                          "end_byte": 218,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 219,
                                          "end_byte": 220,
                                          "text": "r",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 221,
                                          "end_byte": 222,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 223,
                          "end_byte": 224,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 225,
                      "end_byte": 247,
                      "text": "return l > r ? l : r ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 225,
                          "end_byte": 231,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "conditional_expression",
                          "start_byte": 232,
                          "end_byte": 245,
                          "text": "l > r ? l : r",
                          "children": [
                            {
                              "type": "binary_expression",
                              "start_byte": 232,
                              "end_byte": 237,
                              "text": "l > r",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 232,
                                  "end_byte": 233,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 234,
                                  "end_byte": 235,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 236,
                                  "end_byte": 237,
                                  "text": "r",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "?",
                              "start_byte": 238,
                              "end_byte": 239,
                              "text": "?",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 240,
                              "end_byte": 241,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": ":",
                              "start_byte": 242,
                              "end_byte": 243,
                              "text": ":",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 244,
                              "end_byte": 245,
                              "text": "r",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 246,
                          "end_byte": 247,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 248,
                      "end_byte": 249,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 250,
              "end_byte": 260,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 250,
                  "end_byte": 256,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 257,
                  "end_byte": 258,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 259,
                  "end_byte": 260,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 261,
              "end_byte": 262,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 263,
      "end_byte": 557,
      "text": "int main ( int argc , char const * argv [ ] ) { int i , j , T ; scanf ( \"%d\" , & T ) ; for ( j = 0 ; j < T ; ++ j ) { scanf ( \"%d\" , & n ) ; n = n * ( ( 1 + n ) / 2 ) ; for ( i = 0 ; i < n ; ++ i ) scanf ( \"%d\" , & tree [ i ] ) ; printf ( \"%d\\n\" , tree [ 0 ] + find_sum ( 0 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 263,
          "end_byte": 266,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 267,
          "end_byte": 308,
          "text": "main ( int argc , char const * argv [ ] )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 267,
              "end_byte": 271,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 272,
              "end_byte": 308,
              "text": "( int argc , char const * argv [ ] )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 272,
                  "end_byte": 273,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 274,
                  "end_byte": 282,
                  "text": "int argc",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 274,
                      "end_byte": 277,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 278,
                      "end_byte": 282,
                      "text": "argc",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 283,
                  "end_byte": 284,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 285,
                  "end_byte": 306,
                  "text": "char const * argv [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 285,
                      "end_byte": 289,
                      "text": "char",
                      "children": []
                    },
                    {
                      "type": "type_qualifier",
                      "start_byte": 290,
                      "end_byte": 295,
                      "text": "const",
                      "children": [
                        {
                          "type": "const",
                          "start_byte": 290,
                          "end_byte": 295,
                          "text": "const",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 296,
                      "end_byte": 306,
                      "text": "* argv [ ]",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 296,
                          "end_byte": 297,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 298,
                          "end_byte": 306,
                          "text": "argv [ ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 298,
                              "end_byte": 302,
                              "text": "argv",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 303,
                              "end_byte": 304,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 305,
                              "end_byte": 306,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 307,
                  "end_byte": 308,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 309,
          "end_byte": 557,
          "text": "{ int i , j , T ; scanf ( \"%d\" , & T ) ; for ( j = 0 ; j < T ; ++ j ) { scanf ( \"%d\" , & n ) ; n = n * ( ( 1 + n ) / 2 ) ; for ( i = 0 ; i < n ; ++ i ) scanf ( \"%d\" , & tree [ i ] ) ; printf ( \"%d\\n\" , tree [ 0 ] + find_sum ( 0 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 309,
              "end_byte": 310,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 311,
              "end_byte": 326,
              "text": "int i , j , T ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 311,
                  "end_byte": 314,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 315,
                  "end_byte": 316,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 317,
                  "end_byte": 318,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 319,
                  "end_byte": 320,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 321,
                  "end_byte": 322,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 323,
                  "end_byte": 324,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 325,
                  "end_byte": 326,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 327,
              "end_byte": 349,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 327,
                  "end_byte": 347,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 327,
                      "end_byte": 332,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 333,
                      "end_byte": 347,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 333,
                          "end_byte": 334,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 335,
                          "end_byte": 339,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 335,
                              "end_byte": 336,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 336,
                              "end_byte": 338,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 338,
                              "end_byte": 339,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 340,
                          "end_byte": 341,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 342,
                          "end_byte": 345,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 342,
                              "end_byte": 343,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 344,
                              "end_byte": 345,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 346,
                          "end_byte": 347,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 348,
                  "end_byte": 349,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 350,
              "end_byte": 544,
              "text": "for ( j = 0 ; j < T ; ++ j ) { scanf ( \"%d\" , & n ) ; n = n * ( ( 1 + n ) / 2 ) ; for ( i = 0 ; i < n ; ++ i ) scanf ( \"%d\" , & tree [ i ] ) ; printf ( \"%d\\n\" , tree [ 0 ] + find_sum ( 0 ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 350,
                  "end_byte": 353,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 354,
                  "end_byte": 355,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 356,
                  "end_byte": 361,
                  "text": "j = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 356,
                      "end_byte": 357,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 358,
                      "end_byte": 359,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 360,
                      "end_byte": 361,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 362,
                  "end_byte": 363,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 364,
                  "end_byte": 369,
                  "text": "j < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 364,
                      "end_byte": 365,
                      "text": "j",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 366,
                      "end_byte": 367,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 368,
                      "end_byte": 369,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 372,
                  "end_byte": 376,
                  "text": "++ j",
                  "children": [
                    {
                      "type": "++",
                      "start_byte": 372,
                      "end_byte": 374,
                      "text": "++",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 375,
                      "end_byte": 376,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 377,
                  "end_byte": 378,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 379,
                  "end_byte": 544,
                  "text": "{ scanf ( \"%d\" , & n ) ; n = n * ( ( 1 + n ) / 2 ) ; for ( i = 0 ; i < n ; ++ i ) scanf ( \"%d\" , & tree [ i ] ) ; printf ( \"%d\\n\" , tree [ 0 ] + find_sum ( 0 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 379,
                      "end_byte": 380,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 381,
                      "end_byte": 403,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 381,
                          "end_byte": 401,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 381,
                              "end_byte": 386,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 387,
                              "end_byte": 401,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 387,
                                  "end_byte": 388,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 389,
                                  "end_byte": 393,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 389,
                                      "end_byte": 390,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 390,
                                      "end_byte": 392,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 392,
                                      "end_byte": 393,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 394,
                                  "end_byte": 395,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 396,
                                  "end_byte": 399,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 396,
                                      "end_byte": 397,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 398,
                                      "end_byte": 399,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 400,
                                  "end_byte": 401,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 402,
                          "end_byte": 403,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 404,
                      "end_byte": 431,
                      "text": "n = n * ( ( 1 + n ) / 2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 404,
                          "end_byte": 429,
                          "text": "n = n * ( ( 1 + n ) / 2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 404,
                              "end_byte": 405,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 406,
                              "end_byte": 407,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 408,
                              "end_byte": 429,
                              "text": "n * ( ( 1 + n ) / 2 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 408,
                                  "end_byte": 409,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 410,
                                  "end_byte": 411,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 412,
                                  "end_byte": 429,
                                  "text": "( ( 1 + n ) / 2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 412,
                                      "end_byte": 413,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 414,
                                      "end_byte": 427,
                                      "text": "( 1 + n ) / 2",
                                      "children": [
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 414,
                                          "end_byte": 423,
                                          "text": "( 1 + n )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 414,
                                              "end_byte": 415,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 416,
                                              "end_byte": 421,
                                              "text": "1 + n",
                                              "children": [
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 416,
                                                  "end_byte": 417,
                                                  "text": "1",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 418,
                                                  "end_byte": 419,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 420,
                                                  "end_byte": 421,
                                                  "text": "n",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 422,
                                              "end_byte": 423,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 424,
                                          "end_byte": 425,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 426,
                                          "end_byte": 427,
                                          "text": "2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 428,
                                      "end_byte": 429,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 430,
                          "end_byte": 431,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 432,
                      "end_byte": 492,
                      "text": "for ( i = 0 ; i < n ; ++ i ) scanf ( \"%d\" , & tree [ i ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 432,
                          "end_byte": 435,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 436,
                          "end_byte": 437,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 438,
                          "end_byte": 443,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 438,
                              "end_byte": 439,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 440,
                              "end_byte": 441,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 442,
                              "end_byte": 443,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 444,
                          "end_byte": 445,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 446,
                          "end_byte": 451,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 446,
                              "end_byte": 447,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 448,
                              "end_byte": 449,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 450,
                              "end_byte": 451,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 452,
                          "end_byte": 453,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 454,
                          "end_byte": 458,
                          "text": "++ i",
                          "children": [
                            {
                              "type": "++",
                              "start_byte": 454,
                              "end_byte": 456,
                              "text": "++",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 457,
                              "end_byte": 458,
                              "text": "i",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 459,
                          "end_byte": 460,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 461,
                          "end_byte": 492,
                          "text": "scanf ( \"%d\" , & tree [ i ] ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 461,
                              "end_byte": 490,
                              "text": "scanf ( \"%d\" , & tree [ i ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 461,
                                  "end_byte": 466,
                                  "text": "scanf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 467,
                                  "end_byte": 490,
                                  "text": "( \"%d\" , & tree [ i ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 467,
                                      "end_byte": 468,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 469,
                                      "end_byte": 473,
                                      "text": "\"%d\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 469,
                                          "end_byte": 470,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 470,
                                          "end_byte": 472,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 472,
                                          "end_byte": 473,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 474,
                                      "end_byte": 475,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "pointer_expression",
                                      "start_byte": 476,
                                      "end_byte": 488,
                                      "text": "& tree [ i ]",
                                      "children": [
                                        {
                                          "type": "&",
                                          "start_byte": 476,
                                          "end_byte": 477,
                                          "text": "&",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 478,
                                          "end_byte": 488,
                                          "text": "tree [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 478,
                                              "end_byte": 482,
                                              "text": "tree",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 483,
                                              "end_byte": 488,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 483,
                                                  "end_byte": 484,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 485,
                                                  "end_byte": 486,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 487,
                                                  "end_byte": 488,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 489,
                                      "end_byte": 490,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 491,
                              "end_byte": 492,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 493,
                      "end_byte": 542,
                      "text": "printf ( \"%d\\n\" , tree [ 0 ] + find_sum ( 0 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 493,
                          "end_byte": 540,
                          "text": "printf ( \"%d\\n\" , tree [ 0 ] + find_sum ( 0 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 493,
                              "end_byte": 499,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 500,
                              "end_byte": 540,
                              "text": "( \"%d\\n\" , tree [ 0 ] + find_sum ( 0 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 500,
                                  "end_byte": 501,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 502,
                                  "end_byte": 508,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 502,
                                      "end_byte": 503,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 503,
                                      "end_byte": 505,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 505,
                                      "end_byte": 507,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 507,
                                      "end_byte": 508,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 509,
                                  "end_byte": 510,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 511,
                                  "end_byte": 538,
                                  "text": "tree [ 0 ] + find_sum ( 0 )",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 511,
                                      "end_byte": 521,
                                      "text": "tree [ 0 ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 511,
                                          "end_byte": 515,
                                          "text": "tree",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 516,
                                          "end_byte": 521,
                                          "text": "[ 0 ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 516,
                                              "end_byte": 517,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 518,
                                              "end_byte": 519,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 520,
                                              "end_byte": 521,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 522,
                                      "end_byte": 523,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 524,
                                      "end_byte": 538,
                                      "text": "find_sum ( 0 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 524,
                                          "end_byte": 532,
                                          "text": "find_sum",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 533,
                                          "end_byte": 538,
                                          "text": "( 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 533,
                                              "end_byte": 534,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 535,
                                              "end_byte": 536,
                                              "text": "0",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 537,
                                              "end_byte": 538,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 539,
                                  "end_byte": 540,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 541,
                          "end_byte": 542,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 543,
                      "end_byte": 544,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 545,
              "end_byte": 555,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 545,
                  "end_byte": 551,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 552,
                  "end_byte": 553,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 554,
                  "end_byte": 555,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 556,
              "end_byte": 557,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}