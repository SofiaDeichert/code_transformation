int max ( int * a , int l ) { int max , i ; max = * ( a + i ) ; for ( i = 0 ; i < l ; i ++ ) { if ( max < * ( a + i ) ) max = * ( a + i ) ; } return max ; } int main ( ) { int n , l , i , j ; scanf ( "%d" , & n ) ; while ( n > 0 ) { scanf ( "%d" , & l ) ; int a [ l ] [ l ] , b [ l ] [ l ] ; for ( i = 0 ; i < l ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; b [ i ] [ j ] = 0 ; } } b [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < l ; i ++ ) { for ( j = 0 ; j < l ; j ++ ) { if ( j == 0 ) { b [ i ] [ j ] = b [ i - 1 ] [ j ] + a [ i ] [ j ] ; } else if ( i == j ) { b [ i ] [ j ] = b [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; } else { b [ i ] [ j ] = b [ i - 1 ] [ j - 1 ] > b [ i - 1 ] [ j ] ? b [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] : b [ i - 1 ] [ j ] + a [ i ] [ j ] ; } } } printf ( "%d\n" , max ( b [ l - 1 ] , l ) ) ; n -- ; } return 0 ; }