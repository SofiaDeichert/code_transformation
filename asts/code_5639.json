{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 556,
  "text": "int main ( ) { int i , a ; scanf ( \"%d\" , & a ) ; for ( i = 0 ; i < a ; i ++ ) { int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d \\n\" , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 556,
      "text": "int main ( ) { int i , a ; scanf ( \"%d\" , & a ) ; for ( i = 0 ; i < a ; i ++ ) { int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d \\n\" , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 556,
          "text": "{ int i , a ; scanf ( \"%d\" , & a ) ; for ( i = 0 ; i < a ; i ++ ) { int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d \\n\" , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 26,
              "text": "int i , a ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 27,
              "end_byte": 49,
              "text": "scanf ( \"%d\" , & a ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 27,
                  "end_byte": 47,
                  "text": "scanf ( \"%d\" , & a )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 27,
                      "end_byte": 32,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 33,
                      "end_byte": 47,
                      "text": "( \"%d\" , & a )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 35,
                          "end_byte": 39,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 35,
                              "end_byte": 36,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 36,
                              "end_byte": 38,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 38,
                              "end_byte": 39,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 40,
                          "end_byte": 41,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 42,
                          "end_byte": 45,
                          "text": "& a",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 42,
                              "end_byte": 43,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 44,
                              "end_byte": 45,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 46,
                          "end_byte": 47,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 50,
              "end_byte": 543,
              "text": "for ( i = 0 ; i < a ; i ++ ) { int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d \\n\" , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 50,
                  "end_byte": 53,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 56,
                  "end_byte": 61,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 58,
                      "end_byte": 59,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 60,
                      "end_byte": 61,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 64,
                  "end_byte": 69,
                  "text": "i < a",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 64,
                      "end_byte": 65,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 66,
                      "end_byte": 67,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 68,
                      "end_byte": 69,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 72,
                  "end_byte": 76,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 72,
                      "end_byte": 73,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 74,
                      "end_byte": 76,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 79,
                  "end_byte": 543,
                  "text": "{ int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d \" , gcd ) ; printf ( \"%d \\n\" , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 81,
                      "end_byte": 148,
                      "text": "int num1 , num2 , gcd , lcm , remainder , numerator , denominator ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 81,
                          "end_byte": 84,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 85,
                          "end_byte": 89,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 92,
                          "end_byte": 96,
                          "text": "num2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 99,
                          "end_byte": 102,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 105,
                          "end_byte": 108,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 109,
                          "end_byte": 110,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 111,
                          "end_byte": 120,
                          "text": "remainder",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 123,
                          "end_byte": 132,
                          "text": "numerator",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 133,
                          "end_byte": 134,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 135,
                          "end_byte": 146,
                          "text": "denominator",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 147,
                          "end_byte": 148,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 149,
                      "end_byte": 186,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 149,
                          "end_byte": 184,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 149,
                              "end_byte": 154,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 155,
                              "end_byte": 184,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 155,
                                  "end_byte": 156,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 157,
                                  "end_byte": 164,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 158,
                                      "end_byte": 163,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 163,
                                      "end_byte": 164,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 165,
                                  "end_byte": 166,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 167,
                                  "end_byte": 173,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 167,
                                      "end_byte": 168,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 169,
                                      "end_byte": 173,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 174,
                                  "end_byte": 175,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 176,
                                  "end_byte": 182,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 178,
                                      "end_byte": 182,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 183,
                                  "end_byte": 184,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 185,
                          "end_byte": 186,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 187,
                      "end_byte": 298,
                      "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 187,
                          "end_byte": 189,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 190,
                          "end_byte": 205,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 190,
                              "end_byte": 191,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 192,
                              "end_byte": 203,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 192,
                                  "end_byte": 196,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 197,
                                  "end_byte": 198,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 199,
                                  "end_byte": 203,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 206,
                          "end_byte": 249,
                          "text": "{ numerator = num1 ; denominator = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 206,
                              "end_byte": 207,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 208,
                              "end_byte": 226,
                              "text": "numerator = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 208,
                                  "end_byte": 224,
                                  "text": "numerator = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 208,
                                      "end_byte": 217,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 218,
                                      "end_byte": 219,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 220,
                                      "end_byte": 224,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 225,
                                  "end_byte": 226,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 227,
                              "end_byte": 247,
                              "text": "denominator = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 227,
                                  "end_byte": 245,
                                  "text": "denominator = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 227,
                                      "end_byte": 238,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 241,
                                      "end_byte": 245,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 246,
                                  "end_byte": 247,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 248,
                              "end_byte": 249,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 250,
                          "end_byte": 298,
                          "text": "else { numerator = num2 ; denominator = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 250,
                              "end_byte": 254,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 255,
                              "end_byte": 298,
                              "text": "{ numerator = num2 ; denominator = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 255,
                                  "end_byte": 256,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 257,
                                  "end_byte": 275,
                                  "text": "numerator = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 257,
                                      "end_byte": 273,
                                      "text": "numerator = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 257,
                                          "end_byte": 266,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 267,
                                          "end_byte": 268,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 269,
                                          "end_byte": 273,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 276,
                                  "end_byte": 296,
                                  "text": "denominator = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 276,
                                      "end_byte": 294,
                                      "text": "denominator = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 276,
                                          "end_byte": 287,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 288,
                                          "end_byte": 289,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 290,
                                          "end_byte": 294,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 295,
                                      "end_byte": 296,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 297,
                                  "end_byte": 298,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 299,
                      "end_byte": 324,
                      "text": "remainder = num1 % num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 299,
                          "end_byte": 322,
                          "text": "remainder = num1 % num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 299,
                              "end_byte": 308,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 311,
                              "end_byte": 322,
                              "text": "num1 % num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 311,
                                  "end_byte": 315,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 316,
                                  "end_byte": 317,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 318,
                                  "end_byte": 322,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 325,
                      "end_byte": 443,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 325,
                          "end_byte": 330,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 331,
                          "end_byte": 349,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 331,
                              "end_byte": 332,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 333,
                              "end_byte": 347,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 333,
                                  "end_byte": 342,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 343,
                                  "end_byte": 345,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 346,
                                  "end_byte": 347,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 348,
                              "end_byte": 349,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 350,
                          "end_byte": 443,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 350,
                              "end_byte": 351,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 352,
                              "end_byte": 377,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 352,
                                  "end_byte": 375,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 352,
                                      "end_byte": 361,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 362,
                                      "end_byte": 363,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 364,
                                      "end_byte": 375,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 376,
                                  "end_byte": 377,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 378,
                              "end_byte": 403,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 378,
                                  "end_byte": 401,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 378,
                                      "end_byte": 389,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 390,
                                      "end_byte": 391,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 392,
                                      "end_byte": 401,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 402,
                                  "end_byte": 403,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 404,
                              "end_byte": 441,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 404,
                                  "end_byte": 439,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 404,
                                      "end_byte": 413,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 414,
                                      "end_byte": 415,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 416,
                                      "end_byte": 439,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 416,
                                          "end_byte": 425,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 426,
                                          "end_byte": 427,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 428,
                                          "end_byte": 439,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 440,
                                  "end_byte": 441,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 442,
                              "end_byte": 443,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 444,
                      "end_byte": 463,
                      "text": "gcd = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 444,
                          "end_byte": 461,
                          "text": "gcd = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 444,
                              "end_byte": 447,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 448,
                              "end_byte": 449,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 450,
                              "end_byte": 461,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 462,
                          "end_byte": 463,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 464,
                      "end_byte": 489,
                      "text": "lcm = num1 * num2 / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 464,
                          "end_byte": 487,
                          "text": "lcm = num1 * num2 / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 464,
                              "end_byte": 467,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 468,
                              "end_byte": 469,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 470,
                              "end_byte": 487,
                              "text": "num1 * num2 / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 470,
                                  "end_byte": 481,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 470,
                                      "end_byte": 474,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 475,
                                      "end_byte": 476,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 477,
                                      "end_byte": 481,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 482,
                                  "end_byte": 483,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 484,
                                  "end_byte": 487,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 488,
                          "end_byte": 489,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 490,
                      "end_byte": 514,
                      "text": "printf ( \"%d \" , gcd ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 490,
                          "end_byte": 512,
                          "text": "printf ( \"%d \" , gcd )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 490,
                              "end_byte": 496,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 497,
                              "end_byte": 512,
                              "text": "( \"%d \" , gcd )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 497,
                                  "end_byte": 498,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 499,
                                  "end_byte": 504,
                                  "text": "\"%d \"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 499,
                                      "end_byte": 500,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 500,
                                      "end_byte": 503,
                                      "text": "%d ",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 503,
                                      "end_byte": 504,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 505,
                                  "end_byte": 506,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 507,
                                  "end_byte": 510,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 511,
                                  "end_byte": 512,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 513,
                          "end_byte": 514,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 515,
                      "end_byte": 541,
                      "text": "printf ( \"%d \\n\" , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 515,
                          "end_byte": 539,
                          "text": "printf ( \"%d \\n\" , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 515,
                              "end_byte": 521,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 522,
                              "end_byte": 539,
                              "text": "( \"%d \\n\" , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 522,
                                  "end_byte": 523,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 524,
                                  "end_byte": 531,
                                  "text": "\"%d \\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 524,
                                      "end_byte": 525,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 525,
                                      "end_byte": 528,
                                      "text": "%d ",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 528,
                                      "end_byte": 530,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 530,
                                      "end_byte": 531,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 532,
                                  "end_byte": 533,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 534,
                                  "end_byte": 537,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 538,
                                  "end_byte": 539,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 540,
                          "end_byte": 541,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 542,
                      "end_byte": 543,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 544,
              "end_byte": 554,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 544,
                  "end_byte": 550,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 551,
                  "end_byte": 552,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 553,
                  "end_byte": 554,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 555,
              "end_byte": 556,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}