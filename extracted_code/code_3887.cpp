int t , n , a [ 100 ] [ 100 ] , store [ 100 ] [ 100 ] ; int findmax ( int , int [ 100 ] [ 100 ] , int , int ) ; int main ( ) { int i , j , k ; scanf ( "%d" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { for ( j = 0 ; j < 100 ; j ++ ) for ( k = 0 ; k < 100 ; k ++ ) store [ j ] [ k ] = - 1 ; scanf ( "%d" , & n ) ; int result = 0 ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( "%d" , & a [ j ] [ k ] ) ; } } result = findmax ( n , a , 0 , 0 ) ; printf ( "%d\n" , result ) ; } return 0 ; } int findmax ( int m , int x [ 100 ] [ 100 ] , int i , int j ) { int y , z , retval ; if ( m == 1 ) return x [ 0 ] [ 0 ] ; if ( i == m - 2 ) if ( x [ i + 1 ] [ j ] - x [ i + 1 ] [ j + 1 ] >= 0 ) retval = x [ i ] [ j ] + x [ i + 1 ] [ j ] ; else retval = x [ i ] [ j ] + x [ i + 1 ] [ j + 1 ] ; else if ( i < m - 2 ) { if ( ( y = store [ i + 1 ] [ j ] ) == - 1 ) y = store [ i + 1 ] [ j ] = findmax ( m , x , i + 1 , j ) ; if ( ( z = store [ i + 1 ] [ j + 1 ] ) == - 1 ) z = store [ i + 1 ] [ j + 1 ] = findmax ( m , x , i + 1 , j + 1 ) ; if ( y - z >= 0 ) retval = x [ i ] [ j ] + y ; else retval = x [ i ] [ j ] + z ; } return retval ; }