{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 728,
  "text": "int tri [ 100 ] [ 100 ] ; int sum_triangle ( int , int , int , int [ 100 ] [ 100 ] ) ; int max ( int x , int y ) { if ( x > y ) return x ; else return y ; } int main ( ) { int t , i , j , n , k ; scanf ( \"%d\" , & t ) ; int sum [ t ] ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & tri [ j ] [ k ] ) ; sum [ i ] = sum_triangle ( 0 , 0 , n , tri ) ; } for ( i = 0 ; i < t ; i ++ ) printf ( \"%d\\n\" , sum [ i ] ) ; return 0 ; } int sum_triangle ( int x , int y , int n , int tri [ 100 ] [ 100 ] ) { if ( x > n ) return 0 ; else { return max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) ) + tri [ x ] [ y ] ; } }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 25,
      "text": "int tri [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "tri [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "tri [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "tri",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 24,
          "end_byte": 25,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 26,
      "end_byte": 86,
      "text": "int sum_triangle ( int , int , int , int [ 100 ] [ 100 ] ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 26,
          "end_byte": 29,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 30,
          "end_byte": 84,
          "text": "sum_triangle ( int , int , int , int [ 100 ] [ 100 ] )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 30,
              "end_byte": 42,
              "text": "sum_triangle",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 43,
              "end_byte": 84,
              "text": "( int , int , int , int [ 100 ] [ 100 ] )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 45,
                  "end_byte": 48,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 45,
                      "end_byte": 48,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 51,
                  "end_byte": 54,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 51,
                      "end_byte": 54,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 57,
                  "end_byte": 60,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 57,
                      "end_byte": 60,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 63,
                  "end_byte": 82,
                  "text": "int [ 100 ] [ 100 ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 63,
                      "end_byte": 66,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "abstract_array_declarator",
                      "start_byte": 67,
                      "end_byte": 82,
                      "text": "[ 100 ] [ 100 ]",
                      "children": [
                        {
                          "type": "abstract_array_declarator",
                          "start_byte": 67,
                          "end_byte": 74,
                          "text": "[ 100 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 67,
                              "end_byte": 68,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 69,
                              "end_byte": 72,
                              "text": "100",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 73,
                              "end_byte": 74,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start_byte": 75,
                          "end_byte": 76,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 77,
                          "end_byte": 80,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 85,
          "end_byte": 86,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 87,
      "end_byte": 156,
      "text": "int max ( int x , int y ) { if ( x > y ) return x ; else return y ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 87,
          "end_byte": 90,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 91,
          "end_byte": 112,
          "text": "max ( int x , int y )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 91,
              "end_byte": 94,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 95,
              "end_byte": 112,
              "text": "( int x , int y )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 95,
                  "end_byte": 96,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 97,
                  "end_byte": 102,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 97,
                      "end_byte": 100,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 103,
                  "end_byte": 104,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 105,
                  "end_byte": 110,
                  "text": "int y",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 105,
                      "end_byte": 108,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 113,
          "end_byte": 156,
          "text": "{ if ( x > y ) return x ; else return y ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 113,
              "end_byte": 114,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 115,
              "end_byte": 154,
              "text": "if ( x > y ) return x ; else return y ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 115,
                  "end_byte": 117,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 118,
                  "end_byte": 127,
                  "text": "( x > y )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 120,
                      "end_byte": 125,
                      "text": "x > y",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 120,
                          "end_byte": 121,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 124,
                          "end_byte": 125,
                          "text": "y",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 128,
                  "end_byte": 138,
                  "text": "return x ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 128,
                      "end_byte": 134,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 135,
                      "end_byte": 136,
                      "text": "x",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 137,
                      "end_byte": 138,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 139,
                  "end_byte": 154,
                  "text": "else return y ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 139,
                      "end_byte": 143,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 144,
                      "end_byte": 154,
                      "text": "return y ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 144,
                          "end_byte": 150,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 151,
                          "end_byte": 152,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 153,
                          "end_byte": 154,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 155,
              "end_byte": 156,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 157,
      "end_byte": 507,
      "text": "int main ( ) { int t , i , j , n , k ; scanf ( \"%d\" , & t ) ; int sum [ t ] ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & tri [ j ] [ k ] ) ; sum [ i ] = sum_triangle ( 0 , 0 , n , tri ) ; } for ( i = 0 ; i < t ; i ++ ) printf ( \"%d\\n\" , sum [ i ] ) ; return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 157,
          "end_byte": 160,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 161,
          "end_byte": 169,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 161,
              "end_byte": 165,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 166,
              "end_byte": 169,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 166,
                  "end_byte": 167,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 168,
                  "end_byte": 169,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 170,
          "end_byte": 507,
          "text": "{ int t , i , j , n , k ; scanf ( \"%d\" , & t ) ; int sum [ t ] ; for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & tri [ j ] [ k ] ) ; sum [ i ] = sum_triangle ( 0 , 0 , n , tri ) ; } for ( i = 0 ; i < t ; i ++ ) printf ( \"%d\\n\" , sum [ i ] ) ; return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 170,
              "end_byte": 171,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 172,
              "end_byte": 195,
              "text": "int t , i , j , n , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 172,
                  "end_byte": 175,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 176,
                  "end_byte": 177,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 178,
                  "end_byte": 179,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 182,
                  "end_byte": 183,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 184,
                  "end_byte": 185,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 186,
                  "end_byte": 187,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 188,
                  "end_byte": 189,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 190,
                  "end_byte": 191,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 192,
                  "end_byte": 193,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 194,
                  "end_byte": 195,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 196,
              "end_byte": 218,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 196,
                  "end_byte": 216,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 196,
                      "end_byte": 201,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 202,
                      "end_byte": 216,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 202,
                          "end_byte": 203,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 204,
                          "end_byte": 208,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 205,
                              "end_byte": 207,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 207,
                              "end_byte": 208,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 209,
                          "end_byte": 210,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 211,
                          "end_byte": 214,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 211,
                              "end_byte": 212,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 213,
                              "end_byte": 214,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 215,
                          "end_byte": 216,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 217,
                  "end_byte": 218,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 219,
              "end_byte": 234,
              "text": "int sum [ t ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 219,
                  "end_byte": 222,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 223,
                  "end_byte": 232,
                  "text": "sum [ t ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 223,
                      "end_byte": 226,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 227,
                      "end_byte": 228,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 229,
                      "end_byte": 230,
                      "text": "t",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 231,
                      "end_byte": 232,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 233,
                  "end_byte": 234,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 235,
              "end_byte": 433,
              "text": "for ( i = 0 ; i < t ; i ++ ) { scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & tri [ j ] [ k ] ) ; sum [ i ] = sum_triangle ( 0 , 0 , n , tri ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 235,
                  "end_byte": 238,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 239,
                  "end_byte": 240,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 241,
                  "end_byte": 246,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 241,
                      "end_byte": 242,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 245,
                      "end_byte": 246,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 247,
                  "end_byte": 248,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 249,
                  "end_byte": 254,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 249,
                      "end_byte": 250,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 251,
                      "end_byte": 252,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 253,
                      "end_byte": 254,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 255,
                  "end_byte": 256,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 257,
                  "end_byte": 261,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 257,
                      "end_byte": 258,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 259,
                      "end_byte": 261,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 262,
                  "end_byte": 263,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 264,
                  "end_byte": 433,
                  "text": "{ scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & tri [ j ] [ k ] ) ; sum [ i ] = sum_triangle ( 0 , 0 , n , tri ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 264,
                      "end_byte": 265,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 266,
                      "end_byte": 288,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 266,
                          "end_byte": 286,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 266,
                              "end_byte": 271,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 272,
                              "end_byte": 286,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 272,
                                  "end_byte": 273,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 274,
                                  "end_byte": 278,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 275,
                                      "end_byte": 277,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 277,
                                      "end_byte": 278,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 279,
                                  "end_byte": 280,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 281,
                                  "end_byte": 284,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 281,
                                      "end_byte": 282,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 285,
                                  "end_byte": 286,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 287,
                          "end_byte": 288,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 289,
                      "end_byte": 384,
                      "text": "for ( j = 0 ; j < n ; j ++ ) for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & tri [ j ] [ k ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 289,
                          "end_byte": 292,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 293,
                          "end_byte": 294,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 295,
                          "end_byte": 300,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 297,
                              "end_byte": 298,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 299,
                              "end_byte": 300,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 301,
                          "end_byte": 302,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 303,
                          "end_byte": 308,
                          "text": "j < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 303,
                              "end_byte": 304,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 305,
                              "end_byte": 306,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 307,
                              "end_byte": 308,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 309,
                          "end_byte": 310,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 311,
                          "end_byte": 315,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 311,
                              "end_byte": 312,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 313,
                              "end_byte": 315,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 316,
                          "end_byte": 317,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "for_statement",
                          "start_byte": 318,
                          "end_byte": 384,
                          "text": "for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & tri [ j ] [ k ] ) ;",
                          "children": [
                            {
                              "type": "for",
                              "start_byte": 318,
                              "end_byte": 321,
                              "text": "for",
                              "children": []
                            },
                            {
                              "type": "(",
                              "start_byte": 322,
                              "end_byte": 323,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 324,
                              "end_byte": 329,
                              "text": "k = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 324,
                                  "end_byte": 325,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 326,
                                  "end_byte": 327,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 328,
                                  "end_byte": 329,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 330,
                              "end_byte": 331,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 332,
                              "end_byte": 338,
                              "text": "k <= j",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 332,
                                  "end_byte": 333,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "<=",
                                  "start_byte": 334,
                                  "end_byte": 336,
                                  "text": "<=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 337,
                                  "end_byte": 338,
                                  "text": "j",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 339,
                              "end_byte": 340,
                              "text": ";",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 341,
                              "end_byte": 345,
                              "text": "k ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 341,
                                  "end_byte": 342,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 343,
                                  "end_byte": 345,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 346,
                              "end_byte": 347,
                              "text": ")",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 348,
                              "end_byte": 384,
                              "text": "scanf ( \"%d\" , & tri [ j ] [ k ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 348,
                                  "end_byte": 382,
                                  "text": "scanf ( \"%d\" , & tri [ j ] [ k ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 348,
                                      "end_byte": 353,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 354,
                                      "end_byte": 382,
                                      "text": "( \"%d\" , & tri [ j ] [ k ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 354,
                                          "end_byte": 355,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 356,
                                          "end_byte": 360,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 356,
                                              "end_byte": 357,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 357,
                                              "end_byte": 359,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 359,
                                              "end_byte": 360,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 361,
                                          "end_byte": 362,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 363,
                                          "end_byte": 380,
                                          "text": "& tri [ j ] [ k ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 363,
                                              "end_byte": 364,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 365,
                                              "end_byte": 380,
                                              "text": "tri [ j ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 365,
                                                  "end_byte": 374,
                                                  "text": "tri [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 365,
                                                      "end_byte": 368,
                                                      "text": "tri",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 369,
                                                      "end_byte": 374,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 369,
                                                          "end_byte": 370,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 371,
                                                          "end_byte": 372,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 373,
                                                          "end_byte": 374,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 375,
                                                  "end_byte": 380,
                                                  "text": "[ k ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 375,
                                                      "end_byte": 376,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 377,
                                                      "end_byte": 378,
                                                      "text": "k",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 379,
                                                      "end_byte": 380,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 381,
                                          "end_byte": 382,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 383,
                                  "end_byte": 384,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 385,
                      "end_byte": 431,
                      "text": "sum [ i ] = sum_triangle ( 0 , 0 , n , tri ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 385,
                          "end_byte": 429,
                          "text": "sum [ i ] = sum_triangle ( 0 , 0 , n , tri )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 385,
                              "end_byte": 394,
                              "text": "sum [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 385,
                                  "end_byte": 388,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 389,
                                  "end_byte": 394,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 389,
                                      "end_byte": 390,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 391,
                                      "end_byte": 392,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 393,
                                      "end_byte": 394,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 395,
                              "end_byte": 396,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 397,
                              "end_byte": 429,
                              "text": "sum_triangle ( 0 , 0 , n , tri )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 397,
                                  "end_byte": 409,
                                  "text": "sum_triangle",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 410,
                                  "end_byte": 429,
                                  "text": "( 0 , 0 , n , tri )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 410,
                                      "end_byte": 411,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 412,
                                      "end_byte": 413,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 414,
                                      "end_byte": 415,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 416,
                                      "end_byte": 417,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 418,
                                      "end_byte": 419,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 420,
                                      "end_byte": 421,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 422,
                                      "end_byte": 423,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 424,
                                      "end_byte": 427,
                                      "text": "tri",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 428,
                                      "end_byte": 429,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 430,
                          "end_byte": 431,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 432,
                      "end_byte": 433,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 434,
              "end_byte": 494,
              "text": "for ( i = 0 ; i < t ; i ++ ) printf ( \"%d\\n\" , sum [ i ] ) ;",
              "children": [
                {
                  "type": "for",
                  "start_byte": 434,
                  "end_byte": 437,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 438,
                  "end_byte": 439,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 440,
                  "end_byte": 445,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 440,
                      "end_byte": 441,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 442,
                      "end_byte": 443,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 444,
                      "end_byte": 445,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 446,
                  "end_byte": 447,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 448,
                  "end_byte": 453,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 448,
                      "end_byte": 449,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 450,
                      "end_byte": 451,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 452,
                      "end_byte": 453,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 454,
                  "end_byte": 455,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 456,
                  "end_byte": 460,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 456,
                      "end_byte": 457,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 458,
                      "end_byte": 460,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 461,
                  "end_byte": 462,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "expression_statement",
                  "start_byte": 463,
                  "end_byte": 494,
                  "text": "printf ( \"%d\\n\" , sum [ i ] ) ;",
                  "children": [
                    {
                      "type": "call_expression",
                      "start_byte": 463,
                      "end_byte": 492,
                      "text": "printf ( \"%d\\n\" , sum [ i ] )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 463,
                          "end_byte": 469,
                          "text": "printf",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 470,
                          "end_byte": 492,
                          "text": "( \"%d\\n\" , sum [ i ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 470,
                              "end_byte": 471,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "string_literal",
                              "start_byte": 472,
                              "end_byte": 478,
                              "text": "\"%d\\n\"",
                              "children": [
                                {
                                  "type": "\"",
                                  "start_byte": 472,
                                  "end_byte": 473,
                                  "text": "\"",
                                  "children": []
                                },
                                {
                                  "type": "string_content",
                                  "start_byte": 473,
                                  "end_byte": 475,
                                  "text": "%d",
                                  "children": []
                                },
                                {
                                  "type": "escape_sequence",
                                  "start_byte": 475,
                                  "end_byte": 477,
                                  "text": "\\n",
                                  "children": []
                                },
                                {
                                  "type": "\"",
                                  "start_byte": 477,
                                  "end_byte": 478,
                                  "text": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 479,
                              "end_byte": 480,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 481,
                              "end_byte": 490,
                              "text": "sum [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 481,
                                  "end_byte": 484,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 485,
                                  "end_byte": 490,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 485,
                                      "end_byte": 486,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 487,
                                      "end_byte": 488,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 489,
                                      "end_byte": 490,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 491,
                              "end_byte": 492,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 493,
                      "end_byte": 494,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 495,
              "end_byte": 505,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 495,
                  "end_byte": 501,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 502,
                  "end_byte": 503,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 504,
                  "end_byte": 505,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 506,
              "end_byte": 507,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 508,
      "end_byte": 728,
      "text": "int sum_triangle ( int x , int y , int n , int tri [ 100 ] [ 100 ] ) { if ( x > n ) return 0 ; else { return max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) ) + tri [ x ] [ y ] ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 508,
          "end_byte": 511,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 512,
          "end_byte": 576,
          "text": "sum_triangle ( int x , int y , int n , int tri [ 100 ] [ 100 ] )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 512,
              "end_byte": 524,
              "text": "sum_triangle",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 525,
              "end_byte": 576,
              "text": "( int x , int y , int n , int tri [ 100 ] [ 100 ] )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 525,
                  "end_byte": 526,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 527,
                  "end_byte": 532,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 527,
                      "end_byte": 530,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 531,
                      "end_byte": 532,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 533,
                  "end_byte": 534,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 535,
                  "end_byte": 540,
                  "text": "int y",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 535,
                      "end_byte": 538,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 539,
                      "end_byte": 540,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 541,
                  "end_byte": 542,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 543,
                  "end_byte": 548,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 543,
                      "end_byte": 546,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 547,
                      "end_byte": 548,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 549,
                  "end_byte": 550,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 551,
                  "end_byte": 574,
                  "text": "int tri [ 100 ] [ 100 ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 551,
                      "end_byte": 554,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 555,
                      "end_byte": 574,
                      "text": "tri [ 100 ] [ 100 ]",
                      "children": [
                        {
                          "type": "array_declarator",
                          "start_byte": 555,
                          "end_byte": 566,
                          "text": "tri [ 100 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 555,
                              "end_byte": 558,
                              "text": "tri",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 559,
                              "end_byte": 560,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 561,
                              "end_byte": 564,
                              "text": "100",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 565,
                              "end_byte": 566,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "[",
                          "start_byte": 567,
                          "end_byte": 568,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 569,
                          "end_byte": 572,
                          "text": "100",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 573,
                          "end_byte": 574,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 575,
                  "end_byte": 576,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 577,
          "end_byte": 728,
          "text": "{ if ( x > n ) return 0 ; else { return max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) ) + tri [ x ] [ y ] ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 577,
              "end_byte": 578,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 579,
              "end_byte": 726,
              "text": "if ( x > n ) return 0 ; else { return max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) ) + tri [ x ] [ y ] ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 579,
                  "end_byte": 581,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 582,
                  "end_byte": 591,
                  "text": "( x > n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 582,
                      "end_byte": 583,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 584,
                      "end_byte": 589,
                      "text": "x > n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 584,
                          "end_byte": 585,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 586,
                          "end_byte": 587,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 588,
                          "end_byte": 589,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 590,
                      "end_byte": 591,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 592,
                  "end_byte": 602,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 592,
                      "end_byte": 598,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 599,
                      "end_byte": 600,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 601,
                      "end_byte": 602,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 603,
                  "end_byte": 726,
                  "text": "else { return max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) ) + tri [ x ] [ y ] ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 603,
                      "end_byte": 607,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 608,
                      "end_byte": 726,
                      "text": "{ return max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) ) + tri [ x ] [ y ] ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 608,
                          "end_byte": 609,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 610,
                          "end_byte": 724,
                          "text": "return max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) ) + tri [ x ] [ y ] ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 610,
                              "end_byte": 616,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 617,
                              "end_byte": 722,
                              "text": "max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) ) + tri [ x ] [ y ]",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 617,
                                  "end_byte": 704,
                                  "text": "max ( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 617,
                                      "end_byte": 620,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 621,
                                      "end_byte": 704,
                                      "text": "( sum_triangle ( x + 1 , y , n , tri ) , sum_triangle ( x + 1 , y + 1 , n , tri ) )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 621,
                                          "end_byte": 622,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 623,
                                          "end_byte": 659,
                                          "text": "sum_triangle ( x + 1 , y , n , tri )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 623,
                                              "end_byte": 635,
                                              "text": "sum_triangle",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 636,
                                              "end_byte": 659,
                                              "text": "( x + 1 , y , n , tri )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 636,
                                                  "end_byte": 637,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 638,
                                                  "end_byte": 643,
                                                  "text": "x + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 638,
                                                      "end_byte": 639,
                                                      "text": "x",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 640,
                                                      "end_byte": 641,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 642,
                                                      "end_byte": 643,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 644,
                                                  "end_byte": 645,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 646,
                                                  "end_byte": 647,
                                                  "text": "y",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 648,
                                                  "end_byte": 649,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 650,
                                                  "end_byte": 651,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 652,
                                                  "end_byte": 653,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 654,
                                                  "end_byte": 657,
                                                  "text": "tri",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 658,
                                                  "end_byte": 659,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 660,
                                          "end_byte": 661,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "call_expression",
                                          "start_byte": 662,
                                          "end_byte": 702,
                                          "text": "sum_triangle ( x + 1 , y + 1 , n , tri )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 662,
                                              "end_byte": 674,
                                              "text": "sum_triangle",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 675,
                                              "end_byte": 702,
                                              "text": "( x + 1 , y + 1 , n , tri )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 675,
                                                  "end_byte": 676,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 677,
                                                  "end_byte": 682,
                                                  "text": "x + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 677,
                                                      "end_byte": 678,
                                                      "text": "x",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 679,
                                                      "end_byte": 680,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 681,
                                                      "end_byte": 682,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 683,
                                                  "end_byte": 684,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 685,
                                                  "end_byte": 690,
                                                  "text": "y + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 685,
                                                      "end_byte": 686,
                                                      "text": "y",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 687,
                                                      "end_byte": 688,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 689,
                                                      "end_byte": 690,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 691,
                                                  "end_byte": 692,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 693,
                                                  "end_byte": 694,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 695,
                                                  "end_byte": 696,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 697,
                                                  "end_byte": 700,
                                                  "text": "tri",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 701,
                                                  "end_byte": 702,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 703,
                                          "end_byte": 704,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 705,
                                  "end_byte": 706,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 707,
                                  "end_byte": 722,
                                  "text": "tri [ x ] [ y ]",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 707,
                                      "end_byte": 716,
                                      "text": "tri [ x ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 707,
                                          "end_byte": 710,
                                          "text": "tri",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 711,
                                          "end_byte": 716,
                                          "text": "[ x ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 711,
                                              "end_byte": 712,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 713,
                                              "end_byte": 714,
                                              "text": "x",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 715,
                                              "end_byte": 716,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 717,
                                      "end_byte": 722,
                                      "text": "[ y ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 717,
                                          "end_byte": 718,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 719,
                                          "end_byte": 720,
                                          "text": "y",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 721,
                                          "end_byte": 722,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 723,
                              "end_byte": 724,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 725,
                          "end_byte": 726,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 727,
              "end_byte": 728,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}