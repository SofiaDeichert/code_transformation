{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 513,
  "text": "int main ( void ) { long int c , n , num ; scanf ( \"%ld\" , & n ) ; if ( n < 1000 ) { while ( n -- ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 < 1000000 && num2 < 1000000 ) { if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } } } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 513,
      "text": "int main ( void ) { long int c , n , num ; scanf ( \"%ld\" , & n ) ; if ( n < 1000 ) { while ( n -- ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 < 1000000 && num2 < 1000000 ) { if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } } } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 17,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 15,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 513,
          "text": "{ long int c , n , num ; scanf ( \"%ld\" , & n ) ; if ( n < 1000 ) { while ( n -- ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 < 1000000 && num2 < 1000000 ) { if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } } } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 42,
              "text": "long int c , n , num ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 20,
                  "end_byte": 28,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 20,
                      "end_byte": 24,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 25,
                      "end_byte": 28,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 31,
                  "end_byte": 32,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 37,
                  "end_byte": 40,
                  "text": "num",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 43,
              "end_byte": 66,
              "text": "scanf ( \"%ld\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 43,
                  "end_byte": 64,
                  "text": "scanf ( \"%ld\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 43,
                      "end_byte": 48,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 49,
                      "end_byte": 64,
                      "text": "( \"%ld\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 49,
                          "end_byte": 50,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 51,
                          "end_byte": 56,
                          "text": "\"%ld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 51,
                              "end_byte": 52,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 52,
                              "end_byte": 55,
                              "text": "%ld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 55,
                              "end_byte": 56,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 57,
                          "end_byte": 58,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 59,
                          "end_byte": 62,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 59,
                              "end_byte": 60,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 61,
                              "end_byte": 62,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 67,
              "end_byte": 500,
              "text": "if ( n < 1000 ) { while ( n -- ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 < 1000000 && num2 < 1000000 ) { if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } } }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 67,
                  "end_byte": 69,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 70,
                  "end_byte": 82,
                  "text": "( n < 1000 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 70,
                      "end_byte": 71,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 72,
                      "end_byte": 80,
                      "text": "n < 1000",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 76,
                          "end_byte": 80,
                          "text": "1000",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 81,
                      "end_byte": 82,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 83,
                  "end_byte": 500,
                  "text": "{ while ( n -- ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 < 1000000 && num2 < 1000000 ) { if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 85,
                      "end_byte": 498,
                      "text": "while ( n -- ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 < 1000000 && num2 < 1000000 ) { if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 85,
                          "end_byte": 90,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 91,
                          "end_byte": 99,
                          "text": "( n -- )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "update_expression",
                              "start_byte": 93,
                              "end_byte": 97,
                              "text": "n --",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 93,
                                  "end_byte": 94,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "--",
                                  "start_byte": 95,
                                  "end_byte": 97,
                                  "text": "--",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 100,
                          "end_byte": 498,
                          "text": "{ long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 < 1000000 && num2 < 1000000 ) { if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "declaration",
                              "start_byte": 102,
                              "end_byte": 154,
                              "text": "long int num1 , num2 , gcd , lcm , rem , num , den ;",
                              "children": [
                                {
                                  "type": "sized_type_specifier",
                                  "start_byte": 102,
                                  "end_byte": 110,
                                  "text": "long int",
                                  "children": [
                                    {
                                      "type": "long",
                                      "start_byte": 102,
                                      "end_byte": 106,
                                      "text": "long",
                                      "children": []
                                    },
                                    {
                                      "type": "primitive_type",
                                      "start_byte": 107,
                                      "end_byte": 110,
                                      "text": "int",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 111,
                                  "end_byte": 115,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 116,
                                  "end_byte": 117,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 118,
                                  "end_byte": 122,
                                  "text": "num2",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 123,
                                  "end_byte": 124,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 125,
                                  "end_byte": 128,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 129,
                                  "end_byte": 130,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 131,
                                  "end_byte": 134,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 135,
                                  "end_byte": 136,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 137,
                                  "end_byte": 140,
                                  "text": "rem",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 141,
                                  "end_byte": 142,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 143,
                                  "end_byte": 146,
                                  "text": "num",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 147,
                                  "end_byte": 148,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 149,
                                  "end_byte": 152,
                                  "text": "den",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 155,
                              "end_byte": 194,
                              "text": "scanf ( \"%ld %ld\" , & num1 , & num2 ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 155,
                                  "end_byte": 192,
                                  "text": "scanf ( \"%ld %ld\" , & num1 , & num2 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 155,
                                      "end_byte": 160,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 161,
                                      "end_byte": 192,
                                      "text": "( \"%ld %ld\" , & num1 , & num2 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 161,
                                          "end_byte": 162,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 163,
                                          "end_byte": 172,
                                          "text": "\"%ld %ld\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 163,
                                              "end_byte": 164,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 164,
                                              "end_byte": 171,
                                              "text": "%ld %ld",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 171,
                                              "end_byte": 172,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 173,
                                          "end_byte": 174,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 175,
                                          "end_byte": 181,
                                          "text": "& num1",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 175,
                                              "end_byte": 176,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 177,
                                              "end_byte": 181,
                                              "text": "num1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 182,
                                          "end_byte": 183,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 184,
                                          "end_byte": 190,
                                          "text": "& num2",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 184,
                                              "end_byte": 185,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 186,
                                              "end_byte": 190,
                                              "text": "num2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 191,
                                          "end_byte": 192,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 195,
                              "end_byte": 496,
                              "text": "if ( num1 < 1000000 && num2 < 1000000 ) { if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 195,
                                  "end_byte": 197,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 198,
                                  "end_byte": 234,
                                  "text": "( num1 < 1000000 && num2 < 1000000 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 200,
                                      "end_byte": 232,
                                      "text": "num1 < 1000000 && num2 < 1000000",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 200,
                                          "end_byte": 214,
                                          "text": "num1 < 1000000",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 200,
                                              "end_byte": 204,
                                              "text": "num1",
                                              "children": []
                                            },
                                            {
                                              "type": "<",
                                              "start_byte": 205,
                                              "end_byte": 206,
                                              "text": "<",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 207,
                                              "end_byte": 214,
                                              "text": "1000000",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 215,
                                          "end_byte": 217,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 218,
                                          "end_byte": 232,
                                          "text": "num2 < 1000000",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 218,
                                              "end_byte": 222,
                                              "text": "num2",
                                              "children": []
                                            },
                                            {
                                              "type": "<",
                                              "start_byte": 223,
                                              "end_byte": 224,
                                              "text": "<",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 225,
                                              "end_byte": 232,
                                              "text": "1000000",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 233,
                                      "end_byte": 234,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 235,
                                  "end_byte": 496,
                                  "text": "{ if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld \" , gcd ) ; printf ( \"%ld\\n\" , lcm ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 235,
                                      "end_byte": 236,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 237,
                                      "end_byte": 320,
                                      "text": "if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 237,
                                          "end_byte": 239,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 240,
                                          "end_byte": 255,
                                          "text": "( num1 > num2 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 240,
                                              "end_byte": 241,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 242,
                                              "end_byte": 253,
                                              "text": "num1 > num2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 242,
                                                  "end_byte": 246,
                                                  "text": "num1",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 247,
                                                  "end_byte": 248,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 249,
                                                  "end_byte": 253,
                                                  "text": "num2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 254,
                                              "end_byte": 255,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 256,
                                          "end_byte": 285,
                                          "text": "{ num = num1 ; den = num2 ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 256,
                                              "end_byte": 257,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 258,
                                              "end_byte": 270,
                                              "text": "num = num1 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 258,
                                                  "end_byte": 268,
                                                  "text": "num = num1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 258,
                                                      "end_byte": 261,
                                                      "text": "num",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 262,
                                                      "end_byte": 263,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 264,
                                                      "end_byte": 268,
                                                      "text": "num1",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 269,
                                                  "end_byte": 270,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 271,
                                              "end_byte": 283,
                                              "text": "den = num2 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 271,
                                                  "end_byte": 281,
                                                  "text": "den = num2",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 271,
                                                      "end_byte": 274,
                                                      "text": "den",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 275,
                                                      "end_byte": 276,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 277,
                                                      "end_byte": 281,
                                                      "text": "num2",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 282,
                                                  "end_byte": 283,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 284,
                                              "end_byte": 285,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 286,
                                          "end_byte": 320,
                                          "text": "else { num = num2 ; den = num1 ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 286,
                                              "end_byte": 290,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 291,
                                              "end_byte": 320,
                                              "text": "{ num = num2 ; den = num1 ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 291,
                                                  "end_byte": 292,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 293,
                                                  "end_byte": 305,
                                                  "text": "num = num2 ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 293,
                                                      "end_byte": 303,
                                                      "text": "num = num2",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 293,
                                                          "end_byte": 296,
                                                          "text": "num",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 297,
                                                          "end_byte": 298,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 299,
                                                          "end_byte": 303,
                                                          "text": "num2",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 304,
                                                      "end_byte": 305,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 306,
                                                  "end_byte": 318,
                                                  "text": "den = num1 ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 306,
                                                      "end_byte": 316,
                                                      "text": "den = num1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 306,
                                                          "end_byte": 309,
                                                          "text": "den",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 310,
                                                          "end_byte": 311,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 312,
                                                          "end_byte": 316,
                                                          "text": "num1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 317,
                                                      "end_byte": 318,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 319,
                                                  "end_byte": 320,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 321,
                                      "end_byte": 338,
                                      "text": "rem = num % den ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 321,
                                          "end_byte": 336,
                                          "text": "rem = num % den",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 321,
                                              "end_byte": 324,
                                              "text": "rem",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 325,
                                              "end_byte": 326,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 327,
                                              "end_byte": 336,
                                              "text": "num % den",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 327,
                                                  "end_byte": 330,
                                                  "text": "num",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 331,
                                                  "end_byte": 332,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 333,
                                                  "end_byte": 336,
                                                  "text": "den",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "while_statement",
                                      "start_byte": 339,
                                      "end_byte": 403,
                                      "text": "while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; }",
                                      "children": [
                                        {
                                          "type": "while",
                                          "start_byte": 339,
                                          "end_byte": 344,
                                          "text": "while",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 345,
                                          "end_byte": 357,
                                          "text": "( rem != 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 345,
                                              "end_byte": 346,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 347,
                                              "end_byte": 355,
                                              "text": "rem != 0",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 347,
                                                  "end_byte": 350,
                                                  "text": "rem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "!=",
                                                  "start_byte": 351,
                                                  "end_byte": 353,
                                                  "text": "!=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 354,
                                                  "end_byte": 355,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 356,
                                              "end_byte": 357,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 358,
                                          "end_byte": 403,
                                          "text": "{ num = den ; den = rem ; rem = num % den ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 358,
                                              "end_byte": 359,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 360,
                                              "end_byte": 371,
                                              "text": "num = den ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 360,
                                                  "end_byte": 369,
                                                  "text": "num = den",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 360,
                                                      "end_byte": 363,
                                                      "text": "num",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 364,
                                                      "end_byte": 365,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 366,
                                                      "end_byte": 369,
                                                      "text": "den",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 370,
                                                  "end_byte": 371,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 372,
                                              "end_byte": 383,
                                              "text": "den = rem ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 372,
                                                  "end_byte": 381,
                                                  "text": "den = rem",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 372,
                                                      "end_byte": 375,
                                                      "text": "den",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 376,
                                                      "end_byte": 377,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 378,
                                                      "end_byte": 381,
                                                      "text": "rem",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 382,
                                                  "end_byte": 383,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 384,
                                              "end_byte": 401,
                                              "text": "rem = num % den ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 384,
                                                  "end_byte": 399,
                                                  "text": "rem = num % den",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 384,
                                                      "end_byte": 387,
                                                      "text": "rem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 388,
                                                      "end_byte": 389,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 390,
                                                      "end_byte": 399,
                                                      "text": "num % den",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 390,
                                                          "end_byte": 393,
                                                          "text": "num",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "%",
                                                          "start_byte": 394,
                                                          "end_byte": 395,
                                                          "text": "%",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 396,
                                                          "end_byte": 399,
                                                          "text": "den",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 400,
                                                  "end_byte": 401,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 402,
                                              "end_byte": 403,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 404,
                                      "end_byte": 415,
                                      "text": "gcd = den ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 404,
                                          "end_byte": 413,
                                          "text": "gcd = den",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 404,
                                              "end_byte": 407,
                                              "text": "gcd",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 408,
                                              "end_byte": 409,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 410,
                                              "end_byte": 413,
                                              "text": "den",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 414,
                                          "end_byte": 415,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 416,
                                      "end_byte": 441,
                                      "text": "lcm = num1 * num2 / gcd ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 416,
                                          "end_byte": 439,
                                          "text": "lcm = num1 * num2 / gcd",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 416,
                                              "end_byte": 419,
                                              "text": "lcm",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 420,
                                              "end_byte": 421,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 422,
                                              "end_byte": 439,
                                              "text": "num1 * num2 / gcd",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 422,
                                                  "end_byte": 433,
                                                  "text": "num1 * num2",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 422,
                                                      "end_byte": 426,
                                                      "text": "num1",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 427,
                                                      "end_byte": 428,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 429,
                                                      "end_byte": 433,
                                                      "text": "num2",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "/",
                                                  "start_byte": 434,
                                                  "end_byte": 435,
                                                  "text": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 436,
                                                  "end_byte": 439,
                                                  "text": "gcd",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 440,
                                          "end_byte": 441,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 442,
                                      "end_byte": 467,
                                      "text": "printf ( \"%ld \" , gcd ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 442,
                                          "end_byte": 465,
                                          "text": "printf ( \"%ld \" , gcd )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 442,
                                              "end_byte": 448,
                                              "text": "printf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 449,
                                              "end_byte": 465,
                                              "text": "( \"%ld \" , gcd )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 449,
                                                  "end_byte": 450,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 451,
                                                  "end_byte": 457,
                                                  "text": "\"%ld \"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 451,
                                                      "end_byte": 452,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 452,
                                                      "end_byte": 456,
                                                      "text": "%ld ",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 456,
                                                      "end_byte": 457,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 458,
                                                  "end_byte": 459,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 460,
                                                  "end_byte": 463,
                                                  "text": "gcd",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 464,
                                                  "end_byte": 465,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 466,
                                          "end_byte": 467,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 468,
                                      "end_byte": 494,
                                      "text": "printf ( \"%ld\\n\" , lcm ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 468,
                                          "end_byte": 492,
                                          "text": "printf ( \"%ld\\n\" , lcm )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 468,
                                              "end_byte": 474,
                                              "text": "printf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 475,
                                              "end_byte": 492,
                                              "text": "( \"%ld\\n\" , lcm )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 475,
                                                  "end_byte": 476,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 477,
                                                  "end_byte": 484,
                                                  "text": "\"%ld\\n\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 477,
                                                      "end_byte": 478,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 478,
                                                      "end_byte": 481,
                                                      "text": "%ld",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "escape_sequence",
                                                      "start_byte": 481,
                                                      "end_byte": 483,
                                                      "text": "\\n",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 483,
                                                      "end_byte": 484,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 485,
                                                  "end_byte": 486,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 487,
                                                  "end_byte": 490,
                                                  "text": "lcm",
                                                  "children": []
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 491,
                                                  "end_byte": 492,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 493,
                                          "end_byte": 494,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 495,
                                      "end_byte": 496,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 497,
                              "end_byte": 498,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 499,
                      "end_byte": 500,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 501,
              "end_byte": 511,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 501,
                  "end_byte": 507,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 508,
                  "end_byte": 509,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 510,
                  "end_byte": 511,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 512,
              "end_byte": 513,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}