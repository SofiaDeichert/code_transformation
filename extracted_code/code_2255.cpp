unsigned int input ( ) { char c = get ( ) ; unsigned int n = 0 ; while ( c < '0' || c > '9' ) c = get ( ) ; while ( c >= '0' && c <= '9' ) { n = ( n << 1 ) + ( n << 3 ) + ( c & 15 ) ; c = get ( ) ; } return n ; } unsigned int gcd ( unsigned int a , unsigned int b ) { if ( a == 0 ) return b ; if ( b == 0 ) return a ; int shift = __builtin_ctz ( a | b ) ; a >>= __builtin_ctz ( a ) ; do { b >>= __builtin_ctz ( b ) ; if ( a > b ) { a += b ; b = a - b ; a = a - b ; } b -= a ; } while ( b ) ; return a << shift ; } int main ( ) { unsigned int t , a , b , c ; t = input ( ) ; while ( t -- ) { a = input ( ) ; b = input ( ) ; c = gcd ( a , b ) ; printf ( "%u %u\n" , c , a / c * b ) ; } return 0 ; }