int main ( ) { int t , n , i , j , k ; int * * a , * * b ; scanf ( "%d" , & t ) ; for ( k = 1 ; k <= t ; k ++ ) { scanf ( "%d" , & n ) ; a = malloc ( sizeof ( int * ) * ( n + 1 ) ) ; b = malloc ( sizeof ( int * ) * ( n + 1 ) ) ; for ( i = 0 ; i <= n ; i ++ ) { * ( a + i ) = malloc ( sizeof ( int ) * ( n + 1 ) ) ; * ( b + i ) = malloc ( sizeof ( int ) * ( n + 1 ) ) ; } for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; b [ i ] [ j ] = 0 ; } } for ( i = 1 ; i <= n ; i ++ ) b [ i ] [ 1 ] = a [ i ] [ 1 ] ; for ( i = 2 ; i <= n ; i ++ ) b [ i ] [ 1 ] = b [ i ] [ 1 ] + b [ i - 1 ] [ 1 ] ; for ( i = 2 ; i <= n ; i ++ ) { for ( j = 2 ; j <= i ; j ++ ) { if ( b [ i - 1 ] [ j ] + a [ i ] [ j ] > b [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ) b [ i ] [ j ] = b [ i - 1 ] [ j ] + a [ i ] [ j ] ; else b [ i ] [ j ] = b [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; } } int max = b [ n ] [ 1 ] ; for ( j = 2 ; j <= n ; j ++ ) if ( b [ n ] [ j ] > max ) max = b [ n ] [ j ] ; printf ( "%d\n" , max ) ; } return 0 ; }