int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int a [ 100 ] [ 100 ] ; int c [ 100 ] [ 100 ] ; int solve ( int i , int j , int n ) { int t1 , t2 , t ; if ( i > n ) return 0 ; if ( c [ i ] [ j ] != - 1 ) { return c [ i ] [ j ] ; } t1 = solve ( i + 1 , j , n ) ; t2 = solve ( i + 1 , j + 1 , n ) ; t = a [ i ] [ j ] + max ( t1 , t2 ) ; c [ i ] [ j ] = t ; return t ; } int main ( ) { int t , n , i , j , r , v , tcn = 0 , ic = 0 ; for ( tcn = 0 ; tcn < 100 ; tcn ++ ) { for ( ic = 0 ; ic < 100 ; ic ++ ) { c [ tcn ] [ ic ] = - 1 ; } } scanf ( "%d" , & t ) ; for ( r = 0 ; r < t ; r ++ ) { scanf ( "%d" , & n ) ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } v = solve ( 1 , 1 , n ) ; printf ( "%d\n" , v ) ; } return 0 ; }