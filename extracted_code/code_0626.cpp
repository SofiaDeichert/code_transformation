int main ( ) { int m1 [ 101 ] [ 101 ] , m2 [ 101 ] [ 101 ] , n , size , s_cp , i , res [ 1001 ] , n_cp ; scanf ( "%d" , & n ) ; n_cp = n ; while ( n -- ) { scanf ( "%d" , & size ) ; s_cp = size ; while ( size -- ) { for ( i = 1 ; i <= ( s_cp - size ) ; i ++ ) { scanf ( "%d" , & m1 [ s_cp - size ] [ i ] ) ; m2 [ s_cp - size ] [ i ] = 0 ; } } size = s_cp - 1 ; m2 [ 1 ] [ 1 ] = m1 [ 1 ] [ 1 ] ; while ( size -- ) { for ( i = 1 ; i <= ( s_cp - size ) ; i ++ ) { if ( i > 1 ) { m2 [ s_cp - size ] [ i ] = ( m2 [ s_cp - size - 1 ] [ i ] > m2 [ s_cp - size - 1 ] [ i - 1 ] ) ? m2 [ s_cp - size - 1 ] [ i ] : m2 [ s_cp - size - 1 ] [ i - 1 ] + m1 [ s_cp - size ] [ i ] ; } else { m2 [ s_cp - size ] [ i ] = m2 [ s_cp - size - 1 ] [ i ] + m1 [ s_cp - size ] [ i ] ; } } } res [ n_cp - n ] = m2 [ size ] [ 1 ] ; for ( i = 2 ; i <= s_cp ; i ++ ) { if ( m2 [ s_cp ] [ i ] > res [ n_cp - n ] ) res [ n_cp - n ] = m2 [ s_cp ] [ i ] ; } } for ( i = 1 ; i <= n_cp ; i ++ ) { printf ( "%d\n" , res [ i ] ) ; } return 0 ; }