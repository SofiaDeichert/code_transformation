int max_sum ( int triangle [ ] [ 100 ] , int row ) { int temp ; int i , j ; for ( i = 1 ; i < row ; i ++ ) { triangle [ i ] [ 0 ] += triangle [ i - 1 ] [ 0 ] ; for ( j = 1 ; j <= i ; j ++ ) { temp = triangle [ i - 1 ] [ j ] > triangle [ i - 1 ] [ j - 1 ] ? triangle [ i - 1 ] [ j ] : triangle [ i - 1 ] [ j - 1 ] ; triangle [ i ] [ j ] += temp ; } } i -- ; temp = triangle [ i ] [ 0 ] ; for ( j = 1 ; j <= i ; j ++ ) { if ( triangle [ i ] [ j ] > temp ) temp = triangle [ i ] [ j ] ; } return temp ; } int main ( ) { int test_cases ; int rows [ 100 ] ; char str [ 300 ] ; char * temp ; int i , j , num ; int triangle [ 100 ] [ 100 ] ; scanf ( "%d" , & test_cases ) ; while ( test_cases -- ) { scanf ( "%d" , & rows [ test_cases ] ) ; fflush ( stdin ) ; for ( i = 0 ; i < rows [ test_cases ] ; i ++ ) { gets ( str ) ; temp = strtok ( str , delimiter ) ; j = 0 ; while ( temp ) { sscanf ( temp , "%d" , & triangle [ i ] [ j ] ) ; temp = strtok ( NULL , delimiter ) ; j ++ ; } } printf ( "%d\n" , max_sum ( triangle , rows [ test_cases ] ) ) ; } return 0 ; }