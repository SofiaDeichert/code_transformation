{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 332,
  "text": "int main ( ) { int tests ; long temp , minval , i , n ; long long ans ; scanf ( \"%d\" , & tests ) ; while ( tests -- ) { scanf ( \"%li\" , & n ) ; minval = 200000 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%li\" , & temp ) ; if ( temp < minval ) { minval = temp ; } } ans = ( n - 1 ) * minval ; printf ( \"%lli\\n\" , ans ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 332,
      "text": "int main ( ) { int tests ; long temp , minval , i , n ; long long ans ; scanf ( \"%d\" , & tests ) ; while ( tests -- ) { scanf ( \"%li\" , & n ) ; minval = 200000 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%li\" , & temp ) ; if ( temp < minval ) { minval = temp ; } } ans = ( n - 1 ) * minval ; printf ( \"%lli\\n\" , ans ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 332,
          "text": "{ int tests ; long temp , minval , i , n ; long long ans ; scanf ( \"%d\" , & tests ) ; while ( tests -- ) { scanf ( \"%li\" , & n ) ; minval = 200000 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%li\" , & temp ) ; if ( temp < minval ) { minval = temp ; } } ans = ( n - 1 ) * minval ; printf ( \"%lli\\n\" , ans ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 26,
              "text": "int tests ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 24,
                  "text": "tests",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 27,
              "end_byte": 55,
              "text": "long temp , minval , i , n ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 27,
                      "end_byte": 31,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 36,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 37,
                  "end_byte": 38,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 39,
                  "end_byte": 45,
                  "text": "minval",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 54,
                  "end_byte": 55,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 56,
              "end_byte": 71,
              "text": "long long ans ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 56,
                  "end_byte": 65,
                  "text": "long long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 56,
                      "end_byte": 60,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 61,
                      "end_byte": 65,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 66,
                  "end_byte": 69,
                  "text": "ans",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 72,
              "end_byte": 98,
              "text": "scanf ( \"%d\" , & tests ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 72,
                  "end_byte": 96,
                  "text": "scanf ( \"%d\" , & tests )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 72,
                      "end_byte": 77,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 78,
                      "end_byte": 96,
                      "text": "( \"%d\" , & tests )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 78,
                          "end_byte": 79,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 80,
                          "end_byte": 84,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 80,
                              "end_byte": 81,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 81,
                              "end_byte": 83,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 83,
                              "end_byte": 84,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 85,
                          "end_byte": 86,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 87,
                          "end_byte": 94,
                          "text": "& tests",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 87,
                              "end_byte": 88,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 89,
                              "end_byte": 94,
                              "text": "tests",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 99,
              "end_byte": 319,
              "text": "while ( tests -- ) { scanf ( \"%li\" , & n ) ; minval = 200000 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%li\" , & temp ) ; if ( temp < minval ) { minval = temp ; } } ans = ( n - 1 ) * minval ; printf ( \"%lli\\n\" , ans ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 99,
                  "end_byte": 104,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 105,
                  "end_byte": 117,
                  "text": "( tests -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 105,
                      "end_byte": 106,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 107,
                      "end_byte": 115,
                      "text": "tests --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 107,
                          "end_byte": 112,
                          "text": "tests",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 113,
                          "end_byte": 115,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 118,
                  "end_byte": 319,
                  "text": "{ scanf ( \"%li\" , & n ) ; minval = 200000 ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%li\" , & temp ) ; if ( temp < minval ) { minval = temp ; } } ans = ( n - 1 ) * minval ; printf ( \"%lli\\n\" , ans ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 120,
                      "end_byte": 143,
                      "text": "scanf ( \"%li\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 120,
                          "end_byte": 141,
                          "text": "scanf ( \"%li\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 120,
                              "end_byte": 125,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 126,
                              "end_byte": 141,
                              "text": "( \"%li\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 126,
                                  "end_byte": 127,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 128,
                                  "end_byte": 133,
                                  "text": "\"%li\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 128,
                                      "end_byte": 129,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 129,
                                      "end_byte": 132,
                                      "text": "%li",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 132,
                                      "end_byte": 133,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 134,
                                  "end_byte": 135,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 136,
                                  "end_byte": 139,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 136,
                                      "end_byte": 137,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 138,
                                      "end_byte": 139,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 142,
                          "end_byte": 143,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 144,
                      "end_byte": 161,
                      "text": "minval = 200000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 144,
                          "end_byte": 159,
                          "text": "minval = 200000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 144,
                              "end_byte": 150,
                              "text": "minval",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 151,
                              "end_byte": 152,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 153,
                              "end_byte": 159,
                              "text": "200000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 162,
                      "end_byte": 262,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%li\" , & temp ) ; if ( temp < minval ) { minval = temp ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 162,
                          "end_byte": 165,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 166,
                          "end_byte": 167,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 168,
                          "end_byte": 173,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 174,
                          "end_byte": 175,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 176,
                          "end_byte": 181,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 176,
                              "end_byte": 177,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 178,
                              "end_byte": 179,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 180,
                              "end_byte": 181,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 182,
                          "end_byte": 183,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 184,
                          "end_byte": 188,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 186,
                              "end_byte": 188,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 189,
                          "end_byte": 190,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 191,
                          "end_byte": 262,
                          "text": "{ scanf ( \"%li\" , & temp ) ; if ( temp < minval ) { minval = temp ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 193,
                              "end_byte": 219,
                              "text": "scanf ( \"%li\" , & temp ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 193,
                                  "end_byte": 217,
                                  "text": "scanf ( \"%li\" , & temp )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 193,
                                      "end_byte": 198,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 199,
                                      "end_byte": 217,
                                      "text": "( \"%li\" , & temp )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 199,
                                          "end_byte": 200,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 201,
                                          "end_byte": 206,
                                          "text": "\"%li\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 201,
                                              "end_byte": 202,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 202,
                                              "end_byte": 205,
                                              "text": "%li",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 205,
                                              "end_byte": 206,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 207,
                                          "end_byte": 208,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 209,
                                          "end_byte": 215,
                                          "text": "& temp",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 209,
                                              "end_byte": 210,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 211,
                                              "end_byte": 215,
                                              "text": "temp",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 216,
                                          "end_byte": 217,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 218,
                                  "end_byte": 219,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 220,
                              "end_byte": 260,
                              "text": "if ( temp < minval ) { minval = temp ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 220,
                                  "end_byte": 222,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 223,
                                  "end_byte": 240,
                                  "text": "( temp < minval )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 223,
                                      "end_byte": 224,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 225,
                                      "end_byte": 238,
                                      "text": "temp < minval",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 225,
                                          "end_byte": 229,
                                          "text": "temp",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 230,
                                          "end_byte": 231,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 232,
                                          "end_byte": 238,
                                          "text": "minval",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 241,
                                  "end_byte": 260,
                                  "text": "{ minval = temp ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 241,
                                      "end_byte": 242,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 243,
                                      "end_byte": 258,
                                      "text": "minval = temp ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 243,
                                          "end_byte": 256,
                                          "text": "minval = temp",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 243,
                                              "end_byte": 249,
                                              "text": "minval",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 250,
                                              "end_byte": 251,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 252,
                                              "end_byte": 256,
                                              "text": "temp",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 257,
                                          "end_byte": 258,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 259,
                                      "end_byte": 260,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 263,
                      "end_byte": 289,
                      "text": "ans = ( n - 1 ) * minval ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 263,
                          "end_byte": 287,
                          "text": "ans = ( n - 1 ) * minval",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 263,
                              "end_byte": 266,
                              "text": "ans",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 267,
                              "end_byte": 268,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 269,
                              "end_byte": 287,
                              "text": "( n - 1 ) * minval",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 269,
                                  "end_byte": 278,
                                  "text": "( n - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 271,
                                      "end_byte": 276,
                                      "text": "n - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 271,
                                          "end_byte": 272,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 273,
                                          "end_byte": 274,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 275,
                                          "end_byte": 276,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 277,
                                      "end_byte": 278,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "*",
                                  "start_byte": 279,
                                  "end_byte": 280,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 281,
                                  "end_byte": 287,
                                  "text": "minval",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 288,
                          "end_byte": 289,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 290,
                      "end_byte": 317,
                      "text": "printf ( \"%lli\\n\" , ans ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 290,
                          "end_byte": 315,
                          "text": "printf ( \"%lli\\n\" , ans )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 290,
                              "end_byte": 296,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 297,
                              "end_byte": 315,
                              "text": "( \"%lli\\n\" , ans )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 297,
                                  "end_byte": 298,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 299,
                                  "end_byte": 307,
                                  "text": "\"%lli\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 299,
                                      "end_byte": 300,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 300,
                                      "end_byte": 304,
                                      "text": "%lli",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 304,
                                      "end_byte": 306,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 306,
                                      "end_byte": 307,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 310,
                                  "end_byte": 313,
                                  "text": "ans",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 314,
                                  "end_byte": 315,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 316,
                          "end_byte": 317,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 318,
                      "end_byte": 319,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 320,
              "end_byte": 330,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 320,
                  "end_byte": 326,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 327,
                  "end_byte": 328,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 329,
                  "end_byte": 330,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 331,
              "end_byte": 332,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}