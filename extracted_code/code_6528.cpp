static int max = 0 ; unsigned long fast_in ( ) { char fast_c ; unsigned long fast_j ; for ( fast_c = getchar ( ) ; fast_c < '0' || fast_c > '9' ; fast_c = getchar ( ) ) ; for ( fast_j = 0 ; fast_c >= '0' && fast_c <= '9' ; fast_c = getchar ( ) ) fast_j = ( fast_j << 1 ) + ( fast_j << 3 ) + ( fast_c - '0' ) ; return fast_j ; } int main ( ) { int t , n , max , i , j ; int sum [ 100 ] [ 100 ] , a [ 100 ] [ 100 ] ; t = fast_in ( ) ; while ( t -- ) { n = fast_in ( ) ; a [ 0 ] [ 0 ] = fast_in ( ) ; sum [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; max = sum [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) { a [ i ] [ j ] = fast_in ( ) ; if ( j == 0 ) sum [ i ] [ j ] = sum [ i - 1 ] [ j ] + a [ i ] [ j ] ; else if ( i == j ) sum [ i ] [ j ] = sum [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; else { if ( sum [ i - 1 ] [ j ] > sum [ i - 1 ] [ j - 1 ] ) { sum [ i ] [ j ] = sum [ i - 1 ] [ j ] + a [ i ] [ j ] ; } else { sum [ i ] [ j ] = sum [ i - 1 ] [ j - 1 ] + a [ i ] [ j ] ; } } if ( max < sum [ i ] [ j ] ) max = sum [ i ] [ j ] ; } printf ( "%d\n" , max ) ; } return 0 ; }