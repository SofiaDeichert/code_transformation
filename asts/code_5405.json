{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 390,
  "text": "int main ( ) { unsigned short int testcase , i , distinctInt ; int min , value ; unsigned long long int cost ; scanf ( \"%hu\" , & testcase ) ; while ( testcase -- ) { scanf ( \"%hu\" , & distinctInt ) ; min = 100000 ; for ( i = 1 ; i <= distinctInt ; i ++ ) { scanf ( \"%d\" , & value ) ; if ( value < min ) { min = value ; } } cost = min * ( distinctInt - 1 ) ; printf ( \"%llu\\n\" , cost ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 390,
      "text": "int main ( ) { unsigned short int testcase , i , distinctInt ; int min , value ; unsigned long long int cost ; scanf ( \"%hu\" , & testcase ) ; while ( testcase -- ) { scanf ( \"%hu\" , & distinctInt ) ; min = 100000 ; for ( i = 1 ; i <= distinctInt ; i ++ ) { scanf ( \"%d\" , & value ) ; if ( value < min ) { min = value ; } } cost = min * ( distinctInt - 1 ) ; printf ( \"%llu\\n\" , cost ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 390,
          "text": "{ unsigned short int testcase , i , distinctInt ; int min , value ; unsigned long long int cost ; scanf ( \"%hu\" , & testcase ) ; while ( testcase -- ) { scanf ( \"%hu\" , & distinctInt ) ; min = 100000 ; for ( i = 1 ; i <= distinctInt ; i ++ ) { scanf ( \"%d\" , & value ) ; if ( value < min ) { min = value ; } } cost = min * ( distinctInt - 1 ) ; printf ( \"%llu\\n\" , cost ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 62,
              "text": "unsigned short int testcase , i , distinctInt ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 15,
                  "end_byte": 33,
                  "text": "unsigned short int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 15,
                      "end_byte": 23,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "short",
                      "start_byte": 24,
                      "end_byte": 29,
                      "text": "short",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 30,
                      "end_byte": 33,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 42,
                  "text": "testcase",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 49,
                  "end_byte": 60,
                  "text": "distinctInt",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 63,
              "end_byte": 80,
              "text": "int min , value ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 63,
                  "end_byte": 66,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 67,
                  "end_byte": 70,
                  "text": "min",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 73,
                  "end_byte": 78,
                  "text": "value",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 81,
              "end_byte": 110,
              "text": "unsigned long long int cost ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 81,
                  "end_byte": 103,
                  "text": "unsigned long long int",
                  "children": [
                    {
                      "type": "unsigned",
                      "start_byte": 81,
                      "end_byte": 89,
                      "text": "unsigned",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 90,
                      "end_byte": 94,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 95,
                      "end_byte": 99,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 100,
                      "end_byte": 103,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 104,
                  "end_byte": 108,
                  "text": "cost",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 109,
                  "end_byte": 110,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 111,
              "end_byte": 141,
              "text": "scanf ( \"%hu\" , & testcase ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 111,
                  "end_byte": 139,
                  "text": "scanf ( \"%hu\" , & testcase )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 111,
                      "end_byte": 116,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 117,
                      "end_byte": 139,
                      "text": "( \"%hu\" , & testcase )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 119,
                          "end_byte": 124,
                          "text": "\"%hu\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 119,
                              "end_byte": 120,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 120,
                              "end_byte": 123,
                              "text": "%hu",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 123,
                              "end_byte": 124,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 127,
                          "end_byte": 137,
                          "text": "& testcase",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 127,
                              "end_byte": 128,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 129,
                              "end_byte": 137,
                              "text": "testcase",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 138,
                          "end_byte": 139,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 140,
                  "end_byte": 141,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 142,
              "end_byte": 388,
              "text": "while ( testcase -- ) { scanf ( \"%hu\" , & distinctInt ) ; min = 100000 ; for ( i = 1 ; i <= distinctInt ; i ++ ) { scanf ( \"%d\" , & value ) ; if ( value < min ) { min = value ; } } cost = min * ( distinctInt - 1 ) ; printf ( \"%llu\\n\" , cost ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 142,
                  "end_byte": 147,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 148,
                  "end_byte": 163,
                  "text": "( testcase -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 148,
                      "end_byte": 149,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 150,
                      "end_byte": 161,
                      "text": "testcase --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 150,
                          "end_byte": 158,
                          "text": "testcase",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 159,
                          "end_byte": 161,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 162,
                      "end_byte": 163,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 164,
                  "end_byte": 388,
                  "text": "{ scanf ( \"%hu\" , & distinctInt ) ; min = 100000 ; for ( i = 1 ; i <= distinctInt ; i ++ ) { scanf ( \"%d\" , & value ) ; if ( value < min ) { min = value ; } } cost = min * ( distinctInt - 1 ) ; printf ( \"%llu\\n\" , cost ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 164,
                      "end_byte": 165,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 166,
                      "end_byte": 199,
                      "text": "scanf ( \"%hu\" , & distinctInt ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 166,
                          "end_byte": 197,
                          "text": "scanf ( \"%hu\" , & distinctInt )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 166,
                              "end_byte": 171,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 172,
                              "end_byte": 197,
                              "text": "( \"%hu\" , & distinctInt )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 174,
                                  "end_byte": 179,
                                  "text": "\"%hu\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 175,
                                      "end_byte": 178,
                                      "text": "%hu",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 178,
                                      "end_byte": 179,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 180,
                                  "end_byte": 181,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 182,
                                  "end_byte": 195,
                                  "text": "& distinctInt",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 182,
                                      "end_byte": 183,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 184,
                                      "end_byte": 195,
                                      "text": "distinctInt",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 196,
                                  "end_byte": 197,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 198,
                          "end_byte": 199,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 200,
                      "end_byte": 214,
                      "text": "min = 100000 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 200,
                          "end_byte": 212,
                          "text": "min = 100000",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 200,
                              "end_byte": 203,
                              "text": "min",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 206,
                              "end_byte": 212,
                              "text": "100000",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 213,
                          "end_byte": 214,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 215,
                      "end_byte": 322,
                      "text": "for ( i = 1 ; i <= distinctInt ; i ++ ) { scanf ( \"%d\" , & value ) ; if ( value < min ) { min = value ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 215,
                          "end_byte": 218,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 219,
                          "end_byte": 220,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 221,
                          "end_byte": 226,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 221,
                              "end_byte": 222,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 223,
                              "end_byte": 224,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 225,
                              "end_byte": 226,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 227,
                          "end_byte": 228,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 229,
                          "end_byte": 245,
                          "text": "i <= distinctInt",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 229,
                              "end_byte": 230,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 231,
                              "end_byte": 233,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 234,
                              "end_byte": 245,
                              "text": "distinctInt",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 246,
                          "end_byte": 247,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 248,
                          "end_byte": 252,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 248,
                              "end_byte": 249,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 250,
                              "end_byte": 252,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 253,
                          "end_byte": 254,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 255,
                          "end_byte": 322,
                          "text": "{ scanf ( \"%d\" , & value ) ; if ( value < min ) { min = value ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 255,
                              "end_byte": 256,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 257,
                              "end_byte": 283,
                              "text": "scanf ( \"%d\" , & value ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 257,
                                  "end_byte": 281,
                                  "text": "scanf ( \"%d\" , & value )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 257,
                                      "end_byte": 262,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 263,
                                      "end_byte": 281,
                                      "text": "( \"%d\" , & value )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 263,
                                          "end_byte": 264,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 265,
                                          "end_byte": 269,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 265,
                                              "end_byte": 266,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 266,
                                              "end_byte": 268,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 268,
                                              "end_byte": 269,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 270,
                                          "end_byte": 271,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 272,
                                          "end_byte": 279,
                                          "text": "& value",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 272,
                                              "end_byte": 273,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 274,
                                              "end_byte": 279,
                                              "text": "value",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 280,
                                          "end_byte": 281,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 282,
                                  "end_byte": 283,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 284,
                              "end_byte": 320,
                              "text": "if ( value < min ) { min = value ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 284,
                                  "end_byte": 286,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 287,
                                  "end_byte": 302,
                                  "text": "( value < min )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 287,
                                      "end_byte": 288,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 289,
                                      "end_byte": 300,
                                      "text": "value < min",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 289,
                                          "end_byte": 294,
                                          "text": "value",
                                          "children": []
                                        },
                                        {
                                          "type": "<",
                                          "start_byte": 295,
                                          "end_byte": 296,
                                          "text": "<",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 297,
                                          "end_byte": 300,
                                          "text": "min",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 301,
                                      "end_byte": 302,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 303,
                                  "end_byte": 320,
                                  "text": "{ min = value ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 303,
                                      "end_byte": 304,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 305,
                                      "end_byte": 318,
                                      "text": "min = value ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 305,
                                          "end_byte": 316,
                                          "text": "min = value",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 305,
                                              "end_byte": 308,
                                              "text": "min",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 309,
                                              "end_byte": 310,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 311,
                                              "end_byte": 316,
                                              "text": "value",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 317,
                                          "end_byte": 318,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 319,
                                      "end_byte": 320,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 321,
                              "end_byte": 322,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 323,
                      "end_byte": 357,
                      "text": "cost = min * ( distinctInt - 1 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 323,
                          "end_byte": 355,
                          "text": "cost = min * ( distinctInt - 1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 323,
                              "end_byte": 327,
                              "text": "cost",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 328,
                              "end_byte": 329,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 330,
                              "end_byte": 355,
                              "text": "min * ( distinctInt - 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 330,
                                  "end_byte": 333,
                                  "text": "min",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 334,
                                  "end_byte": 335,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 336,
                                  "end_byte": 355,
                                  "text": "( distinctInt - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 336,
                                      "end_byte": 337,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 338,
                                      "end_byte": 353,
                                      "text": "distinctInt - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 338,
                                          "end_byte": 349,
                                          "text": "distinctInt",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 350,
                                          "end_byte": 351,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 352,
                                          "end_byte": 353,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 354,
                                      "end_byte": 355,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 356,
                          "end_byte": 357,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 358,
                      "end_byte": 386,
                      "text": "printf ( \"%llu\\n\" , cost ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 358,
                          "end_byte": 384,
                          "text": "printf ( \"%llu\\n\" , cost )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 358,
                              "end_byte": 364,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 365,
                              "end_byte": 384,
                              "text": "( \"%llu\\n\" , cost )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 365,
                                  "end_byte": 366,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 367,
                                  "end_byte": 375,
                                  "text": "\"%llu\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 367,
                                      "end_byte": 368,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 368,
                                      "end_byte": 372,
                                      "text": "%llu",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 372,
                                      "end_byte": 374,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 374,
                                      "end_byte": 375,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 376,
                                  "end_byte": 377,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 378,
                                  "end_byte": 382,
                                  "text": "cost",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 383,
                                  "end_byte": 384,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 385,
                          "end_byte": 386,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 387,
                      "end_byte": 388,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 389,
              "end_byte": 390,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}