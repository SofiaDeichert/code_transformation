unsigned int tri [ 1000 ] [ 100 ] [ 100 ] ; unsigned int val [ 100 ] [ 100 ] ; unsigned int row [ 1000 ] ; unsigned int no_case ; unsigned int getvalue ( int cas ) { int i , j ; unsigned int gr = 0 ; val [ 0 ] [ 0 ] = tri [ cas ] [ 0 ] [ 0 ] ; val [ 0 ] [ 1 ] = 0 ; for ( i = 1 ; i < row [ cas ] ; i ++ ) { val [ i ] [ 0 ] = val [ i - 1 ] [ 0 ] + tri [ cas ] [ i ] [ 0 ] ; } for ( i = 1 ; i < row [ cas ] ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { if ( val [ i - 1 ] [ j - 1 ] < val [ i - 1 ] [ j ] ) val [ i ] [ j ] = val [ i - 1 ] [ j ] + tri [ cas ] [ i ] [ j ] ; else val [ i ] [ j ] = val [ i - 1 ] [ j - 1 ] + tri [ cas ] [ i ] [ j ] ; } if ( j < row [ cas ] ) val [ i ] [ j ] = 0 ; } for ( i = 0 ; i < row [ cas ] ; i ++ ) { if ( gr < val [ row [ cas ] - 1 ] [ i ] ) gr = val [ row [ cas ] - 1 ] [ i ] ; } return gr ; } int main ( ) { int i , j , k ; scanf ( "%u" , & no_case ) ; for ( i = 0 ; i < no_case ; i ++ ) { scanf ( "%u" , & row [ i ] ) ; for ( j = 0 ; j < row [ i ] ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%u" , & tri [ i ] [ j ] [ k ] ) ; } } } for ( i = 0 ; i < no_case ; i ++ ) { for ( j = 0 ; j < 100 ; j ++ ) { for ( k = 0 ; k < 100 ; k ++ ) { val [ j ] [ k ] = 0 ; } } printf ( "%u\n" , getvalue ( i ) ) ; } return 0 ; }