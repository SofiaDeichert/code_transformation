{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 702,
  "text": "void main ( ) { int n ; scanf ( \"%d\" , & n ) ; long long int gcd [ n ] , lcm [ n ] , i , j ; for ( i = 0 ; i < n ; i ++ ) { long long int num1 = 0 , num2 = 0 , remainder = 0 , numerator = 0 , denominator = 0 ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } printf ( \"\\n\" ) ; for ( i = 0 ; i < n ; i ++ ) { printf ( \"%lld %lld\" , gcd [ i ] , lcm [ i ] ) ; printf ( \"\\n\" ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 702,
      "text": "void main ( ) { int n ; scanf ( \"%d\" , & n ) ; long long int gcd [ n ] , lcm [ n ] , i , j ; for ( i = 0 ; i < n ; i ++ ) { long long int num1 = 0 , num2 = 0 , remainder = 0 , numerator = 0 , denominator = 0 ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } printf ( \"\\n\" ) ; for ( i = 0 ; i < n ; i ++ ) { printf ( \"%lld %lld\" , gcd [ i ] , lcm [ i ] ) ; printf ( \"\\n\" ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 702,
          "text": "{ int n ; scanf ( \"%d\" , & n ) ; long long int gcd [ n ] , lcm [ n ] , i , j ; for ( i = 0 ; i < n ; i ++ ) { long long int num1 = 0 , num2 = 0 , remainder = 0 , numerator = 0 , denominator = 0 ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } printf ( \"\\n\" ) ; for ( i = 0 ; i < n ; i ++ ) { printf ( \"%lld %lld\" , gcd [ i ] , lcm [ i ] ) ; printf ( \"\\n\" ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 23,
              "text": "int n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 24,
              "end_byte": 46,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 24,
                  "end_byte": 44,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 24,
                      "end_byte": 29,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 30,
                      "end_byte": 44,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 30,
                          "end_byte": 31,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 32,
                          "end_byte": 36,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 32,
                              "end_byte": 33,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 33,
                              "end_byte": 35,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 35,
                              "end_byte": 36,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 37,
                          "end_byte": 38,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 39,
                          "end_byte": 42,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 39,
                              "end_byte": 40,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 41,
                              "end_byte": 42,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 43,
                          "end_byte": 44,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 47,
              "end_byte": 92,
              "text": "long long int gcd [ n ] , lcm [ n ] , i , j ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 47,
                  "end_byte": 60,
                  "text": "long long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 47,
                      "end_byte": 51,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "long",
                      "start_byte": 52,
                      "end_byte": 56,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 57,
                      "end_byte": 60,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 61,
                  "end_byte": 70,
                  "text": "gcd [ n ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 61,
                      "end_byte": 64,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 73,
                  "end_byte": 82,
                  "text": "lcm [ n ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 73,
                      "end_byte": 76,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "n",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 81,
                      "end_byte": 82,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 85,
                  "end_byte": 86,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 89,
                  "end_byte": 90,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 91,
                  "end_byte": 92,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 93,
              "end_byte": 582,
              "text": "for ( i = 0 ; i < n ; i ++ ) { long long int num1 = 0 , num2 = 0 , remainder = 0 , numerator = 0 , denominator = 0 ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 93,
                  "end_byte": 96,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 99,
                  "end_byte": 104,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 103,
                      "end_byte": 104,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 105,
                  "end_byte": 106,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 107,
                  "end_byte": 112,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 111,
                      "end_byte": 112,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 115,
                  "end_byte": 119,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 117,
                      "end_byte": 119,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 122,
                  "end_byte": 582,
                  "text": "{ long long int num1 = 0 , num2 = 0 , remainder = 0 , numerator = 0 , denominator = 0 ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 122,
                      "end_byte": 123,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 124,
                      "end_byte": 209,
                      "text": "long long int num1 = 0 , num2 = 0 , remainder = 0 , numerator = 0 , denominator = 0 ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 124,
                          "end_byte": 137,
                          "text": "long long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 124,
                              "end_byte": 128,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 129,
                              "end_byte": 133,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 134,
                              "end_byte": 137,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 138,
                          "end_byte": 146,
                          "text": "num1 = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 138,
                              "end_byte": 142,
                              "text": "num1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 143,
                              "end_byte": 144,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 145,
                              "end_byte": 146,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 147,
                          "end_byte": 148,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 149,
                          "end_byte": 157,
                          "text": "num2 = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 149,
                              "end_byte": 153,
                              "text": "num2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 154,
                              "end_byte": 155,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 156,
                              "end_byte": 157,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 158,
                          "end_byte": 159,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 160,
                          "end_byte": 173,
                          "text": "remainder = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 160,
                              "end_byte": 169,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 172,
                              "end_byte": 173,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 174,
                          "end_byte": 175,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 176,
                          "end_byte": 189,
                          "text": "numerator = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 176,
                              "end_byte": 185,
                              "text": "numerator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 186,
                              "end_byte": 187,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 188,
                              "end_byte": 189,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 190,
                          "end_byte": 191,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 192,
                          "end_byte": 207,
                          "text": "denominator = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 192,
                              "end_byte": 203,
                              "text": "denominator",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 206,
                              "end_byte": 207,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 208,
                          "end_byte": 209,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 210,
                      "end_byte": 247,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 210,
                          "end_byte": 245,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 210,
                              "end_byte": 215,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 216,
                              "end_byte": 245,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 216,
                                  "end_byte": 217,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 218,
                                  "end_byte": 225,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 218,
                                      "end_byte": 219,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 219,
                                      "end_byte": 224,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 224,
                                      "end_byte": 225,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 228,
                                  "end_byte": 234,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 230,
                                      "end_byte": 234,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 235,
                                  "end_byte": 236,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 237,
                                  "end_byte": 243,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 237,
                                      "end_byte": 238,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 239,
                                      "end_byte": 243,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 244,
                                  "end_byte": 245,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 246,
                          "end_byte": 247,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 248,
                      "end_byte": 359,
                      "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 248,
                          "end_byte": 250,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 251,
                          "end_byte": 266,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 251,
                              "end_byte": 252,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 253,
                              "end_byte": 264,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 253,
                                  "end_byte": 257,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 258,
                                  "end_byte": 259,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 260,
                                  "end_byte": 264,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 265,
                              "end_byte": 266,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 267,
                          "end_byte": 310,
                          "text": "{ numerator = num1 ; denominator = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 267,
                              "end_byte": 268,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 269,
                              "end_byte": 287,
                              "text": "numerator = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 269,
                                  "end_byte": 285,
                                  "text": "numerator = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 269,
                                      "end_byte": 278,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 279,
                                      "end_byte": 280,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 281,
                                      "end_byte": 285,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 286,
                                  "end_byte": 287,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 288,
                              "end_byte": 308,
                              "text": "denominator = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 288,
                                  "end_byte": 306,
                                  "text": "denominator = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 288,
                                      "end_byte": 299,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 302,
                                      "end_byte": 306,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 311,
                          "end_byte": 359,
                          "text": "else { numerator = num2 ; denominator = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 311,
                              "end_byte": 315,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 316,
                              "end_byte": 359,
                              "text": "{ numerator = num2 ; denominator = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 316,
                                  "end_byte": 317,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 318,
                                  "end_byte": 336,
                                  "text": "numerator = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 318,
                                      "end_byte": 334,
                                      "text": "numerator = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 318,
                                          "end_byte": 327,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 328,
                                          "end_byte": 329,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 330,
                                          "end_byte": 334,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 335,
                                      "end_byte": 336,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 337,
                                  "end_byte": 357,
                                  "text": "denominator = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 337,
                                      "end_byte": 355,
                                      "text": "denominator = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 337,
                                          "end_byte": 348,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 349,
                                          "end_byte": 350,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 351,
                                          "end_byte": 355,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 356,
                                      "end_byte": 357,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 358,
                                  "end_byte": 359,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 360,
                      "end_byte": 397,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 360,
                          "end_byte": 395,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 360,
                              "end_byte": 369,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 370,
                              "end_byte": 371,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 372,
                              "end_byte": 395,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 372,
                                  "end_byte": 381,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 382,
                                  "end_byte": 383,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 384,
                                  "end_byte": 395,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 396,
                          "end_byte": 397,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 398,
                      "end_byte": 516,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 398,
                          "end_byte": 403,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 404,
                          "end_byte": 422,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 404,
                              "end_byte": 405,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 406,
                              "end_byte": 420,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 406,
                                  "end_byte": 415,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 416,
                                  "end_byte": 418,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 419,
                                  "end_byte": 420,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 421,
                              "end_byte": 422,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 423,
                          "end_byte": 516,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 423,
                              "end_byte": 424,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 425,
                              "end_byte": 450,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 425,
                                  "end_byte": 448,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 425,
                                      "end_byte": 434,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 435,
                                      "end_byte": 436,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 437,
                                      "end_byte": 448,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 449,
                                  "end_byte": 450,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 451,
                              "end_byte": 476,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 451,
                                  "end_byte": 474,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 451,
                                      "end_byte": 462,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 463,
                                      "end_byte": 464,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 465,
                                      "end_byte": 474,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 475,
                                  "end_byte": 476,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 477,
                              "end_byte": 514,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 477,
                                  "end_byte": 512,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 477,
                                      "end_byte": 486,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 487,
                                      "end_byte": 488,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 489,
                                      "end_byte": 512,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 489,
                                          "end_byte": 498,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 499,
                                          "end_byte": 500,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 501,
                                          "end_byte": 512,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 513,
                                  "end_byte": 514,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 515,
                              "end_byte": 516,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 517,
                      "end_byte": 542,
                      "text": "gcd [ i ] = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 517,
                          "end_byte": 540,
                          "text": "gcd [ i ] = denominator",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 517,
                              "end_byte": 526,
                              "text": "gcd [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 517,
                                  "end_byte": 520,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 521,
                                  "end_byte": 526,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 521,
                                      "end_byte": 522,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 523,
                                      "end_byte": 524,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 525,
                                      "end_byte": 526,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 527,
                              "end_byte": 528,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 529,
                              "end_byte": 540,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 541,
                          "end_byte": 542,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 543,
                      "end_byte": 580,
                      "text": "lcm [ i ] = num1 * num2 / gcd [ i ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 543,
                          "end_byte": 578,
                          "text": "lcm [ i ] = num1 * num2 / gcd [ i ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 543,
                              "end_byte": 552,
                              "text": "lcm [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 543,
                                  "end_byte": 546,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 547,
                                  "end_byte": 552,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 547,
                                      "end_byte": 548,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 549,
                                      "end_byte": 550,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 551,
                                      "end_byte": 552,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 553,
                              "end_byte": 554,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 555,
                              "end_byte": 578,
                              "text": "num1 * num2 / gcd [ i ]",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 555,
                                  "end_byte": 566,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 555,
                                      "end_byte": 559,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 560,
                                      "end_byte": 561,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 562,
                                      "end_byte": 566,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 567,
                                  "end_byte": 568,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 569,
                                  "end_byte": 578,
                                  "text": "gcd [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 569,
                                      "end_byte": 572,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 573,
                                      "end_byte": 578,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 573,
                                          "end_byte": 574,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 575,
                                          "end_byte": 576,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 577,
                                          "end_byte": 578,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 579,
                          "end_byte": 580,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 581,
                      "end_byte": 582,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 583,
              "end_byte": 600,
              "text": "printf ( \"\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 583,
                  "end_byte": 598,
                  "text": "printf ( \"\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 583,
                      "end_byte": 589,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 590,
                      "end_byte": 598,
                      "text": "( \"\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 590,
                          "end_byte": 591,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 592,
                          "end_byte": 596,
                          "text": "\"\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 592,
                              "end_byte": 593,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 593,
                              "end_byte": 595,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 595,
                              "end_byte": 596,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 597,
                          "end_byte": 598,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 599,
                  "end_byte": 600,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 601,
              "end_byte": 700,
              "text": "for ( i = 0 ; i < n ; i ++ ) { printf ( \"%lld %lld\" , gcd [ i ] , lcm [ i ] ) ; printf ( \"\\n\" ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 601,
                  "end_byte": 604,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 605,
                  "end_byte": 606,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 607,
                  "end_byte": 612,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 607,
                      "end_byte": 608,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 609,
                      "end_byte": 610,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 611,
                      "end_byte": 612,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 613,
                  "end_byte": 614,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 615,
                  "end_byte": 620,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 615,
                      "end_byte": 616,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 617,
                      "end_byte": 618,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 619,
                      "end_byte": 620,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 621,
                  "end_byte": 622,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 623,
                  "end_byte": 627,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 623,
                      "end_byte": 624,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 625,
                      "end_byte": 627,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 628,
                  "end_byte": 629,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 630,
                  "end_byte": 700,
                  "text": "{ printf ( \"%lld %lld\" , gcd [ i ] , lcm [ i ] ) ; printf ( \"\\n\" ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 630,
                      "end_byte": 631,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 632,
                      "end_byte": 680,
                      "text": "printf ( \"%lld %lld\" , gcd [ i ] , lcm [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 632,
                          "end_byte": 678,
                          "text": "printf ( \"%lld %lld\" , gcd [ i ] , lcm [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 632,
                              "end_byte": 638,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 639,
                              "end_byte": 678,
                              "text": "( \"%lld %lld\" , gcd [ i ] , lcm [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 639,
                                  "end_byte": 640,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 641,
                                  "end_byte": 652,
                                  "text": "\"%lld %lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 641,
                                      "end_byte": 642,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 642,
                                      "end_byte": 651,
                                      "text": "%lld %lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 651,
                                      "end_byte": 652,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 653,
                                  "end_byte": 654,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 655,
                                  "end_byte": 664,
                                  "text": "gcd [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 655,
                                      "end_byte": 658,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 659,
                                      "end_byte": 664,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 659,
                                          "end_byte": 660,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 661,
                                          "end_byte": 662,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 663,
                                          "end_byte": 664,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 665,
                                  "end_byte": 666,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 667,
                                  "end_byte": 676,
                                  "text": "lcm [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 667,
                                      "end_byte": 670,
                                      "text": "lcm",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 671,
                                      "end_byte": 676,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 671,
                                          "end_byte": 672,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 673,
                                          "end_byte": 674,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 675,
                                          "end_byte": 676,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 677,
                                  "end_byte": 678,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 679,
                          "end_byte": 680,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 681,
                      "end_byte": 698,
                      "text": "printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 681,
                          "end_byte": 696,
                          "text": "printf ( \"\\n\" )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 681,
                              "end_byte": 687,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 688,
                              "end_byte": 696,
                              "text": "( \"\\n\" )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 688,
                                  "end_byte": 689,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 690,
                                  "end_byte": 694,
                                  "text": "\"\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 690,
                                      "end_byte": 691,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 691,
                                      "end_byte": 693,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 693,
                                      "end_byte": 694,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 695,
                                  "end_byte": 696,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 697,
                          "end_byte": 698,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 699,
                      "end_byte": 700,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 701,
              "end_byte": 702,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}