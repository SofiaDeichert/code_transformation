{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 544,
  "text": "int main ( ) { int t ; scanf ( \"%d\\n\" , & t ) ; while ( t -- ) { long int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%ld %ld\\n\" , gcd , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 544,
      "text": "int main ( ) { int t ; scanf ( \"%d\\n\" , & t ) ; while ( t -- ) { long int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%ld %ld\\n\" , gcd , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 544,
          "text": "{ int t ; scanf ( \"%d\\n\" , & t ) ; while ( t -- ) { long int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%ld %ld\\n\" , gcd , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 22,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 23,
              "end_byte": 47,
              "text": "scanf ( \"%d\\n\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 23,
                  "end_byte": 45,
                  "text": "scanf ( \"%d\\n\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 23,
                      "end_byte": 28,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 29,
                      "end_byte": 45,
                      "text": "( \"%d\\n\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 29,
                          "end_byte": 30,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 31,
                          "end_byte": 37,
                          "text": "\"%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 31,
                              "end_byte": 32,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 32,
                              "end_byte": 34,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 34,
                              "end_byte": 36,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 36,
                              "end_byte": 37,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 38,
                          "end_byte": 39,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 40,
                          "end_byte": 43,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 40,
                              "end_byte": 41,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 42,
                              "end_byte": 43,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 44,
                          "end_byte": 45,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 48,
              "end_byte": 531,
              "text": "while ( t -- ) { long int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%ld %ld\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 48,
                  "end_byte": 53,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 54,
                  "end_byte": 62,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 54,
                      "end_byte": 55,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 56,
                      "end_byte": 60,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 56,
                          "end_byte": 57,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 58,
                          "end_byte": 60,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 61,
                      "end_byte": 62,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 63,
                  "end_byte": 531,
                  "text": "{ long int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%ld %ld\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 63,
                      "end_byte": 64,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 65,
                      "end_byte": 137,
                      "text": "long int num1 , num2 , gcd , lcm , remainder , numerator , denominator ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 65,
                          "end_byte": 73,
                          "text": "long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 65,
                              "end_byte": 69,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 70,
                              "end_byte": 73,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 74,
                          "end_byte": 78,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 81,
                          "end_byte": 85,
                          "text": "num2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 86,
                          "end_byte": 87,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 88,
                          "end_byte": 91,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 92,
                          "end_byte": 93,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 94,
                          "end_byte": 97,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 100,
                          "end_byte": 109,
                          "text": "remainder",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 110,
                          "end_byte": 111,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 112,
                          "end_byte": 121,
                          "text": "numerator",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 124,
                          "end_byte": 135,
                          "text": "denominator",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 136,
                          "end_byte": 137,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 138,
                      "end_byte": 177,
                      "text": "scanf ( \"%ld %ld\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 138,
                          "end_byte": 175,
                          "text": "scanf ( \"%ld %ld\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 138,
                              "end_byte": 143,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 144,
                              "end_byte": 175,
                              "text": "( \"%ld %ld\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 144,
                                  "end_byte": 145,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 146,
                                  "end_byte": 155,
                                  "text": "\"%ld %ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 147,
                                      "end_byte": 154,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 156,
                                  "end_byte": 157,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 158,
                                  "end_byte": 164,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 160,
                                      "end_byte": 164,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 165,
                                  "end_byte": 166,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 167,
                                  "end_byte": 173,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 167,
                                      "end_byte": 168,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 169,
                                      "end_byte": 173,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 174,
                                  "end_byte": 175,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 176,
                          "end_byte": 177,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 178,
                      "end_byte": 289,
                      "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 178,
                          "end_byte": 180,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 181,
                          "end_byte": 196,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 183,
                              "end_byte": 194,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 183,
                                  "end_byte": 187,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 188,
                                  "end_byte": 189,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 190,
                                  "end_byte": 194,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 195,
                              "end_byte": 196,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 197,
                          "end_byte": 240,
                          "text": "{ numerator = num1 ; denominator = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 197,
                              "end_byte": 198,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 199,
                              "end_byte": 217,
                              "text": "numerator = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 199,
                                  "end_byte": 215,
                                  "text": "numerator = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 199,
                                      "end_byte": 208,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 211,
                                      "end_byte": 215,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 216,
                                  "end_byte": 217,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 218,
                              "end_byte": 238,
                              "text": "denominator = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 218,
                                  "end_byte": 236,
                                  "text": "denominator = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 218,
                                      "end_byte": 229,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 230,
                                      "end_byte": 231,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 232,
                                      "end_byte": 236,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 237,
                                  "end_byte": 238,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 239,
                              "end_byte": 240,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 241,
                          "end_byte": 289,
                          "text": "else { numerator = num2 ; denominator = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 241,
                              "end_byte": 245,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 246,
                              "end_byte": 289,
                              "text": "{ numerator = num2 ; denominator = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 246,
                                  "end_byte": 247,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 248,
                                  "end_byte": 266,
                                  "text": "numerator = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 248,
                                      "end_byte": 264,
                                      "text": "numerator = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 248,
                                          "end_byte": 257,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 258,
                                          "end_byte": 259,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 260,
                                          "end_byte": 264,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 267,
                                  "end_byte": 287,
                                  "text": "denominator = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 267,
                                      "end_byte": 285,
                                      "text": "denominator = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 267,
                                          "end_byte": 278,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 279,
                                          "end_byte": 280,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 281,
                                          "end_byte": 285,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 286,
                                      "end_byte": 287,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 288,
                                  "end_byte": 289,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 290,
                      "end_byte": 327,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 290,
                          "end_byte": 325,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 290,
                              "end_byte": 299,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 300,
                              "end_byte": 301,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 302,
                              "end_byte": 325,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 302,
                                  "end_byte": 311,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 312,
                                  "end_byte": 313,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 314,
                                  "end_byte": 325,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 326,
                          "end_byte": 327,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 328,
                      "end_byte": 446,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 328,
                          "end_byte": 333,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 334,
                          "end_byte": 352,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 334,
                              "end_byte": 335,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 336,
                              "end_byte": 350,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 336,
                                  "end_byte": 345,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 346,
                                  "end_byte": 348,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 349,
                                  "end_byte": 350,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 351,
                              "end_byte": 352,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 353,
                          "end_byte": 446,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 353,
                              "end_byte": 354,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 355,
                              "end_byte": 380,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 355,
                                  "end_byte": 378,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 355,
                                      "end_byte": 364,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 367,
                                      "end_byte": 378,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 379,
                                  "end_byte": 380,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 381,
                              "end_byte": 406,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 381,
                                  "end_byte": 404,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 381,
                                      "end_byte": 392,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 393,
                                      "end_byte": 394,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 395,
                                      "end_byte": 404,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 405,
                                  "end_byte": 406,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 407,
                              "end_byte": 444,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 407,
                                  "end_byte": 442,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 407,
                                      "end_byte": 416,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 417,
                                      "end_byte": 418,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 419,
                                      "end_byte": 442,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 419,
                                          "end_byte": 428,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 429,
                                          "end_byte": 430,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 431,
                                          "end_byte": 442,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 443,
                                  "end_byte": 444,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 445,
                              "end_byte": 446,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 447,
                      "end_byte": 466,
                      "text": "gcd = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 447,
                          "end_byte": 464,
                          "text": "gcd = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 447,
                              "end_byte": 450,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 451,
                              "end_byte": 452,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 453,
                              "end_byte": 464,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 465,
                          "end_byte": 466,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 467,
                      "end_byte": 492,
                      "text": "lcm = num1 * num2 / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 467,
                          "end_byte": 490,
                          "text": "lcm = num1 * num2 / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 467,
                              "end_byte": 470,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 471,
                              "end_byte": 472,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 473,
                              "end_byte": 490,
                              "text": "num1 * num2 / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 473,
                                  "end_byte": 484,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 473,
                                      "end_byte": 477,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 478,
                                      "end_byte": 479,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 480,
                                      "end_byte": 484,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 485,
                                  "end_byte": 486,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 487,
                                  "end_byte": 490,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 491,
                          "end_byte": 492,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 493,
                      "end_byte": 529,
                      "text": "printf ( \"%ld %ld\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 493,
                          "end_byte": 527,
                          "text": "printf ( \"%ld %ld\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 493,
                              "end_byte": 499,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 500,
                              "end_byte": 527,
                              "text": "( \"%ld %ld\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 500,
                                  "end_byte": 501,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 502,
                                  "end_byte": 513,
                                  "text": "\"%ld %ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 502,
                                      "end_byte": 503,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 503,
                                      "end_byte": 510,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 510,
                                      "end_byte": 512,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 512,
                                      "end_byte": 513,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 514,
                                  "end_byte": 515,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 516,
                                  "end_byte": 519,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 520,
                                  "end_byte": 521,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 522,
                                  "end_byte": 525,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 526,
                                  "end_byte": 527,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 528,
                          "end_byte": 529,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 530,
                      "end_byte": 531,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 532,
              "end_byte": 542,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 532,
                  "end_byte": 538,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 539,
                  "end_byte": 540,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 541,
                  "end_byte": 542,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 543,
              "end_byte": 544,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}