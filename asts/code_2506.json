{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 463,
  "text": "void main ( ) { int num1 , num2 , gcd , lcm , rem , numrtr , denomntr ; printf ( \"entertwonum\\n\" ) ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numrtr = num1 ; denomntr = num2 ; } else { numrtr = num2 ; denomntr = num1 ; } rem = numrtr % denomntr ; while ( ( rem != 0 ) ) { numrtr = denomntr ; denomntr = rem ; rem = numrtr % denomntr ; } gcd = denomntr ; lcm = num1 * num2 / gcd ; printf ( \"GCDis=%d\\n\" , gcd ) ; printf ( \"LCMis=%d\\n\" , lcm ) ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 463,
      "text": "void main ( ) { int num1 , num2 , gcd , lcm , rem , numrtr , denomntr ; printf ( \"entertwonum\\n\" ) ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numrtr = num1 ; denomntr = num2 ; } else { numrtr = num2 ; denomntr = num1 ; } rem = numrtr % denomntr ; while ( ( rem != 0 ) ) { numrtr = denomntr ; denomntr = rem ; rem = numrtr % denomntr ; } gcd = denomntr ; lcm = num1 * num2 / gcd ; printf ( \"GCDis=%d\\n\" , gcd ) ; printf ( \"LCMis=%d\\n\" , lcm ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 463,
          "text": "{ int num1 , num2 , gcd , lcm , rem , numrtr , denomntr ; printf ( \"entertwonum\\n\" ) ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numrtr = num1 ; denomntr = num2 ; } else { numrtr = num2 ; denomntr = num1 ; } rem = numrtr % denomntr ; while ( ( rem != 0 ) ) { numrtr = denomntr ; denomntr = rem ; rem = numrtr % denomntr ; } gcd = denomntr ; lcm = num1 * num2 / gcd ; printf ( \"GCDis=%d\\n\" , gcd ) ; printf ( \"LCMis=%d\\n\" , lcm ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 71,
              "text": "int num1 , num2 , gcd , lcm , rem , numrtr , denomntr ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 24,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 49,
                  "text": "rem",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 52,
                  "end_byte": 58,
                  "text": "numrtr",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 61,
                  "end_byte": 69,
                  "text": "denomntr",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 72,
              "end_byte": 100,
              "text": "printf ( \"entertwonum\\n\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 72,
                  "end_byte": 98,
                  "text": "printf ( \"entertwonum\\n\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 72,
                      "end_byte": 78,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 79,
                      "end_byte": 98,
                      "text": "( \"entertwonum\\n\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 81,
                          "end_byte": 96,
                          "text": "\"entertwonum\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 81,
                              "end_byte": 82,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 82,
                              "end_byte": 93,
                              "text": "entertwonum",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 93,
                              "end_byte": 95,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 101,
              "end_byte": 138,
              "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 101,
                  "end_byte": 136,
                  "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 101,
                      "end_byte": 106,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 107,
                      "end_byte": 136,
                      "text": "( \"%d %d\" , & num1 , & num2 )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 109,
                          "end_byte": 116,
                          "text": "\"%d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 109,
                              "end_byte": 110,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 110,
                              "end_byte": 115,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 115,
                              "end_byte": 116,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 119,
                          "end_byte": 125,
                          "text": "& num1",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 119,
                              "end_byte": 120,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 121,
                              "end_byte": 125,
                              "text": "num1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 126,
                          "end_byte": 127,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 128,
                          "end_byte": 134,
                          "text": "& num2",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 128,
                              "end_byte": 129,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 130,
                              "end_byte": 134,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 135,
                          "end_byte": 136,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 137,
                  "end_byte": 138,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 139,
              "end_byte": 238,
              "text": "if ( num1 > num2 ) { numrtr = num1 ; denomntr = num2 ; } else { numrtr = num2 ; denomntr = num1 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 139,
                  "end_byte": 141,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 142,
                  "end_byte": 157,
                  "text": "( num1 > num2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 142,
                      "end_byte": 143,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 144,
                      "end_byte": 155,
                      "text": "num1 > num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 144,
                          "end_byte": 148,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 149,
                          "end_byte": 150,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 151,
                          "end_byte": 155,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 156,
                      "end_byte": 157,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 158,
                  "end_byte": 195,
                  "text": "{ numrtr = num1 ; denomntr = num2 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 160,
                      "end_byte": 175,
                      "text": "numrtr = num1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 160,
                          "end_byte": 173,
                          "text": "numrtr = num1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 160,
                              "end_byte": 166,
                              "text": "numrtr",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 169,
                              "end_byte": 173,
                              "text": "num1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 174,
                          "end_byte": 175,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 176,
                      "end_byte": 193,
                      "text": "denomntr = num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 176,
                          "end_byte": 191,
                          "text": "denomntr = num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 176,
                              "end_byte": 184,
                              "text": "denomntr",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 187,
                              "end_byte": 191,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 192,
                          "end_byte": 193,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 194,
                      "end_byte": 195,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 196,
                  "end_byte": 238,
                  "text": "else { numrtr = num2 ; denomntr = num1 ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 196,
                      "end_byte": 200,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 201,
                      "end_byte": 238,
                      "text": "{ numrtr = num2 ; denomntr = num1 ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 201,
                          "end_byte": 202,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 203,
                          "end_byte": 218,
                          "text": "numrtr = num2 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 203,
                              "end_byte": 216,
                              "text": "numrtr = num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 203,
                                  "end_byte": 209,
                                  "text": "numrtr",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 210,
                                  "end_byte": 211,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 212,
                                  "end_byte": 216,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 219,
                          "end_byte": 236,
                          "text": "denomntr = num1 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 219,
                              "end_byte": 234,
                              "text": "denomntr = num1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 219,
                                  "end_byte": 227,
                                  "text": "denomntr",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 228,
                                  "end_byte": 229,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 230,
                                  "end_byte": 234,
                                  "text": "num1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 235,
                              "end_byte": 236,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 237,
                          "end_byte": 238,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 239,
              "end_byte": 264,
              "text": "rem = numrtr % denomntr ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 239,
                  "end_byte": 262,
                  "text": "rem = numrtr % denomntr",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 239,
                      "end_byte": 242,
                      "text": "rem",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 243,
                      "end_byte": 244,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 245,
                      "end_byte": 262,
                      "text": "numrtr % denomntr",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 245,
                          "end_byte": 251,
                          "text": "numrtr",
                          "children": []
                        },
                        {
                          "type": "%",
                          "start_byte": 252,
                          "end_byte": 253,
                          "text": "%",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 254,
                          "end_byte": 262,
                          "text": "denomntr",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 263,
                  "end_byte": 264,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 265,
              "end_byte": 354,
              "text": "while ( ( rem != 0 ) ) { numrtr = denomntr ; denomntr = rem ; rem = numrtr % denomntr ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 265,
                  "end_byte": 270,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 271,
                  "end_byte": 287,
                  "text": "( ( rem != 0 ) )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 271,
                      "end_byte": 272,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "parenthesized_expression",
                      "start_byte": 273,
                      "end_byte": 285,
                      "text": "( rem != 0 )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 273,
                          "end_byte": 274,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 275,
                          "end_byte": 283,
                          "text": "rem != 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 275,
                              "end_byte": 278,
                              "text": "rem",
                              "children": []
                            },
                            {
                              "type": "!=",
                              "start_byte": 279,
                              "end_byte": 281,
                              "text": "!=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 282,
                              "end_byte": 283,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 284,
                          "end_byte": 285,
                          "text": ")",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 286,
                      "end_byte": 287,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 288,
                  "end_byte": 354,
                  "text": "{ numrtr = denomntr ; denomntr = rem ; rem = numrtr % denomntr ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 288,
                      "end_byte": 289,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 290,
                      "end_byte": 309,
                      "text": "numrtr = denomntr ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 290,
                          "end_byte": 307,
                          "text": "numrtr = denomntr",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 290,
                              "end_byte": 296,
                              "text": "numrtr",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 297,
                              "end_byte": 298,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 299,
                              "end_byte": 307,
                              "text": "denomntr",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 308,
                          "end_byte": 309,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 310,
                      "end_byte": 326,
                      "text": "denomntr = rem ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 310,
                          "end_byte": 324,
                          "text": "denomntr = rem",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 310,
                              "end_byte": 318,
                              "text": "denomntr",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 319,
                              "end_byte": 320,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 321,
                              "end_byte": 324,
                              "text": "rem",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 325,
                          "end_byte": 326,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 327,
                      "end_byte": 352,
                      "text": "rem = numrtr % denomntr ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 327,
                          "end_byte": 350,
                          "text": "rem = numrtr % denomntr",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 327,
                              "end_byte": 330,
                              "text": "rem",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 331,
                              "end_byte": 332,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 333,
                              "end_byte": 350,
                              "text": "numrtr % denomntr",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 333,
                                  "end_byte": 339,
                                  "text": "numrtr",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 340,
                                  "end_byte": 341,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 342,
                                  "end_byte": 350,
                                  "text": "denomntr",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 351,
                          "end_byte": 352,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 353,
                      "end_byte": 354,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 355,
              "end_byte": 371,
              "text": "gcd = denomntr ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 355,
                  "end_byte": 369,
                  "text": "gcd = denomntr",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 355,
                      "end_byte": 358,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 359,
                      "end_byte": 360,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 361,
                      "end_byte": 369,
                      "text": "denomntr",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 372,
              "end_byte": 397,
              "text": "lcm = num1 * num2 / gcd ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 372,
                  "end_byte": 395,
                  "text": "lcm = num1 * num2 / gcd",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 372,
                      "end_byte": 375,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 376,
                      "end_byte": 377,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 378,
                      "end_byte": 395,
                      "text": "num1 * num2 / gcd",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 378,
                          "end_byte": 389,
                          "text": "num1 * num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 378,
                              "end_byte": 382,
                              "text": "num1",
                              "children": []
                            },
                            {
                              "type": "*",
                              "start_byte": 383,
                              "end_byte": 384,
                              "text": "*",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 385,
                              "end_byte": 389,
                              "text": "num2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 390,
                          "end_byte": 391,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 392,
                          "end_byte": 395,
                          "text": "gcd",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 396,
                  "end_byte": 397,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 398,
              "end_byte": 429,
              "text": "printf ( \"GCDis=%d\\n\" , gcd ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 398,
                  "end_byte": 427,
                  "text": "printf ( \"GCDis=%d\\n\" , gcd )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 398,
                      "end_byte": 404,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 405,
                      "end_byte": 427,
                      "text": "( \"GCDis=%d\\n\" , gcd )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 405,
                          "end_byte": 406,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 407,
                          "end_byte": 419,
                          "text": "\"GCDis=%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 407,
                              "end_byte": 408,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 408,
                              "end_byte": 416,
                              "text": "GCDis=%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 416,
                              "end_byte": 418,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 418,
                              "end_byte": 419,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 420,
                          "end_byte": 421,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 422,
                          "end_byte": 425,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 426,
                          "end_byte": 427,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 428,
                  "end_byte": 429,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 430,
              "end_byte": 461,
              "text": "printf ( \"LCMis=%d\\n\" , lcm ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 430,
                  "end_byte": 459,
                  "text": "printf ( \"LCMis=%d\\n\" , lcm )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 430,
                      "end_byte": 436,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 437,
                      "end_byte": 459,
                      "text": "( \"LCMis=%d\\n\" , lcm )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 437,
                          "end_byte": 438,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 439,
                          "end_byte": 451,
                          "text": "\"LCMis=%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 439,
                              "end_byte": 440,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 440,
                              "end_byte": 448,
                              "text": "LCMis=%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 448,
                              "end_byte": 450,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 450,
                              "end_byte": 451,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 452,
                          "end_byte": 453,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 454,
                          "end_byte": 457,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 458,
                          "end_byte": 459,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 460,
                  "end_byte": 461,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 462,
              "end_byte": 463,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}