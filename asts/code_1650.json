{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 495,
  "text": "int arr [ 100 ] [ 100 ] , b , maxi = 0 ; int main ( ) { int i , j , k , a ; scanf ( \"%d\\n\" , & a ) ; for ( i = 0 ; i < a ; i ++ ) { scanf ( \"%d\\n\" , & b ) ; for ( j = 0 ; j < b ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } recur ( 0 , 0 , 0 ) ; printf ( \"%d\\n\" , maxi ) ; } return 0 ; } int recur ( int k , int i , int sum ) { if ( k < b ) { sum += arr [ k ] [ i ] ; recur ( k + 1 , i , sum ) ; recur ( k + 1 , i + 1 , sum ) ; } if ( sum > maxi ) maxi = sum ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 40,
      "text": "int arr [ 100 ] [ 100 ] , b , maxi = 0 ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "arr [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "arr [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "arr",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ",",
          "start_byte": 24,
          "end_byte": 25,
          "text": ",",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 26,
          "end_byte": 27,
          "text": "b",
          "children": []
        },
        {
          "type": ",",
          "start_byte": 28,
          "end_byte": 29,
          "text": ",",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 30,
          "end_byte": 38,
          "text": "maxi = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 30,
              "end_byte": 34,
              "text": "maxi",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 35,
              "end_byte": 36,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 37,
              "end_byte": 38,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 39,
          "end_byte": 40,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 41,
      "end_byte": 320,
      "text": "int main ( ) { int i , j , k , a ; scanf ( \"%d\\n\" , & a ) ; for ( i = 0 ; i < a ; i ++ ) { scanf ( \"%d\\n\" , & b ) ; for ( j = 0 ; j < b ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } recur ( 0 , 0 , 0 ) ; printf ( \"%d\\n\" , maxi ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 41,
          "end_byte": 44,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 45,
          "end_byte": 53,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 45,
              "end_byte": 49,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 50,
              "end_byte": 53,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 54,
          "end_byte": 320,
          "text": "{ int i , j , k , a ; scanf ( \"%d\\n\" , & a ) ; for ( i = 0 ; i < a ; i ++ ) { scanf ( \"%d\\n\" , & b ) ; for ( j = 0 ; j < b ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } recur ( 0 , 0 , 0 ) ; printf ( \"%d\\n\" , maxi ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 54,
              "end_byte": 55,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 56,
              "end_byte": 75,
              "text": "int i , j , k , a ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 56,
                  "end_byte": 59,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 62,
                  "end_byte": 63,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 66,
                  "end_byte": 67,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 72,
                  "end_byte": 73,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 74,
                  "end_byte": 75,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 76,
              "end_byte": 100,
              "text": "scanf ( \"%d\\n\" , & a ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 76,
                  "end_byte": 98,
                  "text": "scanf ( \"%d\\n\" , & a )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 81,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 82,
                      "end_byte": 98,
                      "text": "( \"%d\\n\" , & a )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 82,
                          "end_byte": 83,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 84,
                          "end_byte": 90,
                          "text": "\"%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 85,
                              "end_byte": 87,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 87,
                              "end_byte": 89,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 89,
                              "end_byte": 90,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 91,
                          "end_byte": 92,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 93,
                          "end_byte": 96,
                          "text": "& a",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 93,
                              "end_byte": 94,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 95,
                              "end_byte": 96,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 99,
                  "end_byte": 100,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 101,
              "end_byte": 307,
              "text": "for ( i = 0 ; i < a ; i ++ ) { scanf ( \"%d\\n\" , & b ) ; for ( j = 0 ; j < b ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } recur ( 0 , 0 , 0 ) ; printf ( \"%d\\n\" , maxi ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 101,
                  "end_byte": 104,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 105,
                  "end_byte": 106,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 107,
                  "end_byte": 112,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 111,
                      "end_byte": 112,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 115,
                  "end_byte": 120,
                  "text": "i < a",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 115,
                      "end_byte": 116,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 121,
                  "end_byte": 122,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 123,
                  "end_byte": 127,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 125,
                      "end_byte": 127,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 128,
                  "end_byte": 129,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 130,
                  "end_byte": 307,
                  "text": "{ scanf ( \"%d\\n\" , & b ) ; for ( j = 0 ; j < b ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; } recur ( 0 , 0 , 0 ) ; printf ( \"%d\\n\" , maxi ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 132,
                      "end_byte": 156,
                      "text": "scanf ( \"%d\\n\" , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 132,
                          "end_byte": 154,
                          "text": "scanf ( \"%d\\n\" , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 132,
                              "end_byte": 137,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 138,
                              "end_byte": 154,
                              "text": "( \"%d\\n\" , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 138,
                                  "end_byte": 139,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 140,
                                  "end_byte": 146,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 140,
                                      "end_byte": 141,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 141,
                                      "end_byte": 143,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 143,
                                      "end_byte": 145,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 145,
                                      "end_byte": 146,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 147,
                                  "end_byte": 148,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 149,
                                  "end_byte": 152,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 149,
                                      "end_byte": 150,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 155,
                          "end_byte": 156,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 157,
                      "end_byte": 256,
                      "text": "for ( j = 0 ; j < b ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 157,
                          "end_byte": 160,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 163,
                          "end_byte": 168,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 169,
                          "end_byte": 170,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 171,
                          "end_byte": 176,
                          "text": "j < b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 171,
                              "end_byte": 172,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 173,
                              "end_byte": 174,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 179,
                          "end_byte": 183,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 181,
                              "end_byte": 183,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 184,
                          "end_byte": 185,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 186,
                          "end_byte": 256,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 186,
                              "end_byte": 187,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 188,
                              "end_byte": 254,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) scanf ( \"%d\" , & arr [ j ] [ k ] ) ;",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 188,
                                  "end_byte": 191,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 194,
                                  "end_byte": 199,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 202,
                                  "end_byte": 208,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 202,
                                      "end_byte": 203,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 204,
                                      "end_byte": 206,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 207,
                                      "end_byte": 208,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 211,
                                  "end_byte": 215,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 213,
                                      "end_byte": 215,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 216,
                                  "end_byte": 217,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 218,
                                  "end_byte": 254,
                                  "text": "scanf ( \"%d\" , & arr [ j ] [ k ] ) ;",
                                  "children": [
                                    {
                                      "type": "call_expression",
                                      "start_byte": 218,
                                      "end_byte": 252,
                                      "text": "scanf ( \"%d\" , & arr [ j ] [ k ] )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 218,
                                          "end_byte": 223,
                                          "text": "scanf",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 224,
                                          "end_byte": 252,
                                          "text": "( \"%d\" , & arr [ j ] [ k ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 224,
                                              "end_byte": 225,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "string_literal",
                                              "start_byte": 226,
                                              "end_byte": 230,
                                              "text": "\"%d\"",
                                              "children": [
                                                {
                                                  "type": "\"",
                                                  "start_byte": 226,
                                                  "end_byte": 227,
                                                  "text": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_content",
                                                  "start_byte": 227,
                                                  "end_byte": 229,
                                                  "text": "%d",
                                                  "children": []
                                                },
                                                {
                                                  "type": "\"",
                                                  "start_byte": 229,
                                                  "end_byte": 230,
                                                  "text": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 231,
                                              "end_byte": 232,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "pointer_expression",
                                              "start_byte": 233,
                                              "end_byte": 250,
                                              "text": "& arr [ j ] [ k ]",
                                              "children": [
                                                {
                                                  "type": "&",
                                                  "start_byte": 233,
                                                  "end_byte": 234,
                                                  "text": "&",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 235,
                                                  "end_byte": 250,
                                                  "text": "arr [ j ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 235,
                                                      "end_byte": 244,
                                                      "text": "arr [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 235,
                                                          "end_byte": 238,
                                                          "text": "arr",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 239,
                                                          "end_byte": 244,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 239,
                                                              "end_byte": 240,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 241,
                                                              "end_byte": 242,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 243,
                                                              "end_byte": 244,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 245,
                                                      "end_byte": 250,
                                                      "text": "[ k ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 245,
                                                          "end_byte": 246,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 247,
                                                          "end_byte": 248,
                                                          "text": "k",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 249,
                                                          "end_byte": 250,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 251,
                                              "end_byte": 252,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 253,
                                      "end_byte": 254,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 255,
                              "end_byte": 256,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 257,
                      "end_byte": 278,
                      "text": "recur ( 0 , 0 , 0 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 257,
                          "end_byte": 276,
                          "text": "recur ( 0 , 0 , 0 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 257,
                              "end_byte": 262,
                              "text": "recur",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 263,
                              "end_byte": 276,
                              "text": "( 0 , 0 , 0 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 263,
                                  "end_byte": 264,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 265,
                                  "end_byte": 266,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 267,
                                  "end_byte": 268,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 269,
                                  "end_byte": 270,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 271,
                                  "end_byte": 272,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 273,
                                  "end_byte": 274,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 275,
                                  "end_byte": 276,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 277,
                          "end_byte": 278,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 279,
                      "end_byte": 305,
                      "text": "printf ( \"%d\\n\" , maxi ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 279,
                          "end_byte": 303,
                          "text": "printf ( \"%d\\n\" , maxi )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 279,
                              "end_byte": 285,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 286,
                              "end_byte": 303,
                              "text": "( \"%d\\n\" , maxi )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 286,
                                  "end_byte": 287,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 288,
                                  "end_byte": 294,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 288,
                                      "end_byte": 289,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 289,
                                      "end_byte": 291,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 291,
                                      "end_byte": 293,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 293,
                                      "end_byte": 294,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 295,
                                  "end_byte": 296,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 297,
                                  "end_byte": 301,
                                  "text": "maxi",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 302,
                                  "end_byte": 303,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 304,
                          "end_byte": 305,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 306,
                      "end_byte": 307,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 308,
              "end_byte": 318,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 308,
                  "end_byte": 314,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 315,
                  "end_byte": 316,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 317,
                  "end_byte": 318,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 319,
              "end_byte": 320,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 321,
      "end_byte": 495,
      "text": "int recur ( int k , int i , int sum ) { if ( k < b ) { sum += arr [ k ] [ i ] ; recur ( k + 1 , i , sum ) ; recur ( k + 1 , i + 1 , sum ) ; } if ( sum > maxi ) maxi = sum ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 321,
          "end_byte": 324,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 325,
          "end_byte": 358,
          "text": "recur ( int k , int i , int sum )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 325,
              "end_byte": 330,
              "text": "recur",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 331,
              "end_byte": 358,
              "text": "( int k , int i , int sum )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 331,
                  "end_byte": 332,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 333,
                  "end_byte": 338,
                  "text": "int k",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 333,
                      "end_byte": 336,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 337,
                      "end_byte": 338,
                      "text": "k",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 339,
                  "end_byte": 340,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 341,
                  "end_byte": 346,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 341,
                      "end_byte": 344,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 345,
                      "end_byte": 346,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 347,
                  "end_byte": 348,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 349,
                  "end_byte": 356,
                  "text": "int sum",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 349,
                      "end_byte": 352,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 353,
                      "end_byte": 356,
                      "text": "sum",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 357,
                  "end_byte": 358,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 359,
          "end_byte": 495,
          "text": "{ if ( k < b ) { sum += arr [ k ] [ i ] ; recur ( k + 1 , i , sum ) ; recur ( k + 1 , i + 1 , sum ) ; } if ( sum > maxi ) maxi = sum ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 359,
              "end_byte": 360,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 361,
              "end_byte": 462,
              "text": "if ( k < b ) { sum += arr [ k ] [ i ] ; recur ( k + 1 , i , sum ) ; recur ( k + 1 , i + 1 , sum ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 361,
                  "end_byte": 363,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 364,
                  "end_byte": 373,
                  "text": "( k < b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 364,
                      "end_byte": 365,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 366,
                      "end_byte": 371,
                      "text": "k < b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 366,
                          "end_byte": 367,
                          "text": "k",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 368,
                          "end_byte": 369,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 370,
                          "end_byte": 371,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 372,
                      "end_byte": 373,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 374,
                  "end_byte": 462,
                  "text": "{ sum += arr [ k ] [ i ] ; recur ( k + 1 , i , sum ) ; recur ( k + 1 , i + 1 , sum ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 374,
                      "end_byte": 375,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 376,
                      "end_byte": 400,
                      "text": "sum += arr [ k ] [ i ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 376,
                          "end_byte": 398,
                          "text": "sum += arr [ k ] [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 376,
                              "end_byte": 379,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "+=",
                              "start_byte": 380,
                              "end_byte": 382,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 383,
                              "end_byte": 398,
                              "text": "arr [ k ] [ i ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 383,
                                  "end_byte": 392,
                                  "text": "arr [ k ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 383,
                                      "end_byte": 386,
                                      "text": "arr",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 387,
                                      "end_byte": 392,
                                      "text": "[ k ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 387,
                                          "end_byte": 388,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 389,
                                          "end_byte": 390,
                                          "text": "k",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 391,
                                          "end_byte": 392,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 393,
                                  "end_byte": 398,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 393,
                                      "end_byte": 394,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 397,
                                      "end_byte": 398,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 399,
                          "end_byte": 400,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 401,
                      "end_byte": 428,
                      "text": "recur ( k + 1 , i , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 401,
                          "end_byte": 426,
                          "text": "recur ( k + 1 , i , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 401,
                              "end_byte": 406,
                              "text": "recur",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 407,
                              "end_byte": 426,
                              "text": "( k + 1 , i , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 407,
                                  "end_byte": 408,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 409,
                                  "end_byte": 414,
                                  "text": "k + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 409,
                                      "end_byte": 410,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 413,
                                      "end_byte": 414,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 415,
                                  "end_byte": 416,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 417,
                                  "end_byte": 418,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 419,
                                  "end_byte": 420,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 421,
                                  "end_byte": 424,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 425,
                                  "end_byte": 426,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 427,
                          "end_byte": 428,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 429,
                      "end_byte": 460,
                      "text": "recur ( k + 1 , i + 1 , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 429,
                          "end_byte": 458,
                          "text": "recur ( k + 1 , i + 1 , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 429,
                              "end_byte": 434,
                              "text": "recur",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 435,
                              "end_byte": 458,
                              "text": "( k + 1 , i + 1 , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 435,
                                  "end_byte": 436,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 437,
                                  "end_byte": 442,
                                  "text": "k + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 437,
                                      "end_byte": 438,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 439,
                                      "end_byte": 440,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 441,
                                      "end_byte": 442,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 443,
                                  "end_byte": 444,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 445,
                                  "end_byte": 450,
                                  "text": "i + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 445,
                                      "end_byte": 446,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 447,
                                      "end_byte": 448,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 449,
                                      "end_byte": 450,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 451,
                                  "end_byte": 452,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 453,
                                  "end_byte": 456,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 457,
                                  "end_byte": 458,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 459,
                          "end_byte": 460,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 461,
                      "end_byte": 462,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 463,
              "end_byte": 493,
              "text": "if ( sum > maxi ) maxi = sum ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 463,
                  "end_byte": 465,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 466,
                  "end_byte": 480,
                  "text": "( sum > maxi )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 466,
                      "end_byte": 467,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 468,
                      "end_byte": 478,
                      "text": "sum > maxi",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 468,
                          "end_byte": 471,
                          "text": "sum",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 472,
                          "end_byte": 473,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 474,
                          "end_byte": 478,
                          "text": "maxi",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 479,
                      "end_byte": 480,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 481,
                  "end_byte": 493,
                  "text": "maxi = sum ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 481,
                      "end_byte": 491,
                      "text": "maxi = sum",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 481,
                          "end_byte": 485,
                          "text": "maxi",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 486,
                          "end_byte": 487,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 488,
                          "end_byte": 491,
                          "text": "sum",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 492,
                      "end_byte": 493,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 494,
              "end_byte": 495,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}