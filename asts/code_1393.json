{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 505,
  "text": "int find_gcd ( int x , int y ) { if ( y == 0 ) return x ; else return find_gcd ( y , x % y ) ; } int main ( ) { int T , a , b , ans = 0 , * arr , gcd , lcm ; scanf ( \"%d\" , & T ) ; arr = ( int * ) malloc ( T * 2 * sizeof ( int ) ) ; while ( T -- ) { scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = ( a * b ) / gcd ; arr [ ans ++ ] = gcd ; arr [ ans ++ ] = lcm ; } for ( T = 0 ; T < ans ; T += 2 ) { printf ( \"%d %d\" , arr [ T ] , arr [ T + 1 ] ) ; if ( T != ans - 2 ) printf ( \"\\n\" ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 96,
      "text": "int find_gcd ( int x , int y ) { if ( y == 0 ) return x ; else return find_gcd ( y , x % y ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 30,
          "text": "find_gcd ( int x , int y )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 12,
              "text": "find_gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 13,
              "end_byte": 30,
              "text": "( int x , int y )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 13,
                  "end_byte": 14,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 15,
                  "end_byte": 20,
                  "text": "int x",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 15,
                      "end_byte": 18,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 19,
                      "end_byte": 20,
                      "text": "x",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 23,
                  "end_byte": 28,
                  "text": "int y",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 23,
                      "end_byte": 26,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 27,
                      "end_byte": 28,
                      "text": "y",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 31,
          "end_byte": 96,
          "text": "{ if ( y == 0 ) return x ; else return find_gcd ( y , x % y ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 31,
              "end_byte": 32,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 33,
              "end_byte": 94,
              "text": "if ( y == 0 ) return x ; else return find_gcd ( y , x % y ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 33,
                  "end_byte": 35,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 36,
                  "end_byte": 46,
                  "text": "( y == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 36,
                      "end_byte": 37,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 38,
                      "end_byte": 44,
                      "text": "y == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 38,
                          "end_byte": 39,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 40,
                          "end_byte": 42,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 43,
                          "end_byte": 44,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 45,
                      "end_byte": 46,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 47,
                  "end_byte": 57,
                  "text": "return x ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 47,
                      "end_byte": 53,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 55,
                      "text": "x",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 58,
                  "end_byte": 94,
                  "text": "else return find_gcd ( y , x % y ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 58,
                      "end_byte": 62,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 63,
                      "end_byte": 94,
                      "text": "return find_gcd ( y , x % y ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 63,
                          "end_byte": 69,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 70,
                          "end_byte": 92,
                          "text": "find_gcd ( y , x % y )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 70,
                              "end_byte": 78,
                              "text": "find_gcd",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 79,
                              "end_byte": 92,
                              "text": "( y , x % y )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 79,
                                  "end_byte": 80,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 81,
                                  "end_byte": 82,
                                  "text": "y",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 83,
                                  "end_byte": 84,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 85,
                                  "end_byte": 90,
                                  "text": "x % y",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 85,
                                      "end_byte": 86,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 87,
                                      "end_byte": 88,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 89,
                                      "end_byte": 90,
                                      "text": "y",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 91,
                                  "end_byte": 92,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 93,
                          "end_byte": 94,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 95,
              "end_byte": 96,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 97,
      "end_byte": 505,
      "text": "int main ( ) { int T , a , b , ans = 0 , * arr , gcd , lcm ; scanf ( \"%d\" , & T ) ; arr = ( int * ) malloc ( T * 2 * sizeof ( int ) ) ; while ( T -- ) { scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = ( a * b ) / gcd ; arr [ ans ++ ] = gcd ; arr [ ans ++ ] = lcm ; } for ( T = 0 ; T < ans ; T += 2 ) { printf ( \"%d %d\" , arr [ T ] , arr [ T + 1 ] ) ; if ( T != ans - 2 ) printf ( \"\\n\" ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 97,
          "end_byte": 100,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 101,
          "end_byte": 109,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 101,
              "end_byte": 105,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 106,
              "end_byte": 109,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 110,
          "end_byte": 505,
          "text": "{ int T , a , b , ans = 0 , * arr , gcd , lcm ; scanf ( \"%d\" , & T ) ; arr = ( int * ) malloc ( T * 2 * sizeof ( int ) ) ; while ( T -- ) { scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = ( a * b ) / gcd ; arr [ ans ++ ] = gcd ; arr [ ans ++ ] = lcm ; } for ( T = 0 ; T < ans ; T += 2 ) { printf ( \"%d %d\" , arr [ T ] , arr [ T + 1 ] ) ; if ( T != ans - 2 ) printf ( \"\\n\" ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 110,
              "end_byte": 111,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 112,
              "end_byte": 157,
              "text": "int T , a , b , ans = 0 , * arr , gcd , lcm ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 112,
                  "end_byte": 115,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 118,
                  "end_byte": 119,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 120,
                  "end_byte": 121,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 122,
                  "end_byte": 123,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 124,
                  "end_byte": 125,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 126,
                  "end_byte": 127,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 128,
                  "end_byte": 135,
                  "text": "ans = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 128,
                      "end_byte": 131,
                      "text": "ans",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 134,
                      "end_byte": 135,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 136,
                  "end_byte": 137,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "pointer_declarator",
                  "start_byte": 138,
                  "end_byte": 143,
                  "text": "* arr",
                  "children": [
                    {
                      "type": "*",
                      "start_byte": 138,
                      "end_byte": 139,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 140,
                      "end_byte": 143,
                      "text": "arr",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 144,
                  "end_byte": 145,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 146,
                  "end_byte": 149,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 150,
                  "end_byte": 151,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 152,
                  "end_byte": 155,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 156,
                  "end_byte": 157,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 158,
              "end_byte": 180,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 158,
                  "end_byte": 178,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 158,
                      "end_byte": 163,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 164,
                      "end_byte": 178,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 164,
                          "end_byte": 165,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 166,
                          "end_byte": 170,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 166,
                              "end_byte": 167,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 167,
                              "end_byte": 169,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 169,
                              "end_byte": 170,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 171,
                          "end_byte": 172,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 173,
                          "end_byte": 176,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 173,
                              "end_byte": 174,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 179,
                  "end_byte": 180,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 181,
              "end_byte": 232,
              "text": "arr = ( int * ) malloc ( T * 2 * sizeof ( int ) ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 181,
                  "end_byte": 230,
                  "text": "arr = ( int * ) malloc ( T * 2 * sizeof ( int ) )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 181,
                      "end_byte": 184,
                      "text": "arr",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 185,
                      "end_byte": 186,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "cast_expression",
                      "start_byte": 187,
                      "end_byte": 230,
                      "text": "( int * ) malloc ( T * 2 * sizeof ( int ) )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 187,
                          "end_byte": 188,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "type_descriptor",
                          "start_byte": 189,
                          "end_byte": 194,
                          "text": "int *",
                          "children": [
                            {
                              "type": "primitive_type",
                              "start_byte": 189,
                              "end_byte": 192,
                              "text": "int",
                              "children": []
                            },
                            {
                              "type": "abstract_pointer_declarator",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": "*",
                              "children": [
                                {
                                  "type": "*",
                                  "start_byte": 193,
                                  "end_byte": 194,
                                  "text": "*",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 195,
                          "end_byte": 196,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "call_expression",
                          "start_byte": 197,
                          "end_byte": 230,
                          "text": "malloc ( T * 2 * sizeof ( int ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 197,
                              "end_byte": 203,
                              "text": "malloc",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 204,
                              "end_byte": 230,
                              "text": "( T * 2 * sizeof ( int ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 206,
                                  "end_byte": 228,
                                  "text": "T * 2 * sizeof ( int )",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 206,
                                      "end_byte": 211,
                                      "text": "T * 2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 206,
                                          "end_byte": 207,
                                          "text": "T",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 208,
                                          "end_byte": 209,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 210,
                                          "end_byte": 211,
                                          "text": "2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 212,
                                      "end_byte": 213,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "sizeof_expression",
                                      "start_byte": 214,
                                      "end_byte": 228,
                                      "text": "sizeof ( int )",
                                      "children": [
                                        {
                                          "type": "sizeof",
                                          "start_byte": 214,
                                          "end_byte": 220,
                                          "text": "sizeof",
                                          "children": []
                                        },
                                        {
                                          "type": "(",
                                          "start_byte": 221,
                                          "end_byte": 222,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "type_descriptor",
                                          "start_byte": 223,
                                          "end_byte": 226,
                                          "text": "int",
                                          "children": [
                                            {
                                              "type": "primitive_type",
                                              "start_byte": 223,
                                              "end_byte": 226,
                                              "text": "int",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 227,
                                          "end_byte": 228,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 229,
                                  "end_byte": 230,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 231,
                  "end_byte": 232,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 233,
              "end_byte": 379,
              "text": "while ( T -- ) { scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = ( a * b ) / gcd ; arr [ ans ++ ] = gcd ; arr [ ans ++ ] = lcm ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 233,
                  "end_byte": 238,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 239,
                  "end_byte": 247,
                  "text": "( T -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 239,
                      "end_byte": 240,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 241,
                      "end_byte": 245,
                      "text": "T --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 241,
                          "end_byte": 242,
                          "text": "T",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 243,
                          "end_byte": 245,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 246,
                      "end_byte": 247,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 248,
                  "end_byte": 379,
                  "text": "{ scanf ( \"%d%d\" , & a , & b ) ; gcd = find_gcd ( a , b ) ; lcm = ( a * b ) / gcd ; arr [ ans ++ ] = gcd ; arr [ ans ++ ] = lcm ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 248,
                      "end_byte": 249,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 250,
                      "end_byte": 280,
                      "text": "scanf ( \"%d%d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 250,
                          "end_byte": 278,
                          "text": "scanf ( \"%d%d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 250,
                              "end_byte": 255,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 256,
                              "end_byte": 278,
                              "text": "( \"%d%d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 256,
                                  "end_byte": 257,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 258,
                                  "end_byte": 264,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 258,
                                      "end_byte": 259,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 259,
                                      "end_byte": 263,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 263,
                                      "end_byte": 264,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 265,
                                  "end_byte": 266,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 267,
                                  "end_byte": 270,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 267,
                                      "end_byte": 268,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 271,
                                  "end_byte": 272,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 273,
                                  "end_byte": 276,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 273,
                                      "end_byte": 274,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 275,
                                      "end_byte": 276,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 277,
                                  "end_byte": 278,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 279,
                          "end_byte": 280,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 281,
                      "end_byte": 307,
                      "text": "gcd = find_gcd ( a , b ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 281,
                          "end_byte": 305,
                          "text": "gcd = find_gcd ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 281,
                              "end_byte": 284,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 285,
                              "end_byte": 286,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 287,
                              "end_byte": 305,
                              "text": "find_gcd ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 287,
                                  "end_byte": 295,
                                  "text": "find_gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 296,
                                  "end_byte": 305,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 296,
                                      "end_byte": 297,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 298,
                                      "end_byte": 299,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 300,
                                      "end_byte": 301,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 302,
                                      "end_byte": 303,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 304,
                                      "end_byte": 305,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 306,
                          "end_byte": 307,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 308,
                      "end_byte": 331,
                      "text": "lcm = ( a * b ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 308,
                          "end_byte": 329,
                          "text": "lcm = ( a * b ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 308,
                              "end_byte": 311,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 312,
                              "end_byte": 313,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 314,
                              "end_byte": 329,
                              "text": "( a * b ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 314,
                                  "end_byte": 323,
                                  "text": "( a * b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 314,
                                      "end_byte": 315,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 316,
                                      "end_byte": 321,
                                      "text": "a * b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 316,
                                          "end_byte": 317,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 318,
                                          "end_byte": 319,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 320,
                                          "end_byte": 321,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 322,
                                      "end_byte": 323,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 324,
                                  "end_byte": 325,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 326,
                                  "end_byte": 329,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 330,
                          "end_byte": 331,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 332,
                      "end_byte": 354,
                      "text": "arr [ ans ++ ] = gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 332,
                          "end_byte": 352,
                          "text": "arr [ ans ++ ] = gcd",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 332,
                              "end_byte": 346,
                              "text": "arr [ ans ++ ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 332,
                                  "end_byte": 335,
                                  "text": "arr",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 336,
                                  "end_byte": 346,
                                  "text": "[ ans ++ ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 336,
                                      "end_byte": 337,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 338,
                                      "end_byte": 344,
                                      "text": "ans ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 338,
                                          "end_byte": 341,
                                          "text": "ans",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 342,
                                          "end_byte": 344,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 345,
                                      "end_byte": 346,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 347,
                              "end_byte": 348,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 349,
                              "end_byte": 352,
                              "text": "gcd",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 355,
                      "end_byte": 377,
                      "text": "arr [ ans ++ ] = lcm ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 355,
                          "end_byte": 375,
                          "text": "arr [ ans ++ ] = lcm",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 355,
                              "end_byte": 369,
                              "text": "arr [ ans ++ ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 355,
                                  "end_byte": 358,
                                  "text": "arr",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 359,
                                  "end_byte": 369,
                                  "text": "[ ans ++ ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 359,
                                      "end_byte": 360,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "update_expression",
                                      "start_byte": 361,
                                      "end_byte": 367,
                                      "text": "ans ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 361,
                                          "end_byte": 364,
                                          "text": "ans",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 365,
                                          "end_byte": 367,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 368,
                                      "end_byte": 369,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 370,
                              "end_byte": 371,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 372,
                              "end_byte": 375,
                              "text": "lcm",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 376,
                          "end_byte": 377,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 378,
                      "end_byte": 379,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 380,
              "end_byte": 503,
              "text": "for ( T = 0 ; T < ans ; T += 2 ) { printf ( \"%d %d\" , arr [ T ] , arr [ T + 1 ] ) ; if ( T != ans - 2 ) printf ( \"\\n\" ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 380,
                  "end_byte": 383,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 384,
                  "end_byte": 385,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 386,
                  "end_byte": 391,
                  "text": "T = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 386,
                      "end_byte": 387,
                      "text": "T",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 388,
                      "end_byte": 389,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 390,
                      "end_byte": 391,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 392,
                  "end_byte": 393,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 394,
                  "end_byte": 401,
                  "text": "T < ans",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 394,
                      "end_byte": 395,
                      "text": "T",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 396,
                      "end_byte": 397,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 398,
                      "end_byte": 401,
                      "text": "ans",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 404,
                  "end_byte": 410,
                  "text": "T += 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 404,
                      "end_byte": 405,
                      "text": "T",
                      "children": []
                    },
                    {
                      "type": "+=",
                      "start_byte": 406,
                      "end_byte": 408,
                      "text": "+=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 409,
                      "end_byte": 410,
                      "text": "2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 411,
                  "end_byte": 412,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 413,
                  "end_byte": 503,
                  "text": "{ printf ( \"%d %d\" , arr [ T ] , arr [ T + 1 ] ) ; if ( T != ans - 2 ) printf ( \"\\n\" ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 413,
                      "end_byte": 414,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 415,
                      "end_byte": 463,
                      "text": "printf ( \"%d %d\" , arr [ T ] , arr [ T + 1 ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 415,
                          "end_byte": 461,
                          "text": "printf ( \"%d %d\" , arr [ T ] , arr [ T + 1 ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 415,
                              "end_byte": 421,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 422,
                              "end_byte": 461,
                              "text": "( \"%d %d\" , arr [ T ] , arr [ T + 1 ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 422,
                                  "end_byte": 423,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 424,
                                  "end_byte": 431,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 424,
                                      "end_byte": 425,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 425,
                                      "end_byte": 430,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 430,
                                      "end_byte": 431,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 432,
                                  "end_byte": 433,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 434,
                                  "end_byte": 443,
                                  "text": "arr [ T ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 434,
                                      "end_byte": 437,
                                      "text": "arr",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 438,
                                      "end_byte": 443,
                                      "text": "[ T ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 438,
                                          "end_byte": 439,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 440,
                                          "end_byte": 441,
                                          "text": "T",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 442,
                                          "end_byte": 443,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 444,
                                  "end_byte": 445,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 446,
                                  "end_byte": 459,
                                  "text": "arr [ T + 1 ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 446,
                                      "end_byte": 449,
                                      "text": "arr",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 450,
                                      "end_byte": 459,
                                      "text": "[ T + 1 ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 450,
                                          "end_byte": 451,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 452,
                                          "end_byte": 457,
                                          "text": "T + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 452,
                                              "end_byte": 453,
                                              "text": "T",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 454,
                                              "end_byte": 455,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 456,
                                              "end_byte": 457,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 458,
                                          "end_byte": 459,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 460,
                                  "end_byte": 461,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 462,
                          "end_byte": 463,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 464,
                      "end_byte": 501,
                      "text": "if ( T != ans - 2 ) printf ( \"\\n\" ) ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 464,
                          "end_byte": 466,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 467,
                          "end_byte": 483,
                          "text": "( T != ans - 2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 467,
                              "end_byte": 468,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 469,
                              "end_byte": 481,
                              "text": "T != ans - 2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 469,
                                  "end_byte": 470,
                                  "text": "T",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 471,
                                  "end_byte": 473,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 474,
                                  "end_byte": 481,
                                  "text": "ans - 2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 474,
                                      "end_byte": 477,
                                      "text": "ans",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 478,
                                      "end_byte": 479,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 480,
                                      "end_byte": 481,
                                      "text": "2",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 482,
                              "end_byte": 483,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 484,
                          "end_byte": 501,
                          "text": "printf ( \"\\n\" ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 484,
                              "end_byte": 499,
                              "text": "printf ( \"\\n\" )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 484,
                                  "end_byte": 490,
                                  "text": "printf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 491,
                                  "end_byte": 499,
                                  "text": "( \"\\n\" )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 491,
                                      "end_byte": 492,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 493,
                                      "end_byte": 497,
                                      "text": "\"\\n\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 493,
                                          "end_byte": 494,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start_byte": 494,
                                          "end_byte": 496,
                                          "text": "\\n",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 496,
                                          "end_byte": 497,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 498,
                                      "end_byte": 499,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 500,
                              "end_byte": 501,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 502,
                      "end_byte": 503,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 504,
              "end_byte": 505,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}