{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 427,
  "text": "int gcd ( int num1 , int num2 ) { int temp ; temp = num1 % num2 ; if ( temp == 0 ) return num2 ; else gcd ( num2 , temp ) ; } int main ( ) { int T , i , k , l , A [ 1000 ] , B [ 1000 ] ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d %d\" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { k = gcd ( A [ i ] , B [ i ] ) ; l = ( A [ i ] * B [ i ] ) / k ; printf ( \"%d %d\\n\" , k , l ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 125,
      "text": "int gcd ( int num1 , int num2 ) { int temp ; temp = num1 % num2 ; if ( temp == 0 ) return num2 ; else gcd ( num2 , temp ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 31,
          "text": "gcd ( int num1 , int num2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "gcd",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 31,
              "text": "( int num1 , int num2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 18,
                  "text": "int num1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 18,
                      "text": "num1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 21,
                  "end_byte": 29,
                  "text": "int num2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 21,
                      "end_byte": 24,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 25,
                      "end_byte": 29,
                      "text": "num2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 32,
          "end_byte": 125,
          "text": "{ int temp ; temp = num1 % num2 ; if ( temp == 0 ) return num2 ; else gcd ( num2 , temp ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 32,
              "end_byte": 33,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 34,
              "end_byte": 44,
              "text": "int temp ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 42,
                  "text": "temp",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 45,
              "end_byte": 65,
              "text": "temp = num1 % num2 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 45,
                  "end_byte": 63,
                  "text": "temp = num1 % num2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 45,
                      "end_byte": 49,
                      "text": "temp",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 50,
                      "end_byte": 51,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 52,
                      "end_byte": 63,
                      "text": "num1 % num2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 52,
                          "end_byte": 56,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": "%",
                          "start_byte": 57,
                          "end_byte": 58,
                          "text": "%",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 59,
                          "end_byte": 63,
                          "text": "num2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 66,
              "end_byte": 123,
              "text": "if ( temp == 0 ) return num2 ; else gcd ( num2 , temp ) ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 66,
                  "end_byte": 68,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 69,
                  "end_byte": 82,
                  "text": "( temp == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 69,
                      "end_byte": 70,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 71,
                      "end_byte": 80,
                      "text": "temp == 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 71,
                          "end_byte": 75,
                          "text": "temp",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 76,
                          "end_byte": 78,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 81,
                      "end_byte": 82,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 83,
                  "end_byte": 96,
                  "text": "return num2 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 83,
                      "end_byte": 89,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 90,
                      "end_byte": 94,
                      "text": "num2",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 95,
                      "end_byte": 96,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 97,
                  "end_byte": 123,
                  "text": "else gcd ( num2 , temp ) ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 97,
                      "end_byte": 101,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 102,
                      "end_byte": 123,
                      "text": "gcd ( num2 , temp ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 102,
                          "end_byte": 121,
                          "text": "gcd ( num2 , temp )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 102,
                              "end_byte": 105,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 106,
                              "end_byte": 121,
                              "text": "( num2 , temp )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 106,
                                  "end_byte": 107,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 108,
                                  "end_byte": 112,
                                  "text": "num2",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 113,
                                  "end_byte": 114,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 115,
                                  "end_byte": 119,
                                  "text": "temp",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 120,
                                  "end_byte": 121,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 124,
              "end_byte": 125,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 126,
      "end_byte": 427,
      "text": "int main ( ) { int T , i , k , l , A [ 1000 ] , B [ 1000 ] ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d %d\" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { k = gcd ( A [ i ] , B [ i ] ) ; l = ( A [ i ] * B [ i ] ) / k ; printf ( \"%d %d\\n\" , k , l ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 126,
          "end_byte": 129,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 130,
          "end_byte": 138,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 130,
              "end_byte": 134,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 135,
              "end_byte": 138,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 135,
                  "end_byte": 136,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 137,
                  "end_byte": 138,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 139,
          "end_byte": 427,
          "text": "{ int T , i , k , l , A [ 1000 ] , B [ 1000 ] ; scanf ( \"%d\" , & T ) ; for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d %d\" , & A [ i ] , & B [ i ] ) ; } for ( i = 0 ; i < T ; i ++ ) { k = gcd ( A [ i ] , B [ i ] ) ; l = ( A [ i ] * B [ i ] ) / k ; printf ( \"%d %d\\n\" , k , l ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 139,
              "end_byte": 140,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 141,
              "end_byte": 186,
              "text": "int T , i , k , l , A [ 1000 ] , B [ 1000 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 141,
                  "end_byte": 144,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 145,
                  "end_byte": 146,
                  "text": "T",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 147,
                  "end_byte": 148,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 149,
                  "end_byte": 150,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 151,
                  "end_byte": 152,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 153,
                  "end_byte": 154,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 155,
                  "end_byte": 156,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 157,
                  "end_byte": 158,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 159,
                  "end_byte": 160,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 161,
                  "end_byte": 171,
                  "text": "A [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "A",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 163,
                      "end_byte": 164,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 165,
                      "end_byte": 169,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 170,
                      "end_byte": 171,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 172,
                  "end_byte": 173,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 174,
                  "end_byte": 184,
                  "text": "B [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 174,
                      "end_byte": 175,
                      "text": "B",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 178,
                      "end_byte": 182,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 183,
                      "end_byte": 184,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 185,
                  "end_byte": 186,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 187,
              "end_byte": 209,
              "text": "scanf ( \"%d\" , & T ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 187,
                  "end_byte": 207,
                  "text": "scanf ( \"%d\" , & T )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 187,
                      "end_byte": 192,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 193,
                      "end_byte": 207,
                      "text": "( \"%d\" , & T )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 193,
                          "end_byte": 194,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 195,
                          "end_byte": 199,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 195,
                              "end_byte": 196,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 196,
                              "end_byte": 198,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 198,
                              "end_byte": 199,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 200,
                          "end_byte": 201,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 202,
                          "end_byte": 205,
                          "text": "& T",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 204,
                              "end_byte": 205,
                              "text": "T",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 206,
                          "end_byte": 207,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 208,
                  "end_byte": 209,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 210,
              "end_byte": 286,
              "text": "for ( i = 0 ; i < T ; i ++ ) { scanf ( \"%d %d\" , & A [ i ] , & B [ i ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 210,
                  "end_byte": 213,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 214,
                  "end_byte": 215,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 216,
                  "end_byte": 221,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 216,
                      "end_byte": 217,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 218,
                      "end_byte": 219,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 222,
                  "end_byte": 223,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 224,
                  "end_byte": 229,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 224,
                      "end_byte": 225,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 226,
                      "end_byte": 227,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 228,
                      "end_byte": 229,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 230,
                  "end_byte": 231,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 232,
                  "end_byte": 236,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 232,
                      "end_byte": 233,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 234,
                      "end_byte": 236,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 237,
                  "end_byte": 238,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 239,
                  "end_byte": 286,
                  "text": "{ scanf ( \"%d %d\" , & A [ i ] , & B [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 239,
                      "end_byte": 240,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 241,
                      "end_byte": 284,
                      "text": "scanf ( \"%d %d\" , & A [ i ] , & B [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 241,
                          "end_byte": 282,
                          "text": "scanf ( \"%d %d\" , & A [ i ] , & B [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 241,
                              "end_byte": 246,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 247,
                              "end_byte": 282,
                              "text": "( \"%d %d\" , & A [ i ] , & B [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 247,
                                  "end_byte": 248,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 249,
                                  "end_byte": 256,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 249,
                                      "end_byte": 250,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 250,
                                      "end_byte": 255,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 255,
                                      "end_byte": 256,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 257,
                                  "end_byte": 258,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 259,
                                  "end_byte": 268,
                                  "text": "& A [ i ]",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 259,
                                      "end_byte": 260,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 261,
                                      "end_byte": 268,
                                      "text": "A [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 261,
                                          "end_byte": 262,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 263,
                                          "end_byte": 268,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 263,
                                              "end_byte": 264,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 265,
                                              "end_byte": 266,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 267,
                                              "end_byte": 268,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 269,
                                  "end_byte": 270,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 271,
                                  "end_byte": 280,
                                  "text": "& B [ i ]",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 271,
                                      "end_byte": 272,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 273,
                                      "end_byte": 280,
                                      "text": "B [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 273,
                                          "end_byte": 274,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 275,
                                          "end_byte": 280,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 275,
                                              "end_byte": 276,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 277,
                                              "end_byte": 278,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 279,
                                              "end_byte": 280,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 281,
                                  "end_byte": 282,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 283,
                          "end_byte": 284,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 285,
                      "end_byte": 286,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 287,
              "end_byte": 414,
              "text": "for ( i = 0 ; i < T ; i ++ ) { k = gcd ( A [ i ] , B [ i ] ) ; l = ( A [ i ] * B [ i ] ) / k ; printf ( \"%d %d\\n\" , k , l ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 287,
                  "end_byte": 290,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 291,
                  "end_byte": 292,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 293,
                  "end_byte": 298,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 293,
                      "end_byte": 294,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 295,
                      "end_byte": 296,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 297,
                      "end_byte": 298,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 299,
                  "end_byte": 300,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 301,
                  "end_byte": 306,
                  "text": "i < T",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 301,
                      "end_byte": 302,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 303,
                      "end_byte": 304,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 305,
                      "end_byte": 306,
                      "text": "T",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 307,
                  "end_byte": 308,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 309,
                  "end_byte": 313,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 309,
                      "end_byte": 310,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 311,
                      "end_byte": 313,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 314,
                  "end_byte": 315,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 316,
                  "end_byte": 414,
                  "text": "{ k = gcd ( A [ i ] , B [ i ] ) ; l = ( A [ i ] * B [ i ] ) / k ; printf ( \"%d %d\\n\" , k , l ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 316,
                      "end_byte": 317,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 318,
                      "end_byte": 349,
                      "text": "k = gcd ( A [ i ] , B [ i ] ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 318,
                          "end_byte": 347,
                          "text": "k = gcd ( A [ i ] , B [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 318,
                              "end_byte": 319,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 320,
                              "end_byte": 321,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 322,
                              "end_byte": 347,
                              "text": "gcd ( A [ i ] , B [ i ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 322,
                                  "end_byte": 325,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 326,
                                  "end_byte": 347,
                                  "text": "( A [ i ] , B [ i ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 328,
                                      "end_byte": 335,
                                      "text": "A [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 328,
                                          "end_byte": 329,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 330,
                                          "end_byte": 335,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 330,
                                              "end_byte": 331,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 332,
                                              "end_byte": 333,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 334,
                                              "end_byte": 335,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 336,
                                      "end_byte": 337,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 338,
                                      "end_byte": 345,
                                      "text": "B [ i ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 338,
                                          "end_byte": 339,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 340,
                                          "end_byte": 345,
                                          "text": "[ i ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 340,
                                              "end_byte": 341,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 342,
                                              "end_byte": 343,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 344,
                                              "end_byte": 345,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 346,
                                      "end_byte": 347,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 348,
                          "end_byte": 349,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 350,
                      "end_byte": 381,
                      "text": "l = ( A [ i ] * B [ i ] ) / k ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 350,
                          "end_byte": 379,
                          "text": "l = ( A [ i ] * B [ i ] ) / k",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 350,
                              "end_byte": 351,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 352,
                              "end_byte": 353,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 354,
                              "end_byte": 379,
                              "text": "( A [ i ] * B [ i ] ) / k",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 354,
                                  "end_byte": 375,
                                  "text": "( A [ i ] * B [ i ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 354,
                                      "end_byte": 355,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 356,
                                      "end_byte": 373,
                                      "text": "A [ i ] * B [ i ]",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 356,
                                          "end_byte": 363,
                                          "text": "A [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 356,
                                              "end_byte": 357,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 358,
                                              "end_byte": 363,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 358,
                                                  "end_byte": 359,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 360,
                                                  "end_byte": 361,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 362,
                                                  "end_byte": 363,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 364,
                                          "end_byte": 365,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 366,
                                          "end_byte": 373,
                                          "text": "B [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 366,
                                              "end_byte": 367,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 368,
                                              "end_byte": 373,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 368,
                                                  "end_byte": 369,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 370,
                                                  "end_byte": 371,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 372,
                                                  "end_byte": 373,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 374,
                                      "end_byte": 375,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 376,
                                  "end_byte": 377,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 378,
                                  "end_byte": 379,
                                  "text": "k",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 380,
                          "end_byte": 381,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 382,
                      "end_byte": 412,
                      "text": "printf ( \"%d %d\\n\" , k , l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 382,
                          "end_byte": 410,
                          "text": "printf ( \"%d %d\\n\" , k , l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 382,
                              "end_byte": 388,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 389,
                              "end_byte": 410,
                              "text": "( \"%d %d\\n\" , k , l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 389,
                                  "end_byte": 390,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 391,
                                  "end_byte": 400,
                                  "text": "\"%d %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 391,
                                      "end_byte": 392,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 392,
                                      "end_byte": 397,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 397,
                                      "end_byte": 399,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 399,
                                      "end_byte": 400,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 401,
                                  "end_byte": 402,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 403,
                                  "end_byte": 404,
                                  "text": "k",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 405,
                                  "end_byte": 406,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 407,
                                  "end_byte": 408,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 409,
                                  "end_byte": 410,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 411,
                          "end_byte": 412,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 413,
                      "end_byte": 414,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 415,
              "end_byte": 425,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 415,
                  "end_byte": 421,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 422,
                  "end_byte": 423,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 424,
                  "end_byte": 425,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 426,
              "end_byte": 427,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}