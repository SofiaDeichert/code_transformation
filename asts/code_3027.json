{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 545,
  "text": "void main ( ) { int add [ 100 ] , i , j , lines , k , test , sum = 0 , n , large = 0 , cout = 0 , p [ 100 ] ; scanf ( \"%d\" , & test ) ; add [ 0 ] = 0 ; for ( i = 0 ; i < test ; i ++ ) { scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { cout ++ ; for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } } sum = 0 ; } } for ( i = 0 ; i < test ; i ++ ) { printf ( \"\\n%d \" , p [ i ] + test + i ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 545,
      "text": "void main ( ) { int add [ 100 ] , i , j , lines , k , test , sum = 0 , n , large = 0 , cout = 0 , p [ 100 ] ; scanf ( \"%d\" , & test ) ; add [ 0 ] = 0 ; for ( i = 0 ; i < test ; i ++ ) { scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { cout ++ ; for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } } sum = 0 ; } } for ( i = 0 ; i < test ; i ++ ) { printf ( \"\\n%d \" , p [ i ] + test + i ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 545,
          "text": "{ int add [ 100 ] , i , j , lines , k , test , sum = 0 , n , large = 0 , cout = 0 , p [ 100 ] ; scanf ( \"%d\" , & test ) ; add [ 0 ] = 0 ; for ( i = 0 ; i < test ; i ++ ) { scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { cout ++ ; for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } } sum = 0 ; } } for ( i = 0 ; i < test ; i ++ ) { printf ( \"\\n%d \" , p [ i ] + test + i ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 109,
              "text": "int add [ 100 ] , i , j , lines , k , test , sum = 0 , n , large = 0 , cout = 0 , p [ 100 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 20,
                  "end_byte": 31,
                  "text": "add [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 20,
                      "end_byte": 23,
                      "text": "add",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 24,
                      "end_byte": 25,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 26,
                      "end_byte": 29,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 30,
                      "end_byte": 31,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 40,
                  "end_byte": 41,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 42,
                  "end_byte": 47,
                  "text": "lines",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 54,
                  "end_byte": 58,
                  "text": "test",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 61,
                  "end_byte": 68,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 61,
                      "end_byte": 64,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 75,
                  "end_byte": 84,
                  "text": "large = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 75,
                      "end_byte": 80,
                      "text": "large",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 81,
                      "end_byte": 82,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 83,
                      "end_byte": 84,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 85,
                  "end_byte": 86,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 87,
                  "end_byte": 95,
                  "text": "cout = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 87,
                      "end_byte": 91,
                      "text": "cout",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 92,
                      "end_byte": 93,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 98,
                  "end_byte": 107,
                  "text": "p [ 100 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "p",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 102,
                      "end_byte": 105,
                      "text": "100",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 106,
                      "end_byte": 107,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 108,
                  "end_byte": 109,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 110,
              "end_byte": 135,
              "text": "scanf ( \"%d\" , & test ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 110,
                  "end_byte": 133,
                  "text": "scanf ( \"%d\" , & test )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 110,
                      "end_byte": 115,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 116,
                      "end_byte": 133,
                      "text": "( \"%d\" , & test )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 116,
                          "end_byte": 117,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 118,
                          "end_byte": 122,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 119,
                              "end_byte": 121,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 121,
                              "end_byte": 122,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 125,
                          "end_byte": 131,
                          "text": "& test",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 127,
                              "end_byte": 131,
                              "text": "test",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 134,
                  "end_byte": 135,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 136,
              "end_byte": 151,
              "text": "add [ 0 ] = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 136,
                  "end_byte": 149,
                  "text": "add [ 0 ] = 0",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 136,
                      "end_byte": 145,
                      "text": "add [ 0 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 136,
                          "end_byte": 139,
                          "text": "add",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 140,
                          "end_byte": 145,
                          "text": "[ 0 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 140,
                              "end_byte": 141,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "start_byte": 146,
                      "end_byte": 147,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 148,
                      "end_byte": 149,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 150,
                  "end_byte": 151,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 152,
              "end_byte": 465,
              "text": "for ( i = 0 ; i < test ; i ++ ) { scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { cout ++ ; for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } } sum = 0 ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 152,
                  "end_byte": 155,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 156,
                  "end_byte": 157,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 158,
                  "end_byte": 163,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 158,
                      "end_byte": 159,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 160,
                      "end_byte": 161,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 162,
                      "end_byte": 163,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 164,
                  "end_byte": 165,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 166,
                  "end_byte": 174,
                  "text": "i < test",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 166,
                      "end_byte": 167,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 168,
                      "end_byte": 169,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 170,
                      "end_byte": 174,
                      "text": "test",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 175,
                  "end_byte": 176,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 177,
                  "end_byte": 181,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 177,
                      "end_byte": 178,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 179,
                      "end_byte": 181,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 182,
                  "end_byte": 183,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 184,
                  "end_byte": 465,
                  "text": "{ scanf ( \"%d\" , & lines ) ; for ( j = 0 ; j < lines ; j ++ ) { cout ++ ; for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } } sum = 0 ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 184,
                      "end_byte": 185,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 186,
                      "end_byte": 212,
                      "text": "scanf ( \"%d\" , & lines ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 186,
                          "end_byte": 210,
                          "text": "scanf ( \"%d\" , & lines )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 186,
                              "end_byte": 191,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 192,
                              "end_byte": 210,
                              "text": "( \"%d\" , & lines )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 194,
                                  "end_byte": 198,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 195,
                                      "end_byte": 197,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 199,
                                  "end_byte": 200,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 201,
                                  "end_byte": 208,
                                  "text": "& lines",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 201,
                                      "end_byte": 202,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 203,
                                      "end_byte": 208,
                                      "text": "lines",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 211,
                          "end_byte": 212,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 213,
                      "end_byte": 463,
                      "text": "for ( j = 0 ; j < lines ; j ++ ) { cout ++ ; for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } } sum = 0 ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 213,
                          "end_byte": 216,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 217,
                          "end_byte": 218,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 219,
                          "end_byte": 224,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 219,
                              "end_byte": 220,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 221,
                              "end_byte": 222,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 223,
                              "end_byte": 224,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 225,
                          "end_byte": 226,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 227,
                          "end_byte": 236,
                          "text": "j < lines",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 227,
                              "end_byte": 228,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 229,
                              "end_byte": 230,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 231,
                              "end_byte": 236,
                              "text": "lines",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 237,
                          "end_byte": 238,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 239,
                          "end_byte": 243,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 239,
                              "end_byte": 240,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 241,
                              "end_byte": 243,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 244,
                          "end_byte": 245,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 246,
                          "end_byte": 463,
                          "text": "{ cout ++ ; for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } } sum = 0 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 246,
                              "end_byte": 247,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 248,
                              "end_byte": 257,
                              "text": "cout ++ ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 248,
                                  "end_byte": 255,
                                  "text": "cout ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 248,
                                      "end_byte": 252,
                                      "text": "cout",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 253,
                                      "end_byte": 255,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 256,
                                  "end_byte": 257,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 258,
                              "end_byte": 451,
                              "text": "for ( k = 0 ; k < j + 1 ; k ++ ) { scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 258,
                                  "end_byte": 261,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 262,
                                  "end_byte": 263,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 264,
                                  "end_byte": 269,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 266,
                                      "end_byte": 267,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 268,
                                      "end_byte": 269,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 270,
                                  "end_byte": 271,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 272,
                                  "end_byte": 281,
                                  "text": "k < j + 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 272,
                                      "end_byte": 273,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 274,
                                      "end_byte": 275,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 276,
                                      "end_byte": 281,
                                      "text": "j + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 276,
                                          "end_byte": 277,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 278,
                                          "end_byte": 279,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 280,
                                          "end_byte": 281,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 282,
                                  "end_byte": 283,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 284,
                                  "end_byte": 288,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 286,
                                      "end_byte": 288,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 289,
                                  "end_byte": 290,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 291,
                                  "end_byte": 451,
                                  "text": "{ scanf ( \"%d\" , & n ) ; sum = sum + n ; if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 291,
                                      "end_byte": 292,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 293,
                                      "end_byte": 315,
                                      "text": "scanf ( \"%d\" , & n ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 293,
                                          "end_byte": 313,
                                          "text": "scanf ( \"%d\" , & n )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 293,
                                              "end_byte": 298,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 299,
                                              "end_byte": 313,
                                              "text": "( \"%d\" , & n )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 299,
                                                  "end_byte": 300,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 301,
                                                  "end_byte": 305,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 301,
                                                      "end_byte": 302,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 302,
                                                      "end_byte": 304,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 304,
                                                      "end_byte": 305,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 306,
                                                  "end_byte": 307,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 308,
                                                  "end_byte": 311,
                                                  "text": "& n",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 308,
                                                      "end_byte": 309,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 310,
                                                      "end_byte": 311,
                                                      "text": "n",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 312,
                                                  "end_byte": 313,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 314,
                                          "end_byte": 315,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 316,
                                      "end_byte": 331,
                                      "text": "sum = sum + n ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 316,
                                          "end_byte": 329,
                                          "text": "sum = sum + n",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 316,
                                              "end_byte": 319,
                                              "text": "sum",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 320,
                                              "end_byte": 321,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 322,
                                              "end_byte": 329,
                                              "text": "sum + n",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 322,
                                                  "end_byte": 325,
                                                  "text": "sum",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 326,
                                                  "end_byte": 327,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 328,
                                                  "end_byte": 329,
                                                  "text": "n",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 330,
                                          "end_byte": 331,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 332,
                                      "end_byte": 449,
                                      "text": "if ( sum > large ) { large = sum ; p [ i ] = cout ; } else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 332,
                                          "end_byte": 334,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 335,
                                          "end_byte": 350,
                                          "text": "( sum > large )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 335,
                                              "end_byte": 336,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 337,
                                              "end_byte": 348,
                                              "text": "sum > large",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 337,
                                                  "end_byte": 340,
                                                  "text": "sum",
                                                  "children": []
                                                },
                                                {
                                                  "type": ">",
                                                  "start_byte": 341,
                                                  "end_byte": 342,
                                                  "text": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 343,
                                                  "end_byte": 348,
                                                  "text": "large",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 349,
                                              "end_byte": 350,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 351,
                                          "end_byte": 385,
                                          "text": "{ large = sum ; p [ i ] = cout ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 351,
                                              "end_byte": 352,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 353,
                                              "end_byte": 366,
                                              "text": "large = sum ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 353,
                                                  "end_byte": 364,
                                                  "text": "large = sum",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 353,
                                                      "end_byte": 358,
                                                      "text": "large",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 359,
                                                      "end_byte": 360,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 361,
                                                      "end_byte": 364,
                                                      "text": "sum",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 365,
                                                  "end_byte": 366,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 367,
                                              "end_byte": 383,
                                              "text": "p [ i ] = cout ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 367,
                                                  "end_byte": 381,
                                                  "text": "p [ i ] = cout",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 367,
                                                      "end_byte": 374,
                                                      "text": "p [ i ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 367,
                                                          "end_byte": 368,
                                                          "text": "p",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 369,
                                                          "end_byte": 374,
                                                          "text": "[ i ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 369,
                                                              "end_byte": 370,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 371,
                                                              "end_byte": 372,
                                                              "text": "i",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 373,
                                                              "end_byte": 374,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 375,
                                                      "end_byte": 376,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 377,
                                                      "end_byte": 381,
                                                      "text": "cout",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 382,
                                                  "end_byte": 383,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 384,
                                              "end_byte": 385,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 386,
                                          "end_byte": 449,
                                          "text": "else if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 386,
                                              "end_byte": 390,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "if_statement",
                                              "start_byte": 391,
                                              "end_byte": 449,
                                              "text": "if ( sum == large ) { large = sum ; p [ i ] = cout - 1 ; }",
                                              "children": [
                                                {
                                                  "type": "if",
                                                  "start_byte": 391,
                                                  "end_byte": 393,
                                                  "text": "if",
                                                  "children": []
                                                },
                                                {
                                                  "type": "condition_clause",
                                                  "start_byte": 394,
                                                  "end_byte": 410,
                                                  "text": "( sum == large )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 394,
                                                      "end_byte": 395,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 396,
                                                      "end_byte": 408,
                                                      "text": "sum == large",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 396,
                                                          "end_byte": 399,
                                                          "text": "sum",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "==",
                                                          "start_byte": 400,
                                                          "end_byte": 402,
                                                          "text": "==",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 403,
                                                          "end_byte": 408,
                                                          "text": "large",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 409,
                                                      "end_byte": 410,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "compound_statement",
                                                  "start_byte": 411,
                                                  "end_byte": 449,
                                                  "text": "{ large = sum ; p [ i ] = cout - 1 ; }",
                                                  "children": [
                                                    {
                                                      "type": "{",
                                                      "start_byte": 411,
                                                      "end_byte": 412,
                                                      "text": "{",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 413,
                                                      "end_byte": 426,
                                                      "text": "large = sum ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 413,
                                                          "end_byte": 424,
                                                          "text": "large = sum",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 413,
                                                              "end_byte": 418,
                                                              "text": "large",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 419,
                                                              "end_byte": 420,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 421,
                                                              "end_byte": 424,
                                                              "text": "sum",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 425,
                                                          "end_byte": 426,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "expression_statement",
                                                      "start_byte": 427,
                                                      "end_byte": 447,
                                                      "text": "p [ i ] = cout - 1 ;",
                                                      "children": [
                                                        {
                                                          "type": "assignment_expression",
                                                          "start_byte": 427,
                                                          "end_byte": 445,
                                                          "text": "p [ i ] = cout - 1",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 427,
                                                              "end_byte": 434,
                                                              "text": "p [ i ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 427,
                                                                  "end_byte": 428,
                                                                  "text": "p",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 429,
                                                                  "end_byte": 434,
                                                                  "text": "[ i ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 429,
                                                                      "end_byte": 430,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 431,
                                                                      "end_byte": 432,
                                                                      "text": "i",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 433,
                                                                      "end_byte": 434,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "=",
                                                              "start_byte": 435,
                                                              "end_byte": 436,
                                                              "text": "=",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "binary_expression",
                                                              "start_byte": 437,
                                                              "end_byte": 445,
                                                              "text": "cout - 1",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 437,
                                                                  "end_byte": 441,
                                                                  "text": "cout",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "-",
                                                                  "start_byte": 442,
                                                                  "end_byte": 443,
                                                                  "text": "-",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "number_literal",
                                                                  "start_byte": 444,
                                                                  "end_byte": 445,
                                                                  "text": "1",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ";",
                                                          "start_byte": 446,
                                                          "end_byte": 447,
                                                          "text": ";",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "}",
                                                      "start_byte": 448,
                                                      "end_byte": 449,
                                                      "text": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 450,
                                      "end_byte": 451,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 452,
                              "end_byte": 461,
                              "text": "sum = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 452,
                                  "end_byte": 459,
                                  "text": "sum = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 452,
                                      "end_byte": 455,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 456,
                                      "end_byte": 457,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 458,
                                      "end_byte": 459,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 460,
                                  "end_byte": 461,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 462,
                              "end_byte": 463,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 464,
                      "end_byte": 465,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 466,
              "end_byte": 543,
              "text": "for ( i = 0 ; i < test ; i ++ ) { printf ( \"\\n%d \" , p [ i ] + test + i ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 466,
                  "end_byte": 469,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 470,
                  "end_byte": 471,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 472,
                  "end_byte": 477,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 472,
                      "end_byte": 473,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 474,
                      "end_byte": 475,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 476,
                      "end_byte": 477,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 478,
                  "end_byte": 479,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 480,
                  "end_byte": 488,
                  "text": "i < test",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 480,
                      "end_byte": 481,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 482,
                      "end_byte": 483,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 484,
                      "end_byte": 488,
                      "text": "test",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 489,
                  "end_byte": 490,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 491,
                  "end_byte": 495,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 491,
                      "end_byte": 492,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 493,
                      "end_byte": 495,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 496,
                  "end_byte": 497,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 498,
                  "end_byte": 543,
                  "text": "{ printf ( \"\\n%d \" , p [ i ] + test + i ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 498,
                      "end_byte": 499,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 500,
                      "end_byte": 541,
                      "text": "printf ( \"\\n%d \" , p [ i ] + test + i ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 500,
                          "end_byte": 539,
                          "text": "printf ( \"\\n%d \" , p [ i ] + test + i )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 500,
                              "end_byte": 506,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 507,
                              "end_byte": 539,
                              "text": "( \"\\n%d \" , p [ i ] + test + i )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 507,
                                  "end_byte": 508,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 509,
                                  "end_byte": 516,
                                  "text": "\"\\n%d \"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 509,
                                      "end_byte": 510,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 510,
                                      "end_byte": 512,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 512,
                                      "end_byte": 515,
                                      "text": "%d ",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 515,
                                      "end_byte": 516,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 517,
                                  "end_byte": 518,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 519,
                                  "end_byte": 537,
                                  "text": "p [ i ] + test + i",
                                  "children": [
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 519,
                                      "end_byte": 533,
                                      "text": "p [ i ] + test",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 519,
                                          "end_byte": 526,
                                          "text": "p [ i ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 519,
                                              "end_byte": 520,
                                              "text": "p",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 521,
                                              "end_byte": 526,
                                              "text": "[ i ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 521,
                                                  "end_byte": 522,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 523,
                                                  "end_byte": 524,
                                                  "text": "i",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 525,
                                                  "end_byte": 526,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 527,
                                          "end_byte": 528,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 529,
                                          "end_byte": 533,
                                          "text": "test",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 534,
                                      "end_byte": 535,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 536,
                                      "end_byte": 537,
                                      "text": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 538,
                                  "end_byte": 539,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 540,
                          "end_byte": 541,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 542,
                      "end_byte": 543,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 544,
              "end_byte": 545,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}