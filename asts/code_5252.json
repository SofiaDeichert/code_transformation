{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 503,
  "text": "void play ( int n1 , int n2 , int num1 , int num2 , int rem , int GCD , int LCM ) { if ( n2 != 0 ) { rem = n1 % n2 ; n1 = n2 ; n2 = rem ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; } else { GCD = n1 ; LCM = ( num1 * num2 ) / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; } } int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , num1 , num2 , rem , GCD , LCM ; scanf ( \"%d %d\" , & num1 , & num2 ) ; n1 = num1 , n2 = num2 ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 277,
      "text": "void play ( int n1 , int n2 , int num1 , int num2 , int rem , int GCD , int LCM ) { if ( n2 != 0 ) { rem = n1 % n2 ; n1 = n2 ; n2 = rem ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; } else { GCD = n1 ; LCM = ( num1 * num2 ) / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 81,
          "text": "play ( int n1 , int n2 , int num1 , int num2 , int rem , int GCD , int LCM )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "play",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 81,
              "text": "( int n1 , int n2 , int num1 , int num2 , int rem , int GCD , int LCM )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 12,
                  "end_byte": 18,
                  "text": "int n1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 12,
                      "end_byte": 15,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 16,
                      "end_byte": 18,
                      "text": "n1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 21,
                  "end_byte": 27,
                  "text": "int n2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 21,
                      "end_byte": 24,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 25,
                      "end_byte": 27,
                      "text": "n2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 30,
                  "end_byte": 38,
                  "text": "int num1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 30,
                      "end_byte": 33,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 34,
                      "end_byte": 38,
                      "text": "num1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 39,
                  "end_byte": 40,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 41,
                  "end_byte": 49,
                  "text": "int num2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 41,
                      "end_byte": 44,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 45,
                      "end_byte": 49,
                      "text": "num2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 52,
                  "end_byte": 59,
                  "text": "int rem",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 52,
                      "end_byte": 55,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 56,
                      "end_byte": 59,
                      "text": "rem",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 60,
                  "end_byte": 61,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 62,
                  "end_byte": 69,
                  "text": "int GCD",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 62,
                      "end_byte": 65,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 66,
                      "end_byte": 69,
                      "text": "GCD",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 72,
                  "end_byte": 79,
                  "text": "int LCM",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 72,
                      "end_byte": 75,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 76,
                      "end_byte": 79,
                      "text": "LCM",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 82,
          "end_byte": 277,
          "text": "{ if ( n2 != 0 ) { rem = n1 % n2 ; n1 = n2 ; n2 = rem ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; } else { GCD = n1 ; LCM = ( num1 * num2 ) / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 82,
              "end_byte": 83,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 84,
              "end_byte": 275,
              "text": "if ( n2 != 0 ) { rem = n1 % n2 ; n1 = n2 ; n2 = rem ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; } else { GCD = n1 ; LCM = ( num1 * num2 ) / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 84,
                  "end_byte": 86,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 87,
                  "end_byte": 98,
                  "text": "( n2 != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 87,
                      "end_byte": 88,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 89,
                      "end_byte": 96,
                      "text": "n2 != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 89,
                          "end_byte": 91,
                          "text": "n2",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 92,
                          "end_byte": 94,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 97,
                      "end_byte": 98,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 99,
                  "end_byte": 190,
                  "text": "{ rem = n1 % n2 ; n1 = n2 ; n2 = rem ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 101,
                      "end_byte": 116,
                      "text": "rem = n1 % n2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 101,
                          "end_byte": 114,
                          "text": "rem = n1 % n2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 101,
                              "end_byte": 104,
                              "text": "rem",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 107,
                              "end_byte": 114,
                              "text": "n1 % n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 107,
                                  "end_byte": 109,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 110,
                                  "end_byte": 111,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 112,
                                  "end_byte": 114,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 115,
                          "end_byte": 116,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 117,
                      "end_byte": 126,
                      "text": "n1 = n2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 117,
                          "end_byte": 124,
                          "text": "n1 = n2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 117,
                              "end_byte": 119,
                              "text": "n1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 120,
                              "end_byte": 121,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 122,
                              "end_byte": 124,
                              "text": "n2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 127,
                      "end_byte": 137,
                      "text": "n2 = rem ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 127,
                          "end_byte": 135,
                          "text": "n2 = rem",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 127,
                              "end_byte": 129,
                              "text": "n2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 130,
                              "end_byte": 131,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 132,
                              "end_byte": 135,
                              "text": "rem",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 136,
                          "end_byte": 137,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 138,
                      "end_byte": 188,
                      "text": "play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 138,
                          "end_byte": 186,
                          "text": "play ( n1 , n2 , num1 , num2 , rem , GCD , LCM )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 138,
                              "end_byte": 142,
                              "text": "play",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 143,
                              "end_byte": 186,
                              "text": "( n1 , n2 , num1 , num2 , rem , GCD , LCM )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 143,
                                  "end_byte": 144,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 145,
                                  "end_byte": 147,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 148,
                                  "end_byte": 149,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 150,
                                  "end_byte": 152,
                                  "text": "n2",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 155,
                                  "end_byte": 159,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 162,
                                  "end_byte": 166,
                                  "text": "num2",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 167,
                                  "end_byte": 168,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 169,
                                  "end_byte": 172,
                                  "text": "rem",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 175,
                                  "end_byte": 178,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 179,
                                  "end_byte": 180,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 181,
                                  "end_byte": 184,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 185,
                                  "end_byte": 186,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 187,
                          "end_byte": 188,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 189,
                      "end_byte": 190,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 191,
                  "end_byte": 275,
                  "text": "else { GCD = n1 ; LCM = ( num1 * num2 ) / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; }",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 191,
                      "end_byte": 195,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "compound_statement",
                      "start_byte": 196,
                      "end_byte": 275,
                      "text": "{ GCD = n1 ; LCM = ( num1 * num2 ) / GCD ; printf ( \"%d %d\\n\" , GCD , LCM ) ; }",
                      "children": [
                        {
                          "type": "{",
                          "start_byte": 196,
                          "end_byte": 197,
                          "text": "{",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 198,
                          "end_byte": 208,
                          "text": "GCD = n1 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 198,
                              "end_byte": 206,
                              "text": "GCD = n1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 198,
                                  "end_byte": 201,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 204,
                                  "end_byte": 206,
                                  "text": "n1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 207,
                              "end_byte": 208,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 209,
                          "end_byte": 238,
                          "text": "LCM = ( num1 * num2 ) / GCD ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 209,
                              "end_byte": 236,
                              "text": "LCM = ( num1 * num2 ) / GCD",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 209,
                                  "end_byte": 212,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 213,
                                  "end_byte": 214,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 215,
                                  "end_byte": 236,
                                  "text": "( num1 * num2 ) / GCD",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 215,
                                      "end_byte": 230,
                                      "text": "( num1 * num2 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 215,
                                          "end_byte": 216,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 217,
                                          "end_byte": 228,
                                          "text": "num1 * num2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 217,
                                              "end_byte": 221,
                                              "text": "num1",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 222,
                                              "end_byte": 223,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 224,
                                              "end_byte": 228,
                                              "text": "num2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 229,
                                          "end_byte": 230,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "/",
                                      "start_byte": 231,
                                      "end_byte": 232,
                                      "text": "/",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 233,
                                      "end_byte": 236,
                                      "text": "GCD",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 237,
                              "end_byte": 238,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 239,
                          "end_byte": 273,
                          "text": "printf ( \"%d %d\\n\" , GCD , LCM ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 239,
                              "end_byte": 271,
                              "text": "printf ( \"%d %d\\n\" , GCD , LCM )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 239,
                                  "end_byte": 245,
                                  "text": "printf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 246,
                                  "end_byte": 271,
                                  "text": "( \"%d %d\\n\" , GCD , LCM )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 246,
                                      "end_byte": 247,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 248,
                                      "end_byte": 257,
                                      "text": "\"%d %d\\n\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 248,
                                          "end_byte": 249,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 249,
                                          "end_byte": 254,
                                          "text": "%d %d",
                                          "children": []
                                        },
                                        {
                                          "type": "escape_sequence",
                                          "start_byte": 254,
                                          "end_byte": 256,
                                          "text": "\\n",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 256,
                                          "end_byte": 257,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 258,
                                      "end_byte": 259,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 260,
                                      "end_byte": 263,
                                      "text": "GCD",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 264,
                                      "end_byte": 265,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 266,
                                      "end_byte": 269,
                                      "text": "LCM",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 270,
                                      "end_byte": 271,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 272,
                              "end_byte": 273,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "}",
                          "start_byte": 274,
                          "end_byte": 275,
                          "text": "}",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 276,
              "end_byte": 277,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 278,
      "end_byte": 503,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , num1 , num2 , rem , GCD , LCM ; scanf ( \"%d %d\" , & num1 , & num2 ) ; n1 = num1 , n2 = num2 ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 278,
          "end_byte": 281,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 282,
          "end_byte": 290,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 282,
              "end_byte": 286,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 287,
              "end_byte": 290,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 287,
                  "end_byte": 288,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 289,
                  "end_byte": 290,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 291,
          "end_byte": 503,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int n1 , n2 , num1 , num2 , rem , GCD , LCM ; scanf ( \"%d %d\" , & num1 , & num2 ) ; n1 = num1 , n2 = num2 ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 291,
              "end_byte": 292,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 293,
              "end_byte": 300,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 293,
                  "end_byte": 296,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 297,
                  "end_byte": 298,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 299,
                  "end_byte": 300,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 301,
              "end_byte": 323,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 301,
                  "end_byte": 321,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 301,
                      "end_byte": 306,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 307,
                      "end_byte": 321,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 307,
                          "end_byte": 308,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 309,
                          "end_byte": 313,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 310,
                              "end_byte": 312,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 312,
                              "end_byte": 313,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 314,
                          "end_byte": 315,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 316,
                          "end_byte": 319,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 316,
                              "end_byte": 317,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 318,
                              "end_byte": 319,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 322,
                  "end_byte": 323,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 324,
              "end_byte": 501,
              "text": "while ( t -- ) { int n1 , n2 , num1 , num2 , rem , GCD , LCM ; scanf ( \"%d %d\" , & num1 , & num2 ) ; n1 = num1 , n2 = num2 ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 324,
                  "end_byte": 329,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 330,
                  "end_byte": 338,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 330,
                      "end_byte": 331,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 332,
                      "end_byte": 336,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 332,
                          "end_byte": 333,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 334,
                          "end_byte": 336,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 337,
                      "end_byte": 338,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 339,
                  "end_byte": 501,
                  "text": "{ int n1 , n2 , num1 , num2 , rem , GCD , LCM ; scanf ( \"%d %d\" , & num1 , & num2 ) ; n1 = num1 , n2 = num2 ; play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 339,
                      "end_byte": 340,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 341,
                      "end_byte": 386,
                      "text": "int n1 , n2 , num1 , num2 , rem , GCD , LCM ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 341,
                          "end_byte": 344,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 345,
                          "end_byte": 347,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 348,
                          "end_byte": 349,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 350,
                          "end_byte": 352,
                          "text": "n2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 355,
                          "end_byte": 359,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 360,
                          "end_byte": 361,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 362,
                          "end_byte": 366,
                          "text": "num2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 367,
                          "end_byte": 368,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 369,
                          "end_byte": 372,
                          "text": "rem",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 373,
                          "end_byte": 374,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 375,
                          "end_byte": 378,
                          "text": "GCD",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 379,
                          "end_byte": 380,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 381,
                          "end_byte": 384,
                          "text": "LCM",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 385,
                          "end_byte": 386,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 387,
                      "end_byte": 424,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 387,
                          "end_byte": 422,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 387,
                              "end_byte": 392,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 393,
                              "end_byte": 422,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 393,
                                  "end_byte": 394,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 395,
                                  "end_byte": 402,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 396,
                                      "end_byte": 401,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 401,
                                      "end_byte": 402,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 403,
                                  "end_byte": 404,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 405,
                                  "end_byte": 411,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 405,
                                      "end_byte": 406,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 407,
                                      "end_byte": 411,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 412,
                                  "end_byte": 413,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 414,
                                  "end_byte": 420,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 414,
                                      "end_byte": 415,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 416,
                                      "end_byte": 420,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 421,
                                  "end_byte": 422,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 423,
                          "end_byte": 424,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 425,
                      "end_byte": 448,
                      "text": "n1 = num1 , n2 = num2 ;",
                      "children": [
                        {
                          "type": "comma_expression",
                          "start_byte": 425,
                          "end_byte": 446,
                          "text": "n1 = num1 , n2 = num2",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 425,
                              "end_byte": 434,
                              "text": "n1 = num1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 425,
                                  "end_byte": 427,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 428,
                                  "end_byte": 429,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 430,
                                  "end_byte": 434,
                                  "text": "num1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 435,
                              "end_byte": 436,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 437,
                              "end_byte": 446,
                              "text": "n2 = num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 437,
                                  "end_byte": 439,
                                  "text": "n2",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 440,
                                  "end_byte": 441,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 442,
                                  "end_byte": 446,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 447,
                          "end_byte": 448,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 449,
                      "end_byte": 499,
                      "text": "play ( n1 , n2 , num1 , num2 , rem , GCD , LCM ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 449,
                          "end_byte": 497,
                          "text": "play ( n1 , n2 , num1 , num2 , rem , GCD , LCM )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 449,
                              "end_byte": 453,
                              "text": "play",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 454,
                              "end_byte": 497,
                              "text": "( n1 , n2 , num1 , num2 , rem , GCD , LCM )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 456,
                                  "end_byte": 458,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 459,
                                  "end_byte": 460,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 461,
                                  "end_byte": 463,
                                  "text": "n2",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 464,
                                  "end_byte": 465,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 466,
                                  "end_byte": 470,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 471,
                                  "end_byte": 472,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 473,
                                  "end_byte": 477,
                                  "text": "num2",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 478,
                                  "end_byte": 479,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 480,
                                  "end_byte": 483,
                                  "text": "rem",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 484,
                                  "end_byte": 485,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 486,
                                  "end_byte": 489,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 490,
                                  "end_byte": 491,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 492,
                                  "end_byte": 495,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 496,
                                  "end_byte": 497,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 498,
                          "end_byte": 499,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 500,
                      "end_byte": 501,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 502,
              "end_byte": 503,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}