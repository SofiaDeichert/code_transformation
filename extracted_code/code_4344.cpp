int temp [ 100 ] [ 100 ] ; int max ( int , int ) ; int fun ( int a [ ] [ 100 ] , int i , int j , int n ) { if ( i == n - 1 ) { temp [ i ] [ j ] = a [ i ] [ j ] + max ( a [ i + 1 ] [ j ] , a [ i + 1 ] [ j + 1 ] ) ; return temp [ i ] [ j ] ; } if ( temp [ i ] [ j ] != - 1 ) return temp [ i ] [ j ] ; temp [ i ] [ j ] = a [ i ] [ j ] + max ( fun ( a , i + 1 , j , n ) , fun ( a , i + 1 , j + 1 , n ) ) ; return temp [ i ] [ j ] ; } int main ( ) { int j , i , t , n , a [ 100 ] [ 100 ] ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j < n ; j ++ ) temp [ i ] [ j ] = - 1 ; printf ( "%d\n" , fun ( a , 0 , 0 , n - 1 ) ) ; } return 0 ; } int max ( int a , int b ) { if ( a > b ) return a ; else return b ; }