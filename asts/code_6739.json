{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 416,
  "text": "int GCD ( int n1 , int n2 ) { while ( n1 != n2 ) { if ( n1 == 0 || n2 == 0 ) return 0 ; if ( n1 > n2 ) n1 = n1 - n2 ; if ( n1 < n2 ) n2 = n2 - n1 ; } return n1 ; } int main ( ) { int gcd , lcm , t , n1 , n2 ; scanf ( \"%d\" , & t ) ; while ( t > 0 ) { scanf ( \"%d\" , & n1 ) ; scanf ( \"%d\" , & n2 ) ; gcd = GCD ( n1 , n2 ) ; lcm = n1 * n2 / gcd ; printf ( \"%d\" , gcd ) ; printf ( \" %d\\n\" , lcm ) ; t -- ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 163,
      "text": "int GCD ( int n1 , int n2 ) { while ( n1 != n2 ) { if ( n1 == 0 || n2 == 0 ) return 0 ; if ( n1 > n2 ) n1 = n1 - n2 ; if ( n1 < n2 ) n2 = n2 - n1 ; } return n1 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 27,
          "text": "GCD ( int n1 , int n2 )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "GCD",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 27,
              "text": "( int n1 , int n2 )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 16,
                  "text": "int n1",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 16,
                      "text": "n1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 19,
                  "end_byte": 25,
                  "text": "int n2",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 19,
                      "end_byte": 22,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 23,
                      "end_byte": 25,
                      "text": "n2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 28,
          "end_byte": 163,
          "text": "{ while ( n1 != n2 ) { if ( n1 == 0 || n2 == 0 ) return 0 ; if ( n1 > n2 ) n1 = n1 - n2 ; if ( n1 < n2 ) n2 = n2 - n1 ; } return n1 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 28,
              "end_byte": 29,
              "text": "{",
              "children": []
            },
            {
              "type": "while_statement",
              "start_byte": 30,
              "end_byte": 149,
              "text": "while ( n1 != n2 ) { if ( n1 == 0 || n2 == 0 ) return 0 ; if ( n1 > n2 ) n1 = n1 - n2 ; if ( n1 < n2 ) n2 = n2 - n1 ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 30,
                  "end_byte": 35,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 36,
                  "end_byte": 48,
                  "text": "( n1 != n2 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 36,
                      "end_byte": 37,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 38,
                      "end_byte": 46,
                      "text": "n1 != n2",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 38,
                          "end_byte": 40,
                          "text": "n1",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 41,
                          "end_byte": 43,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 44,
                          "end_byte": 46,
                          "text": "n2",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 47,
                      "end_byte": 48,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 49,
                  "end_byte": 149,
                  "text": "{ if ( n1 == 0 || n2 == 0 ) return 0 ; if ( n1 > n2 ) n1 = n1 - n2 ; if ( n1 < n2 ) n2 = n2 - n1 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 51,
                      "end_byte": 87,
                      "text": "if ( n1 == 0 || n2 == 0 ) return 0 ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 51,
                          "end_byte": 53,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 54,
                          "end_byte": 76,
                          "text": "( n1 == 0 || n2 == 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 54,
                              "end_byte": 55,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 56,
                              "end_byte": 74,
                              "text": "n1 == 0 || n2 == 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 56,
                                  "end_byte": 63,
                                  "text": "n1 == 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 56,
                                      "end_byte": 58,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 59,
                                      "end_byte": 61,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 62,
                                      "end_byte": 63,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "||",
                                  "start_byte": 64,
                                  "end_byte": 66,
                                  "text": "||",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 67,
                                  "end_byte": 74,
                                  "text": "n2 == 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 67,
                                      "end_byte": 69,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": "==",
                                      "start_byte": 70,
                                      "end_byte": 72,
                                      "text": "==",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 73,
                                      "end_byte": 74,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 75,
                              "end_byte": 76,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 77,
                          "end_byte": 87,
                          "text": "return 0 ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 77,
                              "end_byte": 83,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 84,
                              "end_byte": 85,
                              "text": "0",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 88,
                      "end_byte": 117,
                      "text": "if ( n1 > n2 ) n1 = n1 - n2 ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 88,
                          "end_byte": 90,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 91,
                          "end_byte": 102,
                          "text": "( n1 > n2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 91,
                              "end_byte": 92,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 93,
                              "end_byte": 100,
                              "text": "n1 > n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 93,
                                  "end_byte": 95,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 96,
                                  "end_byte": 97,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 98,
                                  "end_byte": 100,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 103,
                          "end_byte": 117,
                          "text": "n1 = n1 - n2 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 103,
                              "end_byte": 115,
                              "text": "n1 = n1 - n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 103,
                                  "end_byte": 105,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 106,
                                  "end_byte": 107,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 108,
                                  "end_byte": 115,
                                  "text": "n1 - n2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 108,
                                      "end_byte": 110,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 111,
                                      "end_byte": 112,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 113,
                                      "end_byte": 115,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 116,
                              "end_byte": 117,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 118,
                      "end_byte": 147,
                      "text": "if ( n1 < n2 ) n2 = n2 - n1 ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 118,
                          "end_byte": 120,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 121,
                          "end_byte": 132,
                          "text": "( n1 < n2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 121,
                              "end_byte": 122,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 123,
                              "end_byte": 130,
                              "text": "n1 < n2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 123,
                                  "end_byte": 125,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 126,
                                  "end_byte": 127,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 128,
                                  "end_byte": 130,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 131,
                              "end_byte": 132,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 133,
                          "end_byte": 147,
                          "text": "n2 = n2 - n1 ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 133,
                              "end_byte": 145,
                              "text": "n2 = n2 - n1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 133,
                                  "end_byte": 135,
                                  "text": "n2",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 136,
                                  "end_byte": 137,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 138,
                                  "end_byte": 145,
                                  "text": "n2 - n1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 138,
                                      "end_byte": 140,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": "-",
                                      "start_byte": 141,
                                      "end_byte": 142,
                                      "text": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 143,
                                      "end_byte": 145,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 146,
                              "end_byte": 147,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 148,
                      "end_byte": 149,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 150,
              "end_byte": 161,
              "text": "return n1 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 150,
                  "end_byte": 156,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 157,
                  "end_byte": 159,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 160,
                  "end_byte": 161,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 162,
              "end_byte": 163,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 164,
      "end_byte": 416,
      "text": "int main ( ) { int gcd , lcm , t , n1 , n2 ; scanf ( \"%d\" , & t ) ; while ( t > 0 ) { scanf ( \"%d\" , & n1 ) ; scanf ( \"%d\" , & n2 ) ; gcd = GCD ( n1 , n2 ) ; lcm = n1 * n2 / gcd ; printf ( \"%d\" , gcd ) ; printf ( \" %d\\n\" , lcm ) ; t -- ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 164,
          "end_byte": 167,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 168,
          "end_byte": 176,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 168,
              "end_byte": 172,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 173,
              "end_byte": 176,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 173,
                  "end_byte": 174,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 175,
                  "end_byte": 176,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 177,
          "end_byte": 416,
          "text": "{ int gcd , lcm , t , n1 , n2 ; scanf ( \"%d\" , & t ) ; while ( t > 0 ) { scanf ( \"%d\" , & n1 ) ; scanf ( \"%d\" , & n2 ) ; gcd = GCD ( n1 , n2 ) ; lcm = n1 * n2 / gcd ; printf ( \"%d\" , gcd ) ; printf ( \" %d\\n\" , lcm ) ; t -- ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 177,
              "end_byte": 178,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 179,
              "end_byte": 208,
              "text": "int gcd , lcm , t , n1 , n2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 179,
                  "end_byte": 182,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 183,
                  "end_byte": 186,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 187,
                  "end_byte": 188,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 189,
                  "end_byte": 192,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 193,
                  "end_byte": 194,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 195,
                  "end_byte": 196,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 197,
                  "end_byte": 198,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 199,
                  "end_byte": 201,
                  "text": "n1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 202,
                  "end_byte": 203,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 204,
                  "end_byte": 206,
                  "text": "n2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 207,
                  "end_byte": 208,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 209,
              "end_byte": 231,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 209,
                  "end_byte": 229,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 209,
                      "end_byte": 214,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 215,
                      "end_byte": 229,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 215,
                          "end_byte": 216,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 217,
                          "end_byte": 221,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 217,
                              "end_byte": 218,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 218,
                              "end_byte": 220,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 222,
                          "end_byte": 223,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 224,
                          "end_byte": 227,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 224,
                              "end_byte": 225,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 226,
                              "end_byte": 227,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 228,
                          "end_byte": 229,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 230,
                  "end_byte": 231,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 232,
              "end_byte": 403,
              "text": "while ( t > 0 ) { scanf ( \"%d\" , & n1 ) ; scanf ( \"%d\" , & n2 ) ; gcd = GCD ( n1 , n2 ) ; lcm = n1 * n2 / gcd ; printf ( \"%d\" , gcd ) ; printf ( \" %d\\n\" , lcm ) ; t -- ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 232,
                  "end_byte": 237,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 238,
                  "end_byte": 247,
                  "text": "( t > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 238,
                      "end_byte": 239,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 240,
                      "end_byte": 245,
                      "text": "t > 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 242,
                          "end_byte": 243,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 244,
                          "end_byte": 245,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 246,
                      "end_byte": 247,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 248,
                  "end_byte": 403,
                  "text": "{ scanf ( \"%d\" , & n1 ) ; scanf ( \"%d\" , & n2 ) ; gcd = GCD ( n1 , n2 ) ; lcm = n1 * n2 / gcd ; printf ( \"%d\" , gcd ) ; printf ( \" %d\\n\" , lcm ) ; t -- ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 248,
                      "end_byte": 249,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 250,
                      "end_byte": 273,
                      "text": "scanf ( \"%d\" , & n1 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 250,
                          "end_byte": 271,
                          "text": "scanf ( \"%d\" , & n1 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 250,
                              "end_byte": 255,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 256,
                              "end_byte": 271,
                              "text": "( \"%d\" , & n1 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 256,
                                  "end_byte": 257,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 258,
                                  "end_byte": 262,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 258,
                                      "end_byte": 259,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 259,
                                      "end_byte": 261,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 261,
                                      "end_byte": 262,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 263,
                                  "end_byte": 264,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 265,
                                  "end_byte": 269,
                                  "text": "& n1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 267,
                                      "end_byte": 269,
                                      "text": "n1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 270,
                                  "end_byte": 271,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 272,
                          "end_byte": 273,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 274,
                      "end_byte": 297,
                      "text": "scanf ( \"%d\" , & n2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 274,
                          "end_byte": 295,
                          "text": "scanf ( \"%d\" , & n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 274,
                              "end_byte": 279,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 280,
                              "end_byte": 295,
                              "text": "( \"%d\" , & n2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 280,
                                  "end_byte": 281,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 282,
                                  "end_byte": 286,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 282,
                                      "end_byte": 283,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 283,
                                      "end_byte": 285,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 285,
                                      "end_byte": 286,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 287,
                                  "end_byte": 288,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 289,
                                  "end_byte": 293,
                                  "text": "& n2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 289,
                                      "end_byte": 290,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 291,
                                      "end_byte": 293,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 294,
                                  "end_byte": 295,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 296,
                          "end_byte": 297,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 298,
                      "end_byte": 321,
                      "text": "gcd = GCD ( n1 , n2 ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 298,
                          "end_byte": 319,
                          "text": "gcd = GCD ( n1 , n2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 298,
                              "end_byte": 301,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 304,
                              "end_byte": 319,
                              "text": "GCD ( n1 , n2 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 304,
                                  "end_byte": 307,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 308,
                                  "end_byte": 319,
                                  "text": "( n1 , n2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 308,
                                      "end_byte": 309,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 310,
                                      "end_byte": 312,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 313,
                                      "end_byte": 314,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 315,
                                      "end_byte": 317,
                                      "text": "n2",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 318,
                                      "end_byte": 319,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 320,
                          "end_byte": 321,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 322,
                      "end_byte": 343,
                      "text": "lcm = n1 * n2 / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 322,
                          "end_byte": 341,
                          "text": "lcm = n1 * n2 / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 322,
                              "end_byte": 325,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 326,
                              "end_byte": 327,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 328,
                              "end_byte": 341,
                              "text": "n1 * n2 / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 328,
                                  "end_byte": 335,
                                  "text": "n1 * n2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 328,
                                      "end_byte": 330,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 331,
                                      "end_byte": 332,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 333,
                                      "end_byte": 335,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 336,
                                  "end_byte": 337,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 338,
                                  "end_byte": 341,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 342,
                          "end_byte": 343,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 344,
                      "end_byte": 367,
                      "text": "printf ( \"%d\" , gcd ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 344,
                          "end_byte": 365,
                          "text": "printf ( \"%d\" , gcd )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 344,
                              "end_byte": 350,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 351,
                              "end_byte": 365,
                              "text": "( \"%d\" , gcd )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 351,
                                  "end_byte": 352,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 353,
                                  "end_byte": 357,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 353,
                                      "end_byte": 354,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 354,
                                      "end_byte": 356,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 356,
                                      "end_byte": 357,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 358,
                                  "end_byte": 359,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 360,
                                  "end_byte": 363,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 364,
                                  "end_byte": 365,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 366,
                          "end_byte": 367,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 368,
                      "end_byte": 394,
                      "text": "printf ( \" %d\\n\" , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 368,
                          "end_byte": 392,
                          "text": "printf ( \" %d\\n\" , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 368,
                              "end_byte": 374,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 375,
                              "end_byte": 392,
                              "text": "( \" %d\\n\" , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 375,
                                  "end_byte": 376,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 377,
                                  "end_byte": 384,
                                  "text": "\" %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 377,
                                      "end_byte": 378,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 378,
                                      "end_byte": 381,
                                      "text": " %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 381,
                                      "end_byte": 383,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 383,
                                      "end_byte": 384,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 385,
                                  "end_byte": 386,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 387,
                                  "end_byte": 390,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 391,
                                  "end_byte": 392,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 393,
                          "end_byte": 394,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 395,
                      "end_byte": 401,
                      "text": "t -- ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 395,
                          "end_byte": 399,
                          "text": "t --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 395,
                              "end_byte": 396,
                              "text": "t",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 397,
                              "end_byte": 399,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 400,
                          "end_byte": 401,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 402,
                      "end_byte": 403,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 404,
              "end_byte": 414,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 404,
                  "end_byte": 410,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 411,
                  "end_byte": 412,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 413,
                  "end_byte": 414,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 415,
              "end_byte": 416,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}