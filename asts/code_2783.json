{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 579,
  "text": "int s1 = 0 , s2 = 0 , sum = 0 , ele [ 100 ] [ 100 ] ; int maxfunc ( int row , int col , int l ) { if ( row < l ) { return ele [ row ] [ col ] + max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) ) ; } else return 0 ; } int main ( ) { int n , l , i , j , k , ans [ 1000 ] ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & l ) ; for ( j = 0 ; j < l ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & ele [ j ] [ k ] ) ; } } ans [ i ] = maxfunc ( 0 , 0 , l ) ; } for ( i = 0 ; i < n ; i ++ ) { printf ( \"%d\\n\" , ans [ i ] ) ; } }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 53,
      "text": "int s1 = 0 , s2 = 0 , sum = 0 , ele [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 4,
          "end_byte": 10,
          "text": "s1 = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 6,
              "text": "s1",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 7,
              "end_byte": 8,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 9,
              "end_byte": 10,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ",",
          "start_byte": 11,
          "end_byte": 12,
          "text": ",",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 13,
          "end_byte": 19,
          "text": "s2 = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 13,
              "end_byte": 15,
              "text": "s2",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 16,
              "end_byte": 17,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 19,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ",",
          "start_byte": 20,
          "end_byte": 21,
          "text": ",",
          "children": []
        },
        {
          "type": "init_declarator",
          "start_byte": 22,
          "end_byte": 29,
          "text": "sum = 0",
          "children": [
            {
              "type": "identifier",
              "start_byte": 22,
              "end_byte": 25,
              "text": "sum",
              "children": []
            },
            {
              "type": "=",
              "start_byte": 26,
              "end_byte": 27,
              "text": "=",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 28,
              "end_byte": 29,
              "text": "0",
              "children": []
            }
          ]
        },
        {
          "type": ",",
          "start_byte": 30,
          "end_byte": 31,
          "text": ",",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 32,
          "end_byte": 51,
          "text": "ele [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 32,
              "end_byte": 43,
              "text": "ele [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 35,
                  "text": "ele",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 38,
                  "end_byte": 41,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 42,
                  "end_byte": 43,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 44,
              "end_byte": 45,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 46,
              "end_byte": 49,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 50,
              "end_byte": 51,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 52,
          "end_byte": 53,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 54,
      "end_byte": 239,
      "text": "int maxfunc ( int row , int col , int l ) { if ( row < l ) { return ele [ row ] [ col ] + max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) ) ; } else return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 54,
          "end_byte": 57,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 58,
          "end_byte": 95,
          "text": "maxfunc ( int row , int col , int l )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 58,
              "end_byte": 65,
              "text": "maxfunc",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 66,
              "end_byte": 95,
              "text": "( int row , int col , int l )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 66,
                  "end_byte": 67,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 68,
                  "end_byte": 75,
                  "text": "int row",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 68,
                      "end_byte": 71,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 72,
                      "end_byte": 75,
                      "text": "row",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 78,
                  "end_byte": 85,
                  "text": "int col",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 78,
                      "end_byte": 81,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 82,
                      "end_byte": 85,
                      "text": "col",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 86,
                  "end_byte": 87,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 88,
                  "end_byte": 93,
                  "text": "int l",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 88,
                      "end_byte": 91,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 92,
                      "end_byte": 93,
                      "text": "l",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 94,
                  "end_byte": 95,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 96,
          "end_byte": 239,
          "text": "{ if ( row < l ) { return ele [ row ] [ col ] + max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) ) ; } else return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 96,
              "end_byte": 97,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 98,
              "end_byte": 237,
              "text": "if ( row < l ) { return ele [ row ] [ col ] + max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) ) ; } else return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 98,
                  "end_byte": 100,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 101,
                  "end_byte": 112,
                  "text": "( row < l )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 103,
                      "end_byte": 110,
                      "text": "row < l",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 103,
                          "end_byte": 106,
                          "text": "row",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 107,
                          "end_byte": 108,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 109,
                          "end_byte": 110,
                          "text": "l",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 111,
                      "end_byte": 112,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 113,
                  "end_byte": 221,
                  "text": "{ return ele [ row ] [ col ] + max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 115,
                      "end_byte": 219,
                      "text": "return ele [ row ] [ col ] + max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) ) ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 115,
                          "end_byte": 121,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 122,
                          "end_byte": 217,
                          "text": "ele [ row ] [ col ] + max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 122,
                              "end_byte": 141,
                              "text": "ele [ row ] [ col ]",
                              "children": [
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 122,
                                  "end_byte": 133,
                                  "text": "ele [ row ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 122,
                                      "end_byte": 125,
                                      "text": "ele",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 126,
                                      "end_byte": 133,
                                      "text": "[ row ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 126,
                                          "end_byte": 127,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 128,
                                          "end_byte": 131,
                                          "text": "row",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 132,
                                          "end_byte": 133,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 134,
                                  "end_byte": 141,
                                  "text": "[ col ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 134,
                                      "end_byte": 135,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 136,
                                      "end_byte": 139,
                                      "text": "col",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 140,
                                      "end_byte": 141,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "+",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 144,
                              "end_byte": 217,
                              "text": "max ( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 144,
                                  "end_byte": 147,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 148,
                                  "end_byte": 217,
                                  "text": "( maxfunc ( row + 1 , col , l ) , maxfunc ( row + 1 , col + 1 , l ) )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 150,
                                      "end_byte": 179,
                                      "text": "maxfunc ( row + 1 , col , l )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 150,
                                          "end_byte": 157,
                                          "text": "maxfunc",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 158,
                                          "end_byte": 179,
                                          "text": "( row + 1 , col , l )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 158,
                                              "end_byte": 159,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 160,
                                              "end_byte": 167,
                                              "text": "row + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 160,
                                                  "end_byte": 163,
                                                  "text": "row",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 164,
                                                  "end_byte": 165,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 166,
                                                  "end_byte": 167,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 168,
                                              "end_byte": 169,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 170,
                                              "end_byte": 173,
                                              "text": "col",
                                              "children": []
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 174,
                                              "end_byte": 175,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 176,
                                              "end_byte": 177,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 178,
                                              "end_byte": 179,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 180,
                                      "end_byte": 181,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 182,
                                      "end_byte": 215,
                                      "text": "maxfunc ( row + 1 , col + 1 , l )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 182,
                                          "end_byte": 189,
                                          "text": "maxfunc",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 190,
                                          "end_byte": 215,
                                          "text": "( row + 1 , col + 1 , l )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 190,
                                              "end_byte": 191,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 192,
                                              "end_byte": 199,
                                              "text": "row + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 192,
                                                  "end_byte": 195,
                                                  "text": "row",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 196,
                                                  "end_byte": 197,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 198,
                                                  "end_byte": 199,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 200,
                                              "end_byte": 201,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 202,
                                              "end_byte": 209,
                                              "text": "col + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 202,
                                                  "end_byte": 205,
                                                  "text": "col",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 206,
                                                  "end_byte": 207,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 208,
                                                  "end_byte": 209,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ",",
                                              "start_byte": 210,
                                              "end_byte": 211,
                                              "text": ",",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 212,
                                              "end_byte": 213,
                                              "text": "l",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 214,
                                              "end_byte": 215,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 216,
                                      "end_byte": 217,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 218,
                          "end_byte": 219,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 220,
                      "end_byte": 221,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 222,
                  "end_byte": 237,
                  "text": "else return 0 ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 222,
                      "end_byte": 226,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 227,
                      "end_byte": 237,
                      "text": "return 0 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 227,
                          "end_byte": 233,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 234,
                          "end_byte": 235,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 236,
                          "end_byte": 237,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 238,
              "end_byte": 239,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 240,
      "end_byte": 579,
      "text": "int main ( ) { int n , l , i , j , k , ans [ 1000 ] ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & l ) ; for ( j = 0 ; j < l ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & ele [ j ] [ k ] ) ; } } ans [ i ] = maxfunc ( 0 , 0 , l ) ; } for ( i = 0 ; i < n ; i ++ ) { printf ( \"%d\\n\" , ans [ i ] ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 240,
          "end_byte": 243,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 244,
          "end_byte": 252,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 244,
              "end_byte": 248,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 249,
              "end_byte": 252,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 249,
                  "end_byte": 250,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 251,
                  "end_byte": 252,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 253,
          "end_byte": 579,
          "text": "{ int n , l , i , j , k , ans [ 1000 ] ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & l ) ; for ( j = 0 ; j < l ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & ele [ j ] [ k ] ) ; } } ans [ i ] = maxfunc ( 0 , 0 , l ) ; } for ( i = 0 ; i < n ; i ++ ) { printf ( \"%d\\n\" , ans [ i ] ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 253,
              "end_byte": 254,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 255,
              "end_byte": 293,
              "text": "int n , l , i , j , k , ans [ 1000 ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 255,
                  "end_byte": 258,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 259,
                  "end_byte": 260,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 261,
                  "end_byte": 262,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 263,
                  "end_byte": 264,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 265,
                  "end_byte": 266,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 267,
                  "end_byte": 268,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 269,
                  "end_byte": 270,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 273,
                  "end_byte": 274,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 275,
                  "end_byte": 276,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 277,
                  "end_byte": 278,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 279,
                  "end_byte": 291,
                  "text": "ans [ 1000 ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 279,
                      "end_byte": 282,
                      "text": "ans",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 283,
                      "end_byte": 284,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 285,
                      "end_byte": 289,
                      "text": "1000",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 290,
                      "end_byte": 291,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 292,
                  "end_byte": 293,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 294,
              "end_byte": 316,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 294,
                  "end_byte": 314,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 294,
                      "end_byte": 299,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 300,
                      "end_byte": 314,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 300,
                          "end_byte": 301,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 302,
                          "end_byte": 306,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 302,
                              "end_byte": 303,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 303,
                              "end_byte": 305,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 305,
                              "end_byte": 306,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 307,
                          "end_byte": 308,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 309,
                          "end_byte": 312,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 311,
                              "end_byte": 312,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 313,
                          "end_byte": 314,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 315,
                  "end_byte": 316,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 317,
              "end_byte": 512,
              "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & l ) ; for ( j = 0 ; j < l ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & ele [ j ] [ k ] ) ; } } ans [ i ] = maxfunc ( 0 , 0 , l ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 317,
                  "end_byte": 320,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 321,
                  "end_byte": 322,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 323,
                  "end_byte": 328,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 323,
                      "end_byte": 324,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 325,
                      "end_byte": 326,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 327,
                      "end_byte": 328,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 329,
                  "end_byte": 330,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 331,
                  "end_byte": 336,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 331,
                      "end_byte": 332,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 333,
                      "end_byte": 334,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 335,
                      "end_byte": 336,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 337,
                  "end_byte": 338,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 339,
                  "end_byte": 343,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 339,
                      "end_byte": 340,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 341,
                      "end_byte": 343,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 344,
                  "end_byte": 345,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 346,
                  "end_byte": 512,
                  "text": "{ scanf ( \"%d\" , & l ) ; for ( j = 0 ; j < l ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & ele [ j ] [ k ] ) ; } } ans [ i ] = maxfunc ( 0 , 0 , l ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 346,
                      "end_byte": 347,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 348,
                      "end_byte": 370,
                      "text": "scanf ( \"%d\" , & l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 348,
                          "end_byte": 368,
                          "text": "scanf ( \"%d\" , & l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 348,
                              "end_byte": 353,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 354,
                              "end_byte": 368,
                              "text": "( \"%d\" , & l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 354,
                                  "end_byte": 355,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 356,
                                  "end_byte": 360,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 356,
                                      "end_byte": 357,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 357,
                                      "end_byte": 359,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 359,
                                      "end_byte": 360,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 361,
                                  "end_byte": 362,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 363,
                                  "end_byte": 366,
                                  "text": "& l",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 363,
                                      "end_byte": 364,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 365,
                                      "end_byte": 366,
                                      "text": "l",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 367,
                                  "end_byte": 368,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 369,
                          "end_byte": 370,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 371,
                      "end_byte": 474,
                      "text": "for ( j = 0 ; j < l ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & ele [ j ] [ k ] ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 371,
                          "end_byte": 374,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 375,
                          "end_byte": 376,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 377,
                          "end_byte": 382,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 377,
                              "end_byte": 378,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 379,
                              "end_byte": 380,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 381,
                              "end_byte": 382,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 383,
                          "end_byte": 384,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 385,
                          "end_byte": 390,
                          "text": "j < l",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 385,
                              "end_byte": 386,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 387,
                              "end_byte": 388,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 389,
                              "end_byte": 390,
                              "text": "l",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 391,
                          "end_byte": 392,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 393,
                          "end_byte": 397,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 393,
                              "end_byte": 394,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 395,
                              "end_byte": 397,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 398,
                          "end_byte": 399,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 400,
                          "end_byte": 474,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & ele [ j ] [ k ] ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 400,
                              "end_byte": 401,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 402,
                              "end_byte": 472,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d\" , & ele [ j ] [ k ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 402,
                                  "end_byte": 405,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 406,
                                  "end_byte": 407,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 408,
                                  "end_byte": 413,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 408,
                                      "end_byte": 409,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 410,
                                      "end_byte": 411,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 412,
                                      "end_byte": 413,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 414,
                                  "end_byte": 415,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 416,
                                  "end_byte": 422,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 416,
                                      "end_byte": 417,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 418,
                                      "end_byte": 420,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 421,
                                      "end_byte": 422,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 423,
                                  "end_byte": 424,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 425,
                                  "end_byte": 429,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 425,
                                      "end_byte": 426,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 427,
                                      "end_byte": 429,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 430,
                                  "end_byte": 431,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 432,
                                  "end_byte": 472,
                                  "text": "{ scanf ( \"%d\" , & ele [ j ] [ k ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 432,
                                      "end_byte": 433,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 434,
                                      "end_byte": 470,
                                      "text": "scanf ( \"%d\" , & ele [ j ] [ k ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 434,
                                          "end_byte": 468,
                                          "text": "scanf ( \"%d\" , & ele [ j ] [ k ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 434,
                                              "end_byte": 439,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 440,
                                              "end_byte": 468,
                                              "text": "( \"%d\" , & ele [ j ] [ k ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 440,
                                                  "end_byte": 441,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 442,
                                                  "end_byte": 446,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 442,
                                                      "end_byte": 443,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 443,
                                                      "end_byte": 445,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 445,
                                                      "end_byte": 446,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 447,
                                                  "end_byte": 448,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 449,
                                                  "end_byte": 466,
                                                  "text": "& ele [ j ] [ k ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 449,
                                                      "end_byte": 450,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 451,
                                                      "end_byte": 466,
                                                      "text": "ele [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 451,
                                                          "end_byte": 460,
                                                          "text": "ele [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 451,
                                                              "end_byte": 454,
                                                              "text": "ele",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 455,
                                                              "end_byte": 460,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 455,
                                                                  "end_byte": 456,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 457,
                                                                  "end_byte": 458,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 459,
                                                                  "end_byte": 460,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 461,
                                                          "end_byte": 466,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 461,
                                                              "end_byte": 462,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 463,
                                                              "end_byte": 464,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 465,
                                                              "end_byte": 466,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 467,
                                                  "end_byte": 468,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 469,
                                          "end_byte": 470,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 471,
                                      "end_byte": 472,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 473,
                              "end_byte": 474,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 475,
                      "end_byte": 510,
                      "text": "ans [ i ] = maxfunc ( 0 , 0 , l ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 475,
                          "end_byte": 508,
                          "text": "ans [ i ] = maxfunc ( 0 , 0 , l )",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 475,
                              "end_byte": 484,
                              "text": "ans [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 475,
                                  "end_byte": 478,
                                  "text": "ans",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 479,
                                  "end_byte": 484,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 479,
                                      "end_byte": 480,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 481,
                                      "end_byte": 482,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 483,
                                      "end_byte": 484,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 485,
                              "end_byte": 486,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 487,
                              "end_byte": 508,
                              "text": "maxfunc ( 0 , 0 , l )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 487,
                                  "end_byte": 494,
                                  "text": "maxfunc",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 495,
                                  "end_byte": 508,
                                  "text": "( 0 , 0 , l )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 495,
                                      "end_byte": 496,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 497,
                                      "end_byte": 498,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 499,
                                      "end_byte": 500,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 501,
                                      "end_byte": 502,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 503,
                                      "end_byte": 504,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 505,
                                      "end_byte": 506,
                                      "text": "l",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 507,
                                      "end_byte": 508,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 509,
                          "end_byte": 510,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 511,
                      "end_byte": 512,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 513,
              "end_byte": 577,
              "text": "for ( i = 0 ; i < n ; i ++ ) { printf ( \"%d\\n\" , ans [ i ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 513,
                  "end_byte": 516,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 517,
                  "end_byte": 518,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 519,
                  "end_byte": 524,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 519,
                      "end_byte": 520,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 521,
                      "end_byte": 522,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 523,
                      "end_byte": 524,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 525,
                  "end_byte": 526,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 527,
                  "end_byte": 532,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 527,
                      "end_byte": 528,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 529,
                      "end_byte": 530,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 531,
                      "end_byte": 532,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 533,
                  "end_byte": 534,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 535,
                  "end_byte": 539,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 535,
                      "end_byte": 536,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 537,
                      "end_byte": 539,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 540,
                  "end_byte": 541,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 542,
                  "end_byte": 577,
                  "text": "{ printf ( \"%d\\n\" , ans [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 542,
                      "end_byte": 543,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 544,
                      "end_byte": 575,
                      "text": "printf ( \"%d\\n\" , ans [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 544,
                          "end_byte": 573,
                          "text": "printf ( \"%d\\n\" , ans [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 544,
                              "end_byte": 550,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 551,
                              "end_byte": 573,
                              "text": "( \"%d\\n\" , ans [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 551,
                                  "end_byte": 552,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 553,
                                  "end_byte": 559,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 553,
                                      "end_byte": 554,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 554,
                                      "end_byte": 556,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 556,
                                      "end_byte": 558,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 558,
                                      "end_byte": 559,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 560,
                                  "end_byte": 561,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 562,
                                  "end_byte": 571,
                                  "text": "ans [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 562,
                                      "end_byte": 565,
                                      "text": "ans",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 566,
                                      "end_byte": 571,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 566,
                                          "end_byte": 567,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 568,
                                          "end_byte": 569,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 570,
                                          "end_byte": 571,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 572,
                                  "end_byte": 573,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 574,
                          "end_byte": 575,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 576,
                      "end_byte": 577,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 578,
              "end_byte": 579,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}