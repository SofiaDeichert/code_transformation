int cell [ 100 ] [ 100 ] ; int cache [ 100 ] [ 100 ] , n = 0 ; int max ( int t1 , int t2 ) { if ( t1 > t2 ) return t1 ; else return t2 ; } int sums ( int i , int j ) { if ( i > n && j > i ) return 0 ; if ( cache [ i ] [ j ] != - 1 ) return cache [ i ] [ j ] ; int t1 = sums ( i + 1 , j ) ; int t2 = sums ( i + 1 , j + 1 ) ; int t = max ( t1 , t2 ) + cell [ i ] [ j ] ; cache [ i ] [ j ] = t ; return t ; } int main ( ) { int testcases ; scanf ( "%d" , & testcases ) ; int sumsd [ testcases ] ; int z = 0 ; while ( z < testcases ) { scanf ( "%d" , & n ) ; int i = 0 , j = 1 , k = 0 ; for ( i = 0 ; i < n ; i ++ ) { for ( k = 0 ; k < j ; k ++ ) { scanf ( "%d" , & cell [ i ] [ k ] ) ; } j ++ ; } for ( i = 0 ; i < 100 ; i ++ ) for ( j = 0 ; j < 100 ; j ++ ) cache [ i ] [ j ] = - 1 ; sumsd [ z ] = sums ( 0 , 0 ) ; z ++ ; } int i = 0 ; printf ( "\n" ) ; for ( i = 0 ; i < testcases ; i ++ ) printf ( "%d\n" , sumsd [ i ] ) ; return 0 ; }