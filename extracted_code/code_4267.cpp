int max ( int a , int b ) { if ( a > b ) return a ; else return b ; } int max_arr ( int arr [ ] ) { int i , max ; max = arr [ 0 ] ; for ( i = 0 ; i < 100 ; i ++ ) { if ( arr [ i ] > max ) max = arr [ i ] ; } return max ; } int main ( ) { int t , n , i , j ; int A [ 101 ] [ 101 ] ; int D [ 101 ] [ 101 ] ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i <= 100 ; i ++ ) { for ( j = 0 ; j <= 100 ; j ++ ) { A [ i ] [ j ] = 0 ; D [ i ] [ j ] = 0 ; } } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & A [ i ] [ j ] ) ; } } D [ 0 ] [ 0 ] = A [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { D [ i ] [ j ] = A [ i ] [ j ] + max ( D [ i - 1 ] [ j ] , D [ i - 1 ] [ j - 1 ] ) ; } } for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= 5 ; j ++ ) { printf ( "%d\t" , D [ i ] [ j ] ) ; } printf ( "\n" ) ; } int ans = max_arr ( D [ n - 1 ] ) ; printf ( "%d\n" , ans ) ; } return 0 ; }