{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 642,
  "text": "void main ( ) { int p ; int remainder , numerator , denominator ; long int num1 , num2 ; scanf ( \"%d\" , & p ) ; long int gcd [ p ] , lcm [ p ] ; int i ; for ( i = 0 ; i < p ; i ++ ) { scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } for ( i = 0 ; i < p ; i ++ ) { printf ( \"%ld %ld\\n\" , gcd [ i ] , lcm [ i ] ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 642,
      "text": "void main ( ) { int p ; int remainder , numerator , denominator ; long int num1 , num2 ; scanf ( \"%d\" , & p ) ; long int gcd [ p ] , lcm [ p ] ; int i ; for ( i = 0 ; i < p ; i ++ ) { scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } for ( i = 0 ; i < p ; i ++ ) { printf ( \"%ld %ld\\n\" , gcd [ i ] , lcm [ i ] ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 642,
          "text": "{ int p ; int remainder , numerator , denominator ; long int num1 , num2 ; scanf ( \"%d\" , & p ) ; long int gcd [ p ] , lcm [ p ] ; int i ; for ( i = 0 ; i < p ; i ++ ) { scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; } for ( i = 0 ; i < p ; i ++ ) { printf ( \"%ld %ld\\n\" , gcd [ i ] , lcm [ i ] ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 23,
              "text": "int p ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "p",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 24,
              "end_byte": 65,
              "text": "int remainder , numerator , denominator ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 24,
                  "end_byte": 27,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 37,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 49,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 52,
                  "end_byte": 63,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 64,
                  "end_byte": 65,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 66,
              "end_byte": 88,
              "text": "long int num1 , num2 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 66,
                  "end_byte": 74,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 66,
                      "end_byte": 70,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 71,
                      "end_byte": 74,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 75,
                  "end_byte": 79,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 82,
                  "end_byte": 86,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 89,
              "end_byte": 111,
              "text": "scanf ( \"%d\" , & p ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 89,
                  "end_byte": 109,
                  "text": "scanf ( \"%d\" , & p )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 89,
                      "end_byte": 94,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 95,
                      "end_byte": 109,
                      "text": "( \"%d\" , & p )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 97,
                          "end_byte": 101,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 97,
                              "end_byte": 98,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 98,
                              "end_byte": 100,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 100,
                              "end_byte": 101,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 104,
                          "end_byte": 107,
                          "text": "& p",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 104,
                              "end_byte": 105,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 106,
                              "end_byte": 107,
                              "text": "p",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 108,
                          "end_byte": 109,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 110,
                  "end_byte": 111,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 112,
              "end_byte": 144,
              "text": "long int gcd [ p ] , lcm [ p ] ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 112,
                  "end_byte": 120,
                  "text": "long int",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 112,
                      "end_byte": 116,
                      "text": "long",
                      "children": []
                    },
                    {
                      "type": "primitive_type",
                      "start_byte": 117,
                      "end_byte": 120,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "array_declarator",
                  "start_byte": 121,
                  "end_byte": 130,
                  "text": "gcd [ p ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 121,
                      "end_byte": 124,
                      "text": "gcd",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 127,
                      "end_byte": 128,
                      "text": "p",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 129,
                      "end_byte": 130,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 131,
                  "end_byte": 132,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 133,
                  "end_byte": 142,
                  "text": "lcm [ p ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 133,
                      "end_byte": 136,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 137,
                      "end_byte": 138,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 139,
                      "end_byte": 140,
                      "text": "p",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 141,
                      "end_byte": 142,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 143,
                  "end_byte": 144,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 145,
              "end_byte": 152,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 145,
                  "end_byte": 148,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 149,
                  "end_byte": 150,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 151,
                  "end_byte": 152,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 153,
              "end_byte": 558,
              "text": "for ( i = 0 ; i < p ; i ++ ) { scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 153,
                  "end_byte": 156,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 157,
                  "end_byte": 158,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 159,
                  "end_byte": 164,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 159,
                      "end_byte": 160,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 161,
                      "end_byte": 162,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 163,
                      "end_byte": 164,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 165,
                  "end_byte": 166,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 167,
                  "end_byte": 172,
                  "text": "i < p",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 167,
                      "end_byte": 168,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 169,
                      "end_byte": 170,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 171,
                      "end_byte": 172,
                      "text": "p",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 173,
                  "end_byte": 174,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 175,
                  "end_byte": 179,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 175,
                      "end_byte": 176,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 177,
                      "end_byte": 179,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 180,
                  "end_byte": 181,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 182,
                  "end_byte": 558,
                  "text": "{ scanf ( \"%ld %ld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd [ i ] = denominator ; lcm [ i ] = num1 * num2 / gcd [ i ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 184,
                      "end_byte": 223,
                      "text": "scanf ( \"%ld %ld\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 184,
                          "end_byte": 221,
                          "text": "scanf ( \"%ld %ld\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 184,
                              "end_byte": 189,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 190,
                              "end_byte": 221,
                              "text": "( \"%ld %ld\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 190,
                                  "end_byte": 191,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 192,
                                  "end_byte": 201,
                                  "text": "\"%ld %ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 193,
                                      "end_byte": 200,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 200,
                                      "end_byte": 201,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 204,
                                  "end_byte": 210,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 206,
                                      "end_byte": 210,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 211,
                                  "end_byte": 212,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 213,
                                  "end_byte": 219,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 213,
                                      "end_byte": 214,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 215,
                                      "end_byte": 219,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 220,
                                  "end_byte": 221,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 222,
                          "end_byte": 223,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 224,
                      "end_byte": 335,
                      "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 224,
                          "end_byte": 226,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 227,
                          "end_byte": 242,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 227,
                              "end_byte": 228,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 229,
                              "end_byte": 240,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 229,
                                  "end_byte": 233,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 234,
                                  "end_byte": 235,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 236,
                                  "end_byte": 240,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 241,
                              "end_byte": 242,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 243,
                          "end_byte": 286,
                          "text": "{ numerator = num1 ; denominator = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 243,
                              "end_byte": 244,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 245,
                              "end_byte": 263,
                              "text": "numerator = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 245,
                                  "end_byte": 261,
                                  "text": "numerator = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 245,
                                      "end_byte": 254,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 255,
                                      "end_byte": 256,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 257,
                                      "end_byte": 261,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 262,
                                  "end_byte": 263,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 264,
                              "end_byte": 284,
                              "text": "denominator = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 264,
                                  "end_byte": 282,
                                  "text": "denominator = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 264,
                                      "end_byte": 275,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 276,
                                      "end_byte": 277,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 278,
                                      "end_byte": 282,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 283,
                                  "end_byte": 284,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 285,
                              "end_byte": 286,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 287,
                          "end_byte": 335,
                          "text": "else { numerator = num2 ; denominator = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 287,
                              "end_byte": 291,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 292,
                              "end_byte": 335,
                              "text": "{ numerator = num2 ; denominator = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 292,
                                  "end_byte": 293,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 294,
                                  "end_byte": 312,
                                  "text": "numerator = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 294,
                                      "end_byte": 310,
                                      "text": "numerator = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 294,
                                          "end_byte": 303,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 304,
                                          "end_byte": 305,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 306,
                                          "end_byte": 310,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 311,
                                      "end_byte": 312,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 313,
                                  "end_byte": 333,
                                  "text": "denominator = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 313,
                                      "end_byte": 331,
                                      "text": "denominator = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 313,
                                          "end_byte": 324,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 325,
                                          "end_byte": 326,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 327,
                                          "end_byte": 331,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 332,
                                      "end_byte": 333,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 334,
                                  "end_byte": 335,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 336,
                      "end_byte": 373,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 336,
                          "end_byte": 371,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 336,
                              "end_byte": 345,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 346,
                              "end_byte": 347,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 348,
                              "end_byte": 371,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 348,
                                  "end_byte": 357,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 358,
                                  "end_byte": 359,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 360,
                                  "end_byte": 371,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 372,
                          "end_byte": 373,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 374,
                      "end_byte": 492,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 374,
                          "end_byte": 379,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 380,
                          "end_byte": 398,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 380,
                              "end_byte": 381,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 382,
                              "end_byte": 396,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 382,
                                  "end_byte": 391,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 392,
                                  "end_byte": 394,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 395,
                                  "end_byte": 396,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 397,
                              "end_byte": 398,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 399,
                          "end_byte": 492,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 399,
                              "end_byte": 400,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 401,
                              "end_byte": 426,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 401,
                                  "end_byte": 424,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 401,
                                      "end_byte": 410,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 411,
                                      "end_byte": 412,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 413,
                                      "end_byte": 424,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 425,
                                  "end_byte": 426,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 427,
                              "end_byte": 452,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 427,
                                  "end_byte": 450,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 427,
                                      "end_byte": 438,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 439,
                                      "end_byte": 440,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 441,
                                      "end_byte": 450,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 451,
                                  "end_byte": 452,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 453,
                              "end_byte": 490,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 453,
                                  "end_byte": 488,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 453,
                                      "end_byte": 462,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 463,
                                      "end_byte": 464,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 465,
                                      "end_byte": 488,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 465,
                                          "end_byte": 474,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 475,
                                          "end_byte": 476,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 477,
                                          "end_byte": 488,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 489,
                                  "end_byte": 490,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 491,
                              "end_byte": 492,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 493,
                      "end_byte": 518,
                      "text": "gcd [ i ] = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 493,
                          "end_byte": 516,
                          "text": "gcd [ i ] = denominator",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 493,
                              "end_byte": 502,
                              "text": "gcd [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 493,
                                  "end_byte": 496,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 497,
                                  "end_byte": 502,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 497,
                                      "end_byte": 498,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 499,
                                      "end_byte": 500,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 501,
                                      "end_byte": 502,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 503,
                              "end_byte": 504,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 505,
                              "end_byte": 516,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 517,
                          "end_byte": 518,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 519,
                      "end_byte": 556,
                      "text": "lcm [ i ] = num1 * num2 / gcd [ i ] ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 519,
                          "end_byte": 554,
                          "text": "lcm [ i ] = num1 * num2 / gcd [ i ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 519,
                              "end_byte": 528,
                              "text": "lcm [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 519,
                                  "end_byte": 522,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 523,
                                  "end_byte": 528,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 523,
                                      "end_byte": 524,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 525,
                                      "end_byte": 526,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 527,
                                      "end_byte": 528,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 529,
                              "end_byte": 530,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 531,
                              "end_byte": 554,
                              "text": "num1 * num2 / gcd [ i ]",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 531,
                                  "end_byte": 542,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 531,
                                      "end_byte": 535,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 536,
                                      "end_byte": 537,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 538,
                                      "end_byte": 542,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 543,
                                  "end_byte": 544,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 545,
                                  "end_byte": 554,
                                  "text": "gcd [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 545,
                                      "end_byte": 548,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 549,
                                      "end_byte": 554,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 549,
                                          "end_byte": 550,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 551,
                                          "end_byte": 552,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 553,
                                          "end_byte": 554,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 555,
                          "end_byte": 556,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 557,
                      "end_byte": 558,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 559,
              "end_byte": 640,
              "text": "for ( i = 0 ; i < p ; i ++ ) { printf ( \"%ld %ld\\n\" , gcd [ i ] , lcm [ i ] ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 559,
                  "end_byte": 562,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 563,
                  "end_byte": 564,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 565,
                  "end_byte": 570,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 565,
                      "end_byte": 566,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 567,
                      "end_byte": 568,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 569,
                      "end_byte": 570,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 571,
                  "end_byte": 572,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 573,
                  "end_byte": 578,
                  "text": "i < p",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 573,
                      "end_byte": 574,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 575,
                      "end_byte": 576,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 577,
                      "end_byte": 578,
                      "text": "p",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 579,
                  "end_byte": 580,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 581,
                  "end_byte": 585,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 581,
                      "end_byte": 582,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 583,
                      "end_byte": 585,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 586,
                  "end_byte": 587,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 588,
                  "end_byte": 640,
                  "text": "{ printf ( \"%ld %ld\\n\" , gcd [ i ] , lcm [ i ] ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 588,
                      "end_byte": 589,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 590,
                      "end_byte": 638,
                      "text": "printf ( \"%ld %ld\\n\" , gcd [ i ] , lcm [ i ] ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 590,
                          "end_byte": 636,
                          "text": "printf ( \"%ld %ld\\n\" , gcd [ i ] , lcm [ i ] )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 590,
                              "end_byte": 596,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 597,
                              "end_byte": 636,
                              "text": "( \"%ld %ld\\n\" , gcd [ i ] , lcm [ i ] )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 597,
                                  "end_byte": 598,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 599,
                                  "end_byte": 610,
                                  "text": "\"%ld %ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 599,
                                      "end_byte": 600,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 600,
                                      "end_byte": 607,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 607,
                                      "end_byte": 609,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 609,
                                      "end_byte": 610,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 611,
                                  "end_byte": 612,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 613,
                                  "end_byte": 622,
                                  "text": "gcd [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 613,
                                      "end_byte": 616,
                                      "text": "gcd",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 617,
                                      "end_byte": 622,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 617,
                                          "end_byte": 618,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 619,
                                          "end_byte": 620,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 621,
                                          "end_byte": 622,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 623,
                                  "end_byte": 624,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 625,
                                  "end_byte": 634,
                                  "text": "lcm [ i ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 625,
                                      "end_byte": 628,
                                      "text": "lcm",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 629,
                                      "end_byte": 634,
                                      "text": "[ i ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 629,
                                          "end_byte": 630,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 631,
                                          "end_byte": 632,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 633,
                                          "end_byte": 634,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 635,
                                  "end_byte": 636,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 637,
                          "end_byte": 638,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 639,
                      "end_byte": 640,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 641,
              "end_byte": 642,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}