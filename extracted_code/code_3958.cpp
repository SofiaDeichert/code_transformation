int a [ 100 ] [ 100 ] = { 0 } ; int max [ 100 ] [ 100 ] = { 0 } ; int maximum ( int b , int c ) ; int main ( ) { unsigned int i , j ; unsigned int n ; int k ; int t ; unsigned int max_value ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } max [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) { if ( j == 0 ) { max [ i ] [ j ] = a [ i ] [ j ] + max [ i - 1 ] [ j ] ; } else if ( j == i ) { max [ i ] [ j ] = a [ i ] [ j ] + max [ i - 1 ] [ j - 1 ] ; } else { max [ i ] [ j ] = a [ i ] [ j ] + maximum ( max [ i - 1 ] [ j ] , max [ i - 1 ] [ j - 1 ] ) ; } } } int l_r = n - 1 ; max_value = a [ l_r ] [ 0 ] ; for ( k = 1 ; k < n ; k ++ ) { if ( max [ l_r ] [ k ] > max_value ) { max_value = max [ l_r ] [ k ] ; } } printf ( "%d" , max_value ) ; } return 0 ; } int maximum ( int b , int c ) { if ( b > c ) { return b ; } else { return c ; } }