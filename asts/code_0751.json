{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1119,
  "text": "int getStartIndexOfRow ( int row ) { return ( 1 + row ) / 2.0 * row ; } int getLargestSum ( int * numbers ) { return getLargestSumRec ( numbers , 0 , 0 ) ; } int getLargestSumRec ( int * numbers , int currentRow , int positionInRow ) { int sum1 ; int sum2 ; int erg ; if ( numbers [ getStartIndexOfRow ( currentRow ) ] == - 1 ) { return 0 ; } sum1 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow ) ; sum2 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow + 1 ) ; erg = sum1 > sum2 ? sum1 : sum2 ; erg += numbers [ getStartIndexOfRow ( currentRow ) + positionInRow ] ; return erg ; } int main ( ) { int numOfTestCases ; int numOfRows ; int largestSum ; int i , j , k ; int arrayCounter = 0 ; int numbers [ ARRAY_LEN ] ; scanf ( \"%d\\n\" , & numOfTestCases ) ; for ( i = 0 ; i < numOfTestCases ; i ++ ) { scanf ( \"%d\\n\" , & numOfRows ) ; arrayCounter = 0 ; for ( j = 0 ; j < numOfRows ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; } } numbers [ getStartIndexOfRow ( numOfRows ) ] = - 1 ; printf ( \"%d\\n\" , getLargestSum ( numbers ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 71,
      "text": "int getStartIndexOfRow ( int row ) { return ( 1 + row ) / 2.0 * row ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 34,
          "text": "getStartIndexOfRow ( int row )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 22,
              "text": "getStartIndexOfRow",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 23,
              "end_byte": 34,
              "text": "( int row )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 25,
                  "end_byte": 32,
                  "text": "int row",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 25,
                      "end_byte": 28,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 29,
                      "end_byte": 32,
                      "text": "row",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 35,
          "end_byte": 71,
          "text": "{ return ( 1 + row ) / 2.0 * row ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 35,
              "end_byte": 36,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 37,
              "end_byte": 69,
              "text": "return ( 1 + row ) / 2.0 * row ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 37,
                  "end_byte": 43,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 44,
                  "end_byte": 67,
                  "text": "( 1 + row ) / 2.0 * row",
                  "children": [
                    {
                      "type": "binary_expression",
                      "start_byte": 44,
                      "end_byte": 61,
                      "text": "( 1 + row ) / 2.0",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 44,
                          "end_byte": 55,
                          "text": "( 1 + row )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 44,
                              "end_byte": 45,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 46,
                              "end_byte": 53,
                              "text": "1 + row",
                              "children": [
                                {
                                  "type": "number_literal",
                                  "start_byte": 46,
                                  "end_byte": 47,
                                  "text": "1",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 48,
                                  "end_byte": 49,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 50,
                                  "end_byte": 53,
                                  "text": "row",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 54,
                              "end_byte": 55,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 56,
                          "end_byte": 57,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 58,
                          "end_byte": 61,
                          "text": "2.0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "*",
                      "start_byte": 62,
                      "end_byte": 63,
                      "text": "*",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 64,
                      "end_byte": 67,
                      "text": "row",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 70,
              "end_byte": 71,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 72,
      "end_byte": 157,
      "text": "int getLargestSum ( int * numbers ) { return getLargestSumRec ( numbers , 0 , 0 ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 72,
          "end_byte": 75,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 76,
          "end_byte": 107,
          "text": "getLargestSum ( int * numbers )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 76,
              "end_byte": 89,
              "text": "getLargestSum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 90,
              "end_byte": 107,
              "text": "( int * numbers )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 90,
                  "end_byte": 91,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 92,
                  "end_byte": 105,
                  "text": "int * numbers",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 92,
                      "end_byte": 95,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 96,
                      "end_byte": 105,
                      "text": "* numbers",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 98,
                          "end_byte": 105,
                          "text": "numbers",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 108,
          "end_byte": 157,
          "text": "{ return getLargestSumRec ( numbers , 0 , 0 ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 108,
              "end_byte": 109,
              "text": "{",
              "children": []
            },
            {
              "type": "return_statement",
              "start_byte": 110,
              "end_byte": 155,
              "text": "return getLargestSumRec ( numbers , 0 , 0 ) ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 110,
                  "end_byte": 116,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "call_expression",
                  "start_byte": 117,
                  "end_byte": 153,
                  "text": "getLargestSumRec ( numbers , 0 , 0 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 117,
                      "end_byte": 133,
                      "text": "getLargestSumRec",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 134,
                      "end_byte": 153,
                      "text": "( numbers , 0 , 0 )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 134,
                          "end_byte": 135,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 136,
                          "end_byte": 143,
                          "text": "numbers",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 144,
                          "end_byte": 145,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 146,
                          "end_byte": 147,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 148,
                          "end_byte": 149,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 150,
                          "end_byte": 151,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 154,
                  "end_byte": 155,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 156,
              "end_byte": 157,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 158,
      "end_byte": 608,
      "text": "int getLargestSumRec ( int * numbers , int currentRow , int positionInRow ) { int sum1 ; int sum2 ; int erg ; if ( numbers [ getStartIndexOfRow ( currentRow ) ] == - 1 ) { return 0 ; } sum1 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow ) ; sum2 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow + 1 ) ; erg = sum1 > sum2 ? sum1 : sum2 ; erg += numbers [ getStartIndexOfRow ( currentRow ) + positionInRow ] ; return erg ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 158,
          "end_byte": 161,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 162,
          "end_byte": 233,
          "text": "getLargestSumRec ( int * numbers , int currentRow , int positionInRow )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 162,
              "end_byte": 178,
              "text": "getLargestSumRec",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 179,
              "end_byte": 233,
              "text": "( int * numbers , int currentRow , int positionInRow )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 179,
                  "end_byte": 180,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 181,
                  "end_byte": 194,
                  "text": "int * numbers",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 181,
                      "end_byte": 184,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 185,
                      "end_byte": 194,
                      "text": "* numbers",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 185,
                          "end_byte": 186,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 187,
                          "end_byte": 194,
                          "text": "numbers",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 195,
                  "end_byte": 196,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 197,
                  "end_byte": 211,
                  "text": "int currentRow",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 197,
                      "end_byte": 200,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 201,
                      "end_byte": 211,
                      "text": "currentRow",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 212,
                  "end_byte": 213,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 214,
                  "end_byte": 231,
                  "text": "int positionInRow",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 214,
                      "end_byte": 217,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 218,
                      "end_byte": 231,
                      "text": "positionInRow",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 232,
                  "end_byte": 233,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 234,
          "end_byte": 608,
          "text": "{ int sum1 ; int sum2 ; int erg ; if ( numbers [ getStartIndexOfRow ( currentRow ) ] == - 1 ) { return 0 ; } sum1 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow ) ; sum2 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow + 1 ) ; erg = sum1 > sum2 ? sum1 : sum2 ; erg += numbers [ getStartIndexOfRow ( currentRow ) + positionInRow ] ; return erg ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 234,
              "end_byte": 235,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 236,
              "end_byte": 246,
              "text": "int sum1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 236,
                  "end_byte": 239,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 240,
                  "end_byte": 244,
                  "text": "sum1",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 245,
                  "end_byte": 246,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 247,
              "end_byte": 257,
              "text": "int sum2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 247,
                  "end_byte": 250,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 251,
                  "end_byte": 255,
                  "text": "sum2",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 256,
                  "end_byte": 257,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 258,
              "end_byte": 267,
              "text": "int erg ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 258,
                  "end_byte": 261,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 262,
                  "end_byte": 265,
                  "text": "erg",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 266,
                  "end_byte": 267,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 268,
              "end_byte": 342,
              "text": "if ( numbers [ getStartIndexOfRow ( currentRow ) ] == - 1 ) { return 0 ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 268,
                  "end_byte": 270,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 271,
                  "end_byte": 327,
                  "text": "( numbers [ getStartIndexOfRow ( currentRow ) ] == - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 271,
                      "end_byte": 272,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 273,
                      "end_byte": 325,
                      "text": "numbers [ getStartIndexOfRow ( currentRow ) ] == - 1",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 273,
                          "end_byte": 318,
                          "text": "numbers [ getStartIndexOfRow ( currentRow ) ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 273,
                              "end_byte": 280,
                              "text": "numbers",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 281,
                              "end_byte": 318,
                              "text": "[ getStartIndexOfRow ( currentRow ) ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 281,
                                  "end_byte": 282,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 283,
                                  "end_byte": 316,
                                  "text": "getStartIndexOfRow ( currentRow )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 283,
                                      "end_byte": 301,
                                      "text": "getStartIndexOfRow",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 302,
                                      "end_byte": 316,
                                      "text": "( currentRow )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 302,
                                          "end_byte": 303,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 304,
                                          "end_byte": 314,
                                          "text": "currentRow",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 315,
                                          "end_byte": 316,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "]",
                                  "start_byte": 317,
                                  "end_byte": 318,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start_byte": 319,
                          "end_byte": 321,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "unary_expression",
                          "start_byte": 322,
                          "end_byte": 325,
                          "text": "- 1",
                          "children": [
                            {
                              "type": "-",
                              "start_byte": 322,
                              "end_byte": 323,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 324,
                              "end_byte": 325,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 326,
                      "end_byte": 327,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 328,
                  "end_byte": 342,
                  "text": "{ return 0 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 328,
                      "end_byte": 329,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 330,
                      "end_byte": 340,
                      "text": "return 0 ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 330,
                          "end_byte": 336,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 337,
                          "end_byte": 338,
                          "text": "0",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 339,
                          "end_byte": 340,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 341,
                      "end_byte": 342,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 343,
              "end_byte": 413,
              "text": "sum1 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 343,
                  "end_byte": 411,
                  "text": "sum1 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 343,
                      "end_byte": 347,
                      "text": "sum1",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 348,
                      "end_byte": 349,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 350,
                      "end_byte": 411,
                      "text": "getLargestSumRec ( numbers , currentRow + 1 , positionInRow )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 350,
                          "end_byte": 366,
                          "text": "getLargestSumRec",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 367,
                          "end_byte": 411,
                          "text": "( numbers , currentRow + 1 , positionInRow )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 367,
                              "end_byte": 368,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 369,
                              "end_byte": 376,
                              "text": "numbers",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 377,
                              "end_byte": 378,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 379,
                              "end_byte": 393,
                              "text": "currentRow + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 379,
                                  "end_byte": 389,
                                  "text": "currentRow",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 390,
                                  "end_byte": 391,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 392,
                                  "end_byte": 393,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 394,
                              "end_byte": 395,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 396,
                              "end_byte": 409,
                              "text": "positionInRow",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 410,
                              "end_byte": 411,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 412,
                  "end_byte": 413,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 414,
              "end_byte": 488,
              "text": "sum2 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow + 1 ) ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 414,
                  "end_byte": 486,
                  "text": "sum2 = getLargestSumRec ( numbers , currentRow + 1 , positionInRow + 1 )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 414,
                      "end_byte": 418,
                      "text": "sum2",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 419,
                      "end_byte": 420,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 421,
                      "end_byte": 486,
                      "text": "getLargestSumRec ( numbers , currentRow + 1 , positionInRow + 1 )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 421,
                          "end_byte": 437,
                          "text": "getLargestSumRec",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 438,
                          "end_byte": 486,
                          "text": "( numbers , currentRow + 1 , positionInRow + 1 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 438,
                              "end_byte": 439,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 440,
                              "end_byte": 447,
                              "text": "numbers",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 448,
                              "end_byte": 449,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 450,
                              "end_byte": 464,
                              "text": "currentRow + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 450,
                                  "end_byte": 460,
                                  "text": "currentRow",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 461,
                                  "end_byte": 462,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 463,
                                  "end_byte": 464,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 465,
                              "end_byte": 466,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 467,
                              "end_byte": 484,
                              "text": "positionInRow + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 467,
                                  "end_byte": 480,
                                  "text": "positionInRow",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 481,
                                  "end_byte": 482,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 483,
                                  "end_byte": 484,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 485,
                              "end_byte": 486,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 487,
                  "end_byte": 488,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 489,
              "end_byte": 522,
              "text": "erg = sum1 > sum2 ? sum1 : sum2 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 489,
                  "end_byte": 520,
                  "text": "erg = sum1 > sum2 ? sum1 : sum2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 489,
                      "end_byte": 492,
                      "text": "erg",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 493,
                      "end_byte": 494,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "conditional_expression",
                      "start_byte": 495,
                      "end_byte": 520,
                      "text": "sum1 > sum2 ? sum1 : sum2",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 495,
                          "end_byte": 506,
                          "text": "sum1 > sum2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 495,
                              "end_byte": 499,
                              "text": "sum1",
                              "children": []
                            },
                            {
                              "type": ">",
                              "start_byte": 500,
                              "end_byte": 501,
                              "text": ">",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 502,
                              "end_byte": 506,
                              "text": "sum2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "?",
                          "start_byte": 507,
                          "end_byte": 508,
                          "text": "?",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 509,
                          "end_byte": 513,
                          "text": "sum1",
                          "children": []
                        },
                        {
                          "type": ":",
                          "start_byte": 514,
                          "end_byte": 515,
                          "text": ":",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 516,
                          "end_byte": 520,
                          "text": "sum2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 521,
                  "end_byte": 522,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 523,
              "end_byte": 593,
              "text": "erg += numbers [ getStartIndexOfRow ( currentRow ) + positionInRow ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 523,
                  "end_byte": 591,
                  "text": "erg += numbers [ getStartIndexOfRow ( currentRow ) + positionInRow ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 523,
                      "end_byte": 526,
                      "text": "erg",
                      "children": []
                    },
                    {
                      "type": "+=",
                      "start_byte": 527,
                      "end_byte": 529,
                      "text": "+=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 530,
                      "end_byte": 591,
                      "text": "numbers [ getStartIndexOfRow ( currentRow ) + positionInRow ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 530,
                          "end_byte": 537,
                          "text": "numbers",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 538,
                          "end_byte": 591,
                          "text": "[ getStartIndexOfRow ( currentRow ) + positionInRow ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 538,
                              "end_byte": 539,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 540,
                              "end_byte": 589,
                              "text": "getStartIndexOfRow ( currentRow ) + positionInRow",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 540,
                                  "end_byte": 573,
                                  "text": "getStartIndexOfRow ( currentRow )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 540,
                                      "end_byte": 558,
                                      "text": "getStartIndexOfRow",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 559,
                                      "end_byte": 573,
                                      "text": "( currentRow )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 559,
                                          "end_byte": 560,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 561,
                                          "end_byte": 571,
                                          "text": "currentRow",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 572,
                                          "end_byte": 573,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "+",
                                  "start_byte": 574,
                                  "end_byte": 575,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 576,
                                  "end_byte": 589,
                                  "text": "positionInRow",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start_byte": 590,
                              "end_byte": 591,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 592,
                  "end_byte": 593,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 594,
              "end_byte": 606,
              "text": "return erg ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 594,
                  "end_byte": 600,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 601,
                  "end_byte": 604,
                  "text": "erg",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 605,
                  "end_byte": 606,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 607,
              "end_byte": 608,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 609,
      "end_byte": 1119,
      "text": "int main ( ) { int numOfTestCases ; int numOfRows ; int largestSum ; int i , j , k ; int arrayCounter = 0 ; int numbers [ ARRAY_LEN ] ; scanf ( \"%d\\n\" , & numOfTestCases ) ; for ( i = 0 ; i < numOfTestCases ; i ++ ) { scanf ( \"%d\\n\" , & numOfRows ) ; arrayCounter = 0 ; for ( j = 0 ; j < numOfRows ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; } } numbers [ getStartIndexOfRow ( numOfRows ) ] = - 1 ; printf ( \"%d\\n\" , getLargestSum ( numbers ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 609,
          "end_byte": 612,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 613,
          "end_byte": 621,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 613,
              "end_byte": 617,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 618,
              "end_byte": 621,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 618,
                  "end_byte": 619,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 620,
                  "end_byte": 621,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 622,
          "end_byte": 1119,
          "text": "{ int numOfTestCases ; int numOfRows ; int largestSum ; int i , j , k ; int arrayCounter = 0 ; int numbers [ ARRAY_LEN ] ; scanf ( \"%d\\n\" , & numOfTestCases ) ; for ( i = 0 ; i < numOfTestCases ; i ++ ) { scanf ( \"%d\\n\" , & numOfRows ) ; arrayCounter = 0 ; for ( j = 0 ; j < numOfRows ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; } } numbers [ getStartIndexOfRow ( numOfRows ) ] = - 1 ; printf ( \"%d\\n\" , getLargestSum ( numbers ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 622,
              "end_byte": 623,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 624,
              "end_byte": 644,
              "text": "int numOfTestCases ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 624,
                  "end_byte": 627,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 628,
                  "end_byte": 642,
                  "text": "numOfTestCases",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 643,
                  "end_byte": 644,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 645,
              "end_byte": 660,
              "text": "int numOfRows ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 645,
                  "end_byte": 648,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 649,
                  "end_byte": 658,
                  "text": "numOfRows",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 659,
                  "end_byte": 660,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 661,
              "end_byte": 677,
              "text": "int largestSum ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 661,
                  "end_byte": 664,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 665,
                  "end_byte": 675,
                  "text": "largestSum",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 676,
                  "end_byte": 677,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 678,
              "end_byte": 693,
              "text": "int i , j , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 678,
                  "end_byte": 681,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 682,
                  "end_byte": 683,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 684,
                  "end_byte": 685,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 686,
                  "end_byte": 687,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 688,
                  "end_byte": 689,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 690,
                  "end_byte": 691,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 692,
                  "end_byte": 693,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 694,
              "end_byte": 716,
              "text": "int arrayCounter = 0 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 694,
                  "end_byte": 697,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 698,
                  "end_byte": 714,
                  "text": "arrayCounter = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 698,
                      "end_byte": 710,
                      "text": "arrayCounter",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 711,
                      "end_byte": 712,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 713,
                      "end_byte": 714,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 715,
                  "end_byte": 716,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 717,
              "end_byte": 744,
              "text": "int numbers [ ARRAY_LEN ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 717,
                  "end_byte": 720,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 721,
                  "end_byte": 742,
                  "text": "numbers [ ARRAY_LEN ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 721,
                      "end_byte": 728,
                      "text": "numbers",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 729,
                      "end_byte": 730,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 731,
                      "end_byte": 740,
                      "text": "ARRAY_LEN",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 741,
                      "end_byte": 742,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 743,
                  "end_byte": 744,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 745,
              "end_byte": 782,
              "text": "scanf ( \"%d\\n\" , & numOfTestCases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 745,
                  "end_byte": 780,
                  "text": "scanf ( \"%d\\n\" , & numOfTestCases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 745,
                      "end_byte": 750,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 751,
                      "end_byte": 780,
                      "text": "( \"%d\\n\" , & numOfTestCases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 751,
                          "end_byte": 752,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 753,
                          "end_byte": 759,
                          "text": "\"%d\\n\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 753,
                              "end_byte": 754,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 754,
                              "end_byte": 756,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 756,
                              "end_byte": 758,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 758,
                              "end_byte": 759,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 760,
                          "end_byte": 761,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 762,
                          "end_byte": 778,
                          "text": "& numOfTestCases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 762,
                              "end_byte": 763,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 764,
                              "end_byte": 778,
                              "text": "numOfTestCases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 779,
                          "end_byte": 780,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 781,
                  "end_byte": 782,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 783,
              "end_byte": 1106,
              "text": "for ( i = 0 ; i < numOfTestCases ; i ++ ) { scanf ( \"%d\\n\" , & numOfRows ) ; arrayCounter = 0 ; for ( j = 0 ; j < numOfRows ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; } } numbers [ getStartIndexOfRow ( numOfRows ) ] = - 1 ; printf ( \"%d\\n\" , getLargestSum ( numbers ) ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 783,
                  "end_byte": 786,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 787,
                  "end_byte": 788,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 789,
                  "end_byte": 794,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 789,
                      "end_byte": 790,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 791,
                      "end_byte": 792,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 793,
                      "end_byte": 794,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 795,
                  "end_byte": 796,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 797,
                  "end_byte": 815,
                  "text": "i < numOfTestCases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 797,
                      "end_byte": 798,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 799,
                      "end_byte": 800,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 801,
                      "end_byte": 815,
                      "text": "numOfTestCases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 816,
                  "end_byte": 817,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 818,
                  "end_byte": 822,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 818,
                      "end_byte": 819,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 820,
                      "end_byte": 822,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 823,
                  "end_byte": 824,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 825,
                  "end_byte": 1106,
                  "text": "{ scanf ( \"%d\\n\" , & numOfRows ) ; arrayCounter = 0 ; for ( j = 0 ; j < numOfRows ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; } } numbers [ getStartIndexOfRow ( numOfRows ) ] = - 1 ; printf ( \"%d\\n\" , getLargestSum ( numbers ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 825,
                      "end_byte": 826,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 827,
                      "end_byte": 859,
                      "text": "scanf ( \"%d\\n\" , & numOfRows ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 827,
                          "end_byte": 857,
                          "text": "scanf ( \"%d\\n\" , & numOfRows )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 827,
                              "end_byte": 832,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 833,
                              "end_byte": 857,
                              "text": "( \"%d\\n\" , & numOfRows )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 833,
                                  "end_byte": 834,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 835,
                                  "end_byte": 841,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 835,
                                      "end_byte": 836,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 836,
                                      "end_byte": 838,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 838,
                                      "end_byte": 840,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 840,
                                      "end_byte": 841,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 842,
                                  "end_byte": 843,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 844,
                                  "end_byte": 855,
                                  "text": "& numOfRows",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 844,
                                      "end_byte": 845,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 846,
                                      "end_byte": 855,
                                      "text": "numOfRows",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 856,
                                  "end_byte": 857,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 858,
                          "end_byte": 859,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 860,
                      "end_byte": 878,
                      "text": "arrayCounter = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 860,
                          "end_byte": 876,
                          "text": "arrayCounter = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 860,
                              "end_byte": 872,
                              "text": "arrayCounter",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 873,
                              "end_byte": 874,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 875,
                              "end_byte": 876,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 877,
                          "end_byte": 878,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 879,
                      "end_byte": 1003,
                      "text": "for ( j = 0 ; j < numOfRows ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 879,
                          "end_byte": 882,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 883,
                          "end_byte": 884,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 885,
                          "end_byte": 890,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 885,
                              "end_byte": 886,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 887,
                              "end_byte": 888,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 889,
                              "end_byte": 890,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 891,
                          "end_byte": 892,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 893,
                          "end_byte": 906,
                          "text": "j < numOfRows",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 893,
                              "end_byte": 894,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 895,
                              "end_byte": 896,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 897,
                              "end_byte": 906,
                              "text": "numOfRows",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 907,
                          "end_byte": 908,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 909,
                          "end_byte": 913,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 909,
                              "end_byte": 910,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 911,
                              "end_byte": 913,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 914,
                          "end_byte": 915,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 916,
                          "end_byte": 1003,
                          "text": "{ for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 916,
                              "end_byte": 917,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 918,
                              "end_byte": 1001,
                              "text": "for ( k = 0 ; k <= j ; k ++ ) { scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 918,
                                  "end_byte": 921,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 922,
                                  "end_byte": 923,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 924,
                                  "end_byte": 929,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 924,
                                      "end_byte": 925,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 926,
                                      "end_byte": 927,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 928,
                                      "end_byte": 929,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 930,
                                  "end_byte": 931,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 932,
                                  "end_byte": 938,
                                  "text": "k <= j",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 932,
                                      "end_byte": 933,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<=",
                                      "start_byte": 934,
                                      "end_byte": 936,
                                      "text": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 937,
                                      "end_byte": 938,
                                      "text": "j",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 939,
                                  "end_byte": 940,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 941,
                                  "end_byte": 945,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 941,
                                      "end_byte": 942,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 943,
                                      "end_byte": 945,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 946,
                                  "end_byte": 947,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 948,
                                  "end_byte": 1001,
                                  "text": "{ scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 948,
                                      "end_byte": 949,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 950,
                                      "end_byte": 999,
                                      "text": "scanf ( \"%d \" , & numbers [ arrayCounter ++ ] ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 950,
                                          "end_byte": 997,
                                          "text": "scanf ( \"%d \" , & numbers [ arrayCounter ++ ] )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 950,
                                              "end_byte": 955,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 956,
                                              "end_byte": 997,
                                              "text": "( \"%d \" , & numbers [ arrayCounter ++ ] )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 956,
                                                  "end_byte": 957,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 958,
                                                  "end_byte": 963,
                                                  "text": "\"%d \"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 958,
                                                      "end_byte": 959,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 959,
                                                      "end_byte": 962,
                                                      "text": "%d ",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 962,
                                                      "end_byte": 963,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 964,
                                                  "end_byte": 965,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 966,
                                                  "end_byte": 995,
                                                  "text": "& numbers [ arrayCounter ++ ]",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 966,
                                                      "end_byte": 967,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 968,
                                                      "end_byte": 995,
                                                      "text": "numbers [ arrayCounter ++ ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 968,
                                                          "end_byte": 975,
                                                          "text": "numbers",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 976,
                                                          "end_byte": 995,
                                                          "text": "[ arrayCounter ++ ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 976,
                                                              "end_byte": 977,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "update_expression",
                                                              "start_byte": 978,
                                                              "end_byte": 993,
                                                              "text": "arrayCounter ++",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 978,
                                                                  "end_byte": 990,
                                                                  "text": "arrayCounter",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "++",
                                                                  "start_byte": 991,
                                                                  "end_byte": 993,
                                                                  "text": "++",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 994,
                                                              "end_byte": 995,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 996,
                                                  "end_byte": 997,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 998,
                                          "end_byte": 999,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 1000,
                                      "end_byte": 1001,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1002,
                              "end_byte": 1003,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1004,
                      "end_byte": 1056,
                      "text": "numbers [ getStartIndexOfRow ( numOfRows ) ] = - 1 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 1004,
                          "end_byte": 1054,
                          "text": "numbers [ getStartIndexOfRow ( numOfRows ) ] = - 1",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 1004,
                              "end_byte": 1048,
                              "text": "numbers [ getStartIndexOfRow ( numOfRows ) ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1004,
                                  "end_byte": 1011,
                                  "text": "numbers",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 1012,
                                  "end_byte": 1048,
                                  "text": "[ getStartIndexOfRow ( numOfRows ) ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 1012,
                                      "end_byte": 1013,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "call_expression",
                                      "start_byte": 1014,
                                      "end_byte": 1046,
                                      "text": "getStartIndexOfRow ( numOfRows )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1014,
                                          "end_byte": 1032,
                                          "text": "getStartIndexOfRow",
                                          "children": []
                                        },
                                        {
                                          "type": "argument_list",
                                          "start_byte": 1033,
                                          "end_byte": 1046,
                                          "text": "( numOfRows )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 1033,
                                              "end_byte": 1034,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 1035,
                                              "end_byte": 1044,
                                              "text": "numOfRows",
                                              "children": []
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 1045,
                                              "end_byte": 1046,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 1047,
                                      "end_byte": 1048,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "=",
                              "start_byte": 1049,
                              "end_byte": 1050,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "unary_expression",
                              "start_byte": 1051,
                              "end_byte": 1054,
                              "text": "- 1",
                              "children": [
                                {
                                  "type": "-",
                                  "start_byte": 1051,
                                  "end_byte": 1052,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 1053,
                                  "end_byte": 1054,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1055,
                          "end_byte": 1056,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1057,
                      "end_byte": 1104,
                      "text": "printf ( \"%d\\n\" , getLargestSum ( numbers ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1057,
                          "end_byte": 1102,
                          "text": "printf ( \"%d\\n\" , getLargestSum ( numbers ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1057,
                              "end_byte": 1063,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1064,
                              "end_byte": 1102,
                              "text": "( \"%d\\n\" , getLargestSum ( numbers ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1064,
                                  "end_byte": 1065,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1066,
                                  "end_byte": 1072,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1066,
                                      "end_byte": 1067,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1067,
                                      "end_byte": 1069,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1069,
                                      "end_byte": 1071,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1071,
                                      "end_byte": 1072,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1073,
                                  "end_byte": 1074,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 1075,
                                  "end_byte": 1100,
                                  "text": "getLargestSum ( numbers )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 1075,
                                      "end_byte": 1088,
                                      "text": "getLargestSum",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 1089,
                                      "end_byte": 1100,
                                      "text": "( numbers )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 1089,
                                          "end_byte": 1090,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1091,
                                          "end_byte": 1098,
                                          "text": "numbers",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 1099,
                                          "end_byte": 1100,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1101,
                                  "end_byte": 1102,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1103,
                          "end_byte": 1104,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1105,
                      "end_byte": 1106,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1107,
              "end_byte": 1117,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1107,
                  "end_byte": 1113,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1114,
                  "end_byte": 1115,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1116,
                  "end_byte": 1117,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1118,
              "end_byte": 1119,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}