{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 427,
  "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld %d\\n\" , gcd , lcm ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 427,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld %d\\n\" , gcd , lcm ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 427,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; for ( int i = 0 ; i < t ; i ++ ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld %d\\n\" , gcd , lcm ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 22,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 23,
              "end_byte": 45,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 23,
                  "end_byte": 43,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 23,
                      "end_byte": 28,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 29,
                      "end_byte": 43,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 29,
                          "end_byte": 30,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 31,
                          "end_byte": 35,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 31,
                              "end_byte": 32,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 32,
                              "end_byte": 34,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 34,
                              "end_byte": 35,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 36,
                          "end_byte": 37,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 38,
                          "end_byte": 41,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 38,
                              "end_byte": 39,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 40,
                              "end_byte": 41,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 42,
                          "end_byte": 43,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 46,
              "end_byte": 414,
              "text": "for ( int i = 0 ; i < t ; i ++ ) { long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld %d\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 46,
                  "end_byte": 49,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "declaration",
                  "start_byte": 52,
                  "end_byte": 63,
                  "text": "int i = 0 ;",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 52,
                      "end_byte": 55,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "init_declarator",
                      "start_byte": 56,
                      "end_byte": 61,
                      "text": "i = 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 56,
                          "end_byte": 57,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 58,
                          "end_byte": 59,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 60,
                          "end_byte": 61,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 62,
                      "end_byte": 63,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "binary_expression",
                  "start_byte": 64,
                  "end_byte": 69,
                  "text": "i < t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 64,
                      "end_byte": 65,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 66,
                      "end_byte": 67,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 68,
                      "end_byte": 69,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 70,
                  "end_byte": 71,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 72,
                  "end_byte": 76,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 72,
                      "end_byte": 73,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 74,
                      "end_byte": 76,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 77,
                  "end_byte": 78,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 79,
                  "end_byte": 414,
                  "text": "{ long int num1 , num2 , gcd , lcm , rem , num , den ; scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; } rem = num % den ; while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; } gcd = den ; lcm = num1 * num2 / gcd ; printf ( \"%ld %d\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 81,
                      "end_byte": 133,
                      "text": "long int num1 , num2 , gcd , lcm , rem , num , den ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 81,
                          "end_byte": 89,
                          "text": "long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 81,
                              "end_byte": 85,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 86,
                              "end_byte": 89,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 90,
                          "end_byte": 94,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 97,
                          "end_byte": 101,
                          "text": "num2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 104,
                          "end_byte": 107,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 108,
                          "end_byte": 109,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 110,
                          "end_byte": 113,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 114,
                          "end_byte": 115,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 116,
                          "end_byte": 119,
                          "text": "rem",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 120,
                          "end_byte": 121,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 122,
                          "end_byte": 125,
                          "text": "num",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 126,
                          "end_byte": 127,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 128,
                          "end_byte": 131,
                          "text": "den",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 132,
                          "end_byte": 133,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 134,
                      "end_byte": 171,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 134,
                          "end_byte": 169,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 134,
                              "end_byte": 139,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 140,
                              "end_byte": 169,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 142,
                                  "end_byte": 149,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 142,
                                      "end_byte": 143,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 143,
                                      "end_byte": 148,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 152,
                                  "end_byte": 158,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 152,
                                      "end_byte": 153,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 154,
                                      "end_byte": 158,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 161,
                                  "end_byte": 167,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 163,
                                      "end_byte": 167,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 168,
                                  "end_byte": 169,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 170,
                          "end_byte": 171,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 172,
                      "end_byte": 255,
                      "text": "if ( num1 > num2 ) { num = num1 ; den = num2 ; } else { num = num2 ; den = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 172,
                          "end_byte": 174,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 175,
                          "end_byte": 190,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 177,
                              "end_byte": 188,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 177,
                                  "end_byte": 181,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 182,
                                  "end_byte": 183,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 184,
                                  "end_byte": 188,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 189,
                              "end_byte": 190,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 191,
                          "end_byte": 220,
                          "text": "{ num = num1 ; den = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 191,
                              "end_byte": 192,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 193,
                              "end_byte": 205,
                              "text": "num = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 193,
                                  "end_byte": 203,
                                  "text": "num = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 193,
                                      "end_byte": 196,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 199,
                                      "end_byte": 203,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 206,
                              "end_byte": 218,
                              "text": "den = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 206,
                                  "end_byte": 216,
                                  "text": "den = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 206,
                                      "end_byte": 209,
                                      "text": "den",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 210,
                                      "end_byte": 211,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 212,
                                      "end_byte": 216,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 217,
                                  "end_byte": 218,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 219,
                              "end_byte": 220,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 221,
                          "end_byte": 255,
                          "text": "else { num = num2 ; den = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 221,
                              "end_byte": 225,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 226,
                              "end_byte": 255,
                              "text": "{ num = num2 ; den = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 228,
                                  "end_byte": 240,
                                  "text": "num = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 228,
                                      "end_byte": 238,
                                      "text": "num = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 228,
                                          "end_byte": 231,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 232,
                                          "end_byte": 233,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 234,
                                          "end_byte": 238,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 239,
                                      "end_byte": 240,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 241,
                                  "end_byte": 253,
                                  "text": "den = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 241,
                                      "end_byte": 251,
                                      "text": "den = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 241,
                                          "end_byte": 244,
                                          "text": "den",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 245,
                                          "end_byte": 246,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 247,
                                          "end_byte": 251,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 252,
                                      "end_byte": 253,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 254,
                                  "end_byte": 255,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 256,
                      "end_byte": 273,
                      "text": "rem = num % den ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 256,
                          "end_byte": 271,
                          "text": "rem = num % den",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 256,
                              "end_byte": 259,
                              "text": "rem",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 260,
                              "end_byte": 261,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 262,
                              "end_byte": 271,
                              "text": "num % den",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 262,
                                  "end_byte": 265,
                                  "text": "num",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 266,
                                  "end_byte": 267,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 268,
                                  "end_byte": 271,
                                  "text": "den",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 272,
                          "end_byte": 273,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 274,
                      "end_byte": 338,
                      "text": "while ( rem != 0 ) { num = den ; den = rem ; rem = num % den ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 274,
                          "end_byte": 279,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 280,
                          "end_byte": 292,
                          "text": "( rem != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 280,
                              "end_byte": 281,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 282,
                              "end_byte": 290,
                              "text": "rem != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 282,
                                  "end_byte": 285,
                                  "text": "rem",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 286,
                                  "end_byte": 288,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 289,
                                  "end_byte": 290,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 291,
                              "end_byte": 292,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 293,
                          "end_byte": 338,
                          "text": "{ num = den ; den = rem ; rem = num % den ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 293,
                              "end_byte": 294,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 295,
                              "end_byte": 306,
                              "text": "num = den ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 295,
                                  "end_byte": 304,
                                  "text": "num = den",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 295,
                                      "end_byte": 298,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 299,
                                      "end_byte": 300,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 301,
                                      "end_byte": 304,
                                      "text": "den",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 307,
                              "end_byte": 318,
                              "text": "den = rem ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 307,
                                  "end_byte": 316,
                                  "text": "den = rem",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 307,
                                      "end_byte": 310,
                                      "text": "den",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 311,
                                      "end_byte": 312,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 313,
                                      "end_byte": 316,
                                      "text": "rem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 317,
                                  "end_byte": 318,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 319,
                              "end_byte": 336,
                              "text": "rem = num % den ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 319,
                                  "end_byte": 334,
                                  "text": "rem = num % den",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 319,
                                      "end_byte": 322,
                                      "text": "rem",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 323,
                                      "end_byte": 324,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 325,
                                      "end_byte": 334,
                                      "text": "num % den",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 325,
                                          "end_byte": 328,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 329,
                                          "end_byte": 330,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 331,
                                          "end_byte": 334,
                                          "text": "den",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 335,
                                  "end_byte": 336,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 337,
                              "end_byte": 338,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 339,
                      "end_byte": 350,
                      "text": "gcd = den ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 339,
                          "end_byte": 348,
                          "text": "gcd = den",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 339,
                              "end_byte": 342,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 343,
                              "end_byte": 344,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 345,
                              "end_byte": 348,
                              "text": "den",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 349,
                          "end_byte": 350,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 351,
                      "end_byte": 376,
                      "text": "lcm = num1 * num2 / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 351,
                          "end_byte": 374,
                          "text": "lcm = num1 * num2 / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 351,
                              "end_byte": 354,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 355,
                              "end_byte": 356,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 357,
                              "end_byte": 374,
                              "text": "num1 * num2 / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 357,
                                  "end_byte": 368,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 357,
                                      "end_byte": 361,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 362,
                                      "end_byte": 363,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 364,
                                      "end_byte": 368,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 369,
                                  "end_byte": 370,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 371,
                                  "end_byte": 374,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 375,
                          "end_byte": 376,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 377,
                      "end_byte": 412,
                      "text": "printf ( \"%ld %d\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 377,
                          "end_byte": 410,
                          "text": "printf ( \"%ld %d\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 377,
                              "end_byte": 383,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 384,
                              "end_byte": 410,
                              "text": "( \"%ld %d\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 384,
                                  "end_byte": 385,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 386,
                                  "end_byte": 396,
                                  "text": "\"%ld %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 386,
                                      "end_byte": 387,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 387,
                                      "end_byte": 393,
                                      "text": "%ld %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 393,
                                      "end_byte": 395,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 395,
                                      "end_byte": 396,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 397,
                                  "end_byte": 398,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 399,
                                  "end_byte": 402,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 403,
                                  "end_byte": 404,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 405,
                                  "end_byte": 408,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 409,
                                  "end_byte": 410,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 411,
                          "end_byte": 412,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 413,
                      "end_byte": 414,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 415,
              "end_byte": 425,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 415,
                  "end_byte": 421,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 422,
                  "end_byte": 423,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 424,
                  "end_byte": 425,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 426,
              "end_byte": 427,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}