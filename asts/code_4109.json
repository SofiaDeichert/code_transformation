{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 589,
  "text": "void main ( ) { int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; int test , count ; count = 0 ; printf ( \"Enter no. of Test :\" ) ; scanf ( \"%d\" , & test ) ; while ( count < test ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d %d\" , gcd , lcm ) ; count ++ ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 589,
      "text": "void main ( ) { int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; int test , count ; count = 0 ; printf ( \"Enter no. of Test :\" ) ; scanf ( \"%d\" , & test ) ; while ( count < test ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d %d\" , gcd , lcm ) ; count ++ ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 589,
          "text": "{ int num1 , num2 , gcd , lcm , remainder , numerator , denominator ; int test , count ; count = 0 ; printf ( \"Enter no. of Test :\" ) ; scanf ( \"%d\" , & test ) ; while ( count < test ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d %d\" , gcd , lcm ) ; count ++ ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 83,
              "text": "int num1 , num2 , gcd , lcm , remainder , numerator , denominator ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 24,
                  "text": "num1",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 31,
                  "text": "num2",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 55,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 67,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 68,
                  "end_byte": 69,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 70,
                  "end_byte": 81,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 84,
              "end_byte": 102,
              "text": "int test , count ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 84,
                  "end_byte": 87,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 88,
                  "end_byte": 92,
                  "text": "test",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 93,
                  "end_byte": 94,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 95,
                  "end_byte": 100,
                  "text": "count",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 101,
                  "end_byte": 102,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 103,
              "end_byte": 114,
              "text": "count = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 103,
                  "end_byte": 112,
                  "text": "count = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 103,
                      "end_byte": 108,
                      "text": "count",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 111,
                      "end_byte": 112,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 113,
                  "end_byte": 114,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 115,
              "end_byte": 149,
              "text": "printf ( \"Enter no. of Test :\" ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 115,
                  "end_byte": 147,
                  "text": "printf ( \"Enter no. of Test :\" )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 115,
                      "end_byte": 121,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 122,
                      "end_byte": 147,
                      "text": "( \"Enter no. of Test :\" )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 122,
                          "end_byte": 123,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 124,
                          "end_byte": 145,
                          "text": "\"Enter no. of Test :\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 124,
                              "end_byte": 125,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 125,
                              "end_byte": 144,
                              "text": "Enter no. of Test :",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 146,
                          "end_byte": 147,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 148,
                  "end_byte": 149,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 150,
              "end_byte": 175,
              "text": "scanf ( \"%d\" , & test ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 150,
                  "end_byte": 173,
                  "text": "scanf ( \"%d\" , & test )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 150,
                      "end_byte": 155,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 156,
                      "end_byte": 173,
                      "text": "( \"%d\" , & test )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 156,
                          "end_byte": 157,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 158,
                          "end_byte": 162,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 158,
                              "end_byte": 159,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 159,
                              "end_byte": 161,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 161,
                              "end_byte": 162,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 163,
                          "end_byte": 164,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 165,
                          "end_byte": 171,
                          "text": "& test",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 167,
                              "end_byte": 171,
                              "text": "test",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 172,
                          "end_byte": 173,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 174,
                  "end_byte": 175,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 176,
              "end_byte": 587,
              "text": "while ( count < test ) { scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d %d\" , gcd , lcm ) ; count ++ ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 176,
                  "end_byte": 181,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 182,
                  "end_byte": 198,
                  "text": "( count < test )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 184,
                      "end_byte": 196,
                      "text": "count < test",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 184,
                          "end_byte": 189,
                          "text": "count",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 190,
                          "end_byte": 191,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 192,
                          "end_byte": 196,
                          "text": "test",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 197,
                      "end_byte": 198,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 199,
                  "end_byte": 587,
                  "text": "{ scanf ( \"%d %d\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = num1 % num2 ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = num1 * num2 / gcd ; printf ( \"%d %d\" , gcd , lcm ) ; count ++ ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 199,
                      "end_byte": 200,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 201,
                      "end_byte": 238,
                      "text": "scanf ( \"%d %d\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 201,
                          "end_byte": 236,
                          "text": "scanf ( \"%d %d\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 201,
                              "end_byte": 206,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 207,
                              "end_byte": 236,
                              "text": "( \"%d %d\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 207,
                                  "end_byte": 208,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 209,
                                  "end_byte": 216,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 209,
                                      "end_byte": 210,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 210,
                                      "end_byte": 215,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 215,
                                      "end_byte": 216,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 217,
                                  "end_byte": 218,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 219,
                                  "end_byte": 225,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 219,
                                      "end_byte": 220,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 221,
                                      "end_byte": 225,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 228,
                                  "end_byte": 234,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 230,
                                      "end_byte": 234,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 235,
                                  "end_byte": 236,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 237,
                          "end_byte": 238,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 239,
                      "end_byte": 350,
                      "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 239,
                          "end_byte": 241,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 242,
                          "end_byte": 257,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 242,
                              "end_byte": 243,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 244,
                              "end_byte": 255,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 244,
                                  "end_byte": 248,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 249,
                                  "end_byte": 250,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 251,
                                  "end_byte": 255,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 256,
                              "end_byte": 257,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 258,
                          "end_byte": 301,
                          "text": "{ numerator = num1 ; denominator = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 258,
                              "end_byte": 259,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 260,
                              "end_byte": 278,
                              "text": "numerator = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 260,
                                  "end_byte": 276,
                                  "text": "numerator = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 260,
                                      "end_byte": 269,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 270,
                                      "end_byte": 271,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 272,
                                      "end_byte": 276,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 277,
                                  "end_byte": 278,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 279,
                              "end_byte": 299,
                              "text": "denominator = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 279,
                                  "end_byte": 297,
                                  "text": "denominator = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 279,
                                      "end_byte": 290,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 291,
                                      "end_byte": 292,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 293,
                                      "end_byte": 297,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 298,
                                  "end_byte": 299,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 300,
                              "end_byte": 301,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 302,
                          "end_byte": 350,
                          "text": "else { numerator = num2 ; denominator = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 302,
                              "end_byte": 306,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 307,
                              "end_byte": 350,
                              "text": "{ numerator = num2 ; denominator = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 309,
                                  "end_byte": 327,
                                  "text": "numerator = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 309,
                                      "end_byte": 325,
                                      "text": "numerator = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 309,
                                          "end_byte": 318,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 319,
                                          "end_byte": 320,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 321,
                                          "end_byte": 325,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 328,
                                  "end_byte": 348,
                                  "text": "denominator = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 328,
                                      "end_byte": 346,
                                      "text": "denominator = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 328,
                                          "end_byte": 339,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 340,
                                          "end_byte": 341,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 342,
                                          "end_byte": 346,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 347,
                                      "end_byte": 348,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 349,
                                  "end_byte": 350,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 351,
                      "end_byte": 376,
                      "text": "remainder = num1 % num2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 351,
                          "end_byte": 374,
                          "text": "remainder = num1 % num2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 351,
                              "end_byte": 360,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 361,
                              "end_byte": 362,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 363,
                              "end_byte": 374,
                              "text": "num1 % num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 363,
                                  "end_byte": 367,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 368,
                                  "end_byte": 369,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 370,
                                  "end_byte": 374,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 375,
                          "end_byte": 376,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 377,
                      "end_byte": 495,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 377,
                          "end_byte": 382,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 383,
                          "end_byte": 401,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 383,
                              "end_byte": 384,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 385,
                              "end_byte": 399,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 385,
                                  "end_byte": 394,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 395,
                                  "end_byte": 397,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 398,
                                  "end_byte": 399,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 400,
                              "end_byte": 401,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 402,
                          "end_byte": 495,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 402,
                              "end_byte": 403,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 404,
                              "end_byte": 429,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 404,
                                  "end_byte": 427,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 404,
                                      "end_byte": 413,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 414,
                                      "end_byte": 415,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 416,
                                      "end_byte": 427,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 428,
                                  "end_byte": 429,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 430,
                              "end_byte": 455,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 430,
                                  "end_byte": 453,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 430,
                                      "end_byte": 441,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 442,
                                      "end_byte": 443,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 444,
                                      "end_byte": 453,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 456,
                              "end_byte": 493,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 456,
                                  "end_byte": 491,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 456,
                                      "end_byte": 465,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 466,
                                      "end_byte": 467,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 468,
                                      "end_byte": 491,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 468,
                                          "end_byte": 477,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 478,
                                          "end_byte": 479,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 480,
                                          "end_byte": 491,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 492,
                                  "end_byte": 493,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 494,
                              "end_byte": 495,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 496,
                      "end_byte": 515,
                      "text": "gcd = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 496,
                          "end_byte": 513,
                          "text": "gcd = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 496,
                              "end_byte": 499,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 500,
                              "end_byte": 501,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 502,
                              "end_byte": 513,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 514,
                          "end_byte": 515,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 516,
                      "end_byte": 541,
                      "text": "lcm = num1 * num2 / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 516,
                          "end_byte": 539,
                          "text": "lcm = num1 * num2 / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 516,
                              "end_byte": 519,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 520,
                              "end_byte": 521,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 522,
                              "end_byte": 539,
                              "text": "num1 * num2 / gcd",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 522,
                                  "end_byte": 533,
                                  "text": "num1 * num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 522,
                                      "end_byte": 526,
                                      "text": "num1",
                                      "children": []
                                    },
                                    {
                                      "type": "*",
                                      "start_byte": 527,
                                      "end_byte": 528,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 529,
                                      "end_byte": 533,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 534,
                                  "end_byte": 535,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 536,
                                  "end_byte": 539,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 540,
                          "end_byte": 541,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 542,
                      "end_byte": 574,
                      "text": "printf ( \"%d %d\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 542,
                          "end_byte": 572,
                          "text": "printf ( \"%d %d\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 542,
                              "end_byte": 548,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 549,
                              "end_byte": 572,
                              "text": "( \"%d %d\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 549,
                                  "end_byte": 550,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 551,
                                  "end_byte": 558,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 551,
                                      "end_byte": 552,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 552,
                                      "end_byte": 557,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 557,
                                      "end_byte": 558,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 559,
                                  "end_byte": 560,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 561,
                                  "end_byte": 564,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 565,
                                  "end_byte": 566,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 567,
                                  "end_byte": 570,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 571,
                                  "end_byte": 572,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 573,
                          "end_byte": 574,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 575,
                      "end_byte": 585,
                      "text": "count ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 575,
                          "end_byte": 583,
                          "text": "count ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 575,
                              "end_byte": 580,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 581,
                              "end_byte": 583,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 584,
                          "end_byte": 585,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 586,
                      "end_byte": 587,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 588,
              "end_byte": 589,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}