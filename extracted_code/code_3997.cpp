int main ( ) { int t , n , i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; int * * a , * * max ; a = ( int * * ) malloc ( ( n + 1 ) * sizeof ( int * ) ) ; max = ( int * * ) malloc ( ( n + 1 ) * sizeof ( int * ) ) ; for ( i = 1 ; i <= n ; i ++ ) { a [ i ] = ( int * ) malloc ( ( i + 1 ) * sizeof ( int ) ) ; max [ i ] = ( int * * ) malloc ( ( n + 1 ) * sizeof ( int * ) ) ; for ( j = 1 ; j <= i ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } for ( i = n ; i >= 1 ; i -- ) { for ( j = 1 ; j <= i ; j ++ ) { if ( i == n ) { max [ i ] [ j ] = a [ i ] [ j ] ; } else { if ( max [ i + 1 ] [ j ] >= max [ i + 1 ] [ j + 1 ] ) max [ i ] [ j ] = a [ i ] [ j ] + max [ i + 1 ] [ j ] ; else max [ i ] [ j ] = a [ i ] [ j ] + max [ i + 1 ] [ j + 1 ] ; } } } printf ( "%d\n" , max [ 1 ] [ 1 ] ) ; } return 0 ; }