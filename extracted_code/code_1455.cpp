int a [ N ] [ N ] ; int cache [ N ] [ N ] , n ; int sum ( int , int ) ; int main ( ) { int t ; scanf ( "%d" , & t ) ; while ( t -- ) { int i , j ; for ( i = 0 ; i < N ; i ++ ) { for ( j = 0 ; j < N ; j ++ ) { a [ i ] [ j ] = 0 ; cache [ i ] [ j ] = 0 ; } } scanf ( "%d" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) { scanf ( "%d" , & a [ i ] [ j ] ) ; } } printf ( "%d\n" , sum ( 0 , 0 ) ) ; } return 0 ; } int sum ( int i , int j ) { if ( i > n ) return 0 ; if ( cache [ i ] [ j ] != 0 ) return cache [ i ] [ j ] ; else { cache [ i ] [ j ] = a [ i ] [ j ] + ( sum ( i + 1 , j ) > sum ( i + 1 , j + 1 ) ? sum ( i + 1 , j ) : sum ( i + 1 , j + 1 ) ) ; return cache [ i ] [ j ] ; } }