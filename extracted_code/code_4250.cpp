int max_sum [ 1000 ] ; int triangle [ 100 ] [ 100 ] ; int main ( ) { int cases ; int rows ; int i , ii ; scanf ( "%d" , & cases ) ; int init_case = cases ; while ( cases -- > 0 ) { scanf ( "%d" , & rows ) ; int max_val = 0 ; for ( i = 0 ; i < rows ; i ++ ) for ( ii = 0 ; ii < ( i + 1 ) ; ii ++ ) scanf ( "%d" , & triangle [ i ] [ ii ] ) ; for ( i = ( rows - 2 ) ; i >= 0 ; i -- ) for ( ii = 0 ; ii <= i ; ii ++ ) triangle [ i ] [ ii ] += ( ( triangle [ i + 1 ] [ ii ] > triangle [ i + 1 ] [ ii + 1 ] ) ? triangle [ i + 1 ] [ ii ] : triangle [ i + 1 ] [ ii + 1 ] ) ; max_sum [ ( init_case - cases - 1 ) ] = triangle [ 0 ] [ 0 ] ; } for ( i = 0 ; i < init_case ; i ++ ) printf ( "%d\n" , max_sum [ i ] ) ; return 0 ; }