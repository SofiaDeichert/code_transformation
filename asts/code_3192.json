{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 620,
  "text": "int tri [ 100 ] [ 100 ] ; int n ; int maxsum ( int , int , int ) ; int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int i , j ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < n ; j ++ ) { if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; } } printf ( \"%d\\n\" , maxsum ( 0 , 0 , 0 ) ) ; } return 0 ; } int maxsum ( int i , int j , int sum ) { if ( tri [ i ] [ j ] == 0 ) return 0 ; sum += tri [ i ] [ j ] ; if ( i == n - 1 ) return sum ; int a = maxsum ( i + 1 , j , sum ) ; int b = maxsum ( i + 1 , j + 1 , sum ) ; if ( a > b ) return a ; return b ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 25,
      "text": "int tri [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "tri [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "tri [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "tri",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 24,
          "end_byte": 25,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 26,
      "end_byte": 33,
      "text": "int n ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 26,
          "end_byte": 29,
          "text": "int",
          "children": []
        },
        {
          "type": "identifier",
          "start_byte": 30,
          "end_byte": 31,
          "text": "n",
          "children": []
        },
        {
          "type": ";",
          "start_byte": 32,
          "end_byte": 33,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 34,
      "end_byte": 66,
      "text": "int maxsum ( int , int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 34,
          "end_byte": 37,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 38,
          "end_byte": 64,
          "text": "maxsum ( int , int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 38,
              "end_byte": 44,
              "text": "maxsum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 45,
              "end_byte": 64,
              "text": "( int , int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 47,
                  "end_byte": 50,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 47,
                      "end_byte": 50,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 53,
                  "end_byte": 56,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 53,
                      "end_byte": 56,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 59,
                  "end_byte": 62,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 59,
                      "end_byte": 62,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 65,
          "end_byte": 66,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 67,
      "end_byte": 369,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int i , j ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < n ; j ++ ) { if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; } } printf ( \"%d\\n\" , maxsum ( 0 , 0 , 0 ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 67,
          "end_byte": 70,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 71,
          "end_byte": 79,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 71,
              "end_byte": 75,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 76,
              "end_byte": 79,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 76,
                  "end_byte": 77,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 78,
                  "end_byte": 79,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 80,
          "end_byte": 369,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int i , j ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < n ; j ++ ) { if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; } } printf ( \"%d\\n\" , maxsum ( 0 , 0 , 0 ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 80,
              "end_byte": 81,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 82,
              "end_byte": 89,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 82,
                  "end_byte": 85,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 86,
                  "end_byte": 87,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 88,
                  "end_byte": 89,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 90,
              "end_byte": 112,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 90,
                  "end_byte": 110,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 90,
                      "end_byte": 95,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 96,
                      "end_byte": 110,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 98,
                          "end_byte": 102,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 99,
                              "end_byte": 101,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 101,
                              "end_byte": 102,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 103,
                          "end_byte": 104,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 105,
                          "end_byte": 108,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 105,
                              "end_byte": 106,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 107,
                              "end_byte": 108,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 109,
                          "end_byte": 110,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 111,
                  "end_byte": 112,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 113,
              "end_byte": 356,
              "text": "while ( t -- ) { int i , j ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < n ; j ++ ) { if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; } } printf ( \"%d\\n\" , maxsum ( 0 , 0 , 0 ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 113,
                  "end_byte": 118,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 119,
                  "end_byte": 127,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 121,
                      "end_byte": 125,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 123,
                          "end_byte": 125,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 126,
                      "end_byte": 127,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 128,
                  "end_byte": 356,
                  "text": "{ int i , j ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < n ; j ++ ) { if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; } } printf ( \"%d\\n\" , maxsum ( 0 , 0 , 0 ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 128,
                      "end_byte": 129,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 130,
                      "end_byte": 141,
                      "text": "int i , j ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 130,
                          "end_byte": 133,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 134,
                          "end_byte": 135,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 136,
                          "end_byte": 137,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 138,
                          "end_byte": 139,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 140,
                          "end_byte": 141,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 142,
                      "end_byte": 164,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 142,
                          "end_byte": 162,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 142,
                              "end_byte": 147,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 148,
                              "end_byte": 162,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 148,
                                  "end_byte": 149,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 150,
                                  "end_byte": 154,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 151,
                                      "end_byte": 153,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 155,
                                  "end_byte": 156,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 157,
                                  "end_byte": 160,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 157,
                                      "end_byte": 158,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 159,
                                      "end_byte": 160,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 161,
                                  "end_byte": 162,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 163,
                          "end_byte": 164,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 165,
                      "end_byte": 311,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j < n ; j ++ ) { if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 165,
                          "end_byte": 168,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 169,
                          "end_byte": 170,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 171,
                          "end_byte": 176,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 171,
                              "end_byte": 172,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 173,
                              "end_byte": 174,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 177,
                          "end_byte": 178,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 179,
                          "end_byte": 184,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 179,
                              "end_byte": 180,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 181,
                              "end_byte": 182,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 183,
                              "end_byte": 184,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 185,
                          "end_byte": 186,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 187,
                          "end_byte": 191,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 187,
                              "end_byte": 188,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 189,
                              "end_byte": 191,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 192,
                          "end_byte": 193,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 194,
                          "end_byte": 311,
                          "text": "{ for ( j = 0 ; j < n ; j ++ ) { if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 194,
                              "end_byte": 195,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 196,
                              "end_byte": 309,
                              "text": "for ( j = 0 ; j < n ; j ++ ) { if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 196,
                                  "end_byte": 199,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 202,
                                  "end_byte": 207,
                                  "text": "j = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 202,
                                      "end_byte": 203,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 204,
                                      "end_byte": 205,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 206,
                                      "end_byte": 207,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 210,
                                  "end_byte": 215,
                                  "text": "j < n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 210,
                                      "end_byte": 211,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 212,
                                      "end_byte": 213,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 214,
                                      "end_byte": 215,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 216,
                                  "end_byte": 217,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 218,
                                  "end_byte": 222,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 218,
                                      "end_byte": 219,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 220,
                                      "end_byte": 222,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 223,
                                  "end_byte": 224,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 225,
                                  "end_byte": 309,
                                  "text": "{ if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 225,
                                      "end_byte": 226,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 227,
                                      "end_byte": 307,
                                      "text": "if ( j < i + 1 ) scanf ( \"%d\" , & tri [ i ] [ j ] ) ; else tri [ i ] [ j ] = 0 ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 227,
                                          "end_byte": 229,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 230,
                                          "end_byte": 243,
                                          "text": "( j < i + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 230,
                                              "end_byte": 231,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 232,
                                              "end_byte": 241,
                                              "text": "j < i + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 232,
                                                  "end_byte": 233,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<",
                                                  "start_byte": 234,
                                                  "end_byte": 235,
                                                  "text": "<",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 236,
                                                  "end_byte": 241,
                                                  "text": "i + 1",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 236,
                                                      "end_byte": 237,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "+",
                                                      "start_byte": 238,
                                                      "end_byte": 239,
                                                      "text": "+",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 240,
                                                      "end_byte": 241,
                                                      "text": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 242,
                                              "end_byte": 243,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 244,
                                          "end_byte": 280,
                                          "text": "scanf ( \"%d\" , & tri [ i ] [ j ] ) ;",
                                          "children": [
                                            {
                                              "type": "call_expression",
                                              "start_byte": 244,
                                              "end_byte": 278,
                                              "text": "scanf ( \"%d\" , & tri [ i ] [ j ] )",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 244,
                                                  "end_byte": 249,
                                                  "text": "scanf",
                                                  "children": []
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start_byte": 250,
                                                  "end_byte": 278,
                                                  "text": "( \"%d\" , & tri [ i ] [ j ] )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 250,
                                                      "end_byte": 251,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_literal",
                                                      "start_byte": 252,
                                                      "end_byte": 256,
                                                      "text": "\"%d\"",
                                                      "children": [
                                                        {
                                                          "type": "\"",
                                                          "start_byte": 252,
                                                          "end_byte": 253,
                                                          "text": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start_byte": 253,
                                                          "end_byte": 255,
                                                          "text": "%d",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "\"",
                                                          "start_byte": 255,
                                                          "end_byte": 256,
                                                          "text": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start_byte": 257,
                                                      "end_byte": 258,
                                                      "text": ",",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "pointer_expression",
                                                      "start_byte": 259,
                                                      "end_byte": 276,
                                                      "text": "& tri [ i ] [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "&",
                                                          "start_byte": 259,
                                                          "end_byte": 260,
                                                          "text": "&",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 261,
                                                          "end_byte": 276,
                                                          "text": "tri [ i ] [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 261,
                                                              "end_byte": 270,
                                                              "text": "tri [ i ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 261,
                                                                  "end_byte": 264,
                                                                  "text": "tri",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 265,
                                                                  "end_byte": 270,
                                                                  "text": "[ i ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 265,
                                                                      "end_byte": 266,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 267,
                                                                      "end_byte": 268,
                                                                      "text": "i",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 269,
                                                                      "end_byte": 270,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 271,
                                                              "end_byte": 276,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 271,
                                                                  "end_byte": 272,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 273,
                                                                  "end_byte": 274,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 275,
                                                                  "end_byte": 276,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 277,
                                                      "end_byte": 278,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 279,
                                              "end_byte": 280,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 281,
                                          "end_byte": 307,
                                          "text": "else tri [ i ] [ j ] = 0 ;",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 281,
                                              "end_byte": 285,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 286,
                                              "end_byte": 307,
                                              "text": "tri [ i ] [ j ] = 0 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 286,
                                                  "end_byte": 305,
                                                  "text": "tri [ i ] [ j ] = 0",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 286,
                                                      "end_byte": 301,
                                                      "text": "tri [ i ] [ j ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 286,
                                                          "end_byte": 295,
                                                          "text": "tri [ i ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 286,
                                                              "end_byte": 289,
                                                              "text": "tri",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 290,
                                                              "end_byte": 295,
                                                              "text": "[ i ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 290,
                                                                  "end_byte": 291,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 292,
                                                                  "end_byte": 293,
                                                                  "text": "i",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 294,
                                                                  "end_byte": 295,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 296,
                                                          "end_byte": 301,
                                                          "text": "[ j ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 296,
                                                              "end_byte": 297,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 298,
                                                              "end_byte": 299,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 300,
                                                              "end_byte": 301,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 302,
                                                      "end_byte": 303,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 304,
                                                      "end_byte": 305,
                                                      "text": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 306,
                                                  "end_byte": 307,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 308,
                                      "end_byte": 309,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 310,
                              "end_byte": 311,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 312,
                      "end_byte": 354,
                      "text": "printf ( \"%d\\n\" , maxsum ( 0 , 0 , 0 ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 312,
                          "end_byte": 352,
                          "text": "printf ( \"%d\\n\" , maxsum ( 0 , 0 , 0 ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 312,
                              "end_byte": 318,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 319,
                              "end_byte": 352,
                              "text": "( \"%d\\n\" , maxsum ( 0 , 0 , 0 ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 319,
                                  "end_byte": 320,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 321,
                                  "end_byte": 327,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 321,
                                      "end_byte": 322,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 322,
                                      "end_byte": 324,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 324,
                                      "end_byte": 326,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 326,
                                      "end_byte": 327,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 328,
                                  "end_byte": 329,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 330,
                                  "end_byte": 350,
                                  "text": "maxsum ( 0 , 0 , 0 )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 330,
                                      "end_byte": 336,
                                      "text": "maxsum",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 337,
                                      "end_byte": 350,
                                      "text": "( 0 , 0 , 0 )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 339,
                                          "end_byte": 340,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 341,
                                          "end_byte": 342,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 343,
                                          "end_byte": 344,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 345,
                                          "end_byte": 346,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 347,
                                          "end_byte": 348,
                                          "text": "0",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 349,
                                          "end_byte": 350,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 351,
                                  "end_byte": 352,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 355,
                      "end_byte": 356,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 357,
              "end_byte": 367,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 357,
                  "end_byte": 363,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 364,
                  "end_byte": 365,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 366,
                  "end_byte": 367,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 368,
              "end_byte": 369,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 370,
      "end_byte": 620,
      "text": "int maxsum ( int i , int j , int sum ) { if ( tri [ i ] [ j ] == 0 ) return 0 ; sum += tri [ i ] [ j ] ; if ( i == n - 1 ) return sum ; int a = maxsum ( i + 1 , j , sum ) ; int b = maxsum ( i + 1 , j + 1 , sum ) ; if ( a > b ) return a ; return b ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 370,
          "end_byte": 373,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 374,
          "end_byte": 408,
          "text": "maxsum ( int i , int j , int sum )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 374,
              "end_byte": 380,
              "text": "maxsum",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 381,
              "end_byte": 408,
              "text": "( int i , int j , int sum )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 381,
                  "end_byte": 382,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 383,
                  "end_byte": 388,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 383,
                      "end_byte": 386,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 387,
                      "end_byte": 388,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 389,
                  "end_byte": 390,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 391,
                  "end_byte": 396,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 391,
                      "end_byte": 394,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 395,
                      "end_byte": 396,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 397,
                  "end_byte": 398,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 399,
                  "end_byte": 406,
                  "text": "int sum",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 399,
                      "end_byte": 402,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 403,
                      "end_byte": 406,
                      "text": "sum",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 407,
                  "end_byte": 408,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 409,
          "end_byte": 620,
          "text": "{ if ( tri [ i ] [ j ] == 0 ) return 0 ; sum += tri [ i ] [ j ] ; if ( i == n - 1 ) return sum ; int a = maxsum ( i + 1 , j , sum ) ; int b = maxsum ( i + 1 , j + 1 , sum ) ; if ( a > b ) return a ; return b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 409,
              "end_byte": 410,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 411,
              "end_byte": 449,
              "text": "if ( tri [ i ] [ j ] == 0 ) return 0 ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 411,
                  "end_byte": 413,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 414,
                  "end_byte": 438,
                  "text": "( tri [ i ] [ j ] == 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 414,
                      "end_byte": 415,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 416,
                      "end_byte": 436,
                      "text": "tri [ i ] [ j ] == 0",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 416,
                          "end_byte": 431,
                          "text": "tri [ i ] [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 416,
                              "end_byte": 425,
                              "text": "tri [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 416,
                                  "end_byte": 419,
                                  "text": "tri",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 420,
                                  "end_byte": 425,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 420,
                                      "end_byte": 421,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 422,
                                      "end_byte": 423,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 424,
                                      "end_byte": 425,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 426,
                              "end_byte": 431,
                              "text": "[ j ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 426,
                                  "end_byte": 427,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 428,
                                  "end_byte": 429,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 430,
                                  "end_byte": 431,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "==",
                          "start_byte": 432,
                          "end_byte": 434,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 435,
                          "end_byte": 436,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 437,
                      "end_byte": 438,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 439,
                  "end_byte": 449,
                  "text": "return 0 ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 439,
                      "end_byte": 445,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 446,
                      "end_byte": 447,
                      "text": "0",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 448,
                      "end_byte": 449,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 450,
              "end_byte": 474,
              "text": "sum += tri [ i ] [ j ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 450,
                  "end_byte": 472,
                  "text": "sum += tri [ i ] [ j ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 450,
                      "end_byte": 453,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "+=",
                      "start_byte": 454,
                      "end_byte": 456,
                      "text": "+=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 457,
                      "end_byte": 472,
                      "text": "tri [ i ] [ j ]",
                      "children": [
                        {
                          "type": "subscript_expression",
                          "start_byte": 457,
                          "end_byte": 466,
                          "text": "tri [ i ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 457,
                              "end_byte": 460,
                              "text": "tri",
                              "children": []
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 461,
                              "end_byte": 466,
                              "text": "[ i ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 461,
                                  "end_byte": 462,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 463,
                                  "end_byte": 464,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 465,
                                  "end_byte": 466,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 467,
                          "end_byte": 472,
                          "text": "[ j ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 467,
                              "end_byte": 468,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 469,
                              "end_byte": 470,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 471,
                              "end_byte": 472,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 473,
                  "end_byte": 474,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 475,
              "end_byte": 505,
              "text": "if ( i == n - 1 ) return sum ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 475,
                  "end_byte": 477,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 478,
                  "end_byte": 492,
                  "text": "( i == n - 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 478,
                      "end_byte": 479,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 480,
                      "end_byte": 490,
                      "text": "i == n - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 480,
                          "end_byte": 481,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 482,
                          "end_byte": 484,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 485,
                          "end_byte": 490,
                          "text": "n - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 485,
                              "end_byte": 486,
                              "text": "n",
                              "children": []
                            },
                            {
                              "type": "-",
                              "start_byte": 487,
                              "end_byte": 488,
                              "text": "-",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 489,
                              "end_byte": 490,
                              "text": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 491,
                      "end_byte": 492,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 493,
                  "end_byte": 505,
                  "text": "return sum ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 493,
                      "end_byte": 499,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 500,
                      "end_byte": 503,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 504,
                      "end_byte": 505,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 506,
              "end_byte": 542,
              "text": "int a = maxsum ( i + 1 , j , sum ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 506,
                  "end_byte": 509,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 510,
                  "end_byte": 540,
                  "text": "a = maxsum ( i + 1 , j , sum )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 510,
                      "end_byte": 511,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 512,
                      "end_byte": 513,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 514,
                      "end_byte": 540,
                      "text": "maxsum ( i + 1 , j , sum )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 514,
                          "end_byte": 520,
                          "text": "maxsum",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 521,
                          "end_byte": 540,
                          "text": "( i + 1 , j , sum )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 521,
                              "end_byte": 522,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 523,
                              "end_byte": 528,
                              "text": "i + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 523,
                                  "end_byte": 524,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 525,
                                  "end_byte": 526,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 527,
                                  "end_byte": 528,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 529,
                              "end_byte": 530,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 531,
                              "end_byte": 532,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": ",",
                              "start_byte": 533,
                              "end_byte": 534,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 535,
                              "end_byte": 538,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 539,
                              "end_byte": 540,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 541,
                  "end_byte": 542,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 543,
              "end_byte": 583,
              "text": "int b = maxsum ( i + 1 , j + 1 , sum ) ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 543,
                  "end_byte": 546,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 547,
                  "end_byte": 581,
                  "text": "b = maxsum ( i + 1 , j + 1 , sum )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 547,
                      "end_byte": 548,
                      "text": "b",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 549,
                      "end_byte": 550,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 551,
                      "end_byte": 581,
                      "text": "maxsum ( i + 1 , j + 1 , sum )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 551,
                          "end_byte": 557,
                          "text": "maxsum",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 558,
                          "end_byte": 581,
                          "text": "( i + 1 , j + 1 , sum )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 558,
                              "end_byte": 559,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 560,
                              "end_byte": 565,
                              "text": "i + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 560,
                                  "end_byte": 561,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 562,
                                  "end_byte": 563,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 564,
                                  "end_byte": 565,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 566,
                              "end_byte": 567,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 568,
                              "end_byte": 573,
                              "text": "j + 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 568,
                                  "end_byte": 569,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "+",
                                  "start_byte": 570,
                                  "end_byte": 571,
                                  "text": "+",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 572,
                                  "end_byte": 573,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 574,
                              "end_byte": 575,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 576,
                              "end_byte": 579,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 580,
                              "end_byte": 581,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 582,
                  "end_byte": 583,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 584,
              "end_byte": 607,
              "text": "if ( a > b ) return a ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 584,
                  "end_byte": 586,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 587,
                  "end_byte": 596,
                  "text": "( a > b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 587,
                      "end_byte": 588,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 589,
                      "end_byte": 594,
                      "text": "a > b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 589,
                          "end_byte": 590,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 591,
                          "end_byte": 592,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 593,
                          "end_byte": 594,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 595,
                      "end_byte": 596,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 597,
                  "end_byte": 607,
                  "text": "return a ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 597,
                      "end_byte": 603,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 604,
                      "end_byte": 605,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 606,
                      "end_byte": 607,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 608,
              "end_byte": 618,
              "text": "return b ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 608,
                  "end_byte": 614,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 615,
                  "end_byte": 616,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 617,
                  "end_byte": 618,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 619,
              "end_byte": 620,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}