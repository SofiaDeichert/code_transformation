static char IBUF [ MAXBUFFER ] ; static char OBUF [ 6 ] ; int main ( ) { int t = 0 , n , ar [ 100 ] [ 100 ] , x , i , j ; unsigned int bi = 0 , bo = 0 ; fgets ( IBUF , MAXBUFFER , stdin ) ; while ( IBUF [ bi ] != '\0' && IBUF [ bi ] != '\n' ) { t *= 10 ; t += ( IBUF [ bi ] - '0' ) ; ++ bi ; } for ( x = 0 ; x < t ; ++ x ) { n = 0 ; bi = 0 ; fgets ( IBUF , MAXBUFFER , stdin ) ; while ( IBUF [ bi ] != '\n' && IBUF [ bi ] != '\0' ) { n *= 10 ; n += IBUF [ bi ] - '0' ; ++ bi ; } for ( i = 0 ; i < n ; ++ i ) { fgets ( IBUF , MAXBUFFER , stdin ) ; bi = 0 ; for ( j = 0 ; j <= i ; ++ j ) { ar [ i ] [ j ] = 0 ; while ( IBUF [ bi ] != '\n' && IBUF [ bi ] != ' ' && IBUF [ bi ] != '\0' ) { ar [ i ] [ j ] *= 10 ; ar [ i ] [ j ] += ( IBUF [ bi ] - '0' ) ; bi ++ ; } ++ bi ; } } for ( i = n - 2 ; i >= 0 && n > 1 ; -- i ) { for ( j = 0 ; j <= i ; ++ j ) { ar [ i ] [ j ] += ( ( ar [ i + 1 ] [ j ] > ar [ i + 1 ] [ j + 1 ] ) ? ar [ i + 1 ] [ j ] : ar [ i + 1 ] [ j + 1 ] ) ; } } if ( ar [ 0 ] [ 0 ] < 10000 ) { if ( ar [ 0 ] [ 0 ] < 1000 ) { if ( ar [ 0 ] [ 0 ] < 100 ) { if ( ar [ 0 ] [ 0 ] < 10 ) { bo = 1 ; } else bo = 2 ; } else bo = 3 ; } else bo = 4 ; } else bo = 5 ; bi = bo ; OBUF [ bo -- ] = '\n' ; while ( bo >= 0 && ar [ 0 ] [ 0 ] != 0 ) { if ( ar [ 0 ] [ 0 ] != 0 ) { OBUF [ bo ] = ( ar [ 0 ] [ 0 ] + '0' ) ; ar [ 0 ] [ 0 ] /= 10 ; } else { OBUF [ bo ] = '0' ; } bo -- ; } fwrite ( OBUF , sizeof ( char ) , bi + 1 , stdout ) ; } }