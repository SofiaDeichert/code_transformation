int n , a [ 100 ] [ 100 ] , cache [ 100 ] [ 100 ] ; int maxFromTop ( int i , int j ) { if ( i == n ) return 0 ; if ( cache [ i ] [ j ] != - 1 ) return cache [ i ] [ j ] ; int path1 = maxFromTop ( i + 1 , j + 1 ) ; int path2 = maxFromTop ( i + 1 , j ) ; int max = ( path1 > path2 ? path1 : path2 ) ; cache [ i ] [ j ] = a [ i ] [ j ] + max ; return a [ i ] [ j ] + max ; } int main ( void ) { int t , i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; for ( i = 0 ; i < 100 ; i ++ ) for ( j = 0 ; j < 100 ; j ++ ) cache [ i ] [ j ] = - 1 ; for ( i = 0 ; i < n ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & a [ i ] [ j ] ) ; printf ( "%d\n" , maxFromTop ( 0 , 0 ) ) ; } return 0 ; }