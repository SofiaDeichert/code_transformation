int retMax ( int , int , int ) ; int a [ 100 ] [ 100 ] ; int main ( ) { int ntestcases ; int sum , currptr , lvl , ht , i , j , k , n1 , n2 , p ; scanf ( "%d" , & ntestcases ) ; for ( i = 0 ; i < ntestcases ; i ++ ) { scanf ( "%d" , & ht ) ; sum = 0 ; currptr = 0 ; n1 = 0 ; n2 = 0 ; for ( j = 0 ; j < ht ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%d" , & a [ j ] [ k ] ) ; } sum = retMax ( 0 , 0 , ht ) ; } printf ( "%d\n" , sum ) ; } } int retMax ( int currptr , int lvl , int ht ) { int n , n1 , n2 ; if ( lvl == ht ) { n1 = a [ lvl ] [ currptr ] ; n2 = a [ lvl ] [ currptr + 1 ] ; return n1 > n2 ? n1 : n2 ; } else { n1 = retMax ( currptr , lvl + 1 , ht ) ; n2 = retMax ( currptr + 1 , lvl + 1 , ht ) ; n = a [ lvl ] [ currptr ] ; return ( n + ( n1 > n2 ? n1 : n2 ) ) ; } }