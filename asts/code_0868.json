{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 320,
  "text": "void main ( ) { int t , i , p , n , m , max , l , k ; scanf ( \"%d\" , & t ) ; k = 0 ; while ( k < t ) { k ++ ; scanf ( \"%d %d\" , & n , & m ) ; p = n * m ; if ( n > m ) max = n ; else max = m ; for ( i = 1 ; i < max ; i ++ ) { if ( n % i == 0 && m % i == 0 ) max = i ; } l = p / max ; printf ( \"%d %d \\n\" , max , l ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 320,
      "text": "void main ( ) { int t , i , p , n , m , max , l , k ; scanf ( \"%d\" , & t ) ; k = 0 ; while ( k < t ) { k ++ ; scanf ( \"%d %d\" , & n , & m ) ; p = n * m ; if ( n > m ) max = n ; else max = m ; for ( i = 1 ; i < max ; i ++ ) { if ( n % i == 0 && m % i == 0 ) max = i ; } l = p / max ; printf ( \"%d %d \\n\" , max , l ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 13,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 9,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 10,
              "end_byte": 13,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 10,
                  "end_byte": 11,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 12,
                  "end_byte": 13,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 14,
          "end_byte": 320,
          "text": "{ int t , i , p , n , m , max , l , k ; scanf ( \"%d\" , & t ) ; k = 0 ; while ( k < t ) { k ++ ; scanf ( \"%d %d\" , & n , & m ) ; p = n * m ; if ( n > m ) max = n ; else max = m ; for ( i = 1 ; i < max ; i ++ ) { if ( n % i == 0 && m % i == 0 ) max = i ; } l = p / max ; printf ( \"%d %d \\n\" , max , l ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 14,
              "end_byte": 15,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 16,
              "end_byte": 53,
              "text": "int t , i , p , n , m , max , l , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 22,
                  "end_byte": 23,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": "p",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "m",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "max",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 47,
                  "text": "l",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 52,
                  "end_byte": 53,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 54,
              "end_byte": 76,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 54,
                  "end_byte": 74,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 54,
                      "end_byte": 59,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 60,
                      "end_byte": 74,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 60,
                          "end_byte": 61,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 62,
                          "end_byte": 66,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 62,
                              "end_byte": 63,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 63,
                              "end_byte": 65,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 69,
                          "end_byte": 72,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 69,
                              "end_byte": 70,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 71,
                              "end_byte": 72,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 73,
                          "end_byte": 74,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 75,
                  "end_byte": 76,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 77,
              "end_byte": 84,
              "text": "k = 0 ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 77,
                  "end_byte": 82,
                  "text": "k = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 77,
                      "end_byte": 78,
                      "text": "k",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 79,
                      "end_byte": 80,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 81,
                      "end_byte": 82,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 85,
              "end_byte": 318,
              "text": "while ( k < t ) { k ++ ; scanf ( \"%d %d\" , & n , & m ) ; p = n * m ; if ( n > m ) max = n ; else max = m ; for ( i = 1 ; i < max ; i ++ ) { if ( n % i == 0 && m % i == 0 ) max = i ; } l = p / max ; printf ( \"%d %d \\n\" , max , l ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 85,
                  "end_byte": 90,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 91,
                  "end_byte": 100,
                  "text": "( k < t )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 91,
                      "end_byte": 92,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 93,
                      "end_byte": 98,
                      "text": "k < t",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 93,
                          "end_byte": 94,
                          "text": "k",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 97,
                          "end_byte": 98,
                          "text": "t",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 101,
                  "end_byte": 318,
                  "text": "{ k ++ ; scanf ( \"%d %d\" , & n , & m ) ; p = n * m ; if ( n > m ) max = n ; else max = m ; for ( i = 1 ; i < max ; i ++ ) { if ( n % i == 0 && m % i == 0 ) max = i ; } l = p / max ; printf ( \"%d %d \\n\" , max , l ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 103,
                      "end_byte": 109,
                      "text": "k ++ ;",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 103,
                          "end_byte": 107,
                          "text": "k ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 103,
                              "end_byte": 104,
                              "text": "k",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 105,
                              "end_byte": 107,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 108,
                          "end_byte": 109,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 110,
                      "end_byte": 141,
                      "text": "scanf ( \"%d %d\" , & n , & m ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 110,
                          "end_byte": 139,
                          "text": "scanf ( \"%d %d\" , & n , & m )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 110,
                              "end_byte": 115,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 116,
                              "end_byte": 139,
                              "text": "( \"%d %d\" , & n , & m )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 116,
                                  "end_byte": 117,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 118,
                                  "end_byte": 125,
                                  "text": "\"%d %d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 118,
                                      "end_byte": 119,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 119,
                                      "end_byte": 124,
                                      "text": "%d %d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 126,
                                  "end_byte": 127,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 128,
                                  "end_byte": 131,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 128,
                                      "end_byte": 129,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 132,
                                  "end_byte": 133,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 134,
                                  "end_byte": 137,
                                  "text": "& m",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 134,
                                      "end_byte": 135,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 136,
                                      "end_byte": 137,
                                      "text": "m",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 138,
                                  "end_byte": 139,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 140,
                          "end_byte": 141,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 142,
                      "end_byte": 153,
                      "text": "p = n * m ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 142,
                          "end_byte": 151,
                          "text": "p = n * m",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 142,
                              "end_byte": 143,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 146,
                              "end_byte": 151,
                              "text": "n * m",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 146,
                                  "end_byte": 147,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 148,
                                  "end_byte": 149,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 150,
                                  "end_byte": 151,
                                  "text": "m",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 152,
                          "end_byte": 153,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 154,
                      "end_byte": 191,
                      "text": "if ( n > m ) max = n ; else max = m ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 154,
                          "end_byte": 156,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 157,
                          "end_byte": 166,
                          "text": "( n > m )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 157,
                              "end_byte": 158,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 159,
                              "end_byte": 164,
                              "text": "n > m",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 161,
                                  "end_byte": 162,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": "m",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 167,
                          "end_byte": 176,
                          "text": "max = n ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 167,
                              "end_byte": 174,
                              "text": "max = n",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 167,
                                  "end_byte": 170,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 171,
                                  "end_byte": 172,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 173,
                                  "end_byte": 174,
                                  "text": "n",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 175,
                              "end_byte": 176,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 177,
                          "end_byte": 191,
                          "text": "else max = m ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 177,
                              "end_byte": 181,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 182,
                              "end_byte": 191,
                              "text": "max = m ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 182,
                                  "end_byte": 189,
                                  "text": "max = m",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 182,
                                      "end_byte": 185,
                                      "text": "max",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 186,
                                      "end_byte": 187,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 188,
                                      "end_byte": 189,
                                      "text": "m",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 190,
                                  "end_byte": 191,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 192,
                      "end_byte": 268,
                      "text": "for ( i = 1 ; i < max ; i ++ ) { if ( n % i == 0 && m % i == 0 ) max = i ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 192,
                          "end_byte": 195,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 196,
                          "end_byte": 197,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 198,
                          "end_byte": 203,
                          "text": "i = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 198,
                              "end_byte": 199,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 200,
                              "end_byte": 201,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 204,
                          "end_byte": 205,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 206,
                          "end_byte": 213,
                          "text": "i < max",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 206,
                              "end_byte": 207,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 208,
                              "end_byte": 209,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 210,
                              "end_byte": 213,
                              "text": "max",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 214,
                          "end_byte": 215,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 216,
                          "end_byte": 220,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 216,
                              "end_byte": 217,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 218,
                              "end_byte": 220,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 221,
                          "end_byte": 222,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 223,
                          "end_byte": 268,
                          "text": "{ if ( n % i == 0 && m % i == 0 ) max = i ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 223,
                              "end_byte": 224,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 225,
                              "end_byte": 266,
                              "text": "if ( n % i == 0 && m % i == 0 ) max = i ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 225,
                                  "end_byte": 227,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 228,
                                  "end_byte": 256,
                                  "text": "( n % i == 0 && m % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 228,
                                      "end_byte": 229,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 230,
                                      "end_byte": 254,
                                      "text": "n % i == 0 && m % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 230,
                                          "end_byte": 240,
                                          "text": "n % i == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 230,
                                              "end_byte": 235,
                                              "text": "n % i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 230,
                                                  "end_byte": 231,
                                                  "text": "n",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 232,
                                                  "end_byte": 233,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 234,
                                                  "end_byte": 235,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 236,
                                              "end_byte": 238,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 239,
                                              "end_byte": 240,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "&&",
                                          "start_byte": 241,
                                          "end_byte": 243,
                                          "text": "&&",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 244,
                                          "end_byte": 254,
                                          "text": "m % i == 0",
                                          "children": [
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 244,
                                              "end_byte": 249,
                                              "text": "m % i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 244,
                                                  "end_byte": 245,
                                                  "text": "m",
                                                  "children": []
                                                },
                                                {
                                                  "type": "%",
                                                  "start_byte": 246,
                                                  "end_byte": 247,
                                                  "text": "%",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 248,
                                                  "end_byte": 249,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "==",
                                              "start_byte": 250,
                                              "end_byte": 252,
                                              "text": "==",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 253,
                                              "end_byte": 254,
                                              "text": "0",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 255,
                                      "end_byte": 256,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 257,
                                  "end_byte": 266,
                                  "text": "max = i ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 257,
                                      "end_byte": 264,
                                      "text": "max = i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 257,
                                          "end_byte": 260,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 261,
                                          "end_byte": 262,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 263,
                                          "end_byte": 264,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 265,
                                      "end_byte": 266,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 267,
                              "end_byte": 268,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 269,
                      "end_byte": 282,
                      "text": "l = p / max ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 269,
                          "end_byte": 280,
                          "text": "l = p / max",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 269,
                              "end_byte": 270,
                              "text": "l",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 271,
                              "end_byte": 272,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 273,
                              "end_byte": 280,
                              "text": "p / max",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 273,
                                  "end_byte": 274,
                                  "text": "p",
                                  "children": []
                                },
                                {
                                  "type": "/",
                                  "start_byte": 275,
                                  "end_byte": 276,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 277,
                                  "end_byte": 280,
                                  "text": "max",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 281,
                          "end_byte": 282,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 283,
                      "end_byte": 316,
                      "text": "printf ( \"%d %d \\n\" , max , l ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 283,
                          "end_byte": 314,
                          "text": "printf ( \"%d %d \\n\" , max , l )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 283,
                              "end_byte": 289,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 290,
                              "end_byte": 314,
                              "text": "( \"%d %d \\n\" , max , l )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 290,
                                  "end_byte": 291,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 292,
                                  "end_byte": 302,
                                  "text": "\"%d %d \\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 292,
                                      "end_byte": 293,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 293,
                                      "end_byte": 299,
                                      "text": "%d %d ",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 299,
                                      "end_byte": 301,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 301,
                                      "end_byte": 302,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 303,
                                  "end_byte": 304,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 305,
                                  "end_byte": 308,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 309,
                                  "end_byte": 310,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 311,
                                  "end_byte": 312,
                                  "text": "l",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 313,
                                  "end_byte": 314,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 317,
                      "end_byte": 318,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 319,
              "end_byte": 320,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}