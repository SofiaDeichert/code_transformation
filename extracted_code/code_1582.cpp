int sumtran ( int n , int triangle [ ] [ 100 ] , int rown , int coln , int store [ ] [ 100 ] ) ; int main ( ) { int t , i , j , k , n , sum , triangle [ 100 ] [ 100 ] , store [ 100 ] [ 100 ] ; for ( i = 0 ; i < 100 ; i ++ ) { for ( j = 0 ; j < 100 ; j ++ ) { triangle [ i ] [ j ] = 0 ; store [ i ] [ j ] = - 1 ; } } scanf ( "%d" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( "%d" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) scanf ( "%d" , & triangle [ j ] [ k ] ) ; } sum = sumtran ( n , triangle , 0 , 0 , store ) ; printf ( "%d\n" , sum ) ; } return 0 ; } int sumtran ( int n , int triangle [ ] [ 100 ] , int rown , int coln , int store [ ] [ 100 ] ) { if ( store [ rown ] [ coln ] != - 1 ) return store [ rown ] [ coln ] ; int prev_sum ; if ( rown >= n ) return triangle [ rown ] [ coln ] ; if ( sumtran ( n , triangle , rown + 1 , coln , store ) > sumtran ( n , triangle , rown + 1 , coln + 1 , store ) ) prev_sum = sumtran ( n , triangle , rown + 1 , coln , store ) + triangle [ rown ] [ coln ] ; else prev_sum = sumtran ( n , triangle , rown + 1 , coln + 1 , store ) + triangle [ rown ] [ coln ] ; store [ rown ] [ coln ] = prev_sum ; return prev_sum ; }