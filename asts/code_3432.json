{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 733,
  "text": "int max ( int a , int b ) { if ( a >= b ) return a ; else return b ; } int get_max ( int arr [ ] , int len ) { int maximum = 0 , it ; for ( it = 0 ; it <= len ; it ++ ) { if ( maximum < arr [ it ] ) maximum = arr [ it ] ; } return maximum ; } int main ( ) { int it , jt , num , length , count , arr [ MAX ] ; scanf ( \"%d\" , & count ) ; while ( count -- > 0 ) { scanf ( \"%d\" , & length ) ; for ( it = 0 ; it <= length ; it ++ ) { arr [ it ] = 0 ; } for ( jt = 1 ; jt <= length ; jt ++ ) { for ( it = jt ; it >= 1 ; it -- ) { scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } } } printf ( \"%d\\n\" , get_max ( arr , length ) ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 70,
      "text": "int max ( int a , int b ) { if ( a >= b ) return a ; else return b ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 25,
          "text": "max ( int a , int b )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 25,
              "text": "( int a , int b )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 15,
                  "text": "int a",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 14,
                      "end_byte": 15,
                      "text": "a",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 18,
                  "end_byte": 23,
                  "text": "int b",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 18,
                      "end_byte": 21,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 22,
                      "end_byte": 23,
                      "text": "b",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 26,
          "end_byte": 70,
          "text": "{ if ( a >= b ) return a ; else return b ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 26,
              "end_byte": 27,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 28,
              "end_byte": 68,
              "text": "if ( a >= b ) return a ; else return b ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 28,
                  "end_byte": 30,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 31,
                  "end_byte": 41,
                  "text": "( a >= b )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 31,
                      "end_byte": 32,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 33,
                      "end_byte": 39,
                      "text": "a >= b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 35,
                          "end_byte": 37,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 38,
                          "end_byte": 39,
                          "text": "b",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 40,
                      "end_byte": 41,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 42,
                  "end_byte": 52,
                  "text": "return a ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 42,
                      "end_byte": 48,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 49,
                      "end_byte": 50,
                      "text": "a",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 53,
                  "end_byte": 68,
                  "text": "else return b ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 53,
                      "end_byte": 57,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 58,
                      "end_byte": 68,
                      "text": "return b ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 58,
                          "end_byte": 64,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 65,
                          "end_byte": 66,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 67,
                          "end_byte": 68,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 69,
              "end_byte": 70,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 71,
      "end_byte": 242,
      "text": "int get_max ( int arr [ ] , int len ) { int maximum = 0 , it ; for ( it = 0 ; it <= len ; it ++ ) { if ( maximum < arr [ it ] ) maximum = arr [ it ] ; } return maximum ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 71,
          "end_byte": 74,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 75,
          "end_byte": 108,
          "text": "get_max ( int arr [ ] , int len )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 75,
              "end_byte": 82,
              "text": "get_max",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 83,
              "end_byte": 108,
              "text": "( int arr [ ] , int len )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 83,
                  "end_byte": 84,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 85,
                  "end_byte": 96,
                  "text": "int arr [ ]",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 85,
                      "end_byte": 88,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "array_declarator",
                      "start_byte": 89,
                      "end_byte": 96,
                      "text": "arr [ ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 89,
                          "end_byte": 92,
                          "text": "arr",
                          "children": []
                        },
                        {
                          "type": "[",
                          "start_byte": 93,
                          "end_byte": 94,
                          "text": "[",
                          "children": []
                        },
                        {
                          "type": "]",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": "]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 99,
                  "end_byte": 106,
                  "text": "int len",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 99,
                      "end_byte": 102,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 103,
                      "end_byte": 106,
                      "text": "len",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 107,
                  "end_byte": 108,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 109,
          "end_byte": 242,
          "text": "{ int maximum = 0 , it ; for ( it = 0 ; it <= len ; it ++ ) { if ( maximum < arr [ it ] ) maximum = arr [ it ] ; } return maximum ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 109,
              "end_byte": 110,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 111,
              "end_byte": 133,
              "text": "int maximum = 0 , it ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 111,
                  "end_byte": 114,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 115,
                  "end_byte": 126,
                  "text": "maximum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 115,
                      "end_byte": 122,
                      "text": "maximum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 123,
                      "end_byte": 124,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 125,
                      "end_byte": 126,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 127,
                  "end_byte": 128,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 129,
                  "end_byte": 131,
                  "text": "it",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 134,
              "end_byte": 223,
              "text": "for ( it = 0 ; it <= len ; it ++ ) { if ( maximum < arr [ it ] ) maximum = arr [ it ] ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 134,
                  "end_byte": 137,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 138,
                  "end_byte": 139,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 140,
                  "end_byte": 146,
                  "text": "it = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 140,
                      "end_byte": 142,
                      "text": "it",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 143,
                      "end_byte": 144,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 145,
                      "end_byte": 146,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 147,
                  "end_byte": 148,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 149,
                  "end_byte": 158,
                  "text": "it <= len",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 149,
                      "end_byte": 151,
                      "text": "it",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 152,
                      "end_byte": 154,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 155,
                      "end_byte": 158,
                      "text": "len",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 159,
                  "end_byte": 160,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 161,
                  "end_byte": 166,
                  "text": "it ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 161,
                      "end_byte": 163,
                      "text": "it",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 164,
                      "end_byte": 166,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 167,
                  "end_byte": 168,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 169,
                  "end_byte": 223,
                  "text": "{ if ( maximum < arr [ it ] ) maximum = arr [ it ] ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 169,
                      "end_byte": 170,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 171,
                      "end_byte": 221,
                      "text": "if ( maximum < arr [ it ] ) maximum = arr [ it ] ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 171,
                          "end_byte": 173,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 174,
                          "end_byte": 198,
                          "text": "( maximum < arr [ it ] )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 174,
                              "end_byte": 175,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 176,
                              "end_byte": 196,
                              "text": "maximum < arr [ it ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 176,
                                  "end_byte": 183,
                                  "text": "maximum",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 184,
                                  "end_byte": 185,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 186,
                                  "end_byte": 196,
                                  "text": "arr [ it ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 186,
                                      "end_byte": 189,
                                      "text": "arr",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 190,
                                      "end_byte": 196,
                                      "text": "[ it ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 190,
                                          "end_byte": 191,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 192,
                                          "end_byte": 194,
                                          "text": "it",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 195,
                                          "end_byte": 196,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 197,
                              "end_byte": 198,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 199,
                          "end_byte": 221,
                          "text": "maximum = arr [ it ] ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 199,
                              "end_byte": 219,
                              "text": "maximum = arr [ it ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 199,
                                  "end_byte": 206,
                                  "text": "maximum",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 207,
                                  "end_byte": 208,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "subscript_expression",
                                  "start_byte": 209,
                                  "end_byte": 219,
                                  "text": "arr [ it ]",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 209,
                                      "end_byte": 212,
                                      "text": "arr",
                                      "children": []
                                    },
                                    {
                                      "type": "subscript_argument_list",
                                      "start_byte": 213,
                                      "end_byte": 219,
                                      "text": "[ it ]",
                                      "children": [
                                        {
                                          "type": "[",
                                          "start_byte": 213,
                                          "end_byte": 214,
                                          "text": "[",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 215,
                                          "end_byte": 217,
                                          "text": "it",
                                          "children": []
                                        },
                                        {
                                          "type": "]",
                                          "start_byte": 218,
                                          "end_byte": 219,
                                          "text": "]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 220,
                              "end_byte": 221,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 222,
                      "end_byte": 223,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 224,
              "end_byte": 240,
              "text": "return maximum ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 224,
                  "end_byte": 230,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 231,
                  "end_byte": 238,
                  "text": "maximum",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 239,
                  "end_byte": 240,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 241,
              "end_byte": 242,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 243,
      "end_byte": 733,
      "text": "int main ( ) { int it , jt , num , length , count , arr [ MAX ] ; scanf ( \"%d\" , & count ) ; while ( count -- > 0 ) { scanf ( \"%d\" , & length ) ; for ( it = 0 ; it <= length ; it ++ ) { arr [ it ] = 0 ; } for ( jt = 1 ; jt <= length ; jt ++ ) { for ( it = jt ; it >= 1 ; it -- ) { scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } } } printf ( \"%d\\n\" , get_max ( arr , length ) ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 243,
          "end_byte": 246,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 247,
          "end_byte": 255,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 247,
              "end_byte": 251,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 252,
              "end_byte": 255,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 252,
                  "end_byte": 253,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 254,
                  "end_byte": 255,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 256,
          "end_byte": 733,
          "text": "{ int it , jt , num , length , count , arr [ MAX ] ; scanf ( \"%d\" , & count ) ; while ( count -- > 0 ) { scanf ( \"%d\" , & length ) ; for ( it = 0 ; it <= length ; it ++ ) { arr [ it ] = 0 ; } for ( jt = 1 ; jt <= length ; jt ++ ) { for ( it = jt ; it >= 1 ; it -- ) { scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } } } printf ( \"%d\\n\" , get_max ( arr , length ) ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 256,
              "end_byte": 257,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 258,
              "end_byte": 308,
              "text": "int it , jt , num , length , count , arr [ MAX ] ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 258,
                  "end_byte": 261,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 262,
                  "end_byte": 264,
                  "text": "it",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 265,
                  "end_byte": 266,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 267,
                  "end_byte": 269,
                  "text": "jt",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 270,
                  "end_byte": 271,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 272,
                  "end_byte": 275,
                  "text": "num",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 276,
                  "end_byte": 277,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 278,
                  "end_byte": 284,
                  "text": "length",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 285,
                  "end_byte": 286,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 287,
                  "end_byte": 292,
                  "text": "count",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 293,
                  "end_byte": 294,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "array_declarator",
                  "start_byte": 295,
                  "end_byte": 306,
                  "text": "arr [ MAX ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 295,
                      "end_byte": 298,
                      "text": "arr",
                      "children": []
                    },
                    {
                      "type": "[",
                      "start_byte": 299,
                      "end_byte": 300,
                      "text": "[",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 301,
                      "end_byte": 304,
                      "text": "MAX",
                      "children": []
                    },
                    {
                      "type": "]",
                      "start_byte": 305,
                      "end_byte": 306,
                      "text": "]",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 307,
                  "end_byte": 308,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 309,
              "end_byte": 335,
              "text": "scanf ( \"%d\" , & count ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 309,
                  "end_byte": 333,
                  "text": "scanf ( \"%d\" , & count )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 309,
                      "end_byte": 314,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 315,
                      "end_byte": 333,
                      "text": "( \"%d\" , & count )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 315,
                          "end_byte": 316,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 317,
                          "end_byte": 321,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 317,
                              "end_byte": 318,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 318,
                              "end_byte": 320,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 320,
                              "end_byte": 321,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 322,
                          "end_byte": 323,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 324,
                          "end_byte": 331,
                          "text": "& count",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 324,
                              "end_byte": 325,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 326,
                              "end_byte": 331,
                              "text": "count",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 332,
                          "end_byte": 333,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 334,
                  "end_byte": 335,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 336,
              "end_byte": 720,
              "text": "while ( count -- > 0 ) { scanf ( \"%d\" , & length ) ; for ( it = 0 ; it <= length ; it ++ ) { arr [ it ] = 0 ; } for ( jt = 1 ; jt <= length ; jt ++ ) { for ( it = jt ; it >= 1 ; it -- ) { scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } } } printf ( \"%d\\n\" , get_max ( arr , length ) ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 336,
                  "end_byte": 341,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 342,
                  "end_byte": 358,
                  "text": "( count -- > 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 342,
                      "end_byte": 343,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 344,
                      "end_byte": 356,
                      "text": "count -- > 0",
                      "children": [
                        {
                          "type": "update_expression",
                          "start_byte": 344,
                          "end_byte": 352,
                          "text": "count --",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 344,
                              "end_byte": 349,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "--",
                              "start_byte": 350,
                              "end_byte": 352,
                              "text": "--",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ">",
                          "start_byte": 353,
                          "end_byte": 354,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 355,
                          "end_byte": 356,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 357,
                      "end_byte": 358,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 359,
                  "end_byte": 720,
                  "text": "{ scanf ( \"%d\" , & length ) ; for ( it = 0 ; it <= length ; it ++ ) { arr [ it ] = 0 ; } for ( jt = 1 ; jt <= length ; jt ++ ) { for ( it = jt ; it >= 1 ; it -- ) { scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } } } printf ( \"%d\\n\" , get_max ( arr , length ) ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 359,
                      "end_byte": 360,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 361,
                      "end_byte": 388,
                      "text": "scanf ( \"%d\" , & length ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 361,
                          "end_byte": 386,
                          "text": "scanf ( \"%d\" , & length )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 361,
                              "end_byte": 366,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 367,
                              "end_byte": 386,
                              "text": "( \"%d\" , & length )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 367,
                                  "end_byte": 368,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 369,
                                  "end_byte": 373,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 369,
                                      "end_byte": 370,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 370,
                                      "end_byte": 372,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 372,
                                      "end_byte": 373,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 374,
                                  "end_byte": 375,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 376,
                                  "end_byte": 384,
                                  "text": "& length",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 376,
                                      "end_byte": 377,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 378,
                                      "end_byte": 384,
                                      "text": "length",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 385,
                                  "end_byte": 386,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 387,
                          "end_byte": 388,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 389,
                      "end_byte": 447,
                      "text": "for ( it = 0 ; it <= length ; it ++ ) { arr [ it ] = 0 ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 389,
                          "end_byte": 392,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 393,
                          "end_byte": 394,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 395,
                          "end_byte": 401,
                          "text": "it = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 395,
                              "end_byte": 397,
                              "text": "it",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 398,
                              "end_byte": 399,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 400,
                              "end_byte": 401,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 402,
                          "end_byte": 403,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 404,
                          "end_byte": 416,
                          "text": "it <= length",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 404,
                              "end_byte": 406,
                              "text": "it",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 407,
                              "end_byte": 409,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 410,
                              "end_byte": 416,
                              "text": "length",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 417,
                          "end_byte": 418,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 419,
                          "end_byte": 424,
                          "text": "it ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 419,
                              "end_byte": 421,
                              "text": "it",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 422,
                              "end_byte": 424,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 425,
                          "end_byte": 426,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 427,
                          "end_byte": 447,
                          "text": "{ arr [ it ] = 0 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 427,
                              "end_byte": 428,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 429,
                              "end_byte": 445,
                              "text": "arr [ it ] = 0 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 429,
                                  "end_byte": 443,
                                  "text": "arr [ it ] = 0",
                                  "children": [
                                    {
                                      "type": "subscript_expression",
                                      "start_byte": 429,
                                      "end_byte": 439,
                                      "text": "arr [ it ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 429,
                                          "end_byte": 432,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_argument_list",
                                          "start_byte": 433,
                                          "end_byte": 439,
                                          "text": "[ it ]",
                                          "children": [
                                            {
                                              "type": "[",
                                              "start_byte": 433,
                                              "end_byte": 434,
                                              "text": "[",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 435,
                                              "end_byte": 437,
                                              "text": "it",
                                              "children": []
                                            },
                                            {
                                              "type": "]",
                                              "start_byte": 438,
                                              "end_byte": 439,
                                              "text": "]",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 440,
                                      "end_byte": 441,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 442,
                                      "end_byte": 443,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 444,
                                  "end_byte": 445,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 446,
                              "end_byte": 447,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 448,
                      "end_byte": 671,
                      "text": "for ( jt = 1 ; jt <= length ; jt ++ ) { for ( it = jt ; it >= 1 ; it -- ) { scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 448,
                          "end_byte": 451,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 452,
                          "end_byte": 453,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 454,
                          "end_byte": 460,
                          "text": "jt = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 454,
                              "end_byte": 456,
                              "text": "jt",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 457,
                              "end_byte": 458,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 459,
                              "end_byte": 460,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 461,
                          "end_byte": 462,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 463,
                          "end_byte": 475,
                          "text": "jt <= length",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 463,
                              "end_byte": 465,
                              "text": "jt",
                              "children": []
                            },
                            {
                              "type": "<=",
                              "start_byte": 466,
                              "end_byte": 468,
                              "text": "<=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 469,
                              "end_byte": 475,
                              "text": "length",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 476,
                          "end_byte": 477,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 478,
                          "end_byte": 483,
                          "text": "jt ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 478,
                              "end_byte": 480,
                              "text": "jt",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 481,
                              "end_byte": 483,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 484,
                          "end_byte": 485,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 486,
                          "end_byte": 671,
                          "text": "{ for ( it = jt ; it >= 1 ; it -- ) { scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 486,
                              "end_byte": 487,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 488,
                              "end_byte": 669,
                              "text": "for ( it = jt ; it >= 1 ; it -- ) { scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 488,
                                  "end_byte": 491,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 492,
                                  "end_byte": 493,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 494,
                                  "end_byte": 501,
                                  "text": "it = jt",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 494,
                                      "end_byte": 496,
                                      "text": "it",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 497,
                                      "end_byte": 498,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 499,
                                      "end_byte": 501,
                                      "text": "jt",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 502,
                                  "end_byte": 503,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 504,
                                  "end_byte": 511,
                                  "text": "it >= 1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 504,
                                      "end_byte": 506,
                                      "text": "it",
                                      "children": []
                                    },
                                    {
                                      "type": ">=",
                                      "start_byte": 507,
                                      "end_byte": 509,
                                      "text": ">=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 510,
                                      "end_byte": 511,
                                      "text": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 512,
                                  "end_byte": 513,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 514,
                                  "end_byte": 519,
                                  "text": "it --",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 514,
                                      "end_byte": 516,
                                      "text": "it",
                                      "children": []
                                    },
                                    {
                                      "type": "--",
                                      "start_byte": 517,
                                      "end_byte": 519,
                                      "text": "--",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 520,
                                  "end_byte": 521,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 522,
                                  "end_byte": 669,
                                  "text": "{ scanf ( \"%d\" , & num ) ; if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 522,
                                      "end_byte": 523,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 524,
                                      "end_byte": 548,
                                      "text": "scanf ( \"%d\" , & num ) ;",
                                      "children": [
                                        {
                                          "type": "call_expression",
                                          "start_byte": 524,
                                          "end_byte": 546,
                                          "text": "scanf ( \"%d\" , & num )",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 524,
                                              "end_byte": 529,
                                              "text": "scanf",
                                              "children": []
                                            },
                                            {
                                              "type": "argument_list",
                                              "start_byte": 530,
                                              "end_byte": 546,
                                              "text": "( \"%d\" , & num )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 530,
                                                  "end_byte": 531,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "string_literal",
                                                  "start_byte": 532,
                                                  "end_byte": 536,
                                                  "text": "\"%d\"",
                                                  "children": [
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 532,
                                                      "end_byte": 533,
                                                      "text": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_content",
                                                      "start_byte": 533,
                                                      "end_byte": 535,
                                                      "text": "%d",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "\"",
                                                      "start_byte": 535,
                                                      "end_byte": 536,
                                                      "text": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ",",
                                                  "start_byte": 537,
                                                  "end_byte": 538,
                                                  "text": ",",
                                                  "children": []
                                                },
                                                {
                                                  "type": "pointer_expression",
                                                  "start_byte": 539,
                                                  "end_byte": 544,
                                                  "text": "& num",
                                                  "children": [
                                                    {
                                                      "type": "&",
                                                      "start_byte": 539,
                                                      "end_byte": 540,
                                                      "text": "&",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 541,
                                                      "end_byte": 544,
                                                      "text": "num",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 545,
                                                  "end_byte": 546,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 547,
                                          "end_byte": 548,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 549,
                                      "end_byte": 667,
                                      "text": "if ( it == 1 ) { arr [ it ] += num ; } else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 549,
                                          "end_byte": 551,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 552,
                                          "end_byte": 563,
                                          "text": "( it == 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 552,
                                              "end_byte": 553,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 554,
                                              "end_byte": 561,
                                              "text": "it == 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 554,
                                                  "end_byte": 556,
                                                  "text": "it",
                                                  "children": []
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 557,
                                                  "end_byte": 559,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 560,
                                                  "end_byte": 561,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 562,
                                              "end_byte": 563,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 564,
                                          "end_byte": 587,
                                          "text": "{ arr [ it ] += num ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 564,
                                              "end_byte": 565,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 566,
                                              "end_byte": 585,
                                              "text": "arr [ it ] += num ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 566,
                                                  "end_byte": 583,
                                                  "text": "arr [ it ] += num",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 566,
                                                      "end_byte": 576,
                                                      "text": "arr [ it ]",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 566,
                                                          "end_byte": 569,
                                                          "text": "arr",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 570,
                                                          "end_byte": 576,
                                                          "text": "[ it ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 570,
                                                              "end_byte": 571,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 572,
                                                              "end_byte": 574,
                                                              "text": "it",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 575,
                                                              "end_byte": 576,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "+=",
                                                      "start_byte": 577,
                                                      "end_byte": 579,
                                                      "text": "+=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 580,
                                                      "end_byte": 583,
                                                      "text": "num",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 584,
                                                  "end_byte": 585,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 586,
                                              "end_byte": 587,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 588,
                                          "end_byte": 667,
                                          "text": "else { arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 588,
                                              "end_byte": 592,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 593,
                                              "end_byte": 667,
                                              "text": "{ arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 593,
                                                  "end_byte": 594,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 595,
                                                  "end_byte": 665,
                                                  "text": "arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) ) ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 595,
                                                      "end_byte": 663,
                                                      "text": "arr [ it ] = max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) )",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 595,
                                                          "end_byte": 605,
                                                          "text": "arr [ it ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 595,
                                                              "end_byte": 598,
                                                              "text": "arr",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 599,
                                                              "end_byte": 605,
                                                              "text": "[ it ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 599,
                                                                  "end_byte": 600,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 601,
                                                                  "end_byte": 603,
                                                                  "text": "it",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 604,
                                                                  "end_byte": 605,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 606,
                                                          "end_byte": 607,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "call_expression",
                                                          "start_byte": 608,
                                                          "end_byte": 663,
                                                          "text": "max ( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) )",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 608,
                                                              "end_byte": 611,
                                                              "text": "max",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "argument_list",
                                                              "start_byte": 612,
                                                              "end_byte": 663,
                                                              "text": "( ( arr [ it - 1 ] + num ) , ( arr [ it ] + num ) )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 612,
                                                                  "end_byte": 613,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "parenthesized_expression",
                                                                  "start_byte": 614,
                                                                  "end_byte": 638,
                                                                  "text": "( arr [ it - 1 ] + num )",
                                                                  "children": [
                                                                    {
                                                                      "type": "(",
                                                                      "start_byte": 614,
                                                                      "end_byte": 615,
                                                                      "text": "(",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 616,
                                                                      "end_byte": 636,
                                                                      "text": "arr [ it - 1 ] + num",
                                                                      "children": [
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 616,
                                                                          "end_byte": 630,
                                                                          "text": "arr [ it - 1 ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 616,
                                                                              "end_byte": 619,
                                                                              "text": "arr",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 620,
                                                                              "end_byte": 630,
                                                                              "text": "[ it - 1 ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 620,
                                                                                  "end_byte": 621,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "binary_expression",
                                                                                  "start_byte": 622,
                                                                                  "end_byte": 628,
                                                                                  "text": "it - 1",
                                                                                  "children": [
                                                                                    {
                                                                                      "type": "identifier",
                                                                                      "start_byte": 622,
                                                                                      "end_byte": 624,
                                                                                      "text": "it",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "-",
                                                                                      "start_byte": 625,
                                                                                      "end_byte": 626,
                                                                                      "text": "-",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "type": "number_literal",
                                                                                      "start_byte": 627,
                                                                                      "end_byte": 628,
                                                                                      "text": "1",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 629,
                                                                                  "end_byte": 630,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "+",
                                                                          "start_byte": 631,
                                                                          "end_byte": 632,
                                                                          "text": "+",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 633,
                                                                          "end_byte": 636,
                                                                          "text": "num",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ")",
                                                                      "start_byte": 637,
                                                                      "end_byte": 638,
                                                                      "text": ")",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ",",
                                                                  "start_byte": 639,
                                                                  "end_byte": 640,
                                                                  "text": ",",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "parenthesized_expression",
                                                                  "start_byte": 641,
                                                                  "end_byte": 661,
                                                                  "text": "( arr [ it ] + num )",
                                                                  "children": [
                                                                    {
                                                                      "type": "(",
                                                                      "start_byte": 641,
                                                                      "end_byte": 642,
                                                                      "text": "(",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "binary_expression",
                                                                      "start_byte": 643,
                                                                      "end_byte": 659,
                                                                      "text": "arr [ it ] + num",
                                                                      "children": [
                                                                        {
                                                                          "type": "subscript_expression",
                                                                          "start_byte": 643,
                                                                          "end_byte": 653,
                                                                          "text": "arr [ it ]",
                                                                          "children": [
                                                                            {
                                                                              "type": "identifier",
                                                                              "start_byte": 643,
                                                                              "end_byte": 646,
                                                                              "text": "arr",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "type": "subscript_argument_list",
                                                                              "start_byte": 647,
                                                                              "end_byte": 653,
                                                                              "text": "[ it ]",
                                                                              "children": [
                                                                                {
                                                                                  "type": "[",
                                                                                  "start_byte": 647,
                                                                                  "end_byte": 648,
                                                                                  "text": "[",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "identifier",
                                                                                  "start_byte": 649,
                                                                                  "end_byte": 651,
                                                                                  "text": "it",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "type": "]",
                                                                                  "start_byte": 652,
                                                                                  "end_byte": 653,
                                                                                  "text": "]",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "type": "+",
                                                                          "start_byte": 654,
                                                                          "end_byte": 655,
                                                                          "text": "+",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "type": "identifier",
                                                                          "start_byte": 656,
                                                                          "end_byte": 659,
                                                                          "text": "num",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": ")",
                                                                      "start_byte": 660,
                                                                      "end_byte": 661,
                                                                      "text": ")",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 662,
                                                                  "end_byte": 663,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 664,
                                                      "end_byte": 665,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 666,
                                                  "end_byte": 667,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 668,
                                      "end_byte": 669,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 670,
                              "end_byte": 671,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 672,
                      "end_byte": 718,
                      "text": "printf ( \"%d\\n\" , get_max ( arr , length ) ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 672,
                          "end_byte": 716,
                          "text": "printf ( \"%d\\n\" , get_max ( arr , length ) )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 672,
                              "end_byte": 678,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 679,
                              "end_byte": 716,
                              "text": "( \"%d\\n\" , get_max ( arr , length ) )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 679,
                                  "end_byte": 680,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 681,
                                  "end_byte": 687,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 681,
                                      "end_byte": 682,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 682,
                                      "end_byte": 684,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 684,
                                      "end_byte": 686,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 686,
                                      "end_byte": 687,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 688,
                                  "end_byte": 689,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "call_expression",
                                  "start_byte": 690,
                                  "end_byte": 714,
                                  "text": "get_max ( arr , length )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 690,
                                      "end_byte": 697,
                                      "text": "get_max",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 698,
                                      "end_byte": 714,
                                      "text": "( arr , length )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 698,
                                          "end_byte": 699,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 700,
                                          "end_byte": 703,
                                          "text": "arr",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 704,
                                          "end_byte": 705,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 706,
                                          "end_byte": 712,
                                          "text": "length",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 713,
                                          "end_byte": 714,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 715,
                                  "end_byte": 716,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 717,
                          "end_byte": 718,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 719,
                      "end_byte": 720,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 721,
              "end_byte": 731,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 721,
                  "end_byte": 727,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 728,
                  "end_byte": 729,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 730,
                  "end_byte": 731,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 732,
              "end_byte": 733,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}