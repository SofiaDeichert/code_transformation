{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 709,
  "text": "int mat [ 100 ] [ 100 ] ; void calculatePath ( int i , int j , int n , int sum , int * max ) { if ( j >= n ) return ; if ( i >= n ) { if ( * max < sum ) * max = sum ; return ; } sum = sum + mat [ i ] [ j ] ; calculatePath ( i + 1 , j , n , sum , max ) ; calculatePath ( i + 1 , j + 1 , n , sum , max ) ; } int main ( ) { int testcase , n , i , sum = 0 , max = 0 , j , k ; scanf ( \"%d\" , & testcase ) ; for ( i = 0 ; i < testcase ; i ++ ) { sum = 0 ; max = 0 ; scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; } } calculatePath ( 0 , 0 , n , sum , & max ) ; printf ( \"%d\" , max ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 25,
      "text": "int mat [ 100 ] [ 100 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 23,
          "text": "mat [ 100 ] [ 100 ]",
          "children": [
            {
              "type": "array_declarator",
              "start_byte": 4,
              "end_byte": 15,
              "text": "mat [ 100 ]",
              "children": [
                {
                  "type": "identifier",
                  "start_byte": 4,
                  "end_byte": 7,
                  "text": "mat",
                  "children": []
                },
                {
                  "type": "[",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "[",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "100",
                  "children": []
                },
                {
                  "type": "]",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "]",
                  "children": []
                }
              ]
            },
            {
              "type": "[",
              "start_byte": 16,
              "end_byte": 17,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 18,
              "end_byte": 21,
              "text": "100",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 22,
              "end_byte": 23,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 24,
          "end_byte": 25,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 26,
      "end_byte": 305,
      "text": "void calculatePath ( int i , int j , int n , int sum , int * max ) { if ( j >= n ) return ; if ( i >= n ) { if ( * max < sum ) * max = sum ; return ; } sum = sum + mat [ i ] [ j ] ; calculatePath ( i + 1 , j , n , sum , max ) ; calculatePath ( i + 1 , j + 1 , n , sum , max ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 26,
          "end_byte": 30,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 31,
          "end_byte": 92,
          "text": "calculatePath ( int i , int j , int n , int sum , int * max )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 31,
              "end_byte": 44,
              "text": "calculatePath",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 45,
              "end_byte": 92,
              "text": "( int i , int j , int n , int sum , int * max )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 47,
                  "end_byte": 52,
                  "text": "int i",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 47,
                      "end_byte": 50,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 51,
                      "end_byte": 52,
                      "text": "i",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 55,
                  "end_byte": 60,
                  "text": "int j",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 55,
                      "end_byte": 58,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 59,
                      "end_byte": 60,
                      "text": "j",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 63,
                  "end_byte": 68,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 63,
                      "end_byte": 66,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 67,
                      "end_byte": 68,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 71,
                  "end_byte": 78,
                  "text": "int sum",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 71,
                      "end_byte": 74,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 75,
                      "end_byte": 78,
                      "text": "sum",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 81,
                  "end_byte": 90,
                  "text": "int * max",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 81,
                      "end_byte": 84,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 85,
                      "end_byte": 90,
                      "text": "* max",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 85,
                          "end_byte": 86,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 87,
                          "end_byte": 90,
                          "text": "max",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 91,
                  "end_byte": 92,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 93,
          "end_byte": 305,
          "text": "{ if ( j >= n ) return ; if ( i >= n ) { if ( * max < sum ) * max = sum ; return ; } sum = sum + mat [ i ] [ j ] ; calculatePath ( i + 1 , j , n , sum , max ) ; calculatePath ( i + 1 , j + 1 , n , sum , max ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 93,
              "end_byte": 94,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 95,
              "end_byte": 117,
              "text": "if ( j >= n ) return ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 95,
                  "end_byte": 97,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 98,
                  "end_byte": 108,
                  "text": "( j >= n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 98,
                      "end_byte": 99,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 100,
                      "end_byte": 106,
                      "text": "j >= n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 102,
                          "end_byte": 104,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 105,
                          "end_byte": 106,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 109,
                  "end_byte": 117,
                  "text": "return ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 109,
                      "end_byte": 115,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 116,
                      "end_byte": 117,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 118,
              "end_byte": 177,
              "text": "if ( i >= n ) { if ( * max < sum ) * max = sum ; return ; }",
              "children": [
                {
                  "type": "if",
                  "start_byte": 118,
                  "end_byte": 120,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 121,
                  "end_byte": 131,
                  "text": "( i >= n )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 123,
                      "end_byte": 129,
                      "text": "i >= n",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": ">=",
                          "start_byte": 125,
                          "end_byte": 127,
                          "text": ">=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 128,
                          "end_byte": 129,
                          "text": "n",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 130,
                      "end_byte": 131,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 132,
                  "end_byte": 177,
                  "text": "{ if ( * max < sum ) * max = sum ; return ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 132,
                      "end_byte": 133,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 134,
                      "end_byte": 166,
                      "text": "if ( * max < sum ) * max = sum ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 134,
                          "end_byte": 136,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 137,
                          "end_byte": 152,
                          "text": "( * max < sum )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 137,
                              "end_byte": 138,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 139,
                              "end_byte": 150,
                              "text": "* max < sum",
                              "children": [
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 139,
                                  "end_byte": 144,
                                  "text": "* max",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start_byte": 139,
                                      "end_byte": 140,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 141,
                                      "end_byte": 144,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "<",
                                  "start_byte": 145,
                                  "end_byte": 146,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 147,
                                  "end_byte": 150,
                                  "text": "sum",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 151,
                              "end_byte": 152,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 153,
                          "end_byte": 166,
                          "text": "* max = sum ;",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 153,
                              "end_byte": 164,
                              "text": "* max = sum",
                              "children": [
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 153,
                                  "end_byte": 158,
                                  "text": "* max",
                                  "children": [
                                    {
                                      "type": "*",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "*",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 155,
                                      "end_byte": 158,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "=",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 161,
                                  "end_byte": 164,
                                  "text": "sum",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 167,
                      "end_byte": 175,
                      "text": "return ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 167,
                          "end_byte": 173,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 174,
                          "end_byte": 175,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 176,
                      "end_byte": 177,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 178,
              "end_byte": 207,
              "text": "sum = sum + mat [ i ] [ j ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 178,
                  "end_byte": 205,
                  "text": "sum = sum + mat [ i ] [ j ]",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 178,
                      "end_byte": 181,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 184,
                      "end_byte": 205,
                      "text": "sum + mat [ i ] [ j ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 184,
                          "end_byte": 187,
                          "text": "sum",
                          "children": []
                        },
                        {
                          "type": "+",
                          "start_byte": 188,
                          "end_byte": 189,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "subscript_expression",
                          "start_byte": 190,
                          "end_byte": 205,
                          "text": "mat [ i ] [ j ]",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 190,
                              "end_byte": 199,
                              "text": "mat [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 190,
                                  "end_byte": 193,
                                  "text": "mat",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 194,
                                  "end_byte": 199,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "subscript_argument_list",
                              "start_byte": 200,
                              "end_byte": 205,
                              "text": "[ j ]",
                              "children": [
                                {
                                  "type": "[",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": "[",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 202,
                                  "end_byte": 203,
                                  "text": "j",
                                  "children": []
                                },
                                {
                                  "type": "]",
                                  "start_byte": 204,
                                  "end_byte": 205,
                                  "text": "]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 206,
                  "end_byte": 207,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 208,
              "end_byte": 253,
              "text": "calculatePath ( i + 1 , j , n , sum , max ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 208,
                  "end_byte": 251,
                  "text": "calculatePath ( i + 1 , j , n , sum , max )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 208,
                      "end_byte": 221,
                      "text": "calculatePath",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 222,
                      "end_byte": 251,
                      "text": "( i + 1 , j , n , sum , max )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 222,
                          "end_byte": 223,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 224,
                          "end_byte": 229,
                          "text": "i + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 224,
                              "end_byte": 225,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 226,
                              "end_byte": 227,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 228,
                              "end_byte": 229,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 230,
                          "end_byte": 231,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 232,
                          "end_byte": 233,
                          "text": "j",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 234,
                          "end_byte": 235,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 236,
                          "end_byte": 237,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 238,
                          "end_byte": 239,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 240,
                          "end_byte": 243,
                          "text": "sum",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 244,
                          "end_byte": 245,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 246,
                          "end_byte": 249,
                          "text": "max",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 250,
                          "end_byte": 251,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 252,
                  "end_byte": 253,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 254,
              "end_byte": 303,
              "text": "calculatePath ( i + 1 , j + 1 , n , sum , max ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 254,
                  "end_byte": 301,
                  "text": "calculatePath ( i + 1 , j + 1 , n , sum , max )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 254,
                      "end_byte": 267,
                      "text": "calculatePath",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 268,
                      "end_byte": 301,
                      "text": "( i + 1 , j + 1 , n , sum , max )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 268,
                          "end_byte": 269,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 270,
                          "end_byte": 275,
                          "text": "i + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 270,
                              "end_byte": 271,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 272,
                              "end_byte": 273,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 274,
                              "end_byte": 275,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 276,
                          "end_byte": 277,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 278,
                          "end_byte": 283,
                          "text": "j + 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 278,
                              "end_byte": 279,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 280,
                              "end_byte": 281,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 282,
                              "end_byte": 283,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 284,
                          "end_byte": 285,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 288,
                          "end_byte": 289,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 290,
                          "end_byte": 293,
                          "text": "sum",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 294,
                          "end_byte": 295,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 296,
                          "end_byte": 299,
                          "text": "max",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 300,
                          "end_byte": 301,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 302,
                  "end_byte": 303,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 304,
              "end_byte": 305,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 306,
      "end_byte": 709,
      "text": "int main ( ) { int testcase , n , i , sum = 0 , max = 0 , j , k ; scanf ( \"%d\" , & testcase ) ; for ( i = 0 ; i < testcase ; i ++ ) { sum = 0 ; max = 0 ; scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; } } calculatePath ( 0 , 0 , n , sum , & max ) ; printf ( \"%d\" , max ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 306,
          "end_byte": 309,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 310,
          "end_byte": 318,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 310,
              "end_byte": 314,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 315,
              "end_byte": 318,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 315,
                  "end_byte": 316,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 317,
                  "end_byte": 318,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 319,
          "end_byte": 709,
          "text": "{ int testcase , n , i , sum = 0 , max = 0 , j , k ; scanf ( \"%d\" , & testcase ) ; for ( i = 0 ; i < testcase ; i ++ ) { sum = 0 ; max = 0 ; scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; } } calculatePath ( 0 , 0 , n , sum , & max ) ; printf ( \"%d\" , max ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 319,
              "end_byte": 320,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 321,
              "end_byte": 371,
              "text": "int testcase , n , i , sum = 0 , max = 0 , j , k ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 321,
                  "end_byte": 324,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 325,
                  "end_byte": 333,
                  "text": "testcase",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 334,
                  "end_byte": 335,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 336,
                  "end_byte": 337,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 338,
                  "end_byte": 339,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 340,
                  "end_byte": 341,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 342,
                  "end_byte": 343,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 344,
                  "end_byte": 351,
                  "text": "sum = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 344,
                      "end_byte": 347,
                      "text": "sum",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 348,
                      "end_byte": 349,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 350,
                      "end_byte": 351,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 352,
                  "end_byte": 353,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 354,
                  "end_byte": 361,
                  "text": "max = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 354,
                      "end_byte": 357,
                      "text": "max",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 358,
                      "end_byte": 359,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 360,
                      "end_byte": 361,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 362,
                  "end_byte": 363,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 364,
                  "end_byte": 365,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 366,
                  "end_byte": 367,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 368,
                  "end_byte": 369,
                  "text": "k",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 372,
              "end_byte": 401,
              "text": "scanf ( \"%d\" , & testcase ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 372,
                  "end_byte": 399,
                  "text": "scanf ( \"%d\" , & testcase )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 372,
                      "end_byte": 377,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 378,
                      "end_byte": 399,
                      "text": "( \"%d\" , & testcase )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 378,
                          "end_byte": 379,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 380,
                          "end_byte": 384,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 380,
                              "end_byte": 381,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 381,
                              "end_byte": 383,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 383,
                              "end_byte": 384,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 385,
                          "end_byte": 386,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 387,
                          "end_byte": 397,
                          "text": "& testcase",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 387,
                              "end_byte": 388,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 389,
                              "end_byte": 397,
                              "text": "testcase",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 398,
                          "end_byte": 399,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 400,
                  "end_byte": 401,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 402,
              "end_byte": 696,
              "text": "for ( i = 0 ; i < testcase ; i ++ ) { sum = 0 ; max = 0 ; scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; } } calculatePath ( 0 , 0 , n , sum , & max ) ; printf ( \"%d\" , max ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 402,
                  "end_byte": 405,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 406,
                  "end_byte": 407,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 408,
                  "end_byte": 413,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 408,
                      "end_byte": 409,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 410,
                      "end_byte": 411,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 412,
                      "end_byte": 413,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 414,
                  "end_byte": 415,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 416,
                  "end_byte": 428,
                  "text": "i < testcase",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 416,
                      "end_byte": 417,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 418,
                      "end_byte": 419,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 420,
                      "end_byte": 428,
                      "text": "testcase",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 429,
                  "end_byte": 430,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 431,
                  "end_byte": 435,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 431,
                      "end_byte": 432,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 433,
                      "end_byte": 435,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 436,
                  "end_byte": 437,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 438,
                  "end_byte": 696,
                  "text": "{ sum = 0 ; max = 0 ; scanf ( \"%d\" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; } } calculatePath ( 0 , 0 , n , sum , & max ) ; printf ( \"%d\" , max ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 438,
                      "end_byte": 439,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 440,
                      "end_byte": 449,
                      "text": "sum = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 440,
                          "end_byte": 447,
                          "text": "sum = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 440,
                              "end_byte": 443,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 444,
                              "end_byte": 445,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 446,
                              "end_byte": 447,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 448,
                          "end_byte": 449,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 450,
                      "end_byte": 459,
                      "text": "max = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 450,
                          "end_byte": 457,
                          "text": "max = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 450,
                              "end_byte": 453,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 454,
                              "end_byte": 455,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 456,
                              "end_byte": 457,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 458,
                          "end_byte": 459,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 460,
                      "end_byte": 482,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 460,
                          "end_byte": 480,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 460,
                              "end_byte": 465,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 466,
                              "end_byte": 480,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 466,
                                  "end_byte": 467,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 468,
                                  "end_byte": 472,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 468,
                                      "end_byte": 469,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 469,
                                      "end_byte": 471,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 471,
                                      "end_byte": 472,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 473,
                                  "end_byte": 474,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 475,
                                  "end_byte": 478,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 475,
                                      "end_byte": 476,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 477,
                                      "end_byte": 478,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 479,
                                  "end_byte": 480,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 481,
                          "end_byte": 482,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 483,
                      "end_byte": 626,
                      "text": "for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; } }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 483,
                          "end_byte": 486,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 487,
                          "end_byte": 488,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 489,
                          "end_byte": 494,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 489,
                              "end_byte": 490,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 491,
                              "end_byte": 492,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 493,
                              "end_byte": 494,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 495,
                          "end_byte": 496,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 497,
                          "end_byte": 502,
                          "text": "j < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 497,
                              "end_byte": 498,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 499,
                              "end_byte": 500,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 501,
                              "end_byte": 502,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 503,
                          "end_byte": 504,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 505,
                          "end_byte": 509,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 505,
                              "end_byte": 506,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 507,
                              "end_byte": 509,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 510,
                          "end_byte": 511,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 512,
                          "end_byte": 626,
                          "text": "{ for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; } }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 512,
                              "end_byte": 513,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 514,
                              "end_byte": 624,
                              "text": "for ( k = 0 ; k < n ; k ++ ) { if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 514,
                                  "end_byte": 517,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 518,
                                  "end_byte": 519,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 520,
                                  "end_byte": 525,
                                  "text": "k = 0",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 520,
                                      "end_byte": 521,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 522,
                                      "end_byte": 523,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 524,
                                      "end_byte": 525,
                                      "text": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 526,
                                  "end_byte": 527,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 528,
                                  "end_byte": 533,
                                  "text": "k < n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 528,
                                      "end_byte": 529,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 530,
                                      "end_byte": 531,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 532,
                                      "end_byte": 533,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 534,
                                  "end_byte": 535,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 536,
                                  "end_byte": 540,
                                  "text": "k ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 536,
                                      "end_byte": 537,
                                      "text": "k",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 538,
                                      "end_byte": 540,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 541,
                                  "end_byte": 542,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 543,
                                  "end_byte": 624,
                                  "text": "{ if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 543,
                                      "end_byte": 544,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 545,
                                      "end_byte": 622,
                                      "text": "if ( k <= j ) scanf ( \"%d\" , & mat [ j ] [ k ] ) ; else mat [ j ] [ k ] = 0 ;",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 545,
                                          "end_byte": 547,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 548,
                                          "end_byte": 558,
                                          "text": "( k <= j )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 548,
                                              "end_byte": 549,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 550,
                                              "end_byte": 556,
                                              "text": "k <= j",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 550,
                                                  "end_byte": 551,
                                                  "text": "k",
                                                  "children": []
                                                },
                                                {
                                                  "type": "<=",
                                                  "start_byte": 552,
                                                  "end_byte": 554,
                                                  "text": "<=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 555,
                                                  "end_byte": 556,
                                                  "text": "j",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 557,
                                              "end_byte": 558,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 559,
                                          "end_byte": 595,
                                          "text": "scanf ( \"%d\" , & mat [ j ] [ k ] ) ;",
                                          "children": [
                                            {
                                              "type": "call_expression",
                                              "start_byte": 559,
                                              "end_byte": 593,
                                              "text": "scanf ( \"%d\" , & mat [ j ] [ k ] )",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 559,
                                                  "end_byte": 564,
                                                  "text": "scanf",
                                                  "children": []
                                                },
                                                {
                                                  "type": "argument_list",
                                                  "start_byte": 565,
                                                  "end_byte": 593,
                                                  "text": "( \"%d\" , & mat [ j ] [ k ] )",
                                                  "children": [
                                                    {
                                                      "type": "(",
                                                      "start_byte": 565,
                                                      "end_byte": 566,
                                                      "text": "(",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "string_literal",
                                                      "start_byte": 567,
                                                      "end_byte": 571,
                                                      "text": "\"%d\"",
                                                      "children": [
                                                        {
                                                          "type": "\"",
                                                          "start_byte": 567,
                                                          "end_byte": 568,
                                                          "text": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "string_content",
                                                          "start_byte": 568,
                                                          "end_byte": 570,
                                                          "text": "%d",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "\"",
                                                          "start_byte": 570,
                                                          "end_byte": 571,
                                                          "text": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ",",
                                                      "start_byte": 572,
                                                      "end_byte": 573,
                                                      "text": ",",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "pointer_expression",
                                                      "start_byte": 574,
                                                      "end_byte": 591,
                                                      "text": "& mat [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "&",
                                                          "start_byte": 574,
                                                          "end_byte": 575,
                                                          "text": "&",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 576,
                                                          "end_byte": 591,
                                                          "text": "mat [ j ] [ k ]",
                                                          "children": [
                                                            {
                                                              "type": "subscript_expression",
                                                              "start_byte": 576,
                                                              "end_byte": 585,
                                                              "text": "mat [ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 576,
                                                                  "end_byte": 579,
                                                                  "text": "mat",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "subscript_argument_list",
                                                                  "start_byte": 580,
                                                                  "end_byte": 585,
                                                                  "text": "[ j ]",
                                                                  "children": [
                                                                    {
                                                                      "type": "[",
                                                                      "start_byte": 580,
                                                                      "end_byte": 581,
                                                                      "text": "[",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 582,
                                                                      "end_byte": 583,
                                                                      "text": "j",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "]",
                                                                      "start_byte": 584,
                                                                      "end_byte": 585,
                                                                      "text": "]",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 586,
                                                              "end_byte": 591,
                                                              "text": "[ k ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 586,
                                                                  "end_byte": 587,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 588,
                                                                  "end_byte": 589,
                                                                  "text": "k",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 590,
                                                                  "end_byte": 591,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ")",
                                                      "start_byte": 592,
                                                      "end_byte": 593,
                                                      "text": ")",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 594,
                                              "end_byte": 595,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 596,
                                          "end_byte": 622,
                                          "text": "else mat [ j ] [ k ] = 0 ;",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 596,
                                              "end_byte": 600,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 601,
                                              "end_byte": 622,
                                              "text": "mat [ j ] [ k ] = 0 ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 601,
                                                  "end_byte": 620,
                                                  "text": "mat [ j ] [ k ] = 0",
                                                  "children": [
                                                    {
                                                      "type": "subscript_expression",
                                                      "start_byte": 601,
                                                      "end_byte": 616,
                                                      "text": "mat [ j ] [ k ]",
                                                      "children": [
                                                        {
                                                          "type": "subscript_expression",
                                                          "start_byte": 601,
                                                          "end_byte": 610,
                                                          "text": "mat [ j ]",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 601,
                                                              "end_byte": 604,
                                                              "text": "mat",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "subscript_argument_list",
                                                              "start_byte": 605,
                                                              "end_byte": 610,
                                                              "text": "[ j ]",
                                                              "children": [
                                                                {
                                                                  "type": "[",
                                                                  "start_byte": 605,
                                                                  "end_byte": 606,
                                                                  "text": "[",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "identifier",
                                                                  "start_byte": 607,
                                                                  "end_byte": 608,
                                                                  "text": "j",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "]",
                                                                  "start_byte": 609,
                                                                  "end_byte": 610,
                                                                  "text": "]",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "subscript_argument_list",
                                                          "start_byte": 611,
                                                          "end_byte": 616,
                                                          "text": "[ k ]",
                                                          "children": [
                                                            {
                                                              "type": "[",
                                                              "start_byte": 611,
                                                              "end_byte": 612,
                                                              "text": "[",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 613,
                                                              "end_byte": 614,
                                                              "text": "k",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "]",
                                                              "start_byte": 615,
                                                              "end_byte": 616,
                                                              "text": "]",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 617,
                                                      "end_byte": 618,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 619,
                                                      "end_byte": 620,
                                                      "text": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 621,
                                                  "end_byte": 622,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 623,
                                      "end_byte": 624,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 625,
                              "end_byte": 626,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 627,
                      "end_byte": 670,
                      "text": "calculatePath ( 0 , 0 , n , sum , & max ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 627,
                          "end_byte": 668,
                          "text": "calculatePath ( 0 , 0 , n , sum , & max )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 627,
                              "end_byte": 640,
                              "text": "calculatePath",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 641,
                              "end_byte": 668,
                              "text": "( 0 , 0 , n , sum , & max )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 641,
                                  "end_byte": 642,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 643,
                                  "end_byte": 644,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 645,
                                  "end_byte": 646,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 647,
                                  "end_byte": 648,
                                  "text": "0",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 649,
                                  "end_byte": 650,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 651,
                                  "end_byte": 652,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 653,
                                  "end_byte": 654,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 655,
                                  "end_byte": 658,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 659,
                                  "end_byte": 660,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 661,
                                  "end_byte": 666,
                                  "text": "& max",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 661,
                                      "end_byte": 662,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 663,
                                      "end_byte": 666,
                                      "text": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 667,
                                  "end_byte": 668,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 669,
                          "end_byte": 670,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 671,
                      "end_byte": 694,
                      "text": "printf ( \"%d\" , max ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 671,
                          "end_byte": 692,
                          "text": "printf ( \"%d\" , max )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 671,
                              "end_byte": 677,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 678,
                              "end_byte": 692,
                              "text": "( \"%d\" , max )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 678,
                                  "end_byte": 679,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 680,
                                  "end_byte": 684,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 680,
                                      "end_byte": 681,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 681,
                                      "end_byte": 683,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 683,
                                      "end_byte": 684,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 685,
                                  "end_byte": 686,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 687,
                                  "end_byte": 690,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 691,
                                  "end_byte": 692,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 693,
                          "end_byte": 694,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 695,
                      "end_byte": 696,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 697,
              "end_byte": 707,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 697,
                  "end_byte": 703,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 704,
                  "end_byte": 705,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 706,
                  "end_byte": 707,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 708,
              "end_byte": 709,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}