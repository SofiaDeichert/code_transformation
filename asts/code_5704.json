{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 468,
  "text": "int a [ 100001 ] ; int main ( void ) { int t , n , i , j , c , x ; int s ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & a [ i ] ) ; } for ( i = 0 , s = 0 ; i < n - 1 ; i ++ ) { for ( j = i + 1 , c = 0 ; j < n ; j ++ ) { if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } } if ( x ) { s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; } else s = s + c ; } printf ( \"%d\\n\" , s + n ) ; } return 0 ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 18,
      "text": "int a [ 100001 ] ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "array_declarator",
          "start_byte": 4,
          "end_byte": 16,
          "text": "a [ 100001 ]",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 5,
              "text": "a",
              "children": []
            },
            {
              "type": "[",
              "start_byte": 6,
              "end_byte": 7,
              "text": "[",
              "children": []
            },
            {
              "type": "number_literal",
              "start_byte": 8,
              "end_byte": 14,
              "text": "100001",
              "children": []
            },
            {
              "type": "]",
              "start_byte": 15,
              "end_byte": 16,
              "text": "]",
              "children": []
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 17,
          "end_byte": 18,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 19,
      "end_byte": 468,
      "text": "int main ( void ) { int t , n , i , j , c , x ; int s ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & a [ i ] ) ; } for ( i = 0 , s = 0 ; i < n - 1 ; i ++ ) { for ( j = i + 1 , c = 0 ; j < n ; j ++ ) { if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } } if ( x ) { s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; } else s = s + c ; } printf ( \"%d\\n\" , s + n ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 19,
          "end_byte": 22,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 23,
          "end_byte": 36,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 23,
              "end_byte": 27,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 28,
              "end_byte": 36,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 30,
                  "end_byte": 34,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 30,
                      "end_byte": 34,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 35,
                  "end_byte": 36,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 37,
          "end_byte": 468,
          "text": "{ int t , n , i , j , c , x ; int s ; scanf ( \"%d\" , & t ) ; while ( t -- ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & a [ i ] ) ; } for ( i = 0 , s = 0 ; i < n - 1 ; i ++ ) { for ( j = i + 1 , c = 0 ; j < n ; j ++ ) { if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } } if ( x ) { s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; } else s = s + c ; } printf ( \"%d\\n\" , s + n ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 37,
              "end_byte": 38,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 39,
              "end_byte": 66,
              "text": "int t , n , i , j , c , x ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 39,
                  "end_byte": 42,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 52,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 53,
                  "end_byte": 54,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": "x",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 65,
                  "end_byte": 66,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 67,
              "end_byte": 74,
              "text": "int s ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 67,
                  "end_byte": 70,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 71,
                  "end_byte": 72,
                  "text": "s",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 73,
                  "end_byte": 74,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 75,
              "end_byte": 97,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 75,
                  "end_byte": 95,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 75,
                      "end_byte": 80,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 81,
                      "end_byte": 95,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 81,
                          "end_byte": 82,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 83,
                          "end_byte": 87,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 83,
                              "end_byte": 84,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 84,
                              "end_byte": 86,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 88,
                          "end_byte": 89,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 90,
                          "end_byte": 93,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 90,
                              "end_byte": 91,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 96,
                  "end_byte": 97,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 98,
              "end_byte": 455,
              "text": "while ( t -- ) { scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & a [ i ] ) ; } for ( i = 0 , s = 0 ; i < n - 1 ; i ++ ) { for ( j = i + 1 , c = 0 ; j < n ; j ++ ) { if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } } if ( x ) { s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; } else s = s + c ; } printf ( \"%d\\n\" , s + n ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 98,
                  "end_byte": 103,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 104,
                  "end_byte": 112,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 106,
                      "end_byte": 110,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 106,
                          "end_byte": 107,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 108,
                          "end_byte": 110,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 111,
                      "end_byte": 112,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 113,
                  "end_byte": 455,
                  "text": "{ scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & a [ i ] ) ; } for ( i = 0 , s = 0 ; i < n - 1 ; i ++ ) { for ( j = i + 1 , c = 0 ; j < n ; j ++ ) { if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } } if ( x ) { s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; } else s = s + c ; } printf ( \"%d\\n\" , s + n ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 115,
                      "end_byte": 137,
                      "text": "scanf ( \"%d\" , & n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 115,
                          "end_byte": 135,
                          "text": "scanf ( \"%d\" , & n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 115,
                              "end_byte": 120,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 121,
                              "end_byte": 135,
                              "text": "( \"%d\" , & n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 121,
                                  "end_byte": 122,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 123,
                                  "end_byte": 127,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 123,
                                      "end_byte": 124,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 124,
                                      "end_byte": 126,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 126,
                                      "end_byte": 127,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 128,
                                  "end_byte": 129,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 130,
                                  "end_byte": 133,
                                  "text": "& n",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 130,
                                      "end_byte": 131,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 132,
                                      "end_byte": 133,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 134,
                                  "end_byte": 135,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 136,
                          "end_byte": 137,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 138,
                      "end_byte": 199,
                      "text": "for ( i = 0 ; i < n ; i ++ ) { scanf ( \"%d\" , & a [ i ] ) ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 138,
                          "end_byte": 141,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 142,
                          "end_byte": 143,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 144,
                          "end_byte": 149,
                          "text": "i = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 144,
                              "end_byte": 145,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 146,
                              "end_byte": 147,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 148,
                              "end_byte": 149,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 150,
                          "end_byte": 151,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 152,
                          "end_byte": 157,
                          "text": "i < n",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 152,
                              "end_byte": 153,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 154,
                              "end_byte": 155,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 156,
                              "end_byte": 157,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 158,
                          "end_byte": 159,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 160,
                          "end_byte": 164,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 162,
                              "end_byte": 164,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 165,
                          "end_byte": 166,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 167,
                          "end_byte": 199,
                          "text": "{ scanf ( \"%d\" , & a [ i ] ) ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 169,
                              "end_byte": 197,
                              "text": "scanf ( \"%d\" , & a [ i ] ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 169,
                                  "end_byte": 195,
                                  "text": "scanf ( \"%d\" , & a [ i ] )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 169,
                                      "end_byte": 174,
                                      "text": "scanf",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 175,
                                      "end_byte": 195,
                                      "text": "( \"%d\" , & a [ i ] )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 175,
                                          "end_byte": 176,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "string_literal",
                                          "start_byte": 177,
                                          "end_byte": 181,
                                          "text": "\"%d\"",
                                          "children": [
                                            {
                                              "type": "\"",
                                              "start_byte": 177,
                                              "end_byte": 178,
                                              "text": "\"",
                                              "children": []
                                            },
                                            {
                                              "type": "string_content",
                                              "start_byte": 178,
                                              "end_byte": 180,
                                              "text": "%d",
                                              "children": []
                                            },
                                            {
                                              "type": "\"",
                                              "start_byte": 180,
                                              "end_byte": 181,
                                              "text": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 182,
                                          "end_byte": 183,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "pointer_expression",
                                          "start_byte": 184,
                                          "end_byte": 193,
                                          "text": "& a [ i ]",
                                          "children": [
                                            {
                                              "type": "&",
                                              "start_byte": 184,
                                              "end_byte": 185,
                                              "text": "&",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_expression",
                                              "start_byte": 186,
                                              "end_byte": 193,
                                              "text": "a [ i ]",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 186,
                                                  "end_byte": 187,
                                                  "text": "a",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_argument_list",
                                                  "start_byte": 188,
                                                  "end_byte": 193,
                                                  "text": "[ i ]",
                                                  "children": [
                                                    {
                                                      "type": "[",
                                                      "start_byte": 188,
                                                      "end_byte": 189,
                                                      "text": "[",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 190,
                                                      "end_byte": 191,
                                                      "text": "i",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "]",
                                                      "start_byte": 192,
                                                      "end_byte": 193,
                                                      "text": "]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 194,
                                          "end_byte": 195,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 196,
                                  "end_byte": 197,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 198,
                              "end_byte": 199,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 200,
                      "end_byte": 425,
                      "text": "for ( i = 0 , s = 0 ; i < n - 1 ; i ++ ) { for ( j = i + 1 , c = 0 ; j < n ; j ++ ) { if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } } if ( x ) { s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; } else s = s + c ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 200,
                          "end_byte": 203,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 204,
                          "end_byte": 205,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "comma_expression",
                          "start_byte": 206,
                          "end_byte": 219,
                          "text": "i = 0 , s = 0",
                          "children": [
                            {
                              "type": "assignment_expression",
                              "start_byte": 206,
                              "end_byte": 211,
                              "text": "i = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 206,
                                  "end_byte": 207,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 210,
                                  "end_byte": 211,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 212,
                              "end_byte": 213,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "assignment_expression",
                              "start_byte": 214,
                              "end_byte": 219,
                              "text": "s = 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 214,
                                  "end_byte": 215,
                                  "text": "s",
                                  "children": []
                                },
                                {
                                  "type": "=",
                                  "start_byte": 216,
                                  "end_byte": 217,
                                  "text": "=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 218,
                                  "end_byte": 219,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 220,
                          "end_byte": 221,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 222,
                          "end_byte": 231,
                          "text": "i < n - 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 222,
                              "end_byte": 223,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 224,
                              "end_byte": 225,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 226,
                              "end_byte": 231,
                              "text": "n - 1",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 228,
                                  "end_byte": 229,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 230,
                                  "end_byte": 231,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 232,
                          "end_byte": 233,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 234,
                          "end_byte": 238,
                          "text": "i ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 234,
                              "end_byte": 235,
                              "text": "i",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 236,
                              "end_byte": 238,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 239,
                          "end_byte": 240,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 241,
                          "end_byte": 425,
                          "text": "{ for ( j = i + 1 , c = 0 ; j < n ; j ++ ) { if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } } if ( x ) { s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; } else s = s + c ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 241,
                              "end_byte": 242,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "for_statement",
                              "start_byte": 243,
                              "end_byte": 349,
                              "text": "for ( j = i + 1 , c = 0 ; j < n ; j ++ ) { if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } }",
                              "children": [
                                {
                                  "type": "for",
                                  "start_byte": 243,
                                  "end_byte": 246,
                                  "text": "for",
                                  "children": []
                                },
                                {
                                  "type": "(",
                                  "start_byte": 247,
                                  "end_byte": 248,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "comma_expression",
                                  "start_byte": 249,
                                  "end_byte": 266,
                                  "text": "j = i + 1 , c = 0",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 249,
                                      "end_byte": 258,
                                      "text": "j = i + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 249,
                                          "end_byte": 250,
                                          "text": "j",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 251,
                                          "end_byte": 252,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 253,
                                          "end_byte": 258,
                                          "text": "i + 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 253,
                                              "end_byte": 254,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "+",
                                              "start_byte": 255,
                                              "end_byte": 256,
                                              "text": "+",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 257,
                                              "end_byte": 258,
                                              "text": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 259,
                                      "end_byte": 260,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 261,
                                      "end_byte": 266,
                                      "text": "c = 0",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 261,
                                          "end_byte": 262,
                                          "text": "c",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 263,
                                          "end_byte": 264,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 265,
                                          "end_byte": 266,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 267,
                                  "end_byte": 268,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 269,
                                  "end_byte": 274,
                                  "text": "j < n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "<",
                                      "start_byte": 271,
                                      "end_byte": 272,
                                      "text": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 273,
                                      "end_byte": 274,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 275,
                                  "end_byte": 276,
                                  "text": ";",
                                  "children": []
                                },
                                {
                                  "type": "update_expression",
                                  "start_byte": 277,
                                  "end_byte": 281,
                                  "text": "j ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 277,
                                      "end_byte": 278,
                                      "text": "j",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 279,
                                      "end_byte": 281,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 282,
                                  "end_byte": 283,
                                  "text": ")",
                                  "children": []
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 284,
                                  "end_byte": 349,
                                  "text": "{ if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; } }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 284,
                                      "end_byte": 285,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 286,
                                      "end_byte": 347,
                                      "text": "if ( a [ j ] >= a [ j - 1 ] ) c ++ ; else { x = 1 ; break ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 286,
                                          "end_byte": 288,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 289,
                                          "end_byte": 315,
                                          "text": "( a [ j ] >= a [ j - 1 ] )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 289,
                                              "end_byte": 290,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 291,
                                              "end_byte": 313,
                                              "text": "a [ j ] >= a [ j - 1 ]",
                                              "children": [
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 291,
                                                  "end_byte": 298,
                                                  "text": "a [ j ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 291,
                                                      "end_byte": 292,
                                                      "text": "a",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 293,
                                                      "end_byte": 298,
                                                      "text": "[ j ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 293,
                                                          "end_byte": 294,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 295,
                                                          "end_byte": 296,
                                                          "text": "j",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 297,
                                                          "end_byte": 298,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ">=",
                                                  "start_byte": 299,
                                                  "end_byte": 301,
                                                  "text": ">=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "subscript_expression",
                                                  "start_byte": 302,
                                                  "end_byte": 313,
                                                  "text": "a [ j - 1 ]",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 302,
                                                      "end_byte": 303,
                                                      "text": "a",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "subscript_argument_list",
                                                      "start_byte": 304,
                                                      "end_byte": 313,
                                                      "text": "[ j - 1 ]",
                                                      "children": [
                                                        {
                                                          "type": "[",
                                                          "start_byte": 304,
                                                          "end_byte": 305,
                                                          "text": "[",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 306,
                                                          "end_byte": 311,
                                                          "text": "j - 1",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 306,
                                                              "end_byte": 307,
                                                              "text": "j",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "-",
                                                              "start_byte": 308,
                                                              "end_byte": 309,
                                                              "text": "-",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "number_literal",
                                                              "start_byte": 310,
                                                              "end_byte": 311,
                                                              "text": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "]",
                                                          "start_byte": 312,
                                                          "end_byte": 313,
                                                          "text": "]",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 314,
                                              "end_byte": 315,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "expression_statement",
                                          "start_byte": 316,
                                          "end_byte": 322,
                                          "text": "c ++ ;",
                                          "children": [
                                            {
                                              "type": "update_expression",
                                              "start_byte": 316,
                                              "end_byte": 320,
                                              "text": "c ++",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 316,
                                                  "end_byte": 317,
                                                  "text": "c",
                                                  "children": []
                                                },
                                                {
                                                  "type": "++",
                                                  "start_byte": 318,
                                                  "end_byte": 320,
                                                  "text": "++",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ";",
                                              "start_byte": 321,
                                              "end_byte": 322,
                                              "text": ";",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 323,
                                          "end_byte": 347,
                                          "text": "else { x = 1 ; break ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 323,
                                              "end_byte": 327,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 328,
                                              "end_byte": 347,
                                              "text": "{ x = 1 ; break ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 328,
                                                  "end_byte": 329,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 330,
                                                  "end_byte": 337,
                                                  "text": "x = 1 ;",
                                                  "children": [
                                                    {
                                                      "type": "assignment_expression",
                                                      "start_byte": 330,
                                                      "end_byte": 335,
                                                      "text": "x = 1",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 330,
                                                          "end_byte": 331,
                                                          "text": "x",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "=",
                                                          "start_byte": 332,
                                                          "end_byte": 333,
                                                          "text": "=",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "number_literal",
                                                          "start_byte": 334,
                                                          "end_byte": 335,
                                                          "text": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 336,
                                                      "end_byte": 337,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "break_statement",
                                                  "start_byte": 338,
                                                  "end_byte": 345,
                                                  "text": "break ;",
                                                  "children": [
                                                    {
                                                      "type": "break",
                                                      "start_byte": 338,
                                                      "end_byte": 343,
                                                      "text": "break",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 344,
                                                      "end_byte": 345,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 346,
                                                  "end_byte": 347,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 348,
                                      "end_byte": 349,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 350,
                              "end_byte": 423,
                              "text": "if ( x ) { s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; } else s = s + c ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 350,
                                  "end_byte": 352,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 353,
                                  "end_byte": 358,
                                  "text": "( x )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 353,
                                      "end_byte": 354,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 355,
                                      "end_byte": 356,
                                      "text": "x",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 357,
                                      "end_byte": 358,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 359,
                                  "end_byte": 406,
                                  "text": "{ s = s + ( c * ( c + 1 ) ) / 2 ; i = j - 1 ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 359,
                                      "end_byte": 360,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 361,
                                      "end_byte": 392,
                                      "text": "s = s + ( c * ( c + 1 ) ) / 2 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 361,
                                          "end_byte": 390,
                                          "text": "s = s + ( c * ( c + 1 ) ) / 2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 361,
                                              "end_byte": 362,
                                              "text": "s",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 363,
                                              "end_byte": 364,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 365,
                                              "end_byte": 390,
                                              "text": "s + ( c * ( c + 1 ) ) / 2",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 365,
                                                  "end_byte": 366,
                                                  "text": "s",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 367,
                                                  "end_byte": 368,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 369,
                                                  "end_byte": 390,
                                                  "text": "( c * ( c + 1 ) ) / 2",
                                                  "children": [
                                                    {
                                                      "type": "parenthesized_expression",
                                                      "start_byte": 369,
                                                      "end_byte": 386,
                                                      "text": "( c * ( c + 1 ) )",
                                                      "children": [
                                                        {
                                                          "type": "(",
                                                          "start_byte": 369,
                                                          "end_byte": 370,
                                                          "text": "(",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "binary_expression",
                                                          "start_byte": 371,
                                                          "end_byte": 384,
                                                          "text": "c * ( c + 1 )",
                                                          "children": [
                                                            {
                                                              "type": "identifier",
                                                              "start_byte": 371,
                                                              "end_byte": 372,
                                                              "text": "c",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "*",
                                                              "start_byte": 373,
                                                              "end_byte": 374,
                                                              "text": "*",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "parenthesized_expression",
                                                              "start_byte": 375,
                                                              "end_byte": 384,
                                                              "text": "( c + 1 )",
                                                              "children": [
                                                                {
                                                                  "type": "(",
                                                                  "start_byte": 375,
                                                                  "end_byte": 376,
                                                                  "text": "(",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "binary_expression",
                                                                  "start_byte": 377,
                                                                  "end_byte": 382,
                                                                  "text": "c + 1",
                                                                  "children": [
                                                                    {
                                                                      "type": "identifier",
                                                                      "start_byte": 377,
                                                                      "end_byte": 378,
                                                                      "text": "c",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "+",
                                                                      "start_byte": 379,
                                                                      "end_byte": 380,
                                                                      "text": "+",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "number_literal",
                                                                      "start_byte": 381,
                                                                      "end_byte": 382,
                                                                      "text": "1",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": ")",
                                                                  "start_byte": 383,
                                                                  "end_byte": 384,
                                                                  "text": ")",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": ")",
                                                          "start_byte": 385,
                                                          "end_byte": 386,
                                                          "text": ")",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "/",
                                                      "start_byte": 387,
                                                      "end_byte": 388,
                                                      "text": "/",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "number_literal",
                                                      "start_byte": 389,
                                                      "end_byte": 390,
                                                      "text": "2",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 391,
                                          "end_byte": 392,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 393,
                                      "end_byte": 404,
                                      "text": "i = j - 1 ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 393,
                                          "end_byte": 402,
                                          "text": "i = j - 1",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 393,
                                              "end_byte": 394,
                                              "text": "i",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 395,
                                              "end_byte": 396,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 397,
                                              "end_byte": 402,
                                              "text": "j - 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 397,
                                                  "end_byte": 398,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "-",
                                                  "start_byte": 399,
                                                  "end_byte": 400,
                                                  "text": "-",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 401,
                                                  "end_byte": 402,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 403,
                                          "end_byte": 404,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 405,
                                      "end_byte": 406,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 407,
                                  "end_byte": 423,
                                  "text": "else s = s + c ;",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 407,
                                      "end_byte": 411,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 412,
                                      "end_byte": 423,
                                      "text": "s = s + c ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 412,
                                          "end_byte": 421,
                                          "text": "s = s + c",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 412,
                                              "end_byte": 413,
                                              "text": "s",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 414,
                                              "end_byte": 415,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 416,
                                              "end_byte": 421,
                                              "text": "s + c",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 416,
                                                  "end_byte": 417,
                                                  "text": "s",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 418,
                                                  "end_byte": 419,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 420,
                                                  "end_byte": 421,
                                                  "text": "c",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 422,
                                          "end_byte": 423,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 426,
                      "end_byte": 453,
                      "text": "printf ( \"%d\\n\" , s + n ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 426,
                          "end_byte": 451,
                          "text": "printf ( \"%d\\n\" , s + n )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 426,
                              "end_byte": 432,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 433,
                              "end_byte": 451,
                              "text": "( \"%d\\n\" , s + n )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 433,
                                  "end_byte": 434,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 435,
                                  "end_byte": 441,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 435,
                                      "end_byte": 436,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 436,
                                      "end_byte": 438,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 438,
                                      "end_byte": 440,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 440,
                                      "end_byte": 441,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 442,
                                  "end_byte": 443,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "binary_expression",
                                  "start_byte": 444,
                                  "end_byte": 449,
                                  "text": "s + n",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 444,
                                      "end_byte": 445,
                                      "text": "s",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 446,
                                      "end_byte": 447,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 448,
                                      "end_byte": 449,
                                      "text": "n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 450,
                                  "end_byte": 451,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 452,
                          "end_byte": 453,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 454,
                      "end_byte": 455,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 456,
              "end_byte": 466,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 456,
                  "end_byte": 462,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 463,
                  "end_byte": 464,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 465,
                  "end_byte": 466,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 467,
              "end_byte": 468,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}