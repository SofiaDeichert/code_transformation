int n ; long int max ( long int a , long int b ) { if ( a > b ) return a ; else return b ; } long int maxcol ( long int a [ n ] [ n ] , long int b [ n ] [ n ] , long int i , long int j ) { if ( j == 0 ) return b [ i ] [ j ] ; else if ( i == j ) return b [ i ] [ j ] ; return ( a [ i ] [ j ] + max ( maxcol ( a , b , i - 1 , j ) , maxcol ( a , b , i - 1 , j - 1 ) ) ) ; } int main ( ) { long int i , j , k , ans = 0 ; scanf ( "%d" , & n ) ; long int a [ n ] [ n ] , b [ n ] [ n ] ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%ld" , & a [ i ] [ j ] ) ; } while ( j < n ) { a [ i ] [ j ] = 0 ; j ++ ; } } b [ 0 ] [ 0 ] = a [ 0 ] [ 0 ] ; for ( i = 1 ; i < n ; i ++ ) { b [ i ] [ 0 ] = a [ i ] [ 0 ] + b [ i - 1 ] [ 0 ] ; } for ( i = 1 ; i < n ; i ++ ) { b [ i ] [ i ] = a [ i ] [ i ] + b [ i - 1 ] [ i - 1 ] ; } for ( k = 0 ; k < n ; k ++ ) { b [ n - 1 ] [ k ] = maxcol ( a , b , n - 1 , k ) ; } for ( k = 0 ; k < n ; k ++ ) { ans = max ( b [ n - 1 ] [ k ] , ans ) ; } printf ( "%ld" , ans ) ; return 0 ; }