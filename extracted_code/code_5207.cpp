int calculate_largest ( int triangle [ 100 ] [ 100 ] , int n ) ; int max ( int a , int b ) ; int main ( ) { int n , i , j , max_sum , t ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & n ) ; int triangle [ 100 ] [ 100 ] ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) { scanf ( "%d" , & triangle [ i ] [ j ] ) ; } } max_sum = calculate_largest ( triangle , n ) ; printf ( "%d\n" , max_sum ) ; } return 0 ; } int max ( int a , int b ) { return ( a > b ) ? a : b ; } int calculate_largest ( int triangle [ 100 ] [ 100 ] , int n ) { int temp [ 100 ] [ 100 ] ; int i , j ; for ( i = n - 2 ; i >= 0 ; i -- ) { for ( j = 0 ; j <= i ; j ++ ) { temp [ i ] [ j ] = max ( triangle [ i + 1 ] [ j ] , triangle [ i + 1 ] [ j + 1 ] ) + triangle [ i ] [ j ] ; triangle [ i ] [ j ] = temp [ i ] [ j ] ; } } return temp [ 0 ] [ 0 ] ; }