void insert ( int , int , int ) ; struct node { int info , pos , opos ; struct node * next ; } * start [ 10 ] ; void main ( ) { int a = 1 , b , c , i , k , row , j , sum , t , count ; long max = 0 , max1 = 0 ; struct node * r , * s ; scanf ( "%d" , & t ) ; while ( count <= 2 ) { max = 0 ; max1 = 0 ; scanf ( "%d" , & row ) ; for ( i = 0 ; i < row ; i ++ ) { for ( j = 1 ; j <= i + 1 ; j ++ ) { scanf ( "%d" , & a ) ; insert ( a , j , i ) ; } } for ( k = 0 ; k < row ; k ++ ) { r = start [ k ] ; i = 1 ; while ( r != NULL ) { r -> pos = i ; r = r -> next ; i ++ ; } } for ( i = 1 ; i < row ; i ++ ) { r = start [ i ] ; sum = 0 ; for ( j = i ; j >= 1 ; j -- ) { s = start [ j ] ; if ( j == i ) { sum = sum + r -> info ; continue ; } else { a = r -> opos ; b = r -> opos - 1 ; while ( s -> opos != a && s -> opos != b ) { s = s -> next ; } sum = sum + s -> info ; r = s ; } } r = start [ i ] ; for ( j = i + 1 ; j < row ; j ++ ) { s = start [ j ] ; if ( j > i ) { a = r -> opos ; b = r -> opos + 1 ; while ( s -> opos != a && s -> opos != b ) { s = s -> next ; } sum = sum + s -> info ; r = s ; } } if ( sum > max1 ) { max1 = sum ; max = max1 + start [ 0 ] -> info ; } } printf ( "%ld" , max ) ; count ++ ; } } void insert ( int a , int b , int c ) { struct node * temp , * r , * s ; temp = ( struct node * ) malloc ( sizeof ( struct node ) ) ; temp -> next = NULL ; temp -> info = a ; temp -> opos = b ; if ( start [ c ] == NULL ) { start [ c ] = temp ; } else { r = start [ c ] ; while ( a <= r -> info && r != NULL ) { s = r ; r = r -> next ; } if ( r == start [ c ] ) { temp -> next = start [ c ] ; start [ c ] = temp ; } else if ( s -> next == NULL ) s -> next = temp ; else { s -> next = temp ; temp -> next = r ; } } }