{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 388,
  "text": "int main ( void ) { int t , a , b , i , lcm , gcd , num , deno , rem ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { num = a ; deno = b ; } else { num = b ; deno = a ; } rem = num % deno ; while ( rem != 0 ) { num = deno ; deno = rem ; rem = num % deno ; } gcd = deno ; lcm = ( a * b ) / gcd ; printf ( \"%d\\t%d\\n\" , gcd , lcm ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 388,
      "text": "int main ( void ) { int t , a , b , i , lcm , gcd , num , deno , rem ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { num = a ; deno = b ; } else { num = b ; deno = a ; } rem = num % deno ; while ( rem != 0 ) { num = deno ; deno = rem ; rem = num % deno ; } gcd = deno ; lcm = ( a * b ) / gcd ; printf ( \"%d\\t%d\\n\" , gcd , lcm ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 17,
          "text": "main ( void )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 17,
              "text": "( void )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 11,
                  "end_byte": 15,
                  "text": "void",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 11,
                      "end_byte": 15,
                      "text": "void",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 18,
          "end_byte": 388,
          "text": "{ int t , a , b , i , lcm , gcd , num , deno , rem ; scanf ( \"%d\" , & t ) ; for ( i = 1 ; i <= t ; i ++ ) { scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { num = a ; deno = b ; } else { num = b ; deno = a ; } rem = num % deno ; while ( rem != 0 ) { num = deno ; deno = rem ; rem = num % deno ; } gcd = deno ; lcm = ( a * b ) / gcd ; printf ( \"%d\\t%d\\n\" , gcd , lcm ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 18,
              "end_byte": 19,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 20,
              "end_byte": 70,
              "text": "int t , a , b , i , lcm , gcd , num , deno , rem ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 20,
                  "end_byte": 23,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 24,
                  "end_byte": 25,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 46,
                  "end_byte": 49,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 50,
                  "end_byte": 51,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 52,
                  "end_byte": 55,
                  "text": "num",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 56,
                  "end_byte": 57,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 58,
                  "end_byte": 62,
                  "text": "deno",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 63,
                  "end_byte": 64,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 65,
                  "end_byte": 68,
                  "text": "rem",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 71,
              "end_byte": 93,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 71,
                  "end_byte": 91,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 71,
                      "end_byte": 76,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 77,
                      "end_byte": 91,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 77,
                          "end_byte": 78,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 79,
                          "end_byte": 83,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 79,
                              "end_byte": 80,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 80,
                              "end_byte": 82,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 82,
                              "end_byte": 83,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 84,
                          "end_byte": 85,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 86,
                          "end_byte": 89,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 94,
              "end_byte": 386,
              "text": "for ( i = 1 ; i <= t ; i ++ ) { scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { num = a ; deno = b ; } else { num = b ; deno = a ; } rem = num % deno ; while ( rem != 0 ) { num = deno ; deno = rem ; rem = num % deno ; } gcd = deno ; lcm = ( a * b ) / gcd ; printf ( \"%d\\t%d\\n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 94,
                  "end_byte": 97,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 98,
                  "end_byte": 99,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 100,
                  "end_byte": 105,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 102,
                      "end_byte": 103,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 104,
                      "end_byte": 105,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 106,
                  "end_byte": 107,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 108,
                  "end_byte": 114,
                  "text": "i <= t",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 108,
                      "end_byte": 109,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 110,
                      "end_byte": 112,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 113,
                      "end_byte": 114,
                      "text": "t",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 115,
                  "end_byte": 116,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 117,
                  "end_byte": 121,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 119,
                      "end_byte": 121,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 122,
                  "end_byte": 123,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 124,
                  "end_byte": 386,
                  "text": "{ scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { num = a ; deno = b ; } else { num = b ; deno = a ; } rem = num % deno ; while ( rem != 0 ) { num = deno ; deno = rem ; rem = num % deno ; } gcd = deno ; lcm = ( a * b ) / gcd ; printf ( \"%d\\t%d\\n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 124,
                      "end_byte": 125,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 126,
                      "end_byte": 156,
                      "text": "scanf ( \"%d%d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 126,
                          "end_byte": 154,
                          "text": "scanf ( \"%d%d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 126,
                              "end_byte": 131,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 132,
                              "end_byte": 154,
                              "text": "( \"%d%d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 132,
                                  "end_byte": 133,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 134,
                                  "end_byte": 140,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 134,
                                      "end_byte": 135,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 135,
                                      "end_byte": 139,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 139,
                                      "end_byte": 140,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 141,
                                  "end_byte": 142,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 143,
                                  "end_byte": 146,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 143,
                                      "end_byte": 144,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 145,
                                      "end_byte": 146,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 147,
                                  "end_byte": 148,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 149,
                                  "end_byte": 152,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 149,
                                      "end_byte": 150,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 153,
                                  "end_byte": 154,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 155,
                          "end_byte": 156,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 157,
                      "end_byte": 224,
                      "text": "if ( a > b ) { num = a ; deno = b ; } else { num = b ; deno = a ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 157,
                          "end_byte": 159,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 160,
                          "end_byte": 169,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 162,
                              "end_byte": 167,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 162,
                                  "end_byte": 163,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 164,
                                  "end_byte": 165,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 166,
                                  "end_byte": 167,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 168,
                              "end_byte": 169,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 170,
                          "end_byte": 194,
                          "text": "{ num = a ; deno = b ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 170,
                              "end_byte": 171,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 172,
                              "end_byte": 181,
                              "text": "num = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 172,
                                  "end_byte": 179,
                                  "text": "num = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 172,
                                      "end_byte": 175,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 178,
                                      "end_byte": 179,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 180,
                                  "end_byte": 181,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 182,
                              "end_byte": 192,
                              "text": "deno = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 182,
                                  "end_byte": 190,
                                  "text": "deno = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 182,
                                      "end_byte": 186,
                                      "text": "deno",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 187,
                                      "end_byte": 188,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 189,
                                      "end_byte": 190,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 191,
                                  "end_byte": 192,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 193,
                              "end_byte": 194,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 195,
                          "end_byte": 224,
                          "text": "else { num = b ; deno = a ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 195,
                              "end_byte": 199,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 200,
                              "end_byte": 224,
                              "text": "{ num = b ; deno = a ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 202,
                                  "end_byte": 211,
                                  "text": "num = b ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 202,
                                      "end_byte": 209,
                                      "text": "num = b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 202,
                                          "end_byte": 205,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 206,
                                          "end_byte": 207,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 208,
                                          "end_byte": 209,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 210,
                                      "end_byte": 211,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 212,
                                  "end_byte": 222,
                                  "text": "deno = a ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 212,
                                      "end_byte": 220,
                                      "text": "deno = a",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 212,
                                          "end_byte": 216,
                                          "text": "deno",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 217,
                                          "end_byte": 218,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 219,
                                          "end_byte": 220,
                                          "text": "a",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 221,
                                      "end_byte": 222,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 223,
                                  "end_byte": 224,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 225,
                      "end_byte": 243,
                      "text": "rem = num % deno ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 225,
                          "end_byte": 241,
                          "text": "rem = num % deno",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 225,
                              "end_byte": 228,
                              "text": "rem",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 229,
                              "end_byte": 230,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 231,
                              "end_byte": 241,
                              "text": "num % deno",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 231,
                                  "end_byte": 234,
                                  "text": "num",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 235,
                                  "end_byte": 236,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 237,
                                  "end_byte": 241,
                                  "text": "deno",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 242,
                          "end_byte": 243,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 244,
                      "end_byte": 311,
                      "text": "while ( rem != 0 ) { num = deno ; deno = rem ; rem = num % deno ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 244,
                          "end_byte": 249,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 250,
                          "end_byte": 262,
                          "text": "( rem != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 250,
                              "end_byte": 251,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 252,
                              "end_byte": 260,
                              "text": "rem != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 252,
                                  "end_byte": 255,
                                  "text": "rem",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 256,
                                  "end_byte": 258,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 259,
                                  "end_byte": 260,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 261,
                              "end_byte": 262,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 263,
                          "end_byte": 311,
                          "text": "{ num = deno ; deno = rem ; rem = num % deno ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 263,
                              "end_byte": 264,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 265,
                              "end_byte": 277,
                              "text": "num = deno ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 265,
                                  "end_byte": 275,
                                  "text": "num = deno",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 265,
                                      "end_byte": 268,
                                      "text": "num",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 271,
                                      "end_byte": 275,
                                      "text": "deno",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 276,
                                  "end_byte": 277,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 278,
                              "end_byte": 290,
                              "text": "deno = rem ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 278,
                                  "end_byte": 288,
                                  "text": "deno = rem",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 278,
                                      "end_byte": 282,
                                      "text": "deno",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 285,
                                      "end_byte": 288,
                                      "text": "rem",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 289,
                                  "end_byte": 290,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 291,
                              "end_byte": 309,
                              "text": "rem = num % deno ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 291,
                                  "end_byte": 307,
                                  "text": "rem = num % deno",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 291,
                                      "end_byte": 294,
                                      "text": "rem",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 295,
                                      "end_byte": 296,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 297,
                                      "end_byte": 307,
                                      "text": "num % deno",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 297,
                                          "end_byte": 300,
                                          "text": "num",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 301,
                                          "end_byte": 302,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 303,
                                          "end_byte": 307,
                                          "text": "deno",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 308,
                                  "end_byte": 309,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 310,
                              "end_byte": 311,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 312,
                      "end_byte": 324,
                      "text": "gcd = deno ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 312,
                          "end_byte": 322,
                          "text": "gcd = deno",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 312,
                              "end_byte": 315,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 316,
                              "end_byte": 317,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 318,
                              "end_byte": 322,
                              "text": "deno",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 323,
                          "end_byte": 324,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 325,
                      "end_byte": 348,
                      "text": "lcm = ( a * b ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 325,
                          "end_byte": 346,
                          "text": "lcm = ( a * b ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 325,
                              "end_byte": 328,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 329,
                              "end_byte": 330,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 331,
                              "end_byte": 346,
                              "text": "( a * b ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 331,
                                  "end_byte": 340,
                                  "text": "( a * b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 331,
                                      "end_byte": 332,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 333,
                                      "end_byte": 338,
                                      "text": "a * b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 333,
                                          "end_byte": 334,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 335,
                                          "end_byte": 336,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 337,
                                          "end_byte": 338,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 339,
                                      "end_byte": 340,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 341,
                                  "end_byte": 342,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 343,
                                  "end_byte": 346,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 347,
                          "end_byte": 348,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 349,
                      "end_byte": 384,
                      "text": "printf ( \"%d\\t%d\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 349,
                          "end_byte": 382,
                          "text": "printf ( \"%d\\t%d\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 349,
                              "end_byte": 355,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 356,
                              "end_byte": 382,
                              "text": "( \"%d\\t%d\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 356,
                                  "end_byte": 357,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 358,
                                  "end_byte": 368,
                                  "text": "\"%d\\t%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 358,
                                      "end_byte": 359,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 359,
                                      "end_byte": 361,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 361,
                                      "end_byte": 363,
                                      "text": "\\t",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 363,
                                      "end_byte": 365,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 365,
                                      "end_byte": 367,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 367,
                                      "end_byte": 368,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 369,
                                  "end_byte": 370,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 371,
                                  "end_byte": 374,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 375,
                                  "end_byte": 376,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 377,
                                  "end_byte": 380,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 381,
                                  "end_byte": 382,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 383,
                          "end_byte": 384,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 385,
                      "end_byte": 386,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 387,
              "end_byte": 388,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}