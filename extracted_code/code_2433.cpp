unsigned int max ( unsigned int a , unsigned int b ) { return a >= b ? a : b ; } unsigned int min ( unsigned int a , unsigned int b ) { return a <= b ? a : b ; } int main ( ) { unsigned int t , n , i , j , k , number ; unsigned int triangle [ 100 ] [ 100 ] ; unsigned int max_path = 0 ; scanf ( "%u" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( "%u" , & n ) ; for ( j = 0 ; j < n ; j ++ ) { for ( k = 0 ; k <= j ; k ++ ) { scanf ( "%u" , & number ) ; if ( j > 0 ) { triangle [ j ] [ k ] = max ( number + triangle [ j - 1 ] [ min ( k , j - 1 ) ] , number + triangle [ j - 1 ] [ max ( k - 1 , 0 ) ] ) ; } else { triangle [ j ] [ k ] = number ; } } } for ( k = 0 ; k < n ; k ++ ) { max_path = max ( max_path , triangle [ n - 1 ] [ k ] ) ; } printf ( "%u\n" , max_path ) ; max_path = 0 ; } return 0 ; }