{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 1147,
  "text": "void updateArray ( int * numbers , int count ) { if ( count == 1 ) return ; int i ; int updateIndex = ( count * ( count - 1 ) ) / 2 ; int prevBlockLen = count - 1 ; int readIndex = updateIndex - prevBlockLen ; numbers [ updateIndex ] += numbers [ readIndex ] ; numbers [ updateIndex + count - 1 ] += numbers [ readIndex + prevBlockLen - 1 ] ; for ( i = updateIndex + 1 ; i < updateIndex + count - 1 ; i ++ , readIndex ++ ) { int n1 = numbers [ readIndex ] ; int n2 = numbers [ readIndex + 1 ] ; int toAdd = n1 > n2 ? n1 : n2 ; numbers [ i ] += toAdd ; } } int main ( ) { int nCases , i , j , nLines , nNumbers ; scanf ( \"%d\" , & nCases ) ; for ( i = 0 ; i < nCases ; i ++ ) { scanf ( \"%d\" , & nLines ) ; nNumbers = ( nLines * ( nLines + 1 ) ) / 2 ; int numbers [ nNumbers ] ; for ( j = 0 ; j < nNumbers ; j ++ ) scanf ( \"%d\" , & numbers [ j ] ) ; int index = 0 , count = 1 ; while ( index != nNumbers ) { updateArray ( numbers , count ) ; index = index + count ; count ++ ; } int max = numbers [ 0 ] ; for ( j = nNumbers - nLines ; j < nNumbers ; j ++ ) { if ( numbers [ j ] > max ) max = numbers [ j ] ; } printf ( \"%d\\n\" , max ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 555,
      "text": "void updateArray ( int * numbers , int count ) { if ( count == 1 ) return ; int i ; int updateIndex = ( count * ( count - 1 ) ) / 2 ; int prevBlockLen = count - 1 ; int readIndex = updateIndex - prevBlockLen ; numbers [ updateIndex ] += numbers [ readIndex ] ; numbers [ updateIndex + count - 1 ] += numbers [ readIndex + prevBlockLen - 1 ] ; for ( i = updateIndex + 1 ; i < updateIndex + count - 1 ; i ++ , readIndex ++ ) { int n1 = numbers [ readIndex ] ; int n2 = numbers [ readIndex + 1 ] ; int toAdd = n1 > n2 ? n1 : n2 ; numbers [ i ] += toAdd ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 46,
          "text": "updateArray ( int * numbers , int count )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 16,
              "text": "updateArray",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 17,
              "end_byte": 46,
              "text": "( int * numbers , int count )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 17,
                  "end_byte": 18,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 19,
                  "end_byte": 32,
                  "text": "int * numbers",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 19,
                      "end_byte": 22,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "pointer_declarator",
                      "start_byte": 23,
                      "end_byte": 32,
                      "text": "* numbers",
                      "children": [
                        {
                          "type": "*",
                          "start_byte": 23,
                          "end_byte": 24,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 25,
                          "end_byte": 32,
                          "text": "numbers",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 33,
                  "end_byte": 34,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 35,
                  "end_byte": 44,
                  "text": "int count",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 35,
                      "end_byte": 38,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 39,
                      "end_byte": 44,
                      "text": "count",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 47,
          "end_byte": 555,
          "text": "{ if ( count == 1 ) return ; int i ; int updateIndex = ( count * ( count - 1 ) ) / 2 ; int prevBlockLen = count - 1 ; int readIndex = updateIndex - prevBlockLen ; numbers [ updateIndex ] += numbers [ readIndex ] ; numbers [ updateIndex + count - 1 ] += numbers [ readIndex + prevBlockLen - 1 ] ; for ( i = updateIndex + 1 ; i < updateIndex + count - 1 ; i ++ , readIndex ++ ) { int n1 = numbers [ readIndex ] ; int n2 = numbers [ readIndex + 1 ] ; int toAdd = n1 > n2 ? n1 : n2 ; numbers [ i ] += toAdd ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 47,
              "end_byte": 48,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 49,
              "end_byte": 75,
              "text": "if ( count == 1 ) return ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 49,
                  "end_byte": 51,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 52,
                  "end_byte": 66,
                  "text": "( count == 1 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 52,
                      "end_byte": 53,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 54,
                      "end_byte": 64,
                      "text": "count == 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 54,
                          "end_byte": 59,
                          "text": "count",
                          "children": []
                        },
                        {
                          "type": "==",
                          "start_byte": 60,
                          "end_byte": 62,
                          "text": "==",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": "1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 67,
                  "end_byte": 75,
                  "text": "return ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 67,
                      "end_byte": 73,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": ";",
                      "start_byte": 74,
                      "end_byte": 75,
                      "text": ";",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 76,
              "end_byte": 83,
              "text": "int i ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 76,
                  "end_byte": 79,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 80,
                  "end_byte": 81,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 82,
                  "end_byte": 83,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 84,
              "end_byte": 133,
              "text": "int updateIndex = ( count * ( count - 1 ) ) / 2 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 84,
                  "end_byte": 87,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 88,
                  "end_byte": 131,
                  "text": "updateIndex = ( count * ( count - 1 ) ) / 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 88,
                      "end_byte": 99,
                      "text": "updateIndex",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 102,
                      "end_byte": 131,
                      "text": "( count * ( count - 1 ) ) / 2",
                      "children": [
                        {
                          "type": "parenthesized_expression",
                          "start_byte": 102,
                          "end_byte": 127,
                          "text": "( count * ( count - 1 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 102,
                              "end_byte": 103,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 104,
                              "end_byte": 125,
                              "text": "count * ( count - 1 )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 104,
                                  "end_byte": 109,
                                  "text": "count",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 110,
                                  "end_byte": 111,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 112,
                                  "end_byte": 125,
                                  "text": "( count - 1 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 112,
                                      "end_byte": 113,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 114,
                                      "end_byte": 123,
                                      "text": "count - 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 114,
                                          "end_byte": 119,
                                          "text": "count",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 120,
                                          "end_byte": 121,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 122,
                                          "end_byte": 123,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 126,
                              "end_byte": 127,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "/",
                          "start_byte": 128,
                          "end_byte": 129,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 130,
                          "end_byte": 131,
                          "text": "2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 132,
                  "end_byte": 133,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 134,
              "end_byte": 164,
              "text": "int prevBlockLen = count - 1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 134,
                  "end_byte": 137,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 138,
                  "end_byte": 162,
                  "text": "prevBlockLen = count - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 138,
                      "end_byte": 150,
                      "text": "prevBlockLen",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 151,
                      "end_byte": 152,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 153,
                      "end_byte": 162,
                      "text": "count - 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 153,
                          "end_byte": 158,
                          "text": "count",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 159,
                          "end_byte": 160,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 161,
                          "end_byte": 162,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 163,
                  "end_byte": 164,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "declaration",
              "start_byte": 165,
              "end_byte": 209,
              "text": "int readIndex = updateIndex - prevBlockLen ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 165,
                  "end_byte": 168,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 169,
                  "end_byte": 207,
                  "text": "readIndex = updateIndex - prevBlockLen",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 169,
                      "end_byte": 178,
                      "text": "readIndex",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 179,
                      "end_byte": 180,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 181,
                      "end_byte": 207,
                      "text": "updateIndex - prevBlockLen",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 181,
                          "end_byte": 192,
                          "text": "updateIndex",
                          "children": []
                        },
                        {
                          "type": "-",
                          "start_byte": 193,
                          "end_byte": 194,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 195,
                          "end_byte": 207,
                          "text": "prevBlockLen",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 208,
                  "end_byte": 209,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 210,
              "end_byte": 260,
              "text": "numbers [ updateIndex ] += numbers [ readIndex ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 210,
                  "end_byte": 258,
                  "text": "numbers [ updateIndex ] += numbers [ readIndex ]",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 210,
                      "end_byte": 233,
                      "text": "numbers [ updateIndex ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 210,
                          "end_byte": 217,
                          "text": "numbers",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 218,
                          "end_byte": 233,
                          "text": "[ updateIndex ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 218,
                              "end_byte": 219,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 220,
                              "end_byte": 231,
                              "text": "updateIndex",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 232,
                              "end_byte": 233,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "+=",
                      "start_byte": 234,
                      "end_byte": 236,
                      "text": "+=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 237,
                      "end_byte": 258,
                      "text": "numbers [ readIndex ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 237,
                          "end_byte": 244,
                          "text": "numbers",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 245,
                          "end_byte": 258,
                          "text": "[ readIndex ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 245,
                              "end_byte": 246,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 247,
                              "end_byte": 256,
                              "text": "readIndex",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 257,
                              "end_byte": 258,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 259,
                  "end_byte": 260,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 261,
              "end_byte": 342,
              "text": "numbers [ updateIndex + count - 1 ] += numbers [ readIndex + prevBlockLen - 1 ] ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 261,
                  "end_byte": 340,
                  "text": "numbers [ updateIndex + count - 1 ] += numbers [ readIndex + prevBlockLen - 1 ]",
                  "children": [
                    {
                      "type": "subscript_expression",
                      "start_byte": 261,
                      "end_byte": 296,
                      "text": "numbers [ updateIndex + count - 1 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 261,
                          "end_byte": 268,
                          "text": "numbers",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 269,
                          "end_byte": 296,
                          "text": "[ updateIndex + count - 1 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 269,
                              "end_byte": 270,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 271,
                              "end_byte": 294,
                              "text": "updateIndex + count - 1",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 271,
                                  "end_byte": 290,
                                  "text": "updateIndex + count",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 271,
                                      "end_byte": 282,
                                      "text": "updateIndex",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 283,
                                      "end_byte": 284,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 285,
                                      "end_byte": 290,
                                      "text": "count",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 291,
                                  "end_byte": 292,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 293,
                                  "end_byte": 294,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start_byte": 295,
                              "end_byte": 296,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "+=",
                      "start_byte": 297,
                      "end_byte": 299,
                      "text": "+=",
                      "children": []
                    },
                    {
                      "type": "subscript_expression",
                      "start_byte": 300,
                      "end_byte": 340,
                      "text": "numbers [ readIndex + prevBlockLen - 1 ]",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 300,
                          "end_byte": 307,
                          "text": "numbers",
                          "children": []
                        },
                        {
                          "type": "subscript_argument_list",
                          "start_byte": 308,
                          "end_byte": 340,
                          "text": "[ readIndex + prevBlockLen - 1 ]",
                          "children": [
                            {
                              "type": "[",
                              "start_byte": 308,
                              "end_byte": 309,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 310,
                              "end_byte": 338,
                              "text": "readIndex + prevBlockLen - 1",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 310,
                                  "end_byte": 334,
                                  "text": "readIndex + prevBlockLen",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 310,
                                      "end_byte": 319,
                                      "text": "readIndex",
                                      "children": []
                                    },
                                    {
                                      "type": "+",
                                      "start_byte": 320,
                                      "end_byte": 321,
                                      "text": "+",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 322,
                                      "end_byte": 334,
                                      "text": "prevBlockLen",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "-",
                                  "start_byte": 335,
                                  "end_byte": 336,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 337,
                                  "end_byte": 338,
                                  "text": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "]",
                              "start_byte": 339,
                              "end_byte": 340,
                              "text": "]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 341,
                  "end_byte": 342,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 343,
              "end_byte": 553,
              "text": "for ( i = updateIndex + 1 ; i < updateIndex + count - 1 ; i ++ , readIndex ++ ) { int n1 = numbers [ readIndex ] ; int n2 = numbers [ readIndex + 1 ] ; int toAdd = n1 > n2 ? n1 : n2 ; numbers [ i ] += toAdd ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 343,
                  "end_byte": 346,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 347,
                  "end_byte": 348,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 349,
                  "end_byte": 368,
                  "text": "i = updateIndex + 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 349,
                      "end_byte": 350,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 351,
                      "end_byte": 352,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 353,
                      "end_byte": 368,
                      "text": "updateIndex + 1",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 353,
                          "end_byte": 364,
                          "text": "updateIndex",
                          "children": []
                        },
                        {
                          "type": "+",
                          "start_byte": 365,
                          "end_byte": 366,
                          "text": "+",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 367,
                          "end_byte": 368,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 369,
                  "end_byte": 370,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 371,
                  "end_byte": 398,
                  "text": "i < updateIndex + count - 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 371,
                      "end_byte": 372,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 373,
                      "end_byte": 374,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 375,
                      "end_byte": 398,
                      "text": "updateIndex + count - 1",
                      "children": [
                        {
                          "type": "binary_expression",
                          "start_byte": 375,
                          "end_byte": 394,
                          "text": "updateIndex + count",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 375,
                              "end_byte": 386,
                              "text": "updateIndex",
                              "children": []
                            },
                            {
                              "type": "+",
                              "start_byte": 387,
                              "end_byte": 388,
                              "text": "+",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 389,
                              "end_byte": 394,
                              "text": "count",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "-",
                          "start_byte": 395,
                          "end_byte": 396,
                          "text": "-",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 397,
                          "end_byte": 398,
                          "text": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 399,
                  "end_byte": 400,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "comma_expression",
                  "start_byte": 401,
                  "end_byte": 420,
                  "text": "i ++ , readIndex ++",
                  "children": [
                    {
                      "type": "update_expression",
                      "start_byte": 401,
                      "end_byte": 405,
                      "text": "i ++",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 401,
                          "end_byte": 402,
                          "text": "i",
                          "children": []
                        },
                        {
                          "type": "++",
                          "start_byte": 403,
                          "end_byte": 405,
                          "text": "++",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ",",
                      "start_byte": 406,
                      "end_byte": 407,
                      "text": ",",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 408,
                      "end_byte": 420,
                      "text": "readIndex ++",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 408,
                          "end_byte": 417,
                          "text": "readIndex",
                          "children": []
                        },
                        {
                          "type": "++",
                          "start_byte": 418,
                          "end_byte": 420,
                          "text": "++",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 421,
                  "end_byte": 422,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 423,
                  "end_byte": 553,
                  "text": "{ int n1 = numbers [ readIndex ] ; int n2 = numbers [ readIndex + 1 ] ; int toAdd = n1 > n2 ? n1 : n2 ; numbers [ i ] += toAdd ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 423,
                      "end_byte": 424,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 425,
                      "end_byte": 457,
                      "text": "int n1 = numbers [ readIndex ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 425,
                          "end_byte": 428,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 429,
                          "end_byte": 455,
                          "text": "n1 = numbers [ readIndex ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 429,
                              "end_byte": 431,
                              "text": "n1",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 432,
                              "end_byte": 433,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 434,
                              "end_byte": 455,
                              "text": "numbers [ readIndex ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 434,
                                  "end_byte": 441,
                                  "text": "numbers",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 442,
                                  "end_byte": 455,
                                  "text": "[ readIndex ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 442,
                                      "end_byte": 443,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 444,
                                      "end_byte": 453,
                                      "text": "readIndex",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 454,
                                      "end_byte": 455,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 456,
                          "end_byte": 457,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 458,
                      "end_byte": 494,
                      "text": "int n2 = numbers [ readIndex + 1 ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 458,
                          "end_byte": 461,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 462,
                          "end_byte": 492,
                          "text": "n2 = numbers [ readIndex + 1 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 462,
                              "end_byte": 464,
                              "text": "n2",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 465,
                              "end_byte": 466,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 467,
                              "end_byte": 492,
                              "text": "numbers [ readIndex + 1 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 467,
                                  "end_byte": 474,
                                  "text": "numbers",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 475,
                                  "end_byte": 492,
                                  "text": "[ readIndex + 1 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 475,
                                      "end_byte": 476,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 477,
                                      "end_byte": 490,
                                      "text": "readIndex + 1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 477,
                                          "end_byte": 486,
                                          "text": "readIndex",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 487,
                                          "end_byte": 488,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 489,
                                          "end_byte": 490,
                                          "text": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 491,
                                      "end_byte": 492,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 493,
                          "end_byte": 494,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 495,
                      "end_byte": 526,
                      "text": "int toAdd = n1 > n2 ? n1 : n2 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 495,
                          "end_byte": 498,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 499,
                          "end_byte": 524,
                          "text": "toAdd = n1 > n2 ? n1 : n2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 499,
                              "end_byte": 504,
                              "text": "toAdd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 505,
                              "end_byte": 506,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "conditional_expression",
                              "start_byte": 507,
                              "end_byte": 524,
                              "text": "n1 > n2 ? n1 : n2",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 507,
                                  "end_byte": 514,
                                  "text": "n1 > n2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 507,
                                      "end_byte": 509,
                                      "text": "n1",
                                      "children": []
                                    },
                                    {
                                      "type": ">",
                                      "start_byte": 510,
                                      "end_byte": 511,
                                      "text": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 512,
                                      "end_byte": 514,
                                      "text": "n2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "?",
                                  "start_byte": 515,
                                  "end_byte": 516,
                                  "text": "?",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 517,
                                  "end_byte": 519,
                                  "text": "n1",
                                  "children": []
                                },
                                {
                                  "type": ":",
                                  "start_byte": 520,
                                  "end_byte": 521,
                                  "text": ":",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 522,
                                  "end_byte": 524,
                                  "text": "n2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 525,
                          "end_byte": 526,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 527,
                      "end_byte": 551,
                      "text": "numbers [ i ] += toAdd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 527,
                          "end_byte": 549,
                          "text": "numbers [ i ] += toAdd",
                          "children": [
                            {
                              "type": "subscript_expression",
                              "start_byte": 527,
                              "end_byte": 540,
                              "text": "numbers [ i ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 527,
                                  "end_byte": 534,
                                  "text": "numbers",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 535,
                                  "end_byte": 540,
                                  "text": "[ i ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 535,
                                      "end_byte": 536,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 537,
                                      "end_byte": 538,
                                      "text": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 539,
                                      "end_byte": 540,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "+=",
                              "start_byte": 541,
                              "end_byte": 543,
                              "text": "+=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 544,
                              "end_byte": 549,
                              "text": "toAdd",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 550,
                          "end_byte": 551,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 552,
                      "end_byte": 553,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 554,
              "end_byte": 555,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 556,
      "end_byte": 1147,
      "text": "int main ( ) { int nCases , i , j , nLines , nNumbers ; scanf ( \"%d\" , & nCases ) ; for ( i = 0 ; i < nCases ; i ++ ) { scanf ( \"%d\" , & nLines ) ; nNumbers = ( nLines * ( nLines + 1 ) ) / 2 ; int numbers [ nNumbers ] ; for ( j = 0 ; j < nNumbers ; j ++ ) scanf ( \"%d\" , & numbers [ j ] ) ; int index = 0 , count = 1 ; while ( index != nNumbers ) { updateArray ( numbers , count ) ; index = index + count ; count ++ ; } int max = numbers [ 0 ] ; for ( j = nNumbers - nLines ; j < nNumbers ; j ++ ) { if ( numbers [ j ] > max ) max = numbers [ j ] ; } printf ( \"%d\\n\" , max ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 556,
          "end_byte": 559,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 560,
          "end_byte": 568,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 560,
              "end_byte": 564,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 565,
              "end_byte": 568,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 565,
                  "end_byte": 566,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 567,
                  "end_byte": 568,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 569,
          "end_byte": 1147,
          "text": "{ int nCases , i , j , nLines , nNumbers ; scanf ( \"%d\" , & nCases ) ; for ( i = 0 ; i < nCases ; i ++ ) { scanf ( \"%d\" , & nLines ) ; nNumbers = ( nLines * ( nLines + 1 ) ) / 2 ; int numbers [ nNumbers ] ; for ( j = 0 ; j < nNumbers ; j ++ ) scanf ( \"%d\" , & numbers [ j ] ) ; int index = 0 , count = 1 ; while ( index != nNumbers ) { updateArray ( numbers , count ) ; index = index + count ; count ++ ; } int max = numbers [ 0 ] ; for ( j = nNumbers - nLines ; j < nNumbers ; j ++ ) { if ( numbers [ j ] > max ) max = numbers [ j ] ; } printf ( \"%d\\n\" , max ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 569,
              "end_byte": 570,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 571,
              "end_byte": 611,
              "text": "int nCases , i , j , nLines , nNumbers ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 571,
                  "end_byte": 574,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 575,
                  "end_byte": 581,
                  "text": "nCases",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 582,
                  "end_byte": 583,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 584,
                  "end_byte": 585,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 586,
                  "end_byte": 587,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 588,
                  "end_byte": 589,
                  "text": "j",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 590,
                  "end_byte": 591,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 592,
                  "end_byte": 598,
                  "text": "nLines",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 599,
                  "end_byte": 600,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 601,
                  "end_byte": 609,
                  "text": "nNumbers",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 610,
                  "end_byte": 611,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 612,
              "end_byte": 639,
              "text": "scanf ( \"%d\" , & nCases ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 612,
                  "end_byte": 637,
                  "text": "scanf ( \"%d\" , & nCases )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 612,
                      "end_byte": 617,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 618,
                      "end_byte": 637,
                      "text": "( \"%d\" , & nCases )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 618,
                          "end_byte": 619,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 620,
                          "end_byte": 624,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 620,
                              "end_byte": 621,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 621,
                              "end_byte": 623,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 623,
                              "end_byte": 624,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 625,
                          "end_byte": 626,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 627,
                          "end_byte": 635,
                          "text": "& nCases",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 627,
                              "end_byte": 628,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 629,
                              "end_byte": 635,
                              "text": "nCases",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 636,
                          "end_byte": 637,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 638,
                  "end_byte": 639,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 640,
              "end_byte": 1134,
              "text": "for ( i = 0 ; i < nCases ; i ++ ) { scanf ( \"%d\" , & nLines ) ; nNumbers = ( nLines * ( nLines + 1 ) ) / 2 ; int numbers [ nNumbers ] ; for ( j = 0 ; j < nNumbers ; j ++ ) scanf ( \"%d\" , & numbers [ j ] ) ; int index = 0 , count = 1 ; while ( index != nNumbers ) { updateArray ( numbers , count ) ; index = index + count ; count ++ ; } int max = numbers [ 0 ] ; for ( j = nNumbers - nLines ; j < nNumbers ; j ++ ) { if ( numbers [ j ] > max ) max = numbers [ j ] ; } printf ( \"%d\\n\" , max ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 640,
                  "end_byte": 643,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 644,
                  "end_byte": 645,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 646,
                  "end_byte": 651,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 646,
                      "end_byte": 647,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 648,
                      "end_byte": 649,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 650,
                      "end_byte": 651,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 652,
                  "end_byte": 653,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 654,
                  "end_byte": 664,
                  "text": "i < nCases",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 654,
                      "end_byte": 655,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 656,
                      "end_byte": 657,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 658,
                      "end_byte": 664,
                      "text": "nCases",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 665,
                  "end_byte": 666,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 667,
                  "end_byte": 671,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 667,
                      "end_byte": 668,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 669,
                      "end_byte": 671,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 672,
                  "end_byte": 673,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 674,
                  "end_byte": 1134,
                  "text": "{ scanf ( \"%d\" , & nLines ) ; nNumbers = ( nLines * ( nLines + 1 ) ) / 2 ; int numbers [ nNumbers ] ; for ( j = 0 ; j < nNumbers ; j ++ ) scanf ( \"%d\" , & numbers [ j ] ) ; int index = 0 , count = 1 ; while ( index != nNumbers ) { updateArray ( numbers , count ) ; index = index + count ; count ++ ; } int max = numbers [ 0 ] ; for ( j = nNumbers - nLines ; j < nNumbers ; j ++ ) { if ( numbers [ j ] > max ) max = numbers [ j ] ; } printf ( \"%d\\n\" , max ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 674,
                      "end_byte": 675,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 676,
                      "end_byte": 703,
                      "text": "scanf ( \"%d\" , & nLines ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 676,
                          "end_byte": 701,
                          "text": "scanf ( \"%d\" , & nLines )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 676,
                              "end_byte": 681,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 682,
                              "end_byte": 701,
                              "text": "( \"%d\" , & nLines )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 682,
                                  "end_byte": 683,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 684,
                                  "end_byte": 688,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 684,
                                      "end_byte": 685,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 685,
                                      "end_byte": 687,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 687,
                                      "end_byte": 688,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 689,
                                  "end_byte": 690,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 691,
                                  "end_byte": 699,
                                  "text": "& nLines",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 691,
                                      "end_byte": 692,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 693,
                                      "end_byte": 699,
                                      "text": "nLines",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 700,
                                  "end_byte": 701,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 702,
                          "end_byte": 703,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 704,
                      "end_byte": 748,
                      "text": "nNumbers = ( nLines * ( nLines + 1 ) ) / 2 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 704,
                          "end_byte": 746,
                          "text": "nNumbers = ( nLines * ( nLines + 1 ) ) / 2",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 704,
                              "end_byte": 712,
                              "text": "nNumbers",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 713,
                              "end_byte": 714,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 715,
                              "end_byte": 746,
                              "text": "( nLines * ( nLines + 1 ) ) / 2",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 715,
                                  "end_byte": 742,
                                  "text": "( nLines * ( nLines + 1 ) )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 715,
                                      "end_byte": 716,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 717,
                                      "end_byte": 740,
                                      "text": "nLines * ( nLines + 1 )",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 717,
                                          "end_byte": 723,
                                          "text": "nLines",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 724,
                                          "end_byte": 725,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "parenthesized_expression",
                                          "start_byte": 726,
                                          "end_byte": 740,
                                          "text": "( nLines + 1 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 726,
                                              "end_byte": 727,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 728,
                                              "end_byte": 738,
                                              "text": "nLines + 1",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 728,
                                                  "end_byte": 734,
                                                  "text": "nLines",
                                                  "children": []
                                                },
                                                {
                                                  "type": "+",
                                                  "start_byte": 735,
                                                  "end_byte": 736,
                                                  "text": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 737,
                                                  "end_byte": 738,
                                                  "text": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 739,
                                              "end_byte": 740,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 741,
                                      "end_byte": 742,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 743,
                                  "end_byte": 744,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 745,
                                  "end_byte": 746,
                                  "text": "2",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 747,
                          "end_byte": 748,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 749,
                      "end_byte": 775,
                      "text": "int numbers [ nNumbers ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 749,
                          "end_byte": 752,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "array_declarator",
                          "start_byte": 753,
                          "end_byte": 773,
                          "text": "numbers [ nNumbers ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 753,
                              "end_byte": 760,
                              "text": "numbers",
                              "children": []
                            },
                            {
                              "type": "[",
                              "start_byte": 761,
                              "end_byte": 762,
                              "text": "[",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 763,
                              "end_byte": 771,
                              "text": "nNumbers",
                              "children": []
                            },
                            {
                              "type": "]",
                              "start_byte": 772,
                              "end_byte": 773,
                              "text": "]",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 774,
                          "end_byte": 775,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 776,
                      "end_byte": 846,
                      "text": "for ( j = 0 ; j < nNumbers ; j ++ ) scanf ( \"%d\" , & numbers [ j ] ) ;",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 776,
                          "end_byte": 779,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 780,
                          "end_byte": 781,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 782,
                          "end_byte": 787,
                          "text": "j = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 782,
                              "end_byte": 783,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 784,
                              "end_byte": 785,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 786,
                              "end_byte": 787,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 788,
                          "end_byte": 789,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 790,
                          "end_byte": 802,
                          "text": "j < nNumbers",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 790,
                              "end_byte": 791,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 792,
                              "end_byte": 793,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 794,
                              "end_byte": 802,
                              "text": "nNumbers",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 803,
                          "end_byte": 804,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 805,
                          "end_byte": 809,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 805,
                              "end_byte": 806,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 807,
                              "end_byte": 809,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 810,
                          "end_byte": 811,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 812,
                          "end_byte": 846,
                          "text": "scanf ( \"%d\" , & numbers [ j ] ) ;",
                          "children": [
                            {
                              "type": "call_expression",
                              "start_byte": 812,
                              "end_byte": 844,
                              "text": "scanf ( \"%d\" , & numbers [ j ] )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 812,
                                  "end_byte": 817,
                                  "text": "scanf",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 818,
                                  "end_byte": 844,
                                  "text": "( \"%d\" , & numbers [ j ] )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 818,
                                      "end_byte": 819,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "string_literal",
                                      "start_byte": 820,
                                      "end_byte": 824,
                                      "text": "\"%d\"",
                                      "children": [
                                        {
                                          "type": "\"",
                                          "start_byte": 820,
                                          "end_byte": 821,
                                          "text": "\"",
                                          "children": []
                                        },
                                        {
                                          "type": "string_content",
                                          "start_byte": 821,
                                          "end_byte": 823,
                                          "text": "%d",
                                          "children": []
                                        },
                                        {
                                          "type": "\"",
                                          "start_byte": 823,
                                          "end_byte": 824,
                                          "text": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 825,
                                      "end_byte": 826,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "pointer_expression",
                                      "start_byte": 827,
                                      "end_byte": 842,
                                      "text": "& numbers [ j ]",
                                      "children": [
                                        {
                                          "type": "&",
                                          "start_byte": 827,
                                          "end_byte": 828,
                                          "text": "&",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 829,
                                          "end_byte": 842,
                                          "text": "numbers [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 829,
                                              "end_byte": 836,
                                              "text": "numbers",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 837,
                                              "end_byte": 842,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 837,
                                                  "end_byte": 838,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 839,
                                                  "end_byte": 840,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 841,
                                                  "end_byte": 842,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 843,
                                      "end_byte": 844,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 845,
                              "end_byte": 846,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 847,
                      "end_byte": 874,
                      "text": "int index = 0 , count = 1 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 847,
                          "end_byte": 850,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 851,
                          "end_byte": 860,
                          "text": "index = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 851,
                              "end_byte": 856,
                              "text": "index",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 857,
                              "end_byte": 858,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 859,
                              "end_byte": 860,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 861,
                          "end_byte": 862,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 863,
                          "end_byte": 872,
                          "text": "count = 1",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 863,
                              "end_byte": 868,
                              "text": "count",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 869,
                              "end_byte": 870,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 871,
                              "end_byte": 872,
                              "text": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 873,
                          "end_byte": 874,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 875,
                      "end_byte": 975,
                      "text": "while ( index != nNumbers ) { updateArray ( numbers , count ) ; index = index + count ; count ++ ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 875,
                          "end_byte": 880,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 881,
                          "end_byte": 902,
                          "text": "( index != nNumbers )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 881,
                              "end_byte": 882,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 883,
                              "end_byte": 900,
                              "text": "index != nNumbers",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 883,
                                  "end_byte": 888,
                                  "text": "index",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 889,
                                  "end_byte": 891,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 892,
                                  "end_byte": 900,
                                  "text": "nNumbers",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 901,
                              "end_byte": 902,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 903,
                          "end_byte": 975,
                          "text": "{ updateArray ( numbers , count ) ; index = index + count ; count ++ ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 903,
                              "end_byte": 904,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 905,
                              "end_byte": 938,
                              "text": "updateArray ( numbers , count ) ;",
                              "children": [
                                {
                                  "type": "call_expression",
                                  "start_byte": 905,
                                  "end_byte": 936,
                                  "text": "updateArray ( numbers , count )",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 905,
                                      "end_byte": 916,
                                      "text": "updateArray",
                                      "children": []
                                    },
                                    {
                                      "type": "argument_list",
                                      "start_byte": 917,
                                      "end_byte": 936,
                                      "text": "( numbers , count )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 917,
                                          "end_byte": 918,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 919,
                                          "end_byte": 926,
                                          "text": "numbers",
                                          "children": []
                                        },
                                        {
                                          "type": ",",
                                          "start_byte": 927,
                                          "end_byte": 928,
                                          "text": ",",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 929,
                                          "end_byte": 934,
                                          "text": "count",
                                          "children": []
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 935,
                                          "end_byte": 936,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 937,
                                  "end_byte": 938,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 939,
                              "end_byte": 962,
                              "text": "index = index + count ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 939,
                                  "end_byte": 960,
                                  "text": "index = index + count",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 939,
                                      "end_byte": 944,
                                      "text": "index",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 945,
                                      "end_byte": 946,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 947,
                                      "end_byte": 960,
                                      "text": "index + count",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 947,
                                          "end_byte": 952,
                                          "text": "index",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 953,
                                          "end_byte": 954,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 955,
                                          "end_byte": 960,
                                          "text": "count",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 961,
                                  "end_byte": 962,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 963,
                              "end_byte": 973,
                              "text": "count ++ ;",
                              "children": [
                                {
                                  "type": "update_expression",
                                  "start_byte": 963,
                                  "end_byte": 971,
                                  "text": "count ++",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 963,
                                      "end_byte": 968,
                                      "text": "count",
                                      "children": []
                                    },
                                    {
                                      "type": "++",
                                      "start_byte": 969,
                                      "end_byte": 971,
                                      "text": "++",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 972,
                                  "end_byte": 973,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 974,
                              "end_byte": 975,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "declaration",
                      "start_byte": 976,
                      "end_byte": 1001,
                      "text": "int max = numbers [ 0 ] ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 976,
                          "end_byte": 979,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 980,
                          "end_byte": 999,
                          "text": "max = numbers [ 0 ]",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 980,
                              "end_byte": 983,
                              "text": "max",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 984,
                              "end_byte": 985,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "subscript_expression",
                              "start_byte": 986,
                              "end_byte": 999,
                              "text": "numbers [ 0 ]",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 986,
                                  "end_byte": 993,
                                  "text": "numbers",
                                  "children": []
                                },
                                {
                                  "type": "subscript_argument_list",
                                  "start_byte": 994,
                                  "end_byte": 999,
                                  "text": "[ 0 ]",
                                  "children": [
                                    {
                                      "type": "[",
                                      "start_byte": 994,
                                      "end_byte": 995,
                                      "text": "[",
                                      "children": []
                                    },
                                    {
                                      "type": "number_literal",
                                      "start_byte": 996,
                                      "end_byte": 997,
                                      "text": "0",
                                      "children": []
                                    },
                                    {
                                      "type": "]",
                                      "start_byte": 998,
                                      "end_byte": 999,
                                      "text": "]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1000,
                          "end_byte": 1001,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "for_statement",
                      "start_byte": 1002,
                      "end_byte": 1106,
                      "text": "for ( j = nNumbers - nLines ; j < nNumbers ; j ++ ) { if ( numbers [ j ] > max ) max = numbers [ j ] ; }",
                      "children": [
                        {
                          "type": "for",
                          "start_byte": 1002,
                          "end_byte": 1005,
                          "text": "for",
                          "children": []
                        },
                        {
                          "type": "(",
                          "start_byte": 1006,
                          "end_byte": 1007,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "assignment_expression",
                          "start_byte": 1008,
                          "end_byte": 1029,
                          "text": "j = nNumbers - nLines",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1008,
                              "end_byte": 1009,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 1010,
                              "end_byte": 1011,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 1012,
                              "end_byte": 1029,
                              "text": "nNumbers - nLines",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 1012,
                                  "end_byte": 1020,
                                  "text": "nNumbers",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 1021,
                                  "end_byte": 1022,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1023,
                                  "end_byte": 1029,
                                  "text": "nLines",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1030,
                          "end_byte": 1031,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "binary_expression",
                          "start_byte": 1032,
                          "end_byte": 1044,
                          "text": "j < nNumbers",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1032,
                              "end_byte": 1033,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "<",
                              "start_byte": 1034,
                              "end_byte": 1035,
                              "text": "<",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 1036,
                              "end_byte": 1044,
                              "text": "nNumbers",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1045,
                          "end_byte": 1046,
                          "text": ";",
                          "children": []
                        },
                        {
                          "type": "update_expression",
                          "start_byte": 1047,
                          "end_byte": 1051,
                          "text": "j ++",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1047,
                              "end_byte": 1048,
                              "text": "j",
                              "children": []
                            },
                            {
                              "type": "++",
                              "start_byte": 1049,
                              "end_byte": 1051,
                              "text": "++",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 1052,
                          "end_byte": 1053,
                          "text": ")",
                          "children": []
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 1054,
                          "end_byte": 1106,
                          "text": "{ if ( numbers [ j ] > max ) max = numbers [ j ] ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 1054,
                              "end_byte": 1055,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 1056,
                              "end_byte": 1104,
                              "text": "if ( numbers [ j ] > max ) max = numbers [ j ] ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 1056,
                                  "end_byte": 1058,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 1059,
                                  "end_byte": 1082,
                                  "text": "( numbers [ j ] > max )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 1059,
                                      "end_byte": 1060,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 1061,
                                      "end_byte": 1080,
                                      "text": "numbers [ j ] > max",
                                      "children": [
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1061,
                                          "end_byte": 1074,
                                          "text": "numbers [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1061,
                                              "end_byte": 1068,
                                              "text": "numbers",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1069,
                                              "end_byte": 1074,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1069,
                                                  "end_byte": 1070,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1071,
                                                  "end_byte": 1072,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1073,
                                                  "end_byte": 1074,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ">",
                                          "start_byte": 1075,
                                          "end_byte": 1076,
                                          "text": ">",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 1077,
                                          "end_byte": 1080,
                                          "text": "max",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 1081,
                                      "end_byte": 1082,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 1083,
                                  "end_byte": 1104,
                                  "text": "max = numbers [ j ] ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 1083,
                                      "end_byte": 1102,
                                      "text": "max = numbers [ j ]",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 1083,
                                          "end_byte": 1086,
                                          "text": "max",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 1087,
                                          "end_byte": 1088,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "subscript_expression",
                                          "start_byte": 1089,
                                          "end_byte": 1102,
                                          "text": "numbers [ j ]",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 1089,
                                              "end_byte": 1096,
                                              "text": "numbers",
                                              "children": []
                                            },
                                            {
                                              "type": "subscript_argument_list",
                                              "start_byte": 1097,
                                              "end_byte": 1102,
                                              "text": "[ j ]",
                                              "children": [
                                                {
                                                  "type": "[",
                                                  "start_byte": 1097,
                                                  "end_byte": 1098,
                                                  "text": "[",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 1099,
                                                  "end_byte": 1100,
                                                  "text": "j",
                                                  "children": []
                                                },
                                                {
                                                  "type": "]",
                                                  "start_byte": 1101,
                                                  "end_byte": 1102,
                                                  "text": "]",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 1103,
                                      "end_byte": 1104,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 1105,
                              "end_byte": 1106,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 1107,
                      "end_byte": 1132,
                      "text": "printf ( \"%d\\n\" , max ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 1107,
                          "end_byte": 1130,
                          "text": "printf ( \"%d\\n\" , max )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 1107,
                              "end_byte": 1113,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 1114,
                              "end_byte": 1130,
                              "text": "( \"%d\\n\" , max )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 1114,
                                  "end_byte": 1115,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 1116,
                                  "end_byte": 1122,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 1116,
                                      "end_byte": 1117,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 1117,
                                      "end_byte": 1119,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 1119,
                                      "end_byte": 1121,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 1121,
                                      "end_byte": 1122,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 1123,
                                  "end_byte": 1124,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 1125,
                                  "end_byte": 1128,
                                  "text": "max",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 1129,
                                  "end_byte": 1130,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 1131,
                          "end_byte": 1132,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 1133,
                      "end_byte": 1134,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 1135,
              "end_byte": 1145,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 1135,
                  "end_byte": 1141,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 1142,
                  "end_byte": 1143,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 1144,
                  "end_byte": 1145,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 1146,
              "end_byte": 1147,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}