{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 520,
  "text": "int main ( ) { int n , a , b , numerator , denominator , gcd , lcm , remainder ; scanf ( \"%d\" , & n ) ; while ( n -- ) { scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( a * b ) / gcd ; printf ( \"%d     %d\\n\" , gcd , lcm ) ; gcd = 0 ; lcm = 0 ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 520,
      "text": "int main ( ) { int n , a , b , numerator , denominator , gcd , lcm , remainder ; scanf ( \"%d\" , & n ) ; while ( n -- ) { scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( a * b ) / gcd ; printf ( \"%d     %d\\n\" , gcd , lcm ) ; gcd = 0 ; lcm = 0 ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 520,
          "text": "{ int n , a , b , numerator , denominator , gcd , lcm , remainder ; scanf ( \"%d\" , & n ) ; while ( n -- ) { scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( a * b ) / gcd ; printf ( \"%d     %d\\n\" , gcd , lcm ) ; gcd = 0 ; lcm = 0 ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 80,
              "text": "int n , a , b , numerator , denominator , gcd , lcm , remainder ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 27,
                  "end_byte": 28,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 29,
                  "end_byte": 30,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 31,
                  "end_byte": 40,
                  "text": "numerator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 43,
                  "end_byte": 54,
                  "text": "denominator",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 57,
                  "end_byte": 60,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 61,
                  "end_byte": 62,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 63,
                  "end_byte": 66,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 69,
                  "end_byte": 78,
                  "text": "remainder",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 79,
                  "end_byte": 80,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 81,
              "end_byte": 103,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 81,
                  "end_byte": 101,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 81,
                      "end_byte": 86,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 87,
                      "end_byte": 101,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 87,
                          "end_byte": 88,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 89,
                          "end_byte": 93,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 89,
                              "end_byte": 90,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 90,
                              "end_byte": 92,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 92,
                              "end_byte": 93,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 94,
                          "end_byte": 95,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 96,
                          "end_byte": 99,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 96,
                              "end_byte": 97,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 98,
                              "end_byte": 99,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 102,
                  "end_byte": 103,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 104,
              "end_byte": 507,
              "text": "while ( n -- ) { scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( a * b ) / gcd ; printf ( \"%d     %d\\n\" , gcd , lcm ) ; gcd = 0 ; lcm = 0 ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 104,
                  "end_byte": 109,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 110,
                  "end_byte": 118,
                  "text": "( n -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 110,
                      "end_byte": 111,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 112,
                      "end_byte": 116,
                      "text": "n --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 114,
                          "end_byte": 116,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 117,
                      "end_byte": 118,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 119,
                  "end_byte": 507,
                  "text": "{ scanf ( \"%d%d\" , & a , & b ) ; if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( a * b ) / gcd ; printf ( \"%d     %d\\n\" , gcd , lcm ) ; gcd = 0 ; lcm = 0 ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 121,
                      "end_byte": 151,
                      "text": "scanf ( \"%d%d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 121,
                          "end_byte": 149,
                          "text": "scanf ( \"%d%d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 121,
                              "end_byte": 126,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 127,
                              "end_byte": 149,
                              "text": "( \"%d%d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 127,
                                  "end_byte": 128,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 129,
                                  "end_byte": 135,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 129,
                                      "end_byte": 130,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 130,
                                      "end_byte": 134,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 134,
                                      "end_byte": 135,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 136,
                                  "end_byte": 137,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 138,
                                  "end_byte": 141,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 138,
                                      "end_byte": 139,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 140,
                                      "end_byte": 141,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 142,
                                  "end_byte": 143,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 144,
                                  "end_byte": 147,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 144,
                                      "end_byte": 145,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 146,
                                      "end_byte": 147,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 148,
                                  "end_byte": 149,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 150,
                          "end_byte": 151,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 152,
                      "end_byte": 245,
                      "text": "if ( a > b ) { numerator = a ; denominator = b ; } else { numerator = b ; denominator = a ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 152,
                          "end_byte": 154,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 155,
                          "end_byte": 164,
                          "text": "( a > b )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 155,
                              "end_byte": 156,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 157,
                              "end_byte": 162,
                              "text": "a > b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 157,
                                  "end_byte": 158,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 159,
                                  "end_byte": 160,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 161,
                                  "end_byte": 162,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 163,
                              "end_byte": 164,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 165,
                          "end_byte": 202,
                          "text": "{ numerator = a ; denominator = b ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 165,
                              "end_byte": 166,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 167,
                              "end_byte": 182,
                              "text": "numerator = a ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 167,
                                  "end_byte": 180,
                                  "text": "numerator = a",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 167,
                                      "end_byte": 176,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 177,
                                      "end_byte": 178,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 179,
                                      "end_byte": 180,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 181,
                                  "end_byte": 182,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 183,
                              "end_byte": 200,
                              "text": "denominator = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 183,
                                  "end_byte": 198,
                                  "text": "denominator = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 183,
                                      "end_byte": 194,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 195,
                                      "end_byte": 196,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 197,
                                      "end_byte": 198,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 199,
                                  "end_byte": 200,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 201,
                              "end_byte": 202,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 203,
                          "end_byte": 245,
                          "text": "else { numerator = b ; denominator = a ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 203,
                              "end_byte": 207,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 208,
                              "end_byte": 245,
                              "text": "{ numerator = b ; denominator = a ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 208,
                                  "end_byte": 209,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 210,
                                  "end_byte": 225,
                                  "text": "numerator = b ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 210,
                                      "end_byte": 223,
                                      "text": "numerator = b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 210,
                                          "end_byte": 219,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 220,
                                          "end_byte": 221,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 222,
                                          "end_byte": 223,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 224,
                                      "end_byte": 225,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 226,
                                  "end_byte": 243,
                                  "text": "denominator = a ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 226,
                                      "end_byte": 241,
                                      "text": "denominator = a",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 226,
                                          "end_byte": 237,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 238,
                                          "end_byte": 239,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 240,
                                          "end_byte": 241,
                                          "text": "a",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 242,
                                      "end_byte": 243,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 244,
                                  "end_byte": 245,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 246,
                      "end_byte": 283,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 246,
                          "end_byte": 281,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 246,
                              "end_byte": 255,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 256,
                              "end_byte": 257,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 258,
                              "end_byte": 281,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 258,
                                  "end_byte": 267,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 268,
                                  "end_byte": 269,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 270,
                                  "end_byte": 281,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 282,
                          "end_byte": 283,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 284,
                      "end_byte": 402,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 284,
                          "end_byte": 289,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 290,
                          "end_byte": 308,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 290,
                              "end_byte": 291,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 292,
                              "end_byte": 306,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 292,
                                  "end_byte": 301,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 302,
                                  "end_byte": 304,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 307,
                              "end_byte": 308,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 309,
                          "end_byte": 402,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 311,
                              "end_byte": 336,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 311,
                                  "end_byte": 334,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 311,
                                      "end_byte": 320,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 321,
                                      "end_byte": 322,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 323,
                                      "end_byte": 334,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 335,
                                  "end_byte": 336,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 337,
                              "end_byte": 362,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 337,
                                  "end_byte": 360,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 337,
                                      "end_byte": 348,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 349,
                                      "end_byte": 350,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 351,
                                      "end_byte": 360,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 361,
                                  "end_byte": 362,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 363,
                              "end_byte": 400,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 363,
                                  "end_byte": 398,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 363,
                                      "end_byte": 372,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 373,
                                      "end_byte": 374,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 375,
                                      "end_byte": 398,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 375,
                                          "end_byte": 384,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 385,
                                          "end_byte": 386,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 387,
                                          "end_byte": 398,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 399,
                                  "end_byte": 400,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 401,
                              "end_byte": 402,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 403,
                      "end_byte": 422,
                      "text": "gcd = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 403,
                          "end_byte": 420,
                          "text": "gcd = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 403,
                              "end_byte": 406,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 407,
                              "end_byte": 408,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 409,
                              "end_byte": 420,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 421,
                          "end_byte": 422,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 423,
                      "end_byte": 446,
                      "text": "lcm = ( a * b ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 423,
                          "end_byte": 444,
                          "text": "lcm = ( a * b ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 423,
                              "end_byte": 426,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 427,
                              "end_byte": 428,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 429,
                              "end_byte": 444,
                              "text": "( a * b ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 429,
                                  "end_byte": 438,
                                  "text": "( a * b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 429,
                                      "end_byte": 430,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 431,
                                      "end_byte": 436,
                                      "text": "a * b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 431,
                                          "end_byte": 432,
                                          "text": "a",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 433,
                                          "end_byte": 434,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 435,
                                          "end_byte": 436,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 437,
                                      "end_byte": 438,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 439,
                                  "end_byte": 440,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 441,
                                  "end_byte": 444,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 445,
                          "end_byte": 446,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 447,
                      "end_byte": 485,
                      "text": "printf ( \"%d     %d\\n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 447,
                          "end_byte": 483,
                          "text": "printf ( \"%d     %d\\n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 447,
                              "end_byte": 453,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 454,
                              "end_byte": 483,
                              "text": "( \"%d     %d\\n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 454,
                                  "end_byte": 455,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 456,
                                  "end_byte": 469,
                                  "text": "\"%d     %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 456,
                                      "end_byte": 457,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 457,
                                      "end_byte": 466,
                                      "text": "%d     %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 466,
                                      "end_byte": 468,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 468,
                                      "end_byte": 469,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 470,
                                  "end_byte": 471,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 472,
                                  "end_byte": 475,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 476,
                                  "end_byte": 477,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 478,
                                  "end_byte": 481,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 482,
                                  "end_byte": 483,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 484,
                          "end_byte": 485,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 486,
                      "end_byte": 495,
                      "text": "gcd = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 486,
                          "end_byte": 493,
                          "text": "gcd = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 486,
                              "end_byte": 489,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 490,
                              "end_byte": 491,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 492,
                              "end_byte": 493,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 494,
                          "end_byte": 495,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 496,
                      "end_byte": 505,
                      "text": "lcm = 0 ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 496,
                          "end_byte": 503,
                          "text": "lcm = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 496,
                              "end_byte": 499,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 500,
                              "end_byte": 501,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 502,
                              "end_byte": 503,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 504,
                          "end_byte": 505,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 506,
                      "end_byte": 507,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 508,
              "end_byte": 518,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 508,
                  "end_byte": 514,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 515,
                  "end_byte": 516,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 517,
                  "end_byte": 518,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 519,
              "end_byte": 520,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}