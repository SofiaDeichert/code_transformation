unsigned int funcRec ( unsigned int arr [ 100 ] [ 100 ] , unsigned int rowNum , unsigned int colNum , unsigned int maxRow ) { if ( rowNum == maxRow ) return arr [ rowNum ] [ colNum ] ; else { unsigned int r1 = funcRec ( arr , rowNum + 1 , colNum , maxRow ) ; unsigned int r2 = funcRec ( arr , rowNum + 1 , colNum + 1 , maxRow ) ; if ( r1 > r2 ) return r1 + arr [ rowNum ] [ colNum ] ; else return r2 + arr [ rowNum ] [ colNum ] ; } } main ( ) { unsigned int arr [ 50 ] [ 100 ] [ 100 ] ; int arrTest [ 200 ] ; int arrTestCount = 0 ; int testCases ; scanf ( "%d" , & testCases ) ; int temp = 0 ; int arrSize ; int i ; int j ; while ( temp < testCases ) { i = 0 ; j = 0 ; scanf ( "%d" , & arrSize ) ; arrTest [ arrTestCount ] = arrSize - 1 ; arrTestCount ++ ; for ( ; i < arrSize ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & arr [ temp ] [ i ] [ j ] ) ; } temp ++ ; } for ( i = 0 ; i < testCases ; i ++ ) { printf ( "%d\n" , funcRec ( arr [ i ] , 0 , 0 , arrTest [ i ] ) ) ; } }