{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 622,
  "text": "int HCF ( int , int ) ; int LCM ( int , int ) ; int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int a , b , x , y ; scanf ( \"%d%d\" , & a , & b ) ; x = HCF ( a , b ) ; y = LCM ( a , b ) ; printf ( \"%d  %d\\n\" , x , y ) ; } return 0 ; } int HCF ( int n , int m ) { if ( n > m ) return HCF ( n - m , m ) ; else if ( n < m ) return HCF ( n , m - n ) ; else if ( n == m ) return n ; } int LCM ( int p , int q ) { int i = 1 ; if ( p > q ) { while ( ( p * i ) % q != 0 ) i ++ ; p = p * i ; return p ; } else if ( q > p ) { while ( ( q * i ) % p != 0 ) i ++ ; q = q * i ; return q ; } else if ( p == q ) return p ; }",
  "children": [
    {
      "type": "declaration",
      "start_byte": 0,
      "end_byte": 23,
      "text": "int HCF ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 21,
          "text": "HCF ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 7,
              "text": "HCF",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 8,
              "end_byte": 21,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 8,
                  "end_byte": 9,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 10,
                  "end_byte": 13,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 10,
                      "end_byte": 13,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 16,
                  "end_byte": 19,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 16,
                      "end_byte": 19,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 20,
                  "end_byte": 21,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 22,
          "end_byte": 23,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "declaration",
      "start_byte": 24,
      "end_byte": 47,
      "text": "int LCM ( int , int ) ;",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 24,
          "end_byte": 27,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 28,
          "end_byte": 45,
          "text": "LCM ( int , int )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 28,
              "end_byte": 31,
              "text": "LCM",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 32,
              "end_byte": 45,
              "text": "( int , int )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 34,
                  "end_byte": 37,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 34,
                      "end_byte": 37,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 38,
                  "end_byte": 39,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 40,
                  "end_byte": 43,
                  "text": "int",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 40,
                      "end_byte": 43,
                      "text": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": ";",
          "start_byte": 46,
          "end_byte": 47,
          "text": ";",
          "children": []
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 48,
      "end_byte": 248,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int a , b , x , y ; scanf ( \"%d%d\" , & a , & b ) ; x = HCF ( a , b ) ; y = LCM ( a , b ) ; printf ( \"%d  %d\\n\" , x , y ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 48,
          "end_byte": 51,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 52,
          "end_byte": 60,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 52,
              "end_byte": 56,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 57,
              "end_byte": 60,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 59,
                  "end_byte": 60,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 61,
          "end_byte": 248,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int a , b , x , y ; scanf ( \"%d%d\" , & a , & b ) ; x = HCF ( a , b ) ; y = LCM ( a , b ) ; printf ( \"%d  %d\\n\" , x , y ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 61,
              "end_byte": 62,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 63,
              "end_byte": 70,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 63,
                  "end_byte": 66,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 67,
                  "end_byte": 68,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 69,
                  "end_byte": 70,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 71,
              "end_byte": 93,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 71,
                  "end_byte": 91,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 71,
                      "end_byte": 76,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 77,
                      "end_byte": 91,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 77,
                          "end_byte": 78,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 79,
                          "end_byte": 83,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 79,
                              "end_byte": 80,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 80,
                              "end_byte": 82,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 82,
                              "end_byte": 83,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 84,
                          "end_byte": 85,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 86,
                          "end_byte": 89,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 86,
                              "end_byte": 87,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 88,
                              "end_byte": 89,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 90,
                          "end_byte": 91,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 92,
                  "end_byte": 93,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 94,
              "end_byte": 235,
              "text": "while ( t -- ) { int a , b , x , y ; scanf ( \"%d%d\" , & a , & b ) ; x = HCF ( a , b ) ; y = LCM ( a , b ) ; printf ( \"%d  %d\\n\" , x , y ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 94,
                  "end_byte": 99,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 100,
                  "end_byte": 108,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 100,
                      "end_byte": 101,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 102,
                      "end_byte": 106,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 104,
                          "end_byte": 106,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 109,
                  "end_byte": 235,
                  "text": "{ int a , b , x , y ; scanf ( \"%d%d\" , & a , & b ) ; x = HCF ( a , b ) ; y = LCM ( a , b ) ; printf ( \"%d  %d\\n\" , x , y ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 109,
                      "end_byte": 110,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 111,
                      "end_byte": 130,
                      "text": "int a , b , x , y ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 111,
                          "end_byte": 114,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 115,
                          "end_byte": 116,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 119,
                          "end_byte": 120,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 121,
                          "end_byte": 122,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 123,
                          "end_byte": 124,
                          "text": "x",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 125,
                          "end_byte": 126,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 127,
                          "end_byte": 128,
                          "text": "y",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 129,
                          "end_byte": 130,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 131,
                      "end_byte": 161,
                      "text": "scanf ( \"%d%d\" , & a , & b ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 131,
                          "end_byte": 159,
                          "text": "scanf ( \"%d%d\" , & a , & b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 131,
                              "end_byte": 136,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 137,
                              "end_byte": 159,
                              "text": "( \"%d%d\" , & a , & b )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 137,
                                  "end_byte": 138,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 139,
                                  "end_byte": 145,
                                  "text": "\"%d%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 139,
                                      "end_byte": 140,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 140,
                                      "end_byte": 144,
                                      "text": "%d%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 144,
                                      "end_byte": 145,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 146,
                                  "end_byte": 147,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 148,
                                  "end_byte": 151,
                                  "text": "& a",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 148,
                                      "end_byte": 149,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 150,
                                      "end_byte": 151,
                                      "text": "a",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 152,
                                  "end_byte": 153,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 154,
                                  "end_byte": 157,
                                  "text": "& b",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 154,
                                      "end_byte": 155,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 156,
                                      "end_byte": 157,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 158,
                                  "end_byte": 159,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 160,
                          "end_byte": 161,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 162,
                      "end_byte": 181,
                      "text": "x = HCF ( a , b ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 162,
                          "end_byte": 179,
                          "text": "x = HCF ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 162,
                              "end_byte": 163,
                              "text": "x",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 164,
                              "end_byte": 165,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 166,
                              "end_byte": 179,
                              "text": "HCF ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 166,
                                  "end_byte": 169,
                                  "text": "HCF",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 170,
                                  "end_byte": 179,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 170,
                                      "end_byte": 171,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 172,
                                      "end_byte": 173,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 178,
                                      "end_byte": 179,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 180,
                          "end_byte": 181,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 182,
                      "end_byte": 201,
                      "text": "y = LCM ( a , b ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 182,
                          "end_byte": 199,
                          "text": "y = LCM ( a , b )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 182,
                              "end_byte": 183,
                              "text": "y",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 184,
                              "end_byte": 185,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 186,
                              "end_byte": 199,
                              "text": "LCM ( a , b )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 186,
                                  "end_byte": 189,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 190,
                                  "end_byte": 199,
                                  "text": "( a , b )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 190,
                                      "end_byte": 191,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 192,
                                      "end_byte": 193,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 194,
                                      "end_byte": 195,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 196,
                                      "end_byte": 197,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 198,
                                      "end_byte": 199,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 200,
                          "end_byte": 201,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 202,
                      "end_byte": 233,
                      "text": "printf ( \"%d  %d\\n\" , x , y ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 202,
                          "end_byte": 231,
                          "text": "printf ( \"%d  %d\\n\" , x , y )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 202,
                              "end_byte": 208,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 209,
                              "end_byte": 231,
                              "text": "( \"%d  %d\\n\" , x , y )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 209,
                                  "end_byte": 210,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 211,
                                  "end_byte": 221,
                                  "text": "\"%d  %d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 211,
                                      "end_byte": 212,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 212,
                                      "end_byte": 218,
                                      "text": "%d  %d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 218,
                                      "end_byte": 220,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 220,
                                      "end_byte": 221,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 222,
                                  "end_byte": 223,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 224,
                                  "end_byte": 225,
                                  "text": "x",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 226,
                                  "end_byte": 227,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 228,
                                  "end_byte": 229,
                                  "text": "y",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 230,
                                  "end_byte": 231,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 232,
                          "end_byte": 233,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 234,
                      "end_byte": 235,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 236,
              "end_byte": 246,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 236,
                  "end_byte": 242,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 243,
                  "end_byte": 244,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 245,
                  "end_byte": 246,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 247,
              "end_byte": 248,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 249,
      "end_byte": 393,
      "text": "int HCF ( int n , int m ) { if ( n > m ) return HCF ( n - m , m ) ; else if ( n < m ) return HCF ( n , m - n ) ; else if ( n == m ) return n ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 249,
          "end_byte": 252,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 253,
          "end_byte": 274,
          "text": "HCF ( int n , int m )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 253,
              "end_byte": 256,
              "text": "HCF",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 257,
              "end_byte": 274,
              "text": "( int n , int m )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 257,
                  "end_byte": 258,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 259,
                  "end_byte": 264,
                  "text": "int n",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 259,
                      "end_byte": 262,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 263,
                      "end_byte": 264,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 265,
                  "end_byte": 266,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 267,
                  "end_byte": 272,
                  "text": "int m",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 267,
                      "end_byte": 270,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 271,
                      "end_byte": 272,
                      "text": "m",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 273,
                  "end_byte": 274,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 275,
          "end_byte": 393,
          "text": "{ if ( n > m ) return HCF ( n - m , m ) ; else if ( n < m ) return HCF ( n , m - n ) ; else if ( n == m ) return n ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 275,
              "end_byte": 276,
              "text": "{",
              "children": []
            },
            {
              "type": "if_statement",
              "start_byte": 277,
              "end_byte": 391,
              "text": "if ( n > m ) return HCF ( n - m , m ) ; else if ( n < m ) return HCF ( n , m - n ) ; else if ( n == m ) return n ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 277,
                  "end_byte": 279,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 280,
                  "end_byte": 289,
                  "text": "( n > m )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 280,
                      "end_byte": 281,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 282,
                      "end_byte": 287,
                      "text": "n > m",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 282,
                          "end_byte": 283,
                          "text": "n",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 284,
                          "end_byte": 285,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": "m",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 288,
                      "end_byte": 289,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "return_statement",
                  "start_byte": 290,
                  "end_byte": 316,
                  "text": "return HCF ( n - m , m ) ;",
                  "children": [
                    {
                      "type": "return",
                      "start_byte": 290,
                      "end_byte": 296,
                      "text": "return",
                      "children": []
                    },
                    {
                      "type": "call_expression",
                      "start_byte": 297,
                      "end_byte": 314,
                      "text": "HCF ( n - m , m )",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 297,
                          "end_byte": 300,
                          "text": "HCF",
                          "children": []
                        },
                        {
                          "type": "argument_list",
                          "start_byte": 301,
                          "end_byte": 314,
                          "text": "( n - m , m )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 301,
                              "end_byte": 302,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 303,
                              "end_byte": 308,
                              "text": "n - m",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 303,
                                  "end_byte": 304,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "-",
                                  "start_byte": 305,
                                  "end_byte": 306,
                                  "text": "-",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 307,
                                  "end_byte": 308,
                                  "text": "m",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ",",
                              "start_byte": 309,
                              "end_byte": 310,
                              "text": ",",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 311,
                              "end_byte": 312,
                              "text": "m",
                              "children": []
                            },
                            {
                              "type": ")",
                              "start_byte": 313,
                              "end_byte": 314,
                              "text": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 315,
                      "end_byte": 316,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 317,
                  "end_byte": 391,
                  "text": "else if ( n < m ) return HCF ( n , m - n ) ; else if ( n == m ) return n ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 317,
                      "end_byte": 321,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 322,
                      "end_byte": 391,
                      "text": "if ( n < m ) return HCF ( n , m - n ) ; else if ( n == m ) return n ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 322,
                          "end_byte": 324,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 325,
                          "end_byte": 334,
                          "text": "( n < m )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 325,
                              "end_byte": 326,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 327,
                              "end_byte": 332,
                              "text": "n < m",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 327,
                                  "end_byte": 328,
                                  "text": "n",
                                  "children": []
                                },
                                {
                                  "type": "<",
                                  "start_byte": 329,
                                  "end_byte": 330,
                                  "text": "<",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 331,
                                  "end_byte": 332,
                                  "text": "m",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 333,
                              "end_byte": 334,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "return_statement",
                          "start_byte": 335,
                          "end_byte": 361,
                          "text": "return HCF ( n , m - n ) ;",
                          "children": [
                            {
                              "type": "return",
                              "start_byte": 335,
                              "end_byte": 341,
                              "text": "return",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 342,
                              "end_byte": 359,
                              "text": "HCF ( n , m - n )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 342,
                                  "end_byte": 345,
                                  "text": "HCF",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 346,
                                  "end_byte": 359,
                                  "text": "( n , m - n )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 346,
                                      "end_byte": 347,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 348,
                                      "end_byte": 349,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 350,
                                      "end_byte": 351,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 352,
                                      "end_byte": 357,
                                      "text": "m - n",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 352,
                                          "end_byte": 353,
                                          "text": "m",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 354,
                                          "end_byte": 355,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 356,
                                          "end_byte": 357,
                                          "text": "n",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 358,
                                      "end_byte": 359,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 360,
                              "end_byte": 361,
                              "text": ";",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 362,
                          "end_byte": 391,
                          "text": "else if ( n == m ) return n ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 362,
                              "end_byte": 366,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 367,
                              "end_byte": 391,
                              "text": "if ( n == m ) return n ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 367,
                                  "end_byte": 369,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 370,
                                  "end_byte": 380,
                                  "text": "( n == m )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 370,
                                      "end_byte": 371,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 372,
                                      "end_byte": 378,
                                      "text": "n == m",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 372,
                                          "end_byte": 373,
                                          "text": "n",
                                          "children": []
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 374,
                                          "end_byte": 376,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 377,
                                          "end_byte": 378,
                                          "text": "m",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 379,
                                      "end_byte": 380,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start_byte": 381,
                                  "end_byte": 391,
                                  "text": "return n ;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start_byte": 381,
                                      "end_byte": 387,
                                      "text": "return",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 388,
                                      "end_byte": 389,
                                      "text": "n",
                                      "children": []
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 390,
                                      "end_byte": 391,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 392,
              "end_byte": 393,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 394,
      "end_byte": 622,
      "text": "int LCM ( int p , int q ) { int i = 1 ; if ( p > q ) { while ( ( p * i ) % q != 0 ) i ++ ; p = p * i ; return p ; } else if ( q > p ) { while ( ( q * i ) % p != 0 ) i ++ ; q = q * i ; return q ; } else if ( p == q ) return p ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 394,
          "end_byte": 397,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 398,
          "end_byte": 419,
          "text": "LCM ( int p , int q )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 398,
              "end_byte": 401,
              "text": "LCM",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 402,
              "end_byte": 419,
              "text": "( int p , int q )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 402,
                  "end_byte": 403,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 404,
                  "end_byte": 409,
                  "text": "int p",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 404,
                      "end_byte": 407,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 408,
                      "end_byte": 409,
                      "text": "p",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 410,
                  "end_byte": 411,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 412,
                  "end_byte": 417,
                  "text": "int q",
                  "children": [
                    {
                      "type": "primitive_type",
                      "start_byte": 412,
                      "end_byte": 415,
                      "text": "int",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 416,
                      "end_byte": 417,
                      "text": "q",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 418,
                  "end_byte": 419,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 420,
          "end_byte": 622,
          "text": "{ int i = 1 ; if ( p > q ) { while ( ( p * i ) % q != 0 ) i ++ ; p = p * i ; return p ; } else if ( q > p ) { while ( ( q * i ) % p != 0 ) i ++ ; q = q * i ; return q ; } else if ( p == q ) return p ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 420,
              "end_byte": 421,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 422,
              "end_byte": 433,
              "text": "int i = 1 ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 422,
                  "end_byte": 425,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 426,
                  "end_byte": 431,
                  "text": "i = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 426,
                      "end_byte": 427,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 428,
                      "end_byte": 429,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 430,
                      "end_byte": 431,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 432,
                  "end_byte": 433,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 434,
              "end_byte": 620,
              "text": "if ( p > q ) { while ( ( p * i ) % q != 0 ) i ++ ; p = p * i ; return p ; } else if ( q > p ) { while ( ( q * i ) % p != 0 ) i ++ ; q = q * i ; return q ; } else if ( p == q ) return p ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 434,
                  "end_byte": 436,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 437,
                  "end_byte": 446,
                  "text": "( p > q )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 437,
                      "end_byte": 438,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 439,
                      "end_byte": 444,
                      "text": "p > q",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 439,
                          "end_byte": 440,
                          "text": "p",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 441,
                          "end_byte": 442,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 443,
                          "end_byte": 444,
                          "text": "q",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 445,
                      "end_byte": 446,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 447,
                  "end_byte": 509,
                  "text": "{ while ( ( p * i ) % q != 0 ) i ++ ; p = p * i ; return p ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 447,
                      "end_byte": 448,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 449,
                      "end_byte": 484,
                      "text": "while ( ( p * i ) % q != 0 ) i ++ ;",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 449,
                          "end_byte": 454,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 455,
                          "end_byte": 477,
                          "text": "( ( p * i ) % q != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 455,
                              "end_byte": 456,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 457,
                              "end_byte": 475,
                              "text": "( p * i ) % q != 0",
                              "children": [
                                {
                                  "type": "binary_expression",
                                  "start_byte": 457,
                                  "end_byte": 470,
                                  "text": "( p * i ) % q",
                                  "children": [
                                    {
                                      "type": "parenthesized_expression",
                                      "start_byte": 457,
                                      "end_byte": 466,
                                      "text": "( p * i )",
                                      "children": [
                                        {
                                          "type": "(",
                                          "start_byte": 457,
                                          "end_byte": 458,
                                          "text": "(",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 459,
                                          "end_byte": 464,
                                          "text": "p * i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 459,
                                              "end_byte": 460,
                                              "text": "p",
                                              "children": []
                                            },
                                            {
                                              "type": "*",
                                              "start_byte": 461,
                                              "end_byte": 462,
                                              "text": "*",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 463,
                                              "end_byte": 464,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": ")",
                                          "start_byte": 465,
                                          "end_byte": 466,
                                          "text": ")",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "%",
                                      "start_byte": 467,
                                      "end_byte": 468,
                                      "text": "%",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 469,
                                      "end_byte": 470,
                                      "text": "q",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 471,
                                  "end_byte": 473,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 474,
                                  "end_byte": 475,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 476,
                              "end_byte": 477,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "expression_statement",
                          "start_byte": 478,
                          "end_byte": 484,
                          "text": "i ++ ;",
                          "children": [
                            {
                              "type": "update_expression",
                              "start_byte": 478,
                              "end_byte": 482,
                              "text": "i ++",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 478,
                                  "end_byte": 479,
                                  "text": "i",
                                  "children": []
                                },
                                {
                                  "type": "++",
                                  "start_byte": 480,
                                  "end_byte": 482,
                                  "text": "++",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ";",
                              "start_byte": 483,
                              "end_byte": 484,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 485,
                      "end_byte": 496,
                      "text": "p = p * i ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 485,
                          "end_byte": 494,
                          "text": "p = p * i",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 485,
                              "end_byte": 486,
                              "text": "p",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 487,
                              "end_byte": 488,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 489,
                              "end_byte": 494,
                              "text": "p * i",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 489,
                                  "end_byte": 490,
                                  "text": "p",
                                  "children": []
                                },
                                {
                                  "type": "*",
                                  "start_byte": 491,
                                  "end_byte": 492,
                                  "text": "*",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 493,
                                  "end_byte": 494,
                                  "text": "i",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 495,
                          "end_byte": 496,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "return_statement",
                      "start_byte": 497,
                      "end_byte": 507,
                      "text": "return p ;",
                      "children": [
                        {
                          "type": "return",
                          "start_byte": 497,
                          "end_byte": 503,
                          "text": "return",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 504,
                          "end_byte": 505,
                          "text": "p",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 506,
                          "end_byte": 507,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 508,
                      "end_byte": 509,
                      "text": "}",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 510,
                  "end_byte": 620,
                  "text": "else if ( q > p ) { while ( ( q * i ) % p != 0 ) i ++ ; q = q * i ; return q ; } else if ( p == q ) return p ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 510,
                      "end_byte": 514,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 515,
                      "end_byte": 620,
                      "text": "if ( q > p ) { while ( ( q * i ) % p != 0 ) i ++ ; q = q * i ; return q ; } else if ( p == q ) return p ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 515,
                          "end_byte": 517,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 518,
                          "end_byte": 527,
                          "text": "( q > p )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 518,
                              "end_byte": 519,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 520,
                              "end_byte": 525,
                              "text": "q > p",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 520,
                                  "end_byte": 521,
                                  "text": "q",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 522,
                                  "end_byte": 523,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 524,
                                  "end_byte": 525,
                                  "text": "p",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 526,
                              "end_byte": 527,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 528,
                          "end_byte": 590,
                          "text": "{ while ( ( q * i ) % p != 0 ) i ++ ; q = q * i ; return q ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 528,
                              "end_byte": 529,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "while_statement",
                              "start_byte": 530,
                              "end_byte": 565,
                              "text": "while ( ( q * i ) % p != 0 ) i ++ ;",
                              "children": [
                                {
                                  "type": "while",
                                  "start_byte": 530,
                                  "end_byte": 535,
                                  "text": "while",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 536,
                                  "end_byte": 558,
                                  "text": "( ( q * i ) % p != 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 536,
                                      "end_byte": 537,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 538,
                                      "end_byte": 556,
                                      "text": "( q * i ) % p != 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 538,
                                          "end_byte": 551,
                                          "text": "( q * i ) % p",
                                          "children": [
                                            {
                                              "type": "parenthesized_expression",
                                              "start_byte": 538,
                                              "end_byte": 547,
                                              "text": "( q * i )",
                                              "children": [
                                                {
                                                  "type": "(",
                                                  "start_byte": 538,
                                                  "end_byte": 539,
                                                  "text": "(",
                                                  "children": []
                                                },
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 540,
                                                  "end_byte": 545,
                                                  "text": "q * i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 540,
                                                      "end_byte": 541,
                                                      "text": "q",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "*",
                                                      "start_byte": 542,
                                                      "end_byte": 543,
                                                      "text": "*",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 544,
                                                      "end_byte": 545,
                                                      "text": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ")",
                                                  "start_byte": 546,
                                                  "end_byte": 547,
                                                  "text": ")",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 548,
                                              "end_byte": 549,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 550,
                                              "end_byte": 551,
                                              "text": "p",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "!=",
                                          "start_byte": 552,
                                          "end_byte": 554,
                                          "text": "!=",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 555,
                                          "end_byte": 556,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 557,
                                      "end_byte": 558,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 559,
                                  "end_byte": 565,
                                  "text": "i ++ ;",
                                  "children": [
                                    {
                                      "type": "update_expression",
                                      "start_byte": 559,
                                      "end_byte": 563,
                                      "text": "i ++",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 559,
                                          "end_byte": 560,
                                          "text": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "++",
                                          "start_byte": 561,
                                          "end_byte": 563,
                                          "text": "++",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 564,
                                      "end_byte": 565,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 566,
                              "end_byte": 577,
                              "text": "q = q * i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 566,
                                  "end_byte": 575,
                                  "text": "q = q * i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 566,
                                      "end_byte": 567,
                                      "text": "q",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 568,
                                      "end_byte": 569,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 570,
                                      "end_byte": 575,
                                      "text": "q * i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 570,
                                          "end_byte": 571,
                                          "text": "q",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 572,
                                          "end_byte": 573,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 574,
                                          "end_byte": 575,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 576,
                                  "end_byte": 577,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "return_statement",
                              "start_byte": 578,
                              "end_byte": 588,
                              "text": "return q ;",
                              "children": [
                                {
                                  "type": "return",
                                  "start_byte": 578,
                                  "end_byte": 584,
                                  "text": "return",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 585,
                                  "end_byte": 586,
                                  "text": "q",
                                  "children": []
                                },
                                {
                                  "type": ";",
                                  "start_byte": 587,
                                  "end_byte": 588,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 589,
                              "end_byte": 590,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 591,
                          "end_byte": 620,
                          "text": "else if ( p == q ) return p ;",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 591,
                              "end_byte": 595,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 596,
                              "end_byte": 620,
                              "text": "if ( p == q ) return p ;",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 596,
                                  "end_byte": 598,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 599,
                                  "end_byte": 609,
                                  "text": "( p == q )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 599,
                                      "end_byte": 600,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 601,
                                      "end_byte": 607,
                                      "text": "p == q",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 601,
                                          "end_byte": 602,
                                          "text": "p",
                                          "children": []
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 603,
                                          "end_byte": 605,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 606,
                                          "end_byte": 607,
                                          "text": "q",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 608,
                                      "end_byte": 609,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "return_statement",
                                  "start_byte": 610,
                                  "end_byte": 620,
                                  "text": "return p ;",
                                  "children": [
                                    {
                                      "type": "return",
                                      "start_byte": 610,
                                      "end_byte": 616,
                                      "text": "return",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 617,
                                      "end_byte": 618,
                                      "text": "p",
                                      "children": []
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 619,
                                      "end_byte": 620,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 621,
              "end_byte": 622,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}