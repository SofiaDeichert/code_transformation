int ARR [ 100 ] [ 100 ] , temp [ 100 ] [ 100 ] ; int max ( int , int ) ; void input_matrix ( int ) ; void solve ( int ) ; int main ( ) { int T , N ; scanf ( "%d" , & T ) ; for ( int i = 0 ; i < T ; ++ i ) { scanf ( "%d" , & N ) ; input_matrix ( N ) ; solve ( N ) ; } return 0 ; } void input_matrix ( int n ) { for ( int i = 0 ; i < n ; ++ i ) for ( int j = 0 ; j <= i ; ++ j ) scanf ( "%d" , & ARR [ i ] [ j ] ) ; } void solve ( int n ) { temp [ 0 ] [ 0 ] = ARR [ 0 ] [ 0 ] ; for ( int i = 1 ; i < n ; ++ i ) { temp [ i ] [ 0 ] = ARR [ i ] [ 0 ] + temp [ i - 1 ] [ 0 ] ; temp [ i ] [ i ] = ARR [ i ] [ i ] + temp [ i - 1 ] [ i - 1 ] ; } for ( int i = 2 ; i < n ; ++ i ) for ( int j = 1 ; j < i ; ++ j ) temp [ i ] [ j ] = max ( temp [ i - 1 ] [ j ] , temp [ i - 1 ] [ j - 1 ] ) + ARR [ i ] [ j ] ; int max = 0 ; for ( int i = 0 ; i < n ; ++ i ) if ( temp [ n - 1 ] [ i ] > max ) max = temp [ n - 1 ] [ i ] ; printf ( "%d\n" , max ) ; } int max ( int a , int b ) { if ( a > b ) return a ; return b ; }