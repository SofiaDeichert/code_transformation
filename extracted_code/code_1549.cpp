int max ; void recur ( int * * p , int r , int i , int j , int sum ) { if ( i == r - 1 ) { if ( sum > max ) max = sum ; return ; } recur ( p , r , i + 1 , j , sum + p [ i + 1 ] [ j ] ) ; if ( j <= i ) recur ( p , r , i + 1 , j + 1 , sum + p [ i + 1 ] [ j + 1 ] ) ; } int main ( ) { int t , r , i , j ; scanf ( "%d" , & t ) ; while ( t -- ) { scanf ( "%d" , & r ) ; int * * p ; * p = ( int * ) ( malloc ( r * sizeof ( int ) ) ) ; for ( i = 0 ; i < r ; i ++ ) p [ i ] = ( int * ) ( malloc ( ( i + 1 ) * sizeof ( int ) ) ) ; for ( i = 0 ; i < r ; i ++ ) { for ( j = 0 ; j < i + 1 ; j ++ ) { scanf ( "%d" , & p [ i ] [ j ] ) ; } } int sum = p [ 0 ] [ 0 ] ; max = 0 ; recur ( p , r , 0 , 0 , sum ) ; printf ( "%d\n" , max ) ; } return 0 ; }