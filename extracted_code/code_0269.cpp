int idx [ 1000 ] [ 1000 ] ; int tp ( int d , int l , int p , long sum ) ; int pop ( int d ) ; int global_sum = 0 ; int main ( ) { int tc ; scanf ( "%d" , & tc ) ; int i = 0 ; while ( i < tc ) { int depth ; scanf ( "%d" , & depth ) ; pop ( depth ) ; tp ( depth , 1 , 1 , 0 ) ; printf ( "%d\n" , global_sum ) ; global_sum = 0 ; i ++ ; } return 0 ; } int tp ( int d , int l , int p , long sum ) { if ( l == d ) { sum += idx [ l - 1 ] [ p - 1 ] ; if ( sum > global_sum ) { global_sum = sum ; } return 0 ; } else { sum += idx [ l - 1 ] [ p - 1 ] ; tp ( d , l + 1 , p , sum ) ; tp ( d , l + 1 , p + 1 , sum ) ; } return - 1 ; } int pop ( int d ) { int i = 0 , j = 0 ; while ( i < d ) { while ( j <= i ) { scanf ( "%d" , & idx [ i ] [ j ] ) ; j ++ ; } ; j = 0 ; i ++ ; } ; return 0 ; }