{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 749,
  "text": "long LCommonM ( long A , long B ) { long i , L , mul = 1 ; if ( A > B ) L = A ; else L = B ; for ( i = 2 ; i <= L ; ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) { A = A / i ; B = B / i ; mul = mul * i ; } else if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; } } return mul ; } long GCommonD ( long A , long B ) { long i , S ; if ( A < B ) S = A ; else S = B ; for ( i = S ; i >= 1 ; i -- ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) break ; } return i ; } int main ( ) { long t , A , B , GCD , LCM ; scanf ( \"%ld\" , & t ) ; while ( t -- ) { scanf ( \"%ld %ld\" , & A , & B ) ; LCM = LCommonM ( A , B ) ; GCD = GCommonD ( A , B ) ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 346,
      "text": "long LCommonM ( long A , long B ) { long i , L , mul = 1 ; if ( A > B ) L = A ; else L = B ; for ( i = 2 ; i <= L ; ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) { A = A / i ; B = B / i ; mul = mul * i ; } else if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; } } return mul ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 0,
          "end_byte": 4,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 0,
              "end_byte": 4,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 33,
          "text": "LCommonM ( long A , long B )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 13,
              "text": "LCommonM",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 14,
              "end_byte": 33,
              "text": "( long A , long B )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 14,
                  "end_byte": 15,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 16,
                  "end_byte": 22,
                  "text": "long A",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 16,
                      "end_byte": 20,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 16,
                          "end_byte": 20,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 21,
                      "end_byte": 22,
                      "text": "A",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 25,
                  "end_byte": 31,
                  "text": "long B",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 25,
                      "end_byte": 29,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 25,
                          "end_byte": 29,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 30,
                      "end_byte": 31,
                      "text": "B",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 34,
          "end_byte": 346,
          "text": "{ long i , L , mul = 1 ; if ( A > B ) L = A ; else L = B ; for ( i = 2 ; i <= L ; ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) { A = A / i ; B = B / i ; mul = mul * i ; } else if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; } } return mul ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 34,
              "end_byte": 35,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 36,
              "end_byte": 58,
              "text": "long i , L , mul = 1 ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 36,
                  "end_byte": 40,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 36,
                      "end_byte": 40,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 41,
                  "end_byte": 42,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 46,
                  "text": "L",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 47,
                  "end_byte": 48,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "init_declarator",
                  "start_byte": 49,
                  "end_byte": 56,
                  "text": "mul = 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 49,
                      "end_byte": 52,
                      "text": "mul",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 53,
                      "end_byte": 54,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 55,
                      "end_byte": 56,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 57,
                  "end_byte": 58,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 59,
              "end_byte": 92,
              "text": "if ( A > B ) L = A ; else L = B ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 59,
                  "end_byte": 61,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 62,
                  "end_byte": 71,
                  "text": "( A > B )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 62,
                      "end_byte": 63,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 64,
                      "end_byte": 69,
                      "text": "A > B",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 64,
                          "end_byte": 65,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": ">",
                          "start_byte": 66,
                          "end_byte": 67,
                          "text": ">",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 68,
                          "end_byte": 69,
                          "text": "B",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 70,
                      "end_byte": 71,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 72,
                  "end_byte": 79,
                  "text": "L = A ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 72,
                      "end_byte": 77,
                      "text": "L = A",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 72,
                          "end_byte": 73,
                          "text": "L",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 74,
                          "end_byte": 75,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 76,
                          "end_byte": 77,
                          "text": "A",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 78,
                      "end_byte": 79,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 80,
                  "end_byte": 92,
                  "text": "else L = B ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 80,
                      "end_byte": 84,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 85,
                      "end_byte": 92,
                      "text": "L = B ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 85,
                          "end_byte": 90,
                          "text": "L = B",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 85,
                              "end_byte": 86,
                              "text": "L",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 87,
                              "end_byte": 88,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 89,
                              "end_byte": 90,
                              "text": "B",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 91,
                          "end_byte": 92,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 93,
              "end_byte": 331,
              "text": "for ( i = 2 ; i <= L ; ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) { A = A / i ; B = B / i ; mul = mul * i ; } else if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; } }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 93,
                  "end_byte": 96,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 97,
                  "end_byte": 98,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 99,
                  "end_byte": 104,
                  "text": "i = 2",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 99,
                      "end_byte": 100,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 101,
                      "end_byte": 102,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 103,
                      "end_byte": 104,
                      "text": "2",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 105,
                  "end_byte": 106,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 107,
                  "end_byte": 113,
                  "text": "i <= L",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 107,
                      "end_byte": 108,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<=",
                      "start_byte": 109,
                      "end_byte": 111,
                      "text": "<=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 112,
                      "end_byte": 113,
                      "text": "L",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 114,
                  "end_byte": 115,
                  "text": ";",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 116,
                  "end_byte": 117,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 118,
                  "end_byte": 331,
                  "text": "{ if ( ( A % i == 0 ) && ( B % i == 0 ) ) { A = A / i ; B = B / i ; mul = mul * i ; } else if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 118,
                      "end_byte": 119,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 120,
                      "end_byte": 329,
                      "text": "if ( ( A % i == 0 ) && ( B % i == 0 ) ) { A = A / i ; B = B / i ; mul = mul * i ; } else if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 120,
                          "end_byte": 122,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 123,
                          "end_byte": 159,
                          "text": "( ( A % i == 0 ) && ( B % i == 0 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 123,
                              "end_byte": 124,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 125,
                              "end_byte": 157,
                              "text": "( A % i == 0 ) && ( B % i == 0 )",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 125,
                                  "end_byte": 139,
                                  "text": "( A % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 125,
                                      "end_byte": 126,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 127,
                                      "end_byte": 137,
                                      "text": "A % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 127,
                                          "end_byte": 132,
                                          "text": "A % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 127,
                                              "end_byte": 128,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 129,
                                              "end_byte": 130,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 131,
                                              "end_byte": 132,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 133,
                                          "end_byte": 135,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 136,
                                          "end_byte": 137,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 138,
                                      "end_byte": 139,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 140,
                                  "end_byte": 142,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 143,
                                  "end_byte": 157,
                                  "text": "( B % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 143,
                                      "end_byte": 144,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 145,
                                      "end_byte": 155,
                                      "text": "B % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 145,
                                          "end_byte": 150,
                                          "text": "B % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 145,
                                              "end_byte": 146,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 147,
                                              "end_byte": 148,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 149,
                                              "end_byte": 150,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 151,
                                          "end_byte": 153,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 154,
                                          "end_byte": 155,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 156,
                                      "end_byte": 157,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 158,
                              "end_byte": 159,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 160,
                          "end_byte": 203,
                          "text": "{ A = A / i ; B = B / i ; mul = mul * i ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 160,
                              "end_byte": 161,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 162,
                              "end_byte": 173,
                              "text": "A = A / i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 162,
                                  "end_byte": 171,
                                  "text": "A = A / i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 164,
                                      "end_byte": 165,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 166,
                                      "end_byte": 171,
                                      "text": "A / i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 166,
                                          "end_byte": 167,
                                          "text": "A",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 168,
                                          "end_byte": 169,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 170,
                                          "end_byte": 171,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 174,
                              "end_byte": 185,
                              "text": "B = B / i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 174,
                                  "end_byte": 183,
                                  "text": "B = B / i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 174,
                                      "end_byte": 175,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 176,
                                      "end_byte": 177,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 178,
                                      "end_byte": 183,
                                      "text": "B / i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 178,
                                          "end_byte": 179,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "/",
                                          "start_byte": 180,
                                          "end_byte": 181,
                                          "text": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 182,
                                          "end_byte": 183,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 184,
                                  "end_byte": 185,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 186,
                              "end_byte": 201,
                              "text": "mul = mul * i ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 186,
                                  "end_byte": 199,
                                  "text": "mul = mul * i",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 186,
                                      "end_byte": 189,
                                      "text": "mul",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 190,
                                      "end_byte": 191,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 192,
                                      "end_byte": 199,
                                      "text": "mul * i",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 192,
                                          "end_byte": 195,
                                          "text": "mul",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 196,
                                          "end_byte": 197,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 198,
                                          "end_byte": 199,
                                          "text": "i",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 200,
                                  "end_byte": 201,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 202,
                              "end_byte": 203,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 204,
                          "end_byte": 329,
                          "text": "else if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 204,
                              "end_byte": 208,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "if_statement",
                              "start_byte": 209,
                              "end_byte": 329,
                              "text": "if ( A % i == 0 ) { A = A / i ; mul = mul * i ; } else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; }",
                              "children": [
                                {
                                  "type": "if",
                                  "start_byte": 209,
                                  "end_byte": 211,
                                  "text": "if",
                                  "children": []
                                },
                                {
                                  "type": "condition_clause",
                                  "start_byte": 212,
                                  "end_byte": 226,
                                  "text": "( A % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 212,
                                      "end_byte": 213,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 214,
                                      "end_byte": 224,
                                      "text": "A % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 214,
                                          "end_byte": 219,
                                          "text": "A % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 214,
                                              "end_byte": 215,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 216,
                                              "end_byte": 217,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 218,
                                              "end_byte": 219,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 220,
                                          "end_byte": 222,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 223,
                                          "end_byte": 224,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 225,
                                      "end_byte": 226,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "compound_statement",
                                  "start_byte": 227,
                                  "end_byte": 258,
                                  "text": "{ A = A / i ; mul = mul * i ; }",
                                  "children": [
                                    {
                                      "type": "{",
                                      "start_byte": 227,
                                      "end_byte": 228,
                                      "text": "{",
                                      "children": []
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 229,
                                      "end_byte": 240,
                                      "text": "A = A / i ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 229,
                                          "end_byte": 238,
                                          "text": "A = A / i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 229,
                                              "end_byte": 230,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 231,
                                              "end_byte": 232,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 233,
                                              "end_byte": 238,
                                              "text": "A / i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 233,
                                                  "end_byte": 234,
                                                  "text": "A",
                                                  "children": []
                                                },
                                                {
                                                  "type": "/",
                                                  "start_byte": 235,
                                                  "end_byte": 236,
                                                  "text": "/",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 237,
                                                  "end_byte": 238,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 239,
                                          "end_byte": 240,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "expression_statement",
                                      "start_byte": 241,
                                      "end_byte": 256,
                                      "text": "mul = mul * i ;",
                                      "children": [
                                        {
                                          "type": "assignment_expression",
                                          "start_byte": 241,
                                          "end_byte": 254,
                                          "text": "mul = mul * i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 241,
                                              "end_byte": 244,
                                              "text": "mul",
                                              "children": []
                                            },
                                            {
                                              "type": "=",
                                              "start_byte": 245,
                                              "end_byte": 246,
                                              "text": "=",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 247,
                                              "end_byte": 254,
                                              "text": "mul * i",
                                              "children": [
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 247,
                                                  "end_byte": 250,
                                                  "text": "mul",
                                                  "children": []
                                                },
                                                {
                                                  "type": "*",
                                                  "start_byte": 251,
                                                  "end_byte": 252,
                                                  "text": "*",
                                                  "children": []
                                                },
                                                {
                                                  "type": "identifier",
                                                  "start_byte": 253,
                                                  "end_byte": 254,
                                                  "text": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": ";",
                                          "start_byte": 255,
                                          "end_byte": 256,
                                          "text": ";",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "}",
                                      "start_byte": 257,
                                      "end_byte": 258,
                                      "text": "}",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "else_clause",
                                  "start_byte": 259,
                                  "end_byte": 329,
                                  "text": "else if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; }",
                                  "children": [
                                    {
                                      "type": "else",
                                      "start_byte": 259,
                                      "end_byte": 263,
                                      "text": "else",
                                      "children": []
                                    },
                                    {
                                      "type": "if_statement",
                                      "start_byte": 264,
                                      "end_byte": 329,
                                      "text": "if ( B % i == 0 ) { B = B / i ; mul = mul * i ; } else { i ++ ; }",
                                      "children": [
                                        {
                                          "type": "if",
                                          "start_byte": 264,
                                          "end_byte": 266,
                                          "text": "if",
                                          "children": []
                                        },
                                        {
                                          "type": "condition_clause",
                                          "start_byte": 267,
                                          "end_byte": 281,
                                          "text": "( B % i == 0 )",
                                          "children": [
                                            {
                                              "type": "(",
                                              "start_byte": 267,
                                              "end_byte": 268,
                                              "text": "(",
                                              "children": []
                                            },
                                            {
                                              "type": "binary_expression",
                                              "start_byte": 269,
                                              "end_byte": 279,
                                              "text": "B % i == 0",
                                              "children": [
                                                {
                                                  "type": "binary_expression",
                                                  "start_byte": 269,
                                                  "end_byte": 274,
                                                  "text": "B % i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 269,
                                                      "end_byte": 270,
                                                      "text": "B",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "%",
                                                      "start_byte": 271,
                                                      "end_byte": 272,
                                                      "text": "%",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 273,
                                                      "end_byte": 274,
                                                      "text": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "==",
                                                  "start_byte": 275,
                                                  "end_byte": 277,
                                                  "text": "==",
                                                  "children": []
                                                },
                                                {
                                                  "type": "number_literal",
                                                  "start_byte": 278,
                                                  "end_byte": 279,
                                                  "text": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": ")",
                                              "start_byte": 280,
                                              "end_byte": 281,
                                              "text": ")",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "compound_statement",
                                          "start_byte": 282,
                                          "end_byte": 313,
                                          "text": "{ B = B / i ; mul = mul * i ; }",
                                          "children": [
                                            {
                                              "type": "{",
                                              "start_byte": 282,
                                              "end_byte": 283,
                                              "text": "{",
                                              "children": []
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 284,
                                              "end_byte": 295,
                                              "text": "B = B / i ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 284,
                                                  "end_byte": 293,
                                                  "text": "B = B / i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 284,
                                                      "end_byte": 285,
                                                      "text": "B",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 286,
                                                      "end_byte": 287,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 288,
                                                      "end_byte": 293,
                                                      "text": "B / i",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 288,
                                                          "end_byte": 289,
                                                          "text": "B",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "/",
                                                          "start_byte": 290,
                                                          "end_byte": 291,
                                                          "text": "/",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 292,
                                                          "end_byte": 293,
                                                          "text": "i",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 294,
                                                  "end_byte": 295,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "expression_statement",
                                              "start_byte": 296,
                                              "end_byte": 311,
                                              "text": "mul = mul * i ;",
                                              "children": [
                                                {
                                                  "type": "assignment_expression",
                                                  "start_byte": 296,
                                                  "end_byte": 309,
                                                  "text": "mul = mul * i",
                                                  "children": [
                                                    {
                                                      "type": "identifier",
                                                      "start_byte": 296,
                                                      "end_byte": 299,
                                                      "text": "mul",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "=",
                                                      "start_byte": 300,
                                                      "end_byte": 301,
                                                      "text": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "binary_expression",
                                                      "start_byte": 302,
                                                      "end_byte": 309,
                                                      "text": "mul * i",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 302,
                                                          "end_byte": 305,
                                                          "text": "mul",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "*",
                                                          "start_byte": 306,
                                                          "end_byte": 307,
                                                          "text": "*",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 308,
                                                          "end_byte": 309,
                                                          "text": "i",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": ";",
                                                  "start_byte": 310,
                                                  "end_byte": 311,
                                                  "text": ";",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "}",
                                              "start_byte": 312,
                                              "end_byte": 313,
                                              "text": "}",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "else_clause",
                                          "start_byte": 314,
                                          "end_byte": 329,
                                          "text": "else { i ++ ; }",
                                          "children": [
                                            {
                                              "type": "else",
                                              "start_byte": 314,
                                              "end_byte": 318,
                                              "text": "else",
                                              "children": []
                                            },
                                            {
                                              "type": "compound_statement",
                                              "start_byte": 319,
                                              "end_byte": 329,
                                              "text": "{ i ++ ; }",
                                              "children": [
                                                {
                                                  "type": "{",
                                                  "start_byte": 319,
                                                  "end_byte": 320,
                                                  "text": "{",
                                                  "children": []
                                                },
                                                {
                                                  "type": "expression_statement",
                                                  "start_byte": 321,
                                                  "end_byte": 327,
                                                  "text": "i ++ ;",
                                                  "children": [
                                                    {
                                                      "type": "update_expression",
                                                      "start_byte": 321,
                                                      "end_byte": 325,
                                                      "text": "i ++",
                                                      "children": [
                                                        {
                                                          "type": "identifier",
                                                          "start_byte": 321,
                                                          "end_byte": 322,
                                                          "text": "i",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "++",
                                                          "start_byte": 323,
                                                          "end_byte": 325,
                                                          "text": "++",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": ";",
                                                      "start_byte": 326,
                                                      "end_byte": 327,
                                                      "text": ";",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "}",
                                                  "start_byte": 328,
                                                  "end_byte": 329,
                                                  "text": "}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 330,
                      "end_byte": 331,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 332,
              "end_byte": 344,
              "text": "return mul ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 332,
                  "end_byte": 338,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 339,
                  "end_byte": 342,
                  "text": "mul",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 343,
                  "end_byte": 344,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 345,
              "end_byte": 346,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 347,
      "end_byte": 524,
      "text": "long GCommonD ( long A , long B ) { long i , S ; if ( A < B ) S = A ; else S = B ; for ( i = S ; i >= 1 ; i -- ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) break ; } return i ; }",
      "children": [
        {
          "type": "sized_type_specifier",
          "start_byte": 347,
          "end_byte": 351,
          "text": "long",
          "children": [
            {
              "type": "long",
              "start_byte": 347,
              "end_byte": 351,
              "text": "long",
              "children": []
            }
          ]
        },
        {
          "type": "function_declarator",
          "start_byte": 352,
          "end_byte": 380,
          "text": "GCommonD ( long A , long B )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 352,
              "end_byte": 360,
              "text": "GCommonD",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 361,
              "end_byte": 380,
              "text": "( long A , long B )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 361,
                  "end_byte": 362,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 363,
                  "end_byte": 369,
                  "text": "long A",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 363,
                      "end_byte": 367,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 363,
                          "end_byte": 367,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 368,
                      "end_byte": 369,
                      "text": "A",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "start_byte": 370,
                  "end_byte": 371,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "parameter_declaration",
                  "start_byte": 372,
                  "end_byte": 378,
                  "text": "long B",
                  "children": [
                    {
                      "type": "sized_type_specifier",
                      "start_byte": 372,
                      "end_byte": 376,
                      "text": "long",
                      "children": [
                        {
                          "type": "long",
                          "start_byte": 372,
                          "end_byte": 376,
                          "text": "long",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "identifier",
                      "start_byte": 377,
                      "end_byte": 378,
                      "text": "B",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 379,
                  "end_byte": 380,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 381,
          "end_byte": 524,
          "text": "{ long i , S ; if ( A < B ) S = A ; else S = B ; for ( i = S ; i >= 1 ; i -- ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) break ; } return i ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 381,
              "end_byte": 382,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 383,
              "end_byte": 395,
              "text": "long i , S ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 383,
                  "end_byte": 387,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 383,
                      "end_byte": 387,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 388,
                  "end_byte": 389,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 390,
                  "end_byte": 391,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 392,
                  "end_byte": 393,
                  "text": "S",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 394,
                  "end_byte": 395,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "if_statement",
              "start_byte": 396,
              "end_byte": 429,
              "text": "if ( A < B ) S = A ; else S = B ;",
              "children": [
                {
                  "type": "if",
                  "start_byte": 396,
                  "end_byte": 398,
                  "text": "if",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 399,
                  "end_byte": 408,
                  "text": "( A < B )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 399,
                      "end_byte": 400,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 401,
                      "end_byte": 406,
                      "text": "A < B",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 401,
                          "end_byte": 402,
                          "text": "A",
                          "children": []
                        },
                        {
                          "type": "<",
                          "start_byte": 403,
                          "end_byte": 404,
                          "text": "<",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 405,
                          "end_byte": 406,
                          "text": "B",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 407,
                      "end_byte": 408,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "expression_statement",
                  "start_byte": 409,
                  "end_byte": 416,
                  "text": "S = A ;",
                  "children": [
                    {
                      "type": "assignment_expression",
                      "start_byte": 409,
                      "end_byte": 414,
                      "text": "S = A",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 409,
                          "end_byte": 410,
                          "text": "S",
                          "children": []
                        },
                        {
                          "type": "=",
                          "start_byte": 411,
                          "end_byte": 412,
                          "text": "=",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 413,
                          "end_byte": 414,
                          "text": "A",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ";",
                      "start_byte": 415,
                      "end_byte": 416,
                      "text": ";",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "else_clause",
                  "start_byte": 417,
                  "end_byte": 429,
                  "text": "else S = B ;",
                  "children": [
                    {
                      "type": "else",
                      "start_byte": 417,
                      "end_byte": 421,
                      "text": "else",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 422,
                      "end_byte": 429,
                      "text": "S = B ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 422,
                          "end_byte": 427,
                          "text": "S = B",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 422,
                              "end_byte": 423,
                              "text": "S",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 424,
                              "end_byte": 425,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 426,
                              "end_byte": 427,
                              "text": "B",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 428,
                          "end_byte": 429,
                          "text": ";",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 430,
              "end_byte": 511,
              "text": "for ( i = S ; i >= 1 ; i -- ) { if ( ( A % i == 0 ) && ( B % i == 0 ) ) break ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 430,
                  "end_byte": 433,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 434,
                  "end_byte": 435,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 436,
                  "end_byte": 441,
                  "text": "i = S",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 436,
                      "end_byte": 437,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 438,
                      "end_byte": 439,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 440,
                      "end_byte": 441,
                      "text": "S",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 442,
                  "end_byte": 443,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 444,
                  "end_byte": 450,
                  "text": "i >= 1",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 444,
                      "end_byte": 445,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": ">=",
                      "start_byte": 446,
                      "end_byte": 448,
                      "text": ">=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 449,
                      "end_byte": 450,
                      "text": "1",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 451,
                  "end_byte": 452,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 453,
                  "end_byte": 457,
                  "text": "i --",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 453,
                      "end_byte": 454,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "--",
                      "start_byte": 455,
                      "end_byte": 457,
                      "text": "--",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 458,
                  "end_byte": 459,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 460,
                  "end_byte": 511,
                  "text": "{ if ( ( A % i == 0 ) && ( B % i == 0 ) ) break ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 460,
                      "end_byte": 461,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 462,
                      "end_byte": 509,
                      "text": "if ( ( A % i == 0 ) && ( B % i == 0 ) ) break ;",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 462,
                          "end_byte": 464,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 465,
                          "end_byte": 501,
                          "text": "( ( A % i == 0 ) && ( B % i == 0 ) )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 465,
                              "end_byte": 466,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 467,
                              "end_byte": 499,
                              "text": "( A % i == 0 ) && ( B % i == 0 )",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 467,
                                  "end_byte": 481,
                                  "text": "( A % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 467,
                                      "end_byte": 468,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 469,
                                      "end_byte": 479,
                                      "text": "A % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 469,
                                          "end_byte": 474,
                                          "text": "A % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 469,
                                              "end_byte": 470,
                                              "text": "A",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 471,
                                              "end_byte": 472,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 473,
                                              "end_byte": 474,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 475,
                                          "end_byte": 477,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 478,
                                          "end_byte": 479,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 480,
                                      "end_byte": 481,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "&&",
                                  "start_byte": 482,
                                  "end_byte": 484,
                                  "text": "&&",
                                  "children": []
                                },
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 485,
                                  "end_byte": 499,
                                  "text": "( B % i == 0 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 485,
                                      "end_byte": 486,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 487,
                                      "end_byte": 497,
                                      "text": "B % i == 0",
                                      "children": [
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 487,
                                          "end_byte": 492,
                                          "text": "B % i",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 487,
                                              "end_byte": 488,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": "%",
                                              "start_byte": 489,
                                              "end_byte": 490,
                                              "text": "%",
                                              "children": []
                                            },
                                            {
                                              "type": "identifier",
                                              "start_byte": 491,
                                              "end_byte": 492,
                                              "text": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "==",
                                          "start_byte": 493,
                                          "end_byte": 495,
                                          "text": "==",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 496,
                                          "end_byte": 497,
                                          "text": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 498,
                                      "end_byte": 499,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 500,
                              "end_byte": 501,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "break_statement",
                          "start_byte": 502,
                          "end_byte": 509,
                          "text": "break ;",
                          "children": [
                            {
                              "type": "break",
                              "start_byte": 502,
                              "end_byte": 507,
                              "text": "break",
                              "children": []
                            },
                            {
                              "type": ";",
                              "start_byte": 508,
                              "end_byte": 509,
                              "text": ";",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 510,
                      "end_byte": 511,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 512,
              "end_byte": 522,
              "text": "return i ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 512,
                  "end_byte": 518,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 519,
                  "end_byte": 520,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 521,
                  "end_byte": 522,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 523,
              "end_byte": 524,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 525,
      "end_byte": 749,
      "text": "int main ( ) { long t , A , B , GCD , LCM ; scanf ( \"%ld\" , & t ) ; while ( t -- ) { scanf ( \"%ld %ld\" , & A , & B ) ; LCM = LCommonM ( A , B ) ; GCD = GCommonD ( A , B ) ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 525,
          "end_byte": 528,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 529,
          "end_byte": 537,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 529,
              "end_byte": 533,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 534,
              "end_byte": 537,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 534,
                  "end_byte": 535,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 536,
                  "end_byte": 537,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 538,
          "end_byte": 749,
          "text": "{ long t , A , B , GCD , LCM ; scanf ( \"%ld\" , & t ) ; while ( t -- ) { scanf ( \"%ld %ld\" , & A , & B ) ; LCM = LCommonM ( A , B ) ; GCD = GCommonD ( A , B ) ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 538,
              "end_byte": 539,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 540,
              "end_byte": 568,
              "text": "long t , A , B , GCD , LCM ;",
              "children": [
                {
                  "type": "sized_type_specifier",
                  "start_byte": 540,
                  "end_byte": 544,
                  "text": "long",
                  "children": [
                    {
                      "type": "long",
                      "start_byte": 540,
                      "end_byte": 544,
                      "text": "long",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "identifier",
                  "start_byte": 545,
                  "end_byte": 546,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 547,
                  "end_byte": 548,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 549,
                  "end_byte": 550,
                  "text": "A",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 551,
                  "end_byte": 552,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 553,
                  "end_byte": 554,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 555,
                  "end_byte": 556,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 557,
                  "end_byte": 560,
                  "text": "GCD",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 561,
                  "end_byte": 562,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 563,
                  "end_byte": 566,
                  "text": "LCM",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 567,
                  "end_byte": 568,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 569,
              "end_byte": 592,
              "text": "scanf ( \"%ld\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 569,
                  "end_byte": 590,
                  "text": "scanf ( \"%ld\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 569,
                      "end_byte": 574,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 575,
                      "end_byte": 590,
                      "text": "( \"%ld\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 575,
                          "end_byte": 576,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 577,
                          "end_byte": 582,
                          "text": "\"%ld\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 577,
                              "end_byte": 578,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 578,
                              "end_byte": 581,
                              "text": "%ld",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 581,
                              "end_byte": 582,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 583,
                          "end_byte": 584,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 585,
                          "end_byte": 588,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 585,
                              "end_byte": 586,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 587,
                              "end_byte": 588,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 589,
                          "end_byte": 590,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 591,
                  "end_byte": 592,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 593,
              "end_byte": 736,
              "text": "while ( t -- ) { scanf ( \"%ld %ld\" , & A , & B ) ; LCM = LCommonM ( A , B ) ; GCD = GCommonD ( A , B ) ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 593,
                  "end_byte": 598,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 599,
                  "end_byte": 607,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 599,
                      "end_byte": 600,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 601,
                      "end_byte": 605,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 601,
                          "end_byte": 602,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 603,
                          "end_byte": 605,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 606,
                      "end_byte": 607,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 608,
                  "end_byte": 736,
                  "text": "{ scanf ( \"%ld %ld\" , & A , & B ) ; LCM = LCommonM ( A , B ) ; GCD = GCommonD ( A , B ) ; printf ( \"%ld %ld\\n\" , GCD , LCM ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 608,
                      "end_byte": 609,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 610,
                      "end_byte": 643,
                      "text": "scanf ( \"%ld %ld\" , & A , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 610,
                          "end_byte": 641,
                          "text": "scanf ( \"%ld %ld\" , & A , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 610,
                              "end_byte": 615,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 616,
                              "end_byte": 641,
                              "text": "( \"%ld %ld\" , & A , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 616,
                                  "end_byte": 617,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 618,
                                  "end_byte": 627,
                                  "text": "\"%ld %ld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 618,
                                      "end_byte": 619,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 619,
                                      "end_byte": 626,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 626,
                                      "end_byte": 627,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 628,
                                  "end_byte": 629,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 630,
                                  "end_byte": 633,
                                  "text": "& A",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 630,
                                      "end_byte": 631,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 632,
                                      "end_byte": 633,
                                      "text": "A",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 634,
                                  "end_byte": 635,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 636,
                                  "end_byte": 639,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 636,
                                      "end_byte": 637,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 638,
                                      "end_byte": 639,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 640,
                                  "end_byte": 641,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 642,
                          "end_byte": 643,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 644,
                      "end_byte": 670,
                      "text": "LCM = LCommonM ( A , B ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 644,
                          "end_byte": 668,
                          "text": "LCM = LCommonM ( A , B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 644,
                              "end_byte": 647,
                              "text": "LCM",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 648,
                              "end_byte": 649,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 650,
                              "end_byte": 668,
                              "text": "LCommonM ( A , B )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 650,
                                  "end_byte": 658,
                                  "text": "LCommonM",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 659,
                                  "end_byte": 668,
                                  "text": "( A , B )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 659,
                                      "end_byte": 660,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 661,
                                      "end_byte": 662,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 663,
                                      "end_byte": 664,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 665,
                                      "end_byte": 666,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 667,
                                      "end_byte": 668,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 669,
                          "end_byte": 670,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 671,
                      "end_byte": 697,
                      "text": "GCD = GCommonD ( A , B ) ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 671,
                          "end_byte": 695,
                          "text": "GCD = GCommonD ( A , B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 671,
                              "end_byte": 674,
                              "text": "GCD",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 675,
                              "end_byte": 676,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "call_expression",
                              "start_byte": 677,
                              "end_byte": 695,
                              "text": "GCommonD ( A , B )",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 677,
                                  "end_byte": 685,
                                  "text": "GCommonD",
                                  "children": []
                                },
                                {
                                  "type": "argument_list",
                                  "start_byte": 686,
                                  "end_byte": 695,
                                  "text": "( A , B )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 686,
                                      "end_byte": 687,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 688,
                                      "end_byte": 689,
                                      "text": "A",
                                      "children": []
                                    },
                                    {
                                      "type": ",",
                                      "start_byte": 690,
                                      "end_byte": 691,
                                      "text": ",",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 692,
                                      "end_byte": 693,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 694,
                                      "end_byte": 695,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 696,
                          "end_byte": 697,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 698,
                      "end_byte": 734,
                      "text": "printf ( \"%ld %ld\\n\" , GCD , LCM ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 698,
                          "end_byte": 732,
                          "text": "printf ( \"%ld %ld\\n\" , GCD , LCM )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 698,
                              "end_byte": 704,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 705,
                              "end_byte": 732,
                              "text": "( \"%ld %ld\\n\" , GCD , LCM )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 705,
                                  "end_byte": 706,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 707,
                                  "end_byte": 718,
                                  "text": "\"%ld %ld\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 707,
                                      "end_byte": 708,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 708,
                                      "end_byte": 715,
                                      "text": "%ld %ld",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 715,
                                      "end_byte": 717,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 717,
                                      "end_byte": 718,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 719,
                                  "end_byte": 720,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 721,
                                  "end_byte": 724,
                                  "text": "GCD",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 725,
                                  "end_byte": 726,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 727,
                                  "end_byte": 730,
                                  "text": "LCM",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 731,
                                  "end_byte": 732,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 733,
                          "end_byte": 734,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 735,
                      "end_byte": 736,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 737,
              "end_byte": 747,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 737,
                  "end_byte": 743,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 744,
                  "end_byte": 745,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 746,
                  "end_byte": 747,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 748,
              "end_byte": 749,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}