int rows = 0 ; int sum [ 100 ] ; int max ; int a [ 100 ] [ 100 ] ; void maximumsumbinarytree ( int line , int col ) { if ( line != rows ) { if ( line != 0 ) { * ( sum + line ) = * ( sum + line - 1 ) + * ( * ( a + line ) + col ) ; } else { * sum = * * a ; } maximumsumbinarytree ( line + 1 , col + 1 ) ; maximumsumbinarytree ( line + 1 , col ) ; } else { if ( sum [ line - 1 ] > max ) { max = sum [ line - 1 ] ; } } } int main ( ) { int test , i , j ; scanf ( "%d" , & test ) ; while ( test -- ) { scanf ( "%d" , & rows ) ; max = 0 ; for ( i = 0 ; i < rows ; i ++ ) { for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , ( * ( a + i ) + j ) ) ; } maximumsumbinarytree ( 0 , 0 ) ; printf ( "%d\n" , max ) ; } return 0 ; }