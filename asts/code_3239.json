{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 358,
  "text": "void findgcdlcm ( ) { int a , b , c , prod , gcd , lcm ; scanf ( \"%d %d\" , & a , & b ) ; prod = a * b ; while ( b != 0 ) { c = a % b ; if ( c != 0 ) { a = b ; b = c ; } else { gcd = b ; } } lcm = prod / gcd ; printf ( \"\\n%d %d\" , gcd , lcm ) ; } int main ( ) { int i , n ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { findgcdlcm ( ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 245,
      "text": "void findgcdlcm ( ) { int a , b , c , prod , gcd , lcm ; scanf ( \"%d %d\" , & a , & b ) ; prod = a * b ; while ( b != 0 ) { c = a % b ; if ( c != 0 ) { a = b ; b = c ; } else { gcd = b ; } } lcm = prod / gcd ; printf ( \"\\n%d %d\" , gcd , lcm ) ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 4,
          "text": "void",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 5,
          "end_byte": 19,
          "text": "findgcdlcm ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 5,
              "end_byte": 15,
              "text": "findgcdlcm",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 16,
              "end_byte": 19,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 16,
                  "end_byte": 17,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 18,
                  "end_byte": 19,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 20,
          "end_byte": 245,
          "text": "{ int a , b , c , prod , gcd , lcm ; scanf ( \"%d %d\" , & a , & b ) ; prod = a * b ; while ( b != 0 ) { c = a % b ; if ( c != 0 ) { a = b ; b = c ; } else { gcd = b ; } } lcm = prod / gcd ; printf ( \"\\n%d %d\" , gcd , lcm ) ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 20,
              "end_byte": 21,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 22,
              "end_byte": 56,
              "text": "int a , b , c , prod , gcd , lcm ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 22,
                  "end_byte": 25,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 26,
                  "end_byte": 27,
                  "text": "a",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 28,
                  "end_byte": 29,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 30,
                  "end_byte": 31,
                  "text": "b",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 32,
                  "end_byte": 33,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 34,
                  "end_byte": 35,
                  "text": "c",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 36,
                  "end_byte": 37,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 38,
                  "end_byte": 42,
                  "text": "prod",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 43,
                  "end_byte": 44,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 45,
                  "end_byte": 48,
                  "text": "gcd",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 49,
                  "end_byte": 50,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 51,
                  "end_byte": 54,
                  "text": "lcm",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 55,
                  "end_byte": 56,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 57,
              "end_byte": 88,
              "text": "scanf ( \"%d %d\" , & a , & b ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 57,
                  "end_byte": 86,
                  "text": "scanf ( \"%d %d\" , & a , & b )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 57,
                      "end_byte": 62,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 63,
                      "end_byte": 86,
                      "text": "( \"%d %d\" , & a , & b )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 63,
                          "end_byte": 64,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 65,
                          "end_byte": 72,
                          "text": "\"%d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 65,
                              "end_byte": 66,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 66,
                              "end_byte": 71,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 71,
                              "end_byte": 72,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 73,
                          "end_byte": 74,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 75,
                          "end_byte": 78,
                          "text": "& a",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 75,
                              "end_byte": 76,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 77,
                              "end_byte": 78,
                              "text": "a",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 81,
                          "end_byte": 84,
                          "text": "& b",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 81,
                              "end_byte": 82,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 83,
                              "end_byte": 84,
                              "text": "b",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 85,
                          "end_byte": 86,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 87,
                  "end_byte": 88,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 89,
              "end_byte": 103,
              "text": "prod = a * b ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 89,
                  "end_byte": 101,
                  "text": "prod = a * b",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 89,
                      "end_byte": 93,
                      "text": "prod",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 94,
                      "end_byte": 95,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 96,
                      "end_byte": 101,
                      "text": "a * b",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 96,
                          "end_byte": 97,
                          "text": "a",
                          "children": []
                        },
                        {
                          "type": "*",
                          "start_byte": 98,
                          "end_byte": 99,
                          "text": "*",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 100,
                          "end_byte": 101,
                          "text": "b",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 102,
                  "end_byte": 103,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 104,
              "end_byte": 189,
              "text": "while ( b != 0 ) { c = a % b ; if ( c != 0 ) { a = b ; b = c ; } else { gcd = b ; } }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 104,
                  "end_byte": 109,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 110,
                  "end_byte": 120,
                  "text": "( b != 0 )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 110,
                      "end_byte": 111,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 112,
                      "end_byte": 118,
                      "text": "b != 0",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 112,
                          "end_byte": 113,
                          "text": "b",
                          "children": []
                        },
                        {
                          "type": "!=",
                          "start_byte": 114,
                          "end_byte": 116,
                          "text": "!=",
                          "children": []
                        },
                        {
                          "type": "number_literal",
                          "start_byte": 117,
                          "end_byte": 118,
                          "text": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 119,
                      "end_byte": 120,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 121,
                  "end_byte": 189,
                  "text": "{ c = a % b ; if ( c != 0 ) { a = b ; b = c ; } else { gcd = b ; } }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 121,
                      "end_byte": 122,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 123,
                      "end_byte": 134,
                      "text": "c = a % b ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 123,
                          "end_byte": 132,
                          "text": "c = a % b",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 123,
                              "end_byte": 124,
                              "text": "c",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 125,
                              "end_byte": 126,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 127,
                              "end_byte": 132,
                              "text": "a % b",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 127,
                                  "end_byte": 128,
                                  "text": "a",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 129,
                                  "end_byte": 130,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 131,
                                  "end_byte": 132,
                                  "text": "b",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 133,
                          "end_byte": 134,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 135,
                      "end_byte": 187,
                      "text": "if ( c != 0 ) { a = b ; b = c ; } else { gcd = b ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 135,
                          "end_byte": 137,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 138,
                          "end_byte": 148,
                          "text": "( c != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 138,
                              "end_byte": 139,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 140,
                              "end_byte": 146,
                              "text": "c != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 140,
                                  "end_byte": 141,
                                  "text": "c",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 142,
                                  "end_byte": 144,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 145,
                                  "end_byte": 146,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 147,
                              "end_byte": 148,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 149,
                          "end_byte": 168,
                          "text": "{ a = b ; b = c ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 149,
                              "end_byte": 150,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 151,
                              "end_byte": 158,
                              "text": "a = b ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 151,
                                  "end_byte": 156,
                                  "text": "a = b",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 151,
                                      "end_byte": 152,
                                      "text": "a",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 153,
                                      "end_byte": 154,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 155,
                                      "end_byte": 156,
                                      "text": "b",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 157,
                                  "end_byte": 158,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 159,
                              "end_byte": 166,
                              "text": "b = c ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 159,
                                  "end_byte": 164,
                                  "text": "b = c",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 159,
                                      "end_byte": 160,
                                      "text": "b",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 161,
                                      "end_byte": 162,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 163,
                                      "end_byte": 164,
                                      "text": "c",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 165,
                                  "end_byte": 166,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 167,
                              "end_byte": 168,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 169,
                          "end_byte": 187,
                          "text": "else { gcd = b ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 169,
                              "end_byte": 173,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 174,
                              "end_byte": 187,
                              "text": "{ gcd = b ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 174,
                                  "end_byte": 175,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 176,
                                  "end_byte": 185,
                                  "text": "gcd = b ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 176,
                                      "end_byte": 183,
                                      "text": "gcd = b",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 176,
                                          "end_byte": 179,
                                          "text": "gcd",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 180,
                                          "end_byte": 181,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 182,
                                          "end_byte": 183,
                                          "text": "b",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 184,
                                      "end_byte": 185,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 186,
                                  "end_byte": 187,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 188,
                      "end_byte": 189,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 190,
              "end_byte": 208,
              "text": "lcm = prod / gcd ;",
              "children": [
                {
                  "type": "assignment_expression",
                  "start_byte": 190,
                  "end_byte": 206,
                  "text": "lcm = prod / gcd",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 190,
                      "end_byte": 193,
                      "text": "lcm",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 194,
                      "end_byte": 195,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "binary_expression",
                      "start_byte": 196,
                      "end_byte": 206,
                      "text": "prod / gcd",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 196,
                          "end_byte": 200,
                          "text": "prod",
                          "children": []
                        },
                        {
                          "type": "/",
                          "start_byte": 201,
                          "end_byte": 202,
                          "text": "/",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 203,
                          "end_byte": 206,
                          "text": "gcd",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 207,
                  "end_byte": 208,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 209,
              "end_byte": 243,
              "text": "printf ( \"\\n%d %d\" , gcd , lcm ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 209,
                  "end_byte": 241,
                  "text": "printf ( \"\\n%d %d\" , gcd , lcm )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 209,
                      "end_byte": 215,
                      "text": "printf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 216,
                      "end_byte": 241,
                      "text": "( \"\\n%d %d\" , gcd , lcm )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 216,
                          "end_byte": 217,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 218,
                          "end_byte": 227,
                          "text": "\"\\n%d %d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 218,
                              "end_byte": 219,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "escape_sequence",
                              "start_byte": 219,
                              "end_byte": 221,
                              "text": "\\n",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 221,
                              "end_byte": 226,
                              "text": "%d %d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 226,
                              "end_byte": 227,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 228,
                          "end_byte": 229,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 230,
                          "end_byte": 233,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 234,
                          "end_byte": 235,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 236,
                          "end_byte": 239,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ")",
                          "start_byte": 240,
                          "end_byte": 241,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 242,
                  "end_byte": 243,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 244,
              "end_byte": 245,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "start_byte": 246,
      "end_byte": 358,
      "text": "int main ( ) { int i , n ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { findgcdlcm ( ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 246,
          "end_byte": 249,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 250,
          "end_byte": 258,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 250,
              "end_byte": 254,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 255,
              "end_byte": 258,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 255,
                  "end_byte": 256,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 257,
                  "end_byte": 258,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 259,
          "end_byte": 358,
          "text": "{ int i , n ; scanf ( \"%d\" , & n ) ; for ( i = 0 ; i < n ; i ++ ) { findgcdlcm ( ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 259,
              "end_byte": 260,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 261,
              "end_byte": 272,
              "text": "int i , n ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 261,
                  "end_byte": 264,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 265,
                  "end_byte": 266,
                  "text": "i",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 267,
                  "end_byte": 268,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 269,
                  "end_byte": 270,
                  "text": "n",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 271,
                  "end_byte": 272,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 273,
              "end_byte": 295,
              "text": "scanf ( \"%d\" , & n ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 273,
                  "end_byte": 293,
                  "text": "scanf ( \"%d\" , & n )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 273,
                      "end_byte": 278,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 279,
                      "end_byte": 293,
                      "text": "( \"%d\" , & n )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 279,
                          "end_byte": 280,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 281,
                          "end_byte": 285,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 281,
                              "end_byte": 282,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 282,
                              "end_byte": 284,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 284,
                              "end_byte": 285,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 286,
                          "end_byte": 287,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 288,
                          "end_byte": 291,
                          "text": "& n",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 288,
                              "end_byte": 289,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 290,
                              "end_byte": 291,
                              "text": "n",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 292,
                          "end_byte": 293,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 294,
                  "end_byte": 295,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "for_statement",
              "start_byte": 296,
              "end_byte": 345,
              "text": "for ( i = 0 ; i < n ; i ++ ) { findgcdlcm ( ) ; }",
              "children": [
                {
                  "type": "for",
                  "start_byte": 296,
                  "end_byte": 299,
                  "text": "for",
                  "children": []
                },
                {
                  "type": "(",
                  "start_byte": 300,
                  "end_byte": 301,
                  "text": "(",
                  "children": []
                },
                {
                  "type": "assignment_expression",
                  "start_byte": 302,
                  "end_byte": 307,
                  "text": "i = 0",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 302,
                      "end_byte": 303,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "=",
                      "start_byte": 304,
                      "end_byte": 305,
                      "text": "=",
                      "children": []
                    },
                    {
                      "type": "number_literal",
                      "start_byte": 306,
                      "end_byte": 307,
                      "text": "0",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 308,
                  "end_byte": 309,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "binary_expression",
                  "start_byte": 310,
                  "end_byte": 315,
                  "text": "i < n",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 310,
                      "end_byte": 311,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "<",
                      "start_byte": 312,
                      "end_byte": 313,
                      "text": "<",
                      "children": []
                    },
                    {
                      "type": "identifier",
                      "start_byte": 314,
                      "end_byte": 315,
                      "text": "n",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 316,
                  "end_byte": 317,
                  "text": ";",
                  "children": []
                },
                {
                  "type": "update_expression",
                  "start_byte": 318,
                  "end_byte": 322,
                  "text": "i ++",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 318,
                      "end_byte": 319,
                      "text": "i",
                      "children": []
                    },
                    {
                      "type": "++",
                      "start_byte": 320,
                      "end_byte": 322,
                      "text": "++",
                      "children": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "start_byte": 323,
                  "end_byte": 324,
                  "text": ")",
                  "children": []
                },
                {
                  "type": "compound_statement",
                  "start_byte": 325,
                  "end_byte": 345,
                  "text": "{ findgcdlcm ( ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 325,
                      "end_byte": 326,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 327,
                      "end_byte": 343,
                      "text": "findgcdlcm ( ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 327,
                          "end_byte": 341,
                          "text": "findgcdlcm ( )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 327,
                              "end_byte": 337,
                              "text": "findgcdlcm",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 338,
                              "end_byte": 341,
                              "text": "( )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 338,
                                  "end_byte": 339,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 340,
                                  "end_byte": 341,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 342,
                          "end_byte": 343,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 344,
                      "end_byte": 345,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 346,
              "end_byte": 356,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 346,
                  "end_byte": 352,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 353,
                  "end_byte": 354,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 355,
                  "end_byte": 356,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 357,
              "end_byte": 358,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}