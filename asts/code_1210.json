{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 542,
  "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long long int num1 , num2 , gcd , lcm , numerator , denominator , remainder ; scanf ( \"%lld%lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( num1 * num2 ) / gcd ; printf ( \"%lld%lld/n\" , gcd , lcm ) ; } }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 542,
      "text": "int main ( ) { int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long long int num1 , num2 , gcd , lcm , numerator , denominator , remainder ; scanf ( \"%lld%lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( num1 * num2 ) / gcd ; printf ( \"%lld%lld/n\" , gcd , lcm ) ; } }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 542,
          "text": "{ int t ; scanf ( \"%d\" , & t ) ; while ( t -- ) { long long int num1 , num2 , gcd , lcm , numerator , denominator , remainder ; scanf ( \"%lld%lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( num1 * num2 ) / gcd ; printf ( \"%lld%lld/n\" , gcd , lcm ) ; } }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 22,
              "text": "int t ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 23,
              "end_byte": 45,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 23,
                  "end_byte": 43,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 23,
                      "end_byte": 28,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 29,
                      "end_byte": 43,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 29,
                          "end_byte": 30,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 31,
                          "end_byte": 35,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 31,
                              "end_byte": 32,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 32,
                              "end_byte": 34,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 34,
                              "end_byte": 35,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 36,
                          "end_byte": 37,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 38,
                          "end_byte": 41,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 38,
                              "end_byte": 39,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 40,
                              "end_byte": 41,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 42,
                          "end_byte": 43,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 44,
                  "end_byte": 45,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 46,
              "end_byte": 540,
              "text": "while ( t -- ) { long long int num1 , num2 , gcd , lcm , numerator , denominator , remainder ; scanf ( \"%lld%lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( num1 * num2 ) / gcd ; printf ( \"%lld%lld/n\" , gcd , lcm ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 46,
                  "end_byte": 51,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 52,
                  "end_byte": 60,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 52,
                      "end_byte": 53,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 54,
                      "end_byte": 58,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 54,
                          "end_byte": 55,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 56,
                          "end_byte": 58,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 59,
                      "end_byte": 60,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 61,
                  "end_byte": 540,
                  "text": "{ long long int num1 , num2 , gcd , lcm , numerator , denominator , remainder ; scanf ( \"%lld%lld\" , & num1 , & num2 ) ; if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; } remainder = numerator % denominator ; while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; } gcd = denominator ; lcm = ( num1 * num2 ) / gcd ; printf ( \"%lld%lld/n\" , gcd , lcm ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 61,
                      "end_byte": 62,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 63,
                      "end_byte": 140,
                      "text": "long long int num1 , num2 , gcd , lcm , numerator , denominator , remainder ;",
                      "children": [
                        {
                          "type": "sized_type_specifier",
                          "start_byte": 63,
                          "end_byte": 76,
                          "text": "long long int",
                          "children": [
                            {
                              "type": "long",
                              "start_byte": 63,
                              "end_byte": 67,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "long",
                              "start_byte": 68,
                              "end_byte": 72,
                              "text": "long",
                              "children": []
                            },
                            {
                              "type": "primitive_type",
                              "start_byte": 73,
                              "end_byte": 76,
                              "text": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "identifier",
                          "start_byte": 77,
                          "end_byte": 81,
                          "text": "num1",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 82,
                          "end_byte": 83,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 84,
                          "end_byte": 88,
                          "text": "num2",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 89,
                          "end_byte": 90,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 91,
                          "end_byte": 94,
                          "text": "gcd",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 95,
                          "end_byte": 96,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 97,
                          "end_byte": 100,
                          "text": "lcm",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 101,
                          "end_byte": 102,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 103,
                          "end_byte": 112,
                          "text": "numerator",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 113,
                          "end_byte": 114,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 115,
                          "end_byte": 126,
                          "text": "denominator",
                          "children": []
                        },
                        {
                          "type": ",",
                          "start_byte": 127,
                          "end_byte": 128,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "identifier",
                          "start_byte": 129,
                          "end_byte": 138,
                          "text": "remainder",
                          "children": []
                        },
                        {
                          "type": ";",
                          "start_byte": 139,
                          "end_byte": 140,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 141,
                      "end_byte": 181,
                      "text": "scanf ( \"%lld%lld\" , & num1 , & num2 ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 141,
                          "end_byte": 179,
                          "text": "scanf ( \"%lld%lld\" , & num1 , & num2 )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 141,
                              "end_byte": 146,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 147,
                              "end_byte": 179,
                              "text": "( \"%lld%lld\" , & num1 , & num2 )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 147,
                                  "end_byte": 148,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 149,
                                  "end_byte": 159,
                                  "text": "\"%lld%lld\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 149,
                                      "end_byte": 150,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 150,
                                      "end_byte": 158,
                                      "text": "%lld%lld",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 158,
                                      "end_byte": 159,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 160,
                                  "end_byte": 161,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 162,
                                  "end_byte": 168,
                                  "text": "& num1",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 162,
                                      "end_byte": 163,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 164,
                                      "end_byte": 168,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 169,
                                  "end_byte": 170,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 171,
                                  "end_byte": 177,
                                  "text": "& num2",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 171,
                                      "end_byte": 172,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 173,
                                      "end_byte": 177,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 178,
                                  "end_byte": 179,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 180,
                          "end_byte": 181,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "if_statement",
                      "start_byte": 182,
                      "end_byte": 293,
                      "text": "if ( num1 > num2 ) { numerator = num1 ; denominator = num2 ; } else { numerator = num2 ; denominator = num1 ; }",
                      "children": [
                        {
                          "type": "if",
                          "start_byte": 182,
                          "end_byte": 184,
                          "text": "if",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 185,
                          "end_byte": 200,
                          "text": "( num1 > num2 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 185,
                              "end_byte": 186,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 187,
                              "end_byte": 198,
                              "text": "num1 > num2",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 187,
                                  "end_byte": 191,
                                  "text": "num1",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 192,
                                  "end_byte": 193,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 194,
                                  "end_byte": 198,
                                  "text": "num2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 199,
                              "end_byte": 200,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 201,
                          "end_byte": 244,
                          "text": "{ numerator = num1 ; denominator = num2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 201,
                              "end_byte": 202,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 203,
                              "end_byte": 221,
                              "text": "numerator = num1 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 203,
                                  "end_byte": 219,
                                  "text": "numerator = num1",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 203,
                                      "end_byte": 212,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 213,
                                      "end_byte": 214,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 215,
                                      "end_byte": 219,
                                      "text": "num1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 220,
                                  "end_byte": 221,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 222,
                              "end_byte": 242,
                              "text": "denominator = num2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 222,
                                  "end_byte": 240,
                                  "text": "denominator = num2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 222,
                                      "end_byte": 233,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 234,
                                      "end_byte": 235,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 236,
                                      "end_byte": 240,
                                      "text": "num2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 241,
                                  "end_byte": 242,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 243,
                              "end_byte": 244,
                              "text": "}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "else_clause",
                          "start_byte": 245,
                          "end_byte": 293,
                          "text": "else { numerator = num2 ; denominator = num1 ; }",
                          "children": [
                            {
                              "type": "else",
                              "start_byte": 245,
                              "end_byte": 249,
                              "text": "else",
                              "children": []
                            },
                            {
                              "type": "compound_statement",
                              "start_byte": 250,
                              "end_byte": 293,
                              "text": "{ numerator = num2 ; denominator = num1 ; }",
                              "children": [
                                {
                                  "type": "{",
                                  "start_byte": 250,
                                  "end_byte": 251,
                                  "text": "{",
                                  "children": []
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 252,
                                  "end_byte": 270,
                                  "text": "numerator = num2 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 252,
                                      "end_byte": 268,
                                      "text": "numerator = num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 252,
                                          "end_byte": 261,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 262,
                                          "end_byte": 263,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 264,
                                          "end_byte": 268,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 269,
                                      "end_byte": 270,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "expression_statement",
                                  "start_byte": 271,
                                  "end_byte": 291,
                                  "text": "denominator = num1 ;",
                                  "children": [
                                    {
                                      "type": "assignment_expression",
                                      "start_byte": 271,
                                      "end_byte": 289,
                                      "text": "denominator = num1",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 271,
                                          "end_byte": 282,
                                          "text": "denominator",
                                          "children": []
                                        },
                                        {
                                          "type": "=",
                                          "start_byte": 283,
                                          "end_byte": 284,
                                          "text": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 285,
                                          "end_byte": 289,
                                          "text": "num1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ";",
                                      "start_byte": 290,
                                      "end_byte": 291,
                                      "text": ";",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "}",
                                  "start_byte": 292,
                                  "end_byte": 293,
                                  "text": "}",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 294,
                      "end_byte": 331,
                      "text": "remainder = numerator % denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 294,
                          "end_byte": 329,
                          "text": "remainder = numerator % denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 294,
                              "end_byte": 303,
                              "text": "remainder",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 304,
                              "end_byte": 305,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 306,
                              "end_byte": 329,
                              "text": "numerator % denominator",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 306,
                                  "end_byte": 315,
                                  "text": "numerator",
                                  "children": []
                                },
                                {
                                  "type": "%",
                                  "start_byte": 316,
                                  "end_byte": 317,
                                  "text": "%",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 318,
                                  "end_byte": 329,
                                  "text": "denominator",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 330,
                          "end_byte": 331,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 332,
                      "end_byte": 450,
                      "text": "while ( remainder != 0 ) { numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 332,
                          "end_byte": 337,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 338,
                          "end_byte": 356,
                          "text": "( remainder != 0 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 338,
                              "end_byte": 339,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 340,
                              "end_byte": 354,
                              "text": "remainder != 0",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 340,
                                  "end_byte": 349,
                                  "text": "remainder",
                                  "children": []
                                },
                                {
                                  "type": "!=",
                                  "start_byte": 350,
                                  "end_byte": 352,
                                  "text": "!=",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 353,
                                  "end_byte": 354,
                                  "text": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 355,
                              "end_byte": 356,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 357,
                          "end_byte": 450,
                          "text": "{ numerator = denominator ; denominator = remainder ; remainder = numerator % denominator ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 357,
                              "end_byte": 358,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 359,
                              "end_byte": 384,
                              "text": "numerator = denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 359,
                                  "end_byte": 382,
                                  "text": "numerator = denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 359,
                                      "end_byte": 368,
                                      "text": "numerator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 369,
                                      "end_byte": 370,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 371,
                                      "end_byte": 382,
                                      "text": "denominator",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 383,
                                  "end_byte": 384,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 385,
                              "end_byte": 410,
                              "text": "denominator = remainder ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 385,
                                  "end_byte": 408,
                                  "text": "denominator = remainder",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 385,
                                      "end_byte": 396,
                                      "text": "denominator",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 397,
                                      "end_byte": 398,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 399,
                                      "end_byte": 408,
                                      "text": "remainder",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 409,
                                  "end_byte": 410,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 411,
                              "end_byte": 448,
                              "text": "remainder = numerator % denominator ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 411,
                                  "end_byte": 446,
                                  "text": "remainder = numerator % denominator",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 411,
                                      "end_byte": 420,
                                      "text": "remainder",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 421,
                                      "end_byte": 422,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 423,
                                      "end_byte": 446,
                                      "text": "numerator % denominator",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 423,
                                          "end_byte": 432,
                                          "text": "numerator",
                                          "children": []
                                        },
                                        {
                                          "type": "%",
                                          "start_byte": 433,
                                          "end_byte": 434,
                                          "text": "%",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 435,
                                          "end_byte": 446,
                                          "text": "denominator",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 447,
                                  "end_byte": 448,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 449,
                              "end_byte": 450,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 451,
                      "end_byte": 470,
                      "text": "gcd = denominator ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 451,
                          "end_byte": 468,
                          "text": "gcd = denominator",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 451,
                              "end_byte": 454,
                              "text": "gcd",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 455,
                              "end_byte": 456,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 457,
                              "end_byte": 468,
                              "text": "denominator",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 469,
                          "end_byte": 470,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 471,
                      "end_byte": 500,
                      "text": "lcm = ( num1 * num2 ) / gcd ;",
                      "children": [
                        {
                          "type": "assignment_expression",
                          "start_byte": 471,
                          "end_byte": 498,
                          "text": "lcm = ( num1 * num2 ) / gcd",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 471,
                              "end_byte": 474,
                              "text": "lcm",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 475,
                              "end_byte": 476,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 477,
                              "end_byte": 498,
                              "text": "( num1 * num2 ) / gcd",
                              "children": [
                                {
                                  "type": "parenthesized_expression",
                                  "start_byte": 477,
                                  "end_byte": 492,
                                  "text": "( num1 * num2 )",
                                  "children": [
                                    {
                                      "type": "(",
                                      "start_byte": 477,
                                      "end_byte": 478,
                                      "text": "(",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 479,
                                      "end_byte": 490,
                                      "text": "num1 * num2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 479,
                                          "end_byte": 483,
                                          "text": "num1",
                                          "children": []
                                        },
                                        {
                                          "type": "*",
                                          "start_byte": 484,
                                          "end_byte": 485,
                                          "text": "*",
                                          "children": []
                                        },
                                        {
                                          "type": "identifier",
                                          "start_byte": 486,
                                          "end_byte": 490,
                                          "text": "num2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": ")",
                                      "start_byte": 491,
                                      "end_byte": 492,
                                      "text": ")",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "/",
                                  "start_byte": 493,
                                  "end_byte": 494,
                                  "text": "/",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 495,
                                  "end_byte": 498,
                                  "text": "gcd",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 499,
                          "end_byte": 500,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 501,
                      "end_byte": 538,
                      "text": "printf ( \"%lld%lld/n\" , gcd , lcm ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 501,
                          "end_byte": 536,
                          "text": "printf ( \"%lld%lld/n\" , gcd , lcm )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 501,
                              "end_byte": 507,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 508,
                              "end_byte": 536,
                              "text": "( \"%lld%lld/n\" , gcd , lcm )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 508,
                                  "end_byte": 509,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 510,
                                  "end_byte": 522,
                                  "text": "\"%lld%lld/n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 510,
                                      "end_byte": 511,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 511,
                                      "end_byte": 521,
                                      "text": "%lld%lld/n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 521,
                                      "end_byte": 522,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 523,
                                  "end_byte": 524,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 525,
                                  "end_byte": 528,
                                  "text": "gcd",
                                  "children": []
                                },
                                {
                                  "type": ",",
                                  "start_byte": 529,
                                  "end_byte": 530,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 531,
                                  "end_byte": 534,
                                  "text": "lcm",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 535,
                                  "end_byte": 536,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 537,
                          "end_byte": 538,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 539,
                      "end_byte": 540,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 541,
              "end_byte": 542,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}