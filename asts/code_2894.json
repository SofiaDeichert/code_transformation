{
  "type": "translation_unit",
  "start_byte": 0,
  "end_byte": 196,
  "text": "int main ( ) { int t , B ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int sum = 0 ; scanf ( \"%d\" , & B ) ; while ( B > 3 ) { B = B - 2 ; sum = sum + B / 2 ; } printf ( \"%d\\n\" , sum ) ; } return 0 ; }",
  "children": [
    {
      "type": "function_definition",
      "start_byte": 0,
      "end_byte": 196,
      "text": "int main ( ) { int t , B ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int sum = 0 ; scanf ( \"%d\" , & B ) ; while ( B > 3 ) { B = B - 2 ; sum = sum + B / 2 ; } printf ( \"%d\\n\" , sum ) ; } return 0 ; }",
      "children": [
        {
          "type": "primitive_type",
          "start_byte": 0,
          "end_byte": 3,
          "text": "int",
          "children": []
        },
        {
          "type": "function_declarator",
          "start_byte": 4,
          "end_byte": 12,
          "text": "main ( )",
          "children": [
            {
              "type": "identifier",
              "start_byte": 4,
              "end_byte": 8,
              "text": "main",
              "children": []
            },
            {
              "type": "parameter_list",
              "start_byte": 9,
              "end_byte": 12,
              "text": "( )",
              "children": [
                {
                  "type": "(",
                  "start_byte": 9,
                  "end_byte": 10,
                  "text": "(",
                  "children": []
                },
                {
                  "type": ")",
                  "start_byte": 11,
                  "end_byte": 12,
                  "text": ")",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "start_byte": 13,
          "end_byte": 196,
          "text": "{ int t , B ; scanf ( \"%d\" , & t ) ; while ( t -- ) { int sum = 0 ; scanf ( \"%d\" , & B ) ; while ( B > 3 ) { B = B - 2 ; sum = sum + B / 2 ; } printf ( \"%d\\n\" , sum ) ; } return 0 ; }",
          "children": [
            {
              "type": "{",
              "start_byte": 13,
              "end_byte": 14,
              "text": "{",
              "children": []
            },
            {
              "type": "declaration",
              "start_byte": 15,
              "end_byte": 26,
              "text": "int t , B ;",
              "children": [
                {
                  "type": "primitive_type",
                  "start_byte": 15,
                  "end_byte": 18,
                  "text": "int",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 19,
                  "end_byte": 20,
                  "text": "t",
                  "children": []
                },
                {
                  "type": ",",
                  "start_byte": 21,
                  "end_byte": 22,
                  "text": ",",
                  "children": []
                },
                {
                  "type": "identifier",
                  "start_byte": 23,
                  "end_byte": 24,
                  "text": "B",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 25,
                  "end_byte": 26,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "start_byte": 27,
              "end_byte": 49,
              "text": "scanf ( \"%d\" , & t ) ;",
              "children": [
                {
                  "type": "call_expression",
                  "start_byte": 27,
                  "end_byte": 47,
                  "text": "scanf ( \"%d\" , & t )",
                  "children": [
                    {
                      "type": "identifier",
                      "start_byte": 27,
                      "end_byte": 32,
                      "text": "scanf",
                      "children": []
                    },
                    {
                      "type": "argument_list",
                      "start_byte": 33,
                      "end_byte": 47,
                      "text": "( \"%d\" , & t )",
                      "children": [
                        {
                          "type": "(",
                          "start_byte": 33,
                          "end_byte": 34,
                          "text": "(",
                          "children": []
                        },
                        {
                          "type": "string_literal",
                          "start_byte": 35,
                          "end_byte": 39,
                          "text": "\"%d\"",
                          "children": [
                            {
                              "type": "\"",
                              "start_byte": 35,
                              "end_byte": 36,
                              "text": "\"",
                              "children": []
                            },
                            {
                              "type": "string_content",
                              "start_byte": 36,
                              "end_byte": 38,
                              "text": "%d",
                              "children": []
                            },
                            {
                              "type": "\"",
                              "start_byte": 38,
                              "end_byte": 39,
                              "text": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "start_byte": 40,
                          "end_byte": 41,
                          "text": ",",
                          "children": []
                        },
                        {
                          "type": "pointer_expression",
                          "start_byte": 42,
                          "end_byte": 45,
                          "text": "& t",
                          "children": [
                            {
                              "type": "&",
                              "start_byte": 42,
                              "end_byte": 43,
                              "text": "&",
                              "children": []
                            },
                            {
                              "type": "identifier",
                              "start_byte": 44,
                              "end_byte": 45,
                              "text": "t",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "start_byte": 46,
                          "end_byte": 47,
                          "text": ")",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "start_byte": 48,
                  "end_byte": 49,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "while_statement",
              "start_byte": 50,
              "end_byte": 183,
              "text": "while ( t -- ) { int sum = 0 ; scanf ( \"%d\" , & B ) ; while ( B > 3 ) { B = B - 2 ; sum = sum + B / 2 ; } printf ( \"%d\\n\" , sum ) ; }",
              "children": [
                {
                  "type": "while",
                  "start_byte": 50,
                  "end_byte": 55,
                  "text": "while",
                  "children": []
                },
                {
                  "type": "condition_clause",
                  "start_byte": 56,
                  "end_byte": 64,
                  "text": "( t -- )",
                  "children": [
                    {
                      "type": "(",
                      "start_byte": 56,
                      "end_byte": 57,
                      "text": "(",
                      "children": []
                    },
                    {
                      "type": "update_expression",
                      "start_byte": 58,
                      "end_byte": 62,
                      "text": "t --",
                      "children": [
                        {
                          "type": "identifier",
                          "start_byte": 58,
                          "end_byte": 59,
                          "text": "t",
                          "children": []
                        },
                        {
                          "type": "--",
                          "start_byte": 60,
                          "end_byte": 62,
                          "text": "--",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": ")",
                      "start_byte": 63,
                      "end_byte": 64,
                      "text": ")",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "compound_statement",
                  "start_byte": 65,
                  "end_byte": 183,
                  "text": "{ int sum = 0 ; scanf ( \"%d\" , & B ) ; while ( B > 3 ) { B = B - 2 ; sum = sum + B / 2 ; } printf ( \"%d\\n\" , sum ) ; }",
                  "children": [
                    {
                      "type": "{",
                      "start_byte": 65,
                      "end_byte": 66,
                      "text": "{",
                      "children": []
                    },
                    {
                      "type": "declaration",
                      "start_byte": 67,
                      "end_byte": 80,
                      "text": "int sum = 0 ;",
                      "children": [
                        {
                          "type": "primitive_type",
                          "start_byte": 67,
                          "end_byte": 70,
                          "text": "int",
                          "children": []
                        },
                        {
                          "type": "init_declarator",
                          "start_byte": 71,
                          "end_byte": 78,
                          "text": "sum = 0",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 71,
                              "end_byte": 74,
                              "text": "sum",
                              "children": []
                            },
                            {
                              "type": "=",
                              "start_byte": 75,
                              "end_byte": 76,
                              "text": "=",
                              "children": []
                            },
                            {
                              "type": "number_literal",
                              "start_byte": 77,
                              "end_byte": 78,
                              "text": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 79,
                          "end_byte": 80,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 81,
                      "end_byte": 103,
                      "text": "scanf ( \"%d\" , & B ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 81,
                          "end_byte": 101,
                          "text": "scanf ( \"%d\" , & B )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 81,
                              "end_byte": 86,
                              "text": "scanf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 87,
                              "end_byte": 101,
                              "text": "( \"%d\" , & B )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 87,
                                  "end_byte": 88,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 89,
                                  "end_byte": 93,
                                  "text": "\"%d\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 89,
                                      "end_byte": 90,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 90,
                                      "end_byte": 92,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 92,
                                      "end_byte": 93,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 94,
                                  "end_byte": 95,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "start_byte": 96,
                                  "end_byte": 99,
                                  "text": "& B",
                                  "children": [
                                    {
                                      "type": "&",
                                      "start_byte": 96,
                                      "end_byte": 97,
                                      "text": "&",
                                      "children": []
                                    },
                                    {
                                      "type": "identifier",
                                      "start_byte": 98,
                                      "end_byte": 99,
                                      "text": "B",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "start_byte": 100,
                                  "end_byte": 101,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 102,
                          "end_byte": 103,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "while_statement",
                      "start_byte": 104,
                      "end_byte": 155,
                      "text": "while ( B > 3 ) { B = B - 2 ; sum = sum + B / 2 ; }",
                      "children": [
                        {
                          "type": "while",
                          "start_byte": 104,
                          "end_byte": 109,
                          "text": "while",
                          "children": []
                        },
                        {
                          "type": "condition_clause",
                          "start_byte": 110,
                          "end_byte": 119,
                          "text": "( B > 3 )",
                          "children": [
                            {
                              "type": "(",
                              "start_byte": 110,
                              "end_byte": 111,
                              "text": "(",
                              "children": []
                            },
                            {
                              "type": "binary_expression",
                              "start_byte": 112,
                              "end_byte": 117,
                              "text": "B > 3",
                              "children": [
                                {
                                  "type": "identifier",
                                  "start_byte": 112,
                                  "end_byte": 113,
                                  "text": "B",
                                  "children": []
                                },
                                {
                                  "type": ">",
                                  "start_byte": 114,
                                  "end_byte": 115,
                                  "text": ">",
                                  "children": []
                                },
                                {
                                  "type": "number_literal",
                                  "start_byte": 116,
                                  "end_byte": 117,
                                  "text": "3",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "start_byte": 118,
                              "end_byte": 119,
                              "text": ")",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "compound_statement",
                          "start_byte": 120,
                          "end_byte": 155,
                          "text": "{ B = B - 2 ; sum = sum + B / 2 ; }",
                          "children": [
                            {
                              "type": "{",
                              "start_byte": 120,
                              "end_byte": 121,
                              "text": "{",
                              "children": []
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 122,
                              "end_byte": 133,
                              "text": "B = B - 2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 122,
                                  "end_byte": 131,
                                  "text": "B = B - 2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 122,
                                      "end_byte": 123,
                                      "text": "B",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 124,
                                      "end_byte": 125,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 126,
                                      "end_byte": 131,
                                      "text": "B - 2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 126,
                                          "end_byte": 127,
                                          "text": "B",
                                          "children": []
                                        },
                                        {
                                          "type": "-",
                                          "start_byte": 128,
                                          "end_byte": 129,
                                          "text": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "number_literal",
                                          "start_byte": 130,
                                          "end_byte": 131,
                                          "text": "2",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 132,
                                  "end_byte": 133,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "expression_statement",
                              "start_byte": 134,
                              "end_byte": 153,
                              "text": "sum = sum + B / 2 ;",
                              "children": [
                                {
                                  "type": "assignment_expression",
                                  "start_byte": 134,
                                  "end_byte": 151,
                                  "text": "sum = sum + B / 2",
                                  "children": [
                                    {
                                      "type": "identifier",
                                      "start_byte": 134,
                                      "end_byte": 137,
                                      "text": "sum",
                                      "children": []
                                    },
                                    {
                                      "type": "=",
                                      "start_byte": 138,
                                      "end_byte": 139,
                                      "text": "=",
                                      "children": []
                                    },
                                    {
                                      "type": "binary_expression",
                                      "start_byte": 140,
                                      "end_byte": 151,
                                      "text": "sum + B / 2",
                                      "children": [
                                        {
                                          "type": "identifier",
                                          "start_byte": 140,
                                          "end_byte": 143,
                                          "text": "sum",
                                          "children": []
                                        },
                                        {
                                          "type": "+",
                                          "start_byte": 144,
                                          "end_byte": 145,
                                          "text": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "binary_expression",
                                          "start_byte": 146,
                                          "end_byte": 151,
                                          "text": "B / 2",
                                          "children": [
                                            {
                                              "type": "identifier",
                                              "start_byte": 146,
                                              "end_byte": 147,
                                              "text": "B",
                                              "children": []
                                            },
                                            {
                                              "type": "/",
                                              "start_byte": 148,
                                              "end_byte": 149,
                                              "text": "/",
                                              "children": []
                                            },
                                            {
                                              "type": "number_literal",
                                              "start_byte": 150,
                                              "end_byte": 151,
                                              "text": "2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ";",
                                  "start_byte": 152,
                                  "end_byte": 153,
                                  "text": ";",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "}",
                              "start_byte": 154,
                              "end_byte": 155,
                              "text": "}",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "expression_statement",
                      "start_byte": 156,
                      "end_byte": 181,
                      "text": "printf ( \"%d\\n\" , sum ) ;",
                      "children": [
                        {
                          "type": "call_expression",
                          "start_byte": 156,
                          "end_byte": 179,
                          "text": "printf ( \"%d\\n\" , sum )",
                          "children": [
                            {
                              "type": "identifier",
                              "start_byte": 156,
                              "end_byte": 162,
                              "text": "printf",
                              "children": []
                            },
                            {
                              "type": "argument_list",
                              "start_byte": 163,
                              "end_byte": 179,
                              "text": "( \"%d\\n\" , sum )",
                              "children": [
                                {
                                  "type": "(",
                                  "start_byte": 163,
                                  "end_byte": 164,
                                  "text": "(",
                                  "children": []
                                },
                                {
                                  "type": "string_literal",
                                  "start_byte": 165,
                                  "end_byte": 171,
                                  "text": "\"%d\\n\"",
                                  "children": [
                                    {
                                      "type": "\"",
                                      "start_byte": 165,
                                      "end_byte": 166,
                                      "text": "\"",
                                      "children": []
                                    },
                                    {
                                      "type": "string_content",
                                      "start_byte": 166,
                                      "end_byte": 168,
                                      "text": "%d",
                                      "children": []
                                    },
                                    {
                                      "type": "escape_sequence",
                                      "start_byte": 168,
                                      "end_byte": 170,
                                      "text": "\\n",
                                      "children": []
                                    },
                                    {
                                      "type": "\"",
                                      "start_byte": 170,
                                      "end_byte": 171,
                                      "text": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "start_byte": 172,
                                  "end_byte": 173,
                                  "text": ",",
                                  "children": []
                                },
                                {
                                  "type": "identifier",
                                  "start_byte": 174,
                                  "end_byte": 177,
                                  "text": "sum",
                                  "children": []
                                },
                                {
                                  "type": ")",
                                  "start_byte": 178,
                                  "end_byte": 179,
                                  "text": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ";",
                          "start_byte": 180,
                          "end_byte": 181,
                          "text": ";",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "}",
                      "start_byte": 182,
                      "end_byte": 183,
                      "text": "}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "return_statement",
              "start_byte": 184,
              "end_byte": 194,
              "text": "return 0 ;",
              "children": [
                {
                  "type": "return",
                  "start_byte": 184,
                  "end_byte": 190,
                  "text": "return",
                  "children": []
                },
                {
                  "type": "number_literal",
                  "start_byte": 191,
                  "end_byte": 192,
                  "text": "0",
                  "children": []
                },
                {
                  "type": ";",
                  "start_byte": 193,
                  "end_byte": 194,
                  "text": ";",
                  "children": []
                }
              ]
            },
            {
              "type": "}",
              "start_byte": 195,
              "end_byte": 196,
              "text": "}",
              "children": []
            }
          ]
        }
      ]
    }
  ]
}