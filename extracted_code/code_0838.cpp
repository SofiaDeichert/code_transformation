int A [ MAX ] [ MAX ] ; int path [ MAX ] [ MAX ] ; void performTest ( ) { int i , j , numRow ; scanf ( "%d" , & numRow ) ; for ( i = 0 ; i < numRow ; i ++ ) for ( j = 0 ; j <= i ; j ++ ) scanf ( "%d" , & A [ i ] [ j ] ) ; path [ 0 ] [ 0 ] = A [ 0 ] [ 0 ] ; for ( i = 1 ; i < numRow ; i ++ ) { path [ i ] [ 0 ] = path [ i - 1 ] [ 0 ] + A [ i ] [ 0 ] ; path [ i ] [ i ] = path [ i - 1 ] [ i - 1 ] + A [ i ] [ i ] ; } for ( i = 2 ; i < numRow ; i ++ ) for ( j = 1 ; j < i ; j ++ ) if ( path [ i - 1 ] [ j - 1 ] + A [ i ] [ j ] > path [ i - 1 ] [ j ] + A [ i ] [ j ] ) path [ i ] [ j ] = path [ i - 1 ] [ j - 1 ] + A [ i ] [ j ] ; else path [ i ] [ j ] = path [ i - 1 ] [ j ] + A [ i ] [ j ] ; int path_max = 0 ; for ( j = 0 ; j < numRow ; j ++ ) if ( path [ numRow - 1 ] [ j ] > path_max ) path_max = path [ numRow - 1 ] [ j ] ; printf ( "%d\n" , path_max ) ; } int main ( ) { int numTest ; scanf ( "%d" , & numTest ) ; while ( numTest -- ) performTest ( ) ; return 0 ; }