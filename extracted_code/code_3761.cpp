void fun ( long * , long * , long * ) ; int main ( ) { int t , i = 0 ; long n , a [ 50000 ] , g , j = 0 , k = 1 ; long long cost = 0 ; scanf ( "%d" , & t ) ; for ( i = 0 ; i < t ; i ++ ) { scanf ( "%ld" , & n ) ; for ( j = 0 ; j < n ; j ++ ) scanf ( "%ld" , & a [ j ] ) ; j = 0 ; k = 1 ; while ( j < n && k < n ) { if ( a [ k ] > a [ j ] ) { g = a [ j ] ; fun ( & a , & n , & k ) ; } else { g = a [ k ] ; fun ( & a , & n , & j ) ; } cost = cost + ( long long ) g ; } printf ( "%lld\n" , cost ) ; cost = 0 ; } return 0 ; } void fun ( long * p , long * q , long * r ) { long i = 0 ; for ( i = * r ; i < * q - 1 ; i ++ ) * ( p + i ) = * ( p + i + 1 ) ; * q = * q - 1 ; }